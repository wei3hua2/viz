[
    {
        "title": "[H-01] Most users won’t be able to claim their share of Uniswap fees",
        "contracts": ["ILOPool"],
        "fns": ["claim()"],
        "params": [],
        "details": ""
    },
    {
        "title": "[H-02] Vultisig whitelisting can be bypassed by anyone",
        "contracts": [],
        "fns": [],
        "params": [],
        "details": ""
    },
    {
        "title": "[H-03] Adversary can prevent the launch of any ILO pool with enough raised capital at any moment by providing single-sided liquidity",
        "contracts": ["ILOPool"],
        "fns": [],
        "params": [],
        "details": ""
    },
    {
        "title": "[M-01] Vultisig should be burnable",
        "contracts": [],
        "fns": [],
        "params": [],
        "details": ""
    },
    {
        "title": "[M-02] claim function lacks slippage controls for amount0 and amount1 returned by pool.burn function call",
        "contracts": [],
        "fns": [],
        "params": [],
        "details": ""
    },
    {
        "title": "[M-03] Transfer of ILOPool NFT token to different account allows for users to bypass the pool’s maxCapPerUser invariant",
        "contracts": [],
        "fns": [],
        "params": [],
        "details": ""
    },
    {
        "title": "[L-01] Pools can be initialized with a price outside of the expected tick ranges",
        "contracts": [],
        "fns": [],
        "params": [],
        "details": ""
    },
    {
        "title": "[L-02] Vestings can be created with end time lower than their start time",
        "contracts": [],
        "fns": [],
        "params": [],
        "details": ""
    },
    {
        "title": "[L-03] Adversary can squat whitelist spots",
        "contracts": [],
        "fns": [],
        "params": [],
        "details": ""
    },
    {
        "title": "[L-04] New ILO Pools can be created and initialized after a previous launch with the same Uniswap Pool",
        "contracts": [],
        "fns": [],
        "params": [],
        "details": ""
    },
    {
        "title": "[L-05] launchTime and refundDeadline can be initialized in the past",
        "contracts": [],
        "fns": [],
        "params": [],
        "details": ""
    },
    {
        "title": "[L-06] Identical name and symbol for all pools",
        "contracts": [],
        "fns": [],
        "params": [],
        "details": ""
    },
    {
        "title": "[L-07] Sale Tokens with transfer callbacks can be used to launch refundable pools",
        "contracts": [],
        "fns": [],
        "params": [],
        "details": ""
    },
    {
        "title": "[L-08] Re-entrant implementation of whenNotInitialized",
        "contracts": [],
        "fns": [],
        "params": [],
        "details": ""
    },
    {
        "title": "[L-09] payable modifier on a function that shouldn’t receive native tokens",
        "contracts": [],
        "fns": [],
        "params": [],
        "details": ""
    },
    {
        "title": "[L-10] Missing function to calculate how much liquidity a user will get on buy() and tokens on claim()",
        "contracts": [],
        "fns": [],
        "params": [],
        "details": ""
    },
    {
        "title": "[L-11] maxCapPerUser limit should not be enforced in public sales",
        "contracts": [],
        "fns": [],
        "params": [],
        "details": ""
    }
]