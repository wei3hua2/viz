[
    {
        "title": "[H-01] Reallocation depends on the slot0 price, which can be manipulated",
        "contracts": [],
        "fns": [],
        "params": [],
        "details": ""
    },
    {
        "title": "[H-02] Liquidators can bypass remaining negative margin check and leave the loss to the protocol",
        "contracts": [],
        "fns": [],
        "params": [],
        "details": ""
    },
    {
        "title": "[H-03] One pair can steal another pair’s Uniswap liquidity during reallocate() call if both pairs operate on the same Uniswap pool and both have the same upper and lower tick during reallocation",
        "contracts": [],
        "fns": [],
        "params": [],
        "details": ""
    },
    {
        "title": "[H-04] Liquidation incorrectly tries to transfer token from Market instead of liquidator if remainingMargin is negative",
        "contracts": [],
        "fns": [],
        "params": [],
        "details": ""
    },
    {
        "title": "[M-01] Liquidity manipulation is possible when trading",
        "contracts": [],
        "fns": [],
        "params": [],
        "details": ""
    },
    {
        "title": "[M-02] updateIRMParams does not call applyInterestForToken before updating irmParams which leads to incorrect calculation of interest rate for subsequent trades.",
        "contracts": [],
        "fns": [],
        "params": [],
        "details": ""
    },
    {
        "title": "[M-03] Incorrect price for negative ticks due to lack of rounding down",
        "contracts": [],
        "fns": [],
        "params": [],
        "details": ""
    },
    {
        "title": "[M-04] Chainlink’s latestRoundData might return stale or incorrect results",
        "contracts": [],
        "fns": [],
        "params": [],
        "details": ""
    },
    {
        "title": "[M-05] Possible DoS When calling GammaTradeMarket::_removePosition will cause user position to not be able to get liquidated",
        "contracts": [],
        "fns": [],
        "params": [],
        "details": ""
    },
    {
        "title": "[M-06] Vaults can become immune from liquidation by setting vault.recipient to a blacklisted quote token address",
        "contracts": [],
        "fns": [],
        "params": [],
        "details": ""
    },
    {
        "title": "[M-07] Reallocation incorrectly sends the exceed quoteTokens to Market contract instead of reallocator",
        "contracts": [],
        "fns": [],
        "params": [],
        "details": ""
    },
    {
        "title": "[M-08] PriceFeed does not return to the correct price for quote pairs",
        "contracts": [],
        "fns": [],
        "params": [],
        "details": ""
    },
    {
        "title": "[L-01] DecayLib#decay2() should prevent division by zero",
        "contracts": [],
        "fns": [],
        "params": [],
        "details": ""
    },
    {
        "title": "[L-02] PriceFeed#getSqrtPrice() could over/undervalue the quote price leading to wrong liquidation decisions",
        "contracts": [],
        "fns": [],
        "params": [],
        "details": ""
    },
    {
        "title": "[L-03] Valid liquidations would fail in turbulent situations because the max slippage idea is applied that’s 3%",
        "contracts": [],
        "fns": [],
        "params": [],
        "details": ""
    },
    {
        "title": "[L-04] The current pricefeed.sol could become completely unavailable",
        "contracts": [],
        "fns": [],
        "params": [],
        "details": ""
    },
    {
        "title": "[L-05] Liquidations can be stolen from honest users",
        "contracts": [],
        "fns": [],
        "params": [],
        "details": ""
    },
    {
        "title": "[L-06] External queries from PriceFeed#getSqrtPrice() should be be wrapped in a try catch",
        "contracts": [],
        "fns": [],
        "params": [],
        "details": ""
    },
    {
        "title": "[L-07] A user can frontrun liquidations of their unhealthy accounts by liquidating in small portions by themselves",
        "contracts": [],
        "fns": [],
        "params": [],
        "details": ""
    },
    {
        "title": "[L-08] Trades are being finalized with an easily manipulatable prices which might cause frequent reverts",
        "contracts": [],
        "fns": [],
        "params": [],
        "details": ""
    },
    {
        "title": "[L-09] A filler can front/back run the execution of a trade to immediately liquidate a user",
        "contracts": [],
        "fns": [],
        "params": [],
        "details": ""
    },
    {
        "title": "[L-10] External queries from getSqrtPrice() should be done more accurately",
        "contracts": [],
        "fns": [],
        "params": [],
        "details": ""
    },
    {
        "title": "[L-11] Valid pairs seem to wrongly invalidated",
        "contracts": [],
        "fns": [],
        "params": [],
        "details": ""
    },
    {
        "title": "[L-12] Users could be liquidated in the next block",
        "contracts": [],
        "fns": [],
        "params": [],
        "details": ""
    },
    {
        "title": "[L-13] Implement better naming conventions to codes and fix typos",
        "contracts": [],
        "fns": [],
        "params": [],
        "details": ""
    },
    {
        "title": "[L-14] PredyPool#uniswapV3MintCallback() is potentially vulnerable to some attacks",
        "contracts": [],
        "fns": [],
        "params": [],
        "details": ""
    },
    {
        "title": "[L-15] SupplyLogic#burnBondAndTransferToken() could revert for some tokens in the future",
        "contracts": [],
        "fns": [],
        "params": [],
        "details": ""
    },
    {
        "title": "[L-16] Some locks would be un-initializable due to direct balanceOf() call",
        "contracts": [],
        "fns": [],
        "params": [],
        "details": ""
    },
    {
        "title": "[L-17] Deployment of new supply tokens would fail for some tokens",
        "contracts": [],
        "fns": [],
        "params": [],
        "details": ""
    },
    {
        "title": "[L-18] Solmate’s SafeTransferLib shouldn’t be used as it doesn’t check for account existence",
        "contracts": [],
        "fns": [],
        "params": [],
        "details": ""
    },
    {
        "title": "[L-19] Setters don’t have equality checkers",
        "contracts": [],
        "fns": [],
        "params": [],
        "details": ""
    },
    {
        "title": "[L-20] Oracle price updates could be front run to game the system",
        "contracts": [],
        "fns": [],
        "params": [],
        "details": ""
    },
    {
        "title": "[L-21] Make PredyPool#withdrawCreatorRevenue() more effective",
        "contracts": [],
        "fns": [],
        "params": [],
        "details": ""
    },
    {
        "title": "[L-22] UniswapSettlement#swapExactIn() should be made safer",
        "contracts": [],
        "fns": [],
        "params": [],
        "details": ""
    },
    {
        "title": "[L-23] PriceFeed#getSqrtPrice() query to latestRoundData() is done in a wrong way since there is no check first to see if the sequencer is down",
        "contracts": [],
        "fns": [],
        "params": [],
        "details": ""
    },
    {
        "title": "[L-24] PriceFeed#getSqrtPrice() might be broken in the future due to it’s integration with Pyth’s expo value",
        "contracts": [],
        "fns": [],
        "params": [],
        "details": ""
    },
    {
        "title": "[L-25] Protocol uses two different price source when querying prices which is riskier than using one sure source or having the second confirmed source as a fallback",
        "contracts": [],
        "fns": [],
        "params": [],
        "details": ""
    }
]