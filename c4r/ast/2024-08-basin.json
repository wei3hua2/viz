[
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-08-basin/src/WellUpgradeable.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.8.20"
    },
    {
     "type": "ImportDirective",
     "path": "src/Well.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "src/Well.sol",
      "parts": [
       "src/Well.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Well",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Well"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "ozu/proxy/utils/UUPSUpgradeable.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "ozu/proxy/utils/UUPSUpgradeable.sol",
      "parts": [
       "ozu/proxy/utils/UUPSUpgradeable.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "UUPSUpgradeable",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "UUPSUpgradeable"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "ozu/access/OwnableUpgradeable.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "ozu/access/OwnableUpgradeable.sol",
      "parts": [
       "ozu/access/OwnableUpgradeable.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "OwnableUpgradeable",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "OwnableUpgradeable"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "oz/token/ERC20/utils/SafeERC20.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "oz/token/ERC20/utils/SafeERC20.sol",
      "parts": [
       "oz/token/ERC20/utils/SafeERC20.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IERC20",
       null
      ],
      [
       "SafeERC20",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IERC20"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "SafeERC20"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "src/interfaces/IAquifer.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "src/interfaces/IAquifer.sol",
      "parts": [
       "src/interfaces/IAquifer.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IAquifer",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IAquifer"
       },
       null
      ]
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "WellUpgradeable",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "Well"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "UUPSUpgradeable"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "OwnableUpgradeable"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "___self",
         "identifier": {
          "type": "Identifier",
          "name": "___self"
         },
         "expression": {
          "type": "FunctionCall",
          "expression": {
           "type": "Identifier",
           "name": "address"
          },
          "arguments": [
           {
            "type": "Identifier",
            "name": "this"
           }
          ],
          "names": [],
          "identifiers": []
         },
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": true,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "FunctionCall",
        "expression": {
         "type": "Identifier",
         "name": "address"
        },
        "arguments": [
         {
          "type": "Identifier",
          "name": "this"
         }
        ],
        "names": [],
        "identifiers": []
       }
      },
      {
       "type": "ModifierDefinition",
       "name": "notDelegatedOrIsMinimalProxy",
       "parameters": [],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "address"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "this"
             }
            ],
            "names": [],
            "identifiers": []
           },
           "right": {
            "type": "Identifier",
            "name": "___self"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "address",
                "stateMutability": null
               },
               "name": "aquifer",
               "identifier": {
                "type": "Identifier",
                "name": "aquifer"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "aquifer"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "address",
                "stateMutability": null
               },
               "name": "wellImplmentation",
               "identifier": {
                "type": "Identifier",
                "name": "wellImplmentation"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "IAquifer"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "aquifer"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "memberName": "wellImplementation"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "address"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "this"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "==",
                "left": {
                 "type": "Identifier",
                 "name": "wellImplmentation"
                },
                "right": {
                 "type": "Identifier",
                 "name": "___self"
                }
               },
               {
                "type": "StringLiteral",
                "value": "Function must be called by a Well bored by an aquifer",
                "parts": [
                 "Function must be called by a Well bored by an aquifer"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "_"
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "FunctionDefinition",
       "name": "init",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_name",
         "identifier": {
          "type": "Identifier",
          "name": "_name"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_symbol",
         "identifier": {
          "type": "Identifier",
          "name": "_symbol"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "__ERC20Permit_init"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_name"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "__ERC20_init"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_name"
            },
            {
             "type": "Identifier",
             "name": "_symbol"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "__ReentrancyGuard_init"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "__UUPSUpgradeable_init"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "__Ownable_init"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "IERC20"
             },
             "length": null
            },
            "name": "_tokens",
            "identifier": {
             "type": "Identifier",
             "name": "_tokens"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "tokens"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "tokensLength",
            "identifier": {
             "type": "Identifier",
             "name": "tokensLength"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "_tokens"
           },
           "memberName": "length"
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": null
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "-",
            "left": {
             "type": "Identifier",
             "name": "tokensLength"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": true
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ForStatement",
             "initExpression": {
              "type": "VariableDeclarationStatement",
              "variables": [
               {
                "type": "VariableDeclaration",
                "typeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "name": "j",
                "identifier": {
                 "type": "Identifier",
                 "name": "j"
                },
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false,
                "expression": null
               }
              ],
              "initialValue": {
               "type": "BinaryOperation",
               "operator": "+",
               "left": {
                "type": "Identifier",
                "name": "i"
               },
               "right": {
                "type": "NumberLiteral",
                "number": "1",
                "subdenomination": null
               }
              }
             },
             "conditionExpression": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "j"
              },
              "right": {
               "type": "Identifier",
               "name": "tokensLength"
              }
             },
             "loopExpression": {
              "type": "ExpressionStatement",
              "expression": {
               "type": "UnaryOperation",
               "operator": "++",
               "subExpression": {
                "type": "Identifier",
                "name": "j"
               },
               "isPrefix": true
              }
             },
             "body": {
              "type": "Block",
              "statements": [
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "==",
                 "left": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "_tokens"
                  },
                  "index": {
                   "type": "Identifier",
                   "name": "i"
                  }
                 },
                 "right": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "_tokens"
                  },
                  "index": {
                   "type": "Identifier",
                   "name": "j"
                  }
                 }
                },
                "trueBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "RevertStatement",
                   "revertCall": {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "Identifier",
                     "name": "DuplicateTokens"
                    },
                    "arguments": [
                     {
                      "type": "IndexAccess",
                      "base": {
                       "type": "Identifier",
                       "name": "_tokens"
                      },
                      "index": {
                       "type": "Identifier",
                       "name": "i"
                      }
                     }
                    ],
                    "names": [],
                    "identifiers": []
                   }
                  }
                 ]
                },
                "falseBody": null
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "reinitializer",
         "arguments": [
          {
           "type": "NumberLiteral",
           "number": "2",
           "subdenomination": null
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "initNoWellToken",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": []
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "initializer",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_authorizeUpgrade",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "newImplementation",
         "identifier": {
          "type": "Identifier",
          "name": "newImplementation"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "this"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "Identifier",
              "name": "___self"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Function must be called through delegatecall",
             "parts": [
              "Function must be called through delegatecall"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "aquifer",
            "identifier": {
             "type": "Identifier",
             "name": "aquifer"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "aquifer"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "activeProxy",
            "identifier": {
             "type": "Identifier",
             "name": "activeProxy"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "IAquifer"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "aquifer"
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "wellImplementation"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "_getImplementation"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "Identifier",
              "name": "activeProxy"
             },
             "right": {
              "type": "Identifier",
              "name": "___self"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Function must be called through active proxy bored by an aquifer",
             "parts": [
              "Function must be called through active proxy bored by an aquifer"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "IAquifer"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "aquifer"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "memberName": "wellImplementation"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "newImplementation"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "New implementation must be a well implmentation",
             "parts": [
              "New implementation must be a well implmentation"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "IERC20"
             },
             "length": null
            },
            "name": "_tokens",
            "identifier": {
             "type": "Identifier",
             "name": "_tokens"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "tokens"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "IERC20"
             },
             "length": null
            },
            "name": "newTokens",
            "identifier": {
             "type": "Identifier",
             "name": "newTokens"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "WellUpgradeable"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "newImplementation"
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "tokens"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_tokens"
              },
              "memberName": "length"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "newTokens"
              },
              "memberName": "length"
             }
            },
            {
             "type": "StringLiteral",
             "value": "New well must use the same number of tokens",
             "parts": [
              "New well must use the same number of tokens"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": null
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_tokens"
            },
            "memberName": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": true
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "==",
                "left": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "_tokens"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "i"
                 }
                },
                "right": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "newTokens"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "i"
                 }
                }
               },
               {
                "type": "StringLiteral",
                "value": "New well must use the same tokens in the same order",
                "parts": [
                 "New well must use the same tokens in the same order"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "UUPSUpgradeable"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "newImplementation"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "memberName": "proxiableUUID"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "Identifier",
              "name": "_IMPLEMENTATION_SLOT"
             }
            },
            {
             "type": "StringLiteral",
             "value": "New implementation must be a valid ERC-1967 implmentation",
             "parts": [
              "New implementation must be a valid ERC-1967 implmentation"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyOwner",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "upgradeTo",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "newImplementation",
         "identifier": {
          "type": "Identifier",
          "name": "newImplementation"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_authorizeUpgrade"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "newImplementation"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_upgradeToAndCallUUPS"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "newImplementation"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "NewExpression",
              "typeName": {
               "type": "ElementaryTypeName",
               "name": "bytes",
               "stateMutability": null
              }
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "BooleanLiteral",
             "value": false
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "upgradeToAndCall",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "newImplementation",
         "identifier": {
          "type": "Identifier",
          "name": "newImplementation"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_authorizeUpgrade"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "newImplementation"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_upgradeToAndCallUUPS"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "newImplementation"
            },
            {
             "type": "Identifier",
             "name": "data"
            },
            {
             "type": "BooleanLiteral",
             "value": true
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "proxiableUUID",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "_IMPLEMENTATION_SLOT"
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "notDelegatedOrIsMinimalProxy",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getImplementation",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getImplementation"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getVersion",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "NumberLiteral",
           "number": "1",
           "subdenomination": null
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "getInitializerVersion",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getInitializedVersion"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-08-basin/src/Well.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.8.20"
    },
    {
     "type": "ImportDirective",
     "path": "ozu/security/ReentrancyGuardUpgradeable.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "ozu/security/ReentrancyGuardUpgradeable.sol",
      "parts": [
       "ozu/security/ReentrancyGuardUpgradeable.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "ReentrancyGuardUpgradeable",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "ReentrancyGuardUpgradeable"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "ozu/token/ERC20/extensions/ERC20PermitUpgradeable.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "ozu/token/ERC20/extensions/ERC20PermitUpgradeable.sol",
      "parts": [
       "ozu/token/ERC20/extensions/ERC20PermitUpgradeable.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "ERC20Upgradeable",
       null
      ],
      [
       "ERC20PermitUpgradeable",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "ERC20Upgradeable"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "ERC20PermitUpgradeable"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "oz/token/ERC20/utils/SafeERC20.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "oz/token/ERC20/utils/SafeERC20.sol",
      "parts": [
       "oz/token/ERC20/utils/SafeERC20.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IERC20",
       null
      ],
      [
       "SafeERC20",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IERC20"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "SafeERC20"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "src/interfaces/IWell.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "src/interfaces/IWell.sol",
      "parts": [
       "src/interfaces/IWell.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IWell",
       null
      ],
      [
       "Call",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IWell"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "Call"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "src/interfaces/IWellErrors.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "src/interfaces/IWellErrors.sol",
      "parts": [
       "src/interfaces/IWellErrors.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IWellErrors",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IWellErrors"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "src/interfaces/pumps/IPump.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "src/interfaces/pumps/IPump.sol",
      "parts": [
       "src/interfaces/pumps/IPump.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IPump",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IPump"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "src/interfaces/IWellFunction.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "src/interfaces/IWellFunction.sol",
      "parts": [
       "src/interfaces/IWellFunction.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IWellFunction",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IWellFunction"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "src/libraries/LibBytes.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "src/libraries/LibBytes.sol",
      "parts": [
       "src/libraries/LibBytes.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "LibBytes",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "LibBytes"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "src/utils/ClonePlus.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "src/utils/ClonePlus.sol",
      "parts": [
       "src/utils/ClonePlus.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "ClonePlus",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "ClonePlus"
       },
       null
      ]
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "Well",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ERC20PermitUpgradeable"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "IWell"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "IWellErrors"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ReentrancyGuardUpgradeable"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ClonePlus"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "IERC20"
       },
       "libraryName": "SafeERC20",
       "functions": [],
       "operators": []
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "PACKED_ADDRESS",
         "identifier": {
          "type": "Identifier",
          "name": "PACKED_ADDRESS"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "20",
          "subdenomination": null
         },
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "20",
        "subdenomination": null
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "ONE_WORD_PLUS_PACKED_ADDRESS",
         "identifier": {
          "type": "Identifier",
          "name": "ONE_WORD_PLUS_PACKED_ADDRESS"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "52",
          "subdenomination": null
         },
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "52",
        "subdenomination": null
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "RESERVES_STORAGE_SLOT",
         "identifier": {
          "type": "Identifier",
          "name": "RESERVES_STORAGE_SLOT"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "0x4bba01c388049b5ebd30398b65e8ad45b632802c5faf4964e58085ea8ab03715",
          "subdenomination": null
         },
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "0x4bba01c388049b5ebd30398b65e8ad45b632802c5faf4964e58085ea8ab03715",
        "subdenomination": null
       }
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_disableInitializers"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "default",
       "modifiers": [],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "init",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_name",
         "identifier": {
          "type": "Identifier",
          "name": "_name"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_symbol",
         "identifier": {
          "type": "Identifier",
          "name": "_symbol"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "__ERC20Permit_init"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_name"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "__ERC20_init"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_name"
            },
            {
             "type": "Identifier",
             "name": "_symbol"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "__ReentrancyGuard_init"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "IERC20"
             },
             "length": null
            },
            "name": "_tokens",
            "identifier": {
             "type": "Identifier",
             "name": "_tokens"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "tokens"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "tokensLength",
            "identifier": {
             "type": "Identifier",
             "name": "tokensLength"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "_tokens"
           },
           "memberName": "length"
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": null
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "-",
            "left": {
             "type": "Identifier",
             "name": "tokensLength"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": true
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ForStatement",
             "initExpression": {
              "type": "VariableDeclarationStatement",
              "variables": [
               {
                "type": "VariableDeclaration",
                "typeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "name": "j",
                "identifier": {
                 "type": "Identifier",
                 "name": "j"
                },
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false,
                "expression": null
               }
              ],
              "initialValue": {
               "type": "BinaryOperation",
               "operator": "+",
               "left": {
                "type": "Identifier",
                "name": "i"
               },
               "right": {
                "type": "NumberLiteral",
                "number": "1",
                "subdenomination": null
               }
              }
             },
             "conditionExpression": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "j"
              },
              "right": {
               "type": "Identifier",
               "name": "tokensLength"
              }
             },
             "loopExpression": {
              "type": "ExpressionStatement",
              "expression": {
               "type": "UnaryOperation",
               "operator": "++",
               "subExpression": {
                "type": "Identifier",
                "name": "j"
               },
               "isPrefix": true
              }
             },
             "body": {
              "type": "Block",
              "statements": [
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "==",
                 "left": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "_tokens"
                  },
                  "index": {
                   "type": "Identifier",
                   "name": "i"
                  }
                 },
                 "right": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "_tokens"
                  },
                  "index": {
                   "type": "Identifier",
                   "name": "j"
                  }
                 }
                },
                "trueBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "RevertStatement",
                   "revertCall": {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "Identifier",
                     "name": "DuplicateTokens"
                    },
                    "arguments": [
                     {
                      "type": "IndexAccess",
                      "base": {
                       "type": "Identifier",
                       "name": "_tokens"
                      },
                      "index": {
                       "type": "Identifier",
                       "name": "i"
                      }
                     }
                    ],
                    "names": [],
                    "identifiers": []
                   }
                  }
                 ]
                },
                "falseBody": null
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "initializer",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "isInitialized",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_getInitializedVersion"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "LOC_AQUIFER_ADDR",
         "identifier": {
          "type": "Identifier",
          "name": "LOC_AQUIFER_ADDR"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "0",
          "subdenomination": null
         },
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "0",
        "subdenomination": null
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "LOC_TOKENS_COUNT",
         "identifier": {
          "type": "Identifier",
          "name": "LOC_TOKENS_COUNT"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "20",
          "subdenomination": null
         },
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "20",
        "subdenomination": null
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "LOC_WELL_FUNCTION_ADDR",
         "identifier": {
          "type": "Identifier",
          "name": "LOC_WELL_FUNCTION_ADDR"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "52",
          "subdenomination": null
         },
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "52",
        "subdenomination": null
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "LOC_WELL_FUNCTION_DATA_LENGTH",
         "identifier": {
          "type": "Identifier",
          "name": "LOC_WELL_FUNCTION_DATA_LENGTH"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "72",
          "subdenomination": null
         },
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "72",
        "subdenomination": null
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "LOC_PUMPS_COUNT",
         "identifier": {
          "type": "Identifier",
          "name": "LOC_PUMPS_COUNT"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "104",
          "subdenomination": null
         },
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "104",
        "subdenomination": null
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "LOC_VARIABLE",
         "identifier": {
          "type": "Identifier",
          "name": "LOC_VARIABLE"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "136",
          "subdenomination": null
         },
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "136",
        "subdenomination": null
       }
      },
      {
       "type": "FunctionDefinition",
       "name": "tokens",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "IERC20"
          },
          "length": null
         },
         "name": "_tokens",
         "identifier": {
          "type": "Identifier",
          "name": "_tokens"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "_tokens"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_getArgIERC20Array"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "LOC_VARIABLE"
             },
             {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "numberOfTokens"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "wellFunction",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Call"
         },
         "name": "_wellFunction",
         "identifier": {
          "type": "Identifier",
          "name": "_wellFunction"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_wellFunction"
            },
            "memberName": "target"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "wellFunctionAddress"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_wellFunction"
            },
            "memberName": "data"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_getArgBytes"
            },
            "arguments": [
             {
              "type": "BinaryOperation",
              "operator": "+",
              "left": {
               "type": "Identifier",
               "name": "LOC_VARIABLE"
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "*",
               "left": {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "numberOfTokens"
                },
                "arguments": [],
                "names": [],
                "identifiers": []
               },
               "right": {
                "type": "Identifier",
                "name": "ONE_WORD"
               }
              }
             },
             {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "wellFunctionDataLength"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "pumps",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "Call"
          },
          "length": null
         },
         "name": "_pumps",
         "identifier": {
          "type": "Identifier",
          "name": "_pumps"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "_numberOfPumps",
            "identifier": {
             "type": "Identifier",
             "name": "_numberOfPumps"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "numberOfPumps"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "_numberOfPumps"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "ReturnStatement",
           "expression": {
            "type": "Identifier",
            "name": "_pumps"
           }
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "_pumps"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "NewExpression",
             "typeName": {
              "type": "ArrayTypeName",
              "baseTypeName": {
               "type": "UserDefinedTypeName",
               "namePath": "Call"
              },
              "length": null
             }
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_numberOfPumps"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "dataLoc",
            "identifier": {
             "type": "Identifier",
             "name": "dataLoc"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "BinaryOperation",
           "operator": "+",
           "left": {
            "type": "BinaryOperation",
            "operator": "+",
            "left": {
             "type": "Identifier",
             "name": "LOC_VARIABLE"
            },
            "right": {
             "type": "BinaryOperation",
             "operator": "*",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "numberOfTokens"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "Identifier",
              "name": "ONE_WORD"
             }
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "wellFunctionDataLength"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "pumpDataLength",
            "identifier": {
             "type": "Identifier",
             "name": "pumpDataLength"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": null
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_pumps"
            },
            "memberName": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": true
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "_pumps"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               },
               "memberName": "target"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "_getArgAddress"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "dataLoc"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "+=",
              "left": {
               "type": "Identifier",
               "name": "dataLoc"
              },
              "right": {
               "type": "Identifier",
               "name": "PACKED_ADDRESS"
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "pumpDataLength"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "_getArgUint256"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "dataLoc"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "+=",
              "left": {
               "type": "Identifier",
               "name": "dataLoc"
              },
              "right": {
               "type": "Identifier",
               "name": "ONE_WORD"
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "_pumps"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               },
               "memberName": "data"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "_getArgBytes"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "dataLoc"
                },
                {
                 "type": "Identifier",
                 "name": "pumpDataLength"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "+=",
              "left": {
               "type": "Identifier",
               "name": "dataLoc"
              },
              "right": {
               "type": "Identifier",
               "name": "pumpDataLength"
              }
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "wellData",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": []
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "aquifer",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getArgAddress"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "LOC_AQUIFER_ADDR"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "well",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "IERC20"
          },
          "length": null
         },
         "name": "_tokens",
         "identifier": {
          "type": "Identifier",
          "name": "_tokens"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Call"
         },
         "name": "_wellFunction",
         "identifier": {
          "type": "Identifier",
          "name": "_wellFunction"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "Call"
          },
          "length": null
         },
         "name": "_pumps",
         "identifier": {
          "type": "Identifier",
          "name": "_pumps"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_wellData",
         "identifier": {
          "type": "Identifier",
          "name": "_wellData"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_aquifer",
         "identifier": {
          "type": "Identifier",
          "name": "_aquifer"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "_tokens"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "tokens"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "_wellFunction"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "wellFunction"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "_pumps"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "pumps"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "_wellData"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "wellData"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "_aquifer"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "aquifer"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "numberOfTokens",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getArgUint256"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "LOC_TOKENS_COUNT"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "wellFunctionAddress",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getArgAddress"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "LOC_WELL_FUNCTION_ADDR"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "wellFunctionDataLength",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getArgUint256"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "LOC_WELL_FUNCTION_DATA_LENGTH"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "numberOfPumps",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getArgUint256"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "LOC_PUMPS_COUNT"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "firstPump",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Call"
         },
         "name": "_pump",
         "identifier": {
          "type": "Identifier",
          "name": "_pump"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "dataLoc",
            "identifier": {
             "type": "Identifier",
             "name": "dataLoc"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "BinaryOperation",
           "operator": "+",
           "left": {
            "type": "BinaryOperation",
            "operator": "+",
            "left": {
             "type": "Identifier",
             "name": "LOC_VARIABLE"
            },
            "right": {
             "type": "BinaryOperation",
             "operator": "*",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "numberOfTokens"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "Identifier",
              "name": "ONE_WORD"
             }
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "wellFunctionDataLength"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_pump"
            },
            "memberName": "target"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_getArgAddress"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "dataLoc"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_pump"
            },
            "memberName": "data"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_getArgBytes"
            },
            "arguments": [
             {
              "type": "BinaryOperation",
              "operator": "+",
              "left": {
               "type": "Identifier",
               "name": "dataLoc"
              },
              "right": {
               "type": "Identifier",
               "name": "ONE_WORD_PLUS_PACKED_ADDRESS"
              }
             },
             {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "_getArgUint256"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "+",
                "left": {
                 "type": "Identifier",
                 "name": "dataLoc"
                },
                "right": {
                 "type": "Identifier",
                 "name": "PACKED_ADDRESS"
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "swapFrom",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "fromToken",
         "identifier": {
          "type": "Identifier",
          "name": "fromToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "toToken",
         "identifier": {
          "type": "Identifier",
          "name": "toToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountIn",
         "identifier": {
          "type": "Identifier",
          "name": "amountIn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "minAmountOut",
         "identifier": {
          "type": "Identifier",
          "name": "minAmountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "recipient",
         "identifier": {
          "type": "Identifier",
          "name": "recipient"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "deadline",
         "identifier": {
          "type": "Identifier",
          "name": "deadline"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountOut",
         "identifier": {
          "type": "Identifier",
          "name": "amountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "fromToken"
            },
            "memberName": "safeTransferFrom"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "this"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "amountIn"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "amountOut"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_swapFrom"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "fromToken"
             },
             {
              "type": "Identifier",
              "name": "toToken"
             },
             {
              "type": "Identifier",
              "name": "amountIn"
             },
             {
              "type": "Identifier",
              "name": "minAmountOut"
             },
             {
              "type": "Identifier",
              "name": "recipient"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "nonReentrant",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "expire",
         "arguments": [
          {
           "type": "Identifier",
           "name": "deadline"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "swapFromFeeOnTransfer",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "fromToken",
         "identifier": {
          "type": "Identifier",
          "name": "fromToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "toToken",
         "identifier": {
          "type": "Identifier",
          "name": "toToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountIn",
         "identifier": {
          "type": "Identifier",
          "name": "amountIn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "minAmountOut",
         "identifier": {
          "type": "Identifier",
          "name": "minAmountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "recipient",
         "identifier": {
          "type": "Identifier",
          "name": "recipient"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "deadline",
         "identifier": {
          "type": "Identifier",
          "name": "deadline"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountOut",
         "identifier": {
          "type": "Identifier",
          "name": "amountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "amountIn"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_safeTransferFromFeeOnTransfer"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "fromToken"
             },
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "sender"
             },
             {
              "type": "Identifier",
              "name": "amountIn"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "amountOut"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_swapFrom"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "fromToken"
             },
             {
              "type": "Identifier",
              "name": "toToken"
             },
             {
              "type": "Identifier",
              "name": "amountIn"
             },
             {
              "type": "Identifier",
              "name": "minAmountOut"
             },
             {
              "type": "Identifier",
              "name": "recipient"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "nonReentrant",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "expire",
         "arguments": [
          {
           "type": "Identifier",
           "name": "deadline"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_swapFrom",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "fromToken",
         "identifier": {
          "type": "Identifier",
          "name": "fromToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "toToken",
         "identifier": {
          "type": "Identifier",
          "name": "toToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountIn",
         "identifier": {
          "type": "Identifier",
          "name": "amountIn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "minAmountOut",
         "identifier": {
          "type": "Identifier",
          "name": "minAmountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "recipient",
         "identifier": {
          "type": "Identifier",
          "name": "recipient"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountOut",
         "identifier": {
          "type": "Identifier",
          "name": "amountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "IERC20"
             },
             "length": null
            },
            "name": "_tokens",
            "identifier": {
             "type": "Identifier",
             "name": "_tokens"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "tokens"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "name": "i",
            "identifier": {
             "type": "Identifier",
             "name": "i"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "j",
            "identifier": {
             "type": "Identifier",
             "name": "j"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getIJ"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_tokens"
            },
            {
             "type": "Identifier",
             "name": "fromToken"
            },
            {
             "type": "Identifier",
             "name": "toToken"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "reserves",
            "identifier": {
             "type": "Identifier",
             "name": "reserves"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_updatePumps"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_tokens"
             },
             "memberName": "length"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "+=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "reserves"
            },
            "index": {
             "type": "Identifier",
             "name": "i"
            }
           },
           "right": {
            "type": "Identifier",
            "name": "amountIn"
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "reserveJBefore",
            "identifier": {
             "type": "Identifier",
             "name": "reserveJBefore"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "reserves"
           },
           "index": {
            "type": "Identifier",
            "name": "j"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "reserves"
            },
            "index": {
             "type": "Identifier",
             "name": "j"
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_calcReserve"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "wellFunction"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             },
             {
              "type": "Identifier",
              "name": "reserves"
             },
             {
              "type": "Identifier",
              "name": "j"
             },
             {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "totalSupply"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "amountOut"
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "-",
            "left": {
             "type": "Identifier",
             "name": "reserveJBefore"
            },
            "right": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "reserves"
             },
             "index": {
              "type": "Identifier",
              "name": "j"
             }
            }
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "amountOut"
           },
           "right": {
            "type": "Identifier",
            "name": "minAmountOut"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "SlippageOut"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "amountOut"
               },
               {
                "type": "Identifier",
                "name": "minAmountOut"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "toToken"
            },
            "memberName": "safeTransfer"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "recipient"
            },
            {
             "type": "Identifier",
             "name": "amountOut"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "Swap"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "fromToken"
            },
            {
             "type": "Identifier",
             "name": "toToken"
            },
            {
             "type": "Identifier",
             "name": "amountIn"
            },
            {
             "type": "Identifier",
             "name": "amountOut"
            },
            {
             "type": "Identifier",
             "name": "recipient"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_setReserves"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_tokens"
            },
            {
             "type": "Identifier",
             "name": "reserves"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getSwapOut",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "fromToken",
         "identifier": {
          "type": "Identifier",
          "name": "fromToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "toToken",
         "identifier": {
          "type": "Identifier",
          "name": "toToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountIn",
         "identifier": {
          "type": "Identifier",
          "name": "amountIn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountOut",
         "identifier": {
          "type": "Identifier",
          "name": "amountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "IERC20"
             },
             "length": null
            },
            "name": "_tokens",
            "identifier": {
             "type": "Identifier",
             "name": "_tokens"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "tokens"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "name": "i",
            "identifier": {
             "type": "Identifier",
             "name": "i"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "j",
            "identifier": {
             "type": "Identifier",
             "name": "j"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getIJ"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_tokens"
            },
            {
             "type": "Identifier",
             "name": "fromToken"
            },
            {
             "type": "Identifier",
             "name": "toToken"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "reserves",
            "identifier": {
             "type": "Identifier",
             "name": "reserves"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getReserves"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_tokens"
             },
             "memberName": "length"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "+=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "reserves"
            },
            "index": {
             "type": "Identifier",
             "name": "i"
            }
           },
           "right": {
            "type": "Identifier",
            "name": "amountIn"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "amountOut"
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "-",
            "left": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "reserves"
             },
             "index": {
              "type": "Identifier",
              "name": "j"
             }
            },
            "right": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "_calcReserve"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "wellFunction"
               },
               "arguments": [],
               "names": [],
               "identifiers": []
              },
              {
               "type": "Identifier",
               "name": "reserves"
              },
              {
               "type": "Identifier",
               "name": "j"
              },
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "totalSupply"
               },
               "arguments": [],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "readOnlyNonReentrant",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "swapTo",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "fromToken",
         "identifier": {
          "type": "Identifier",
          "name": "fromToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "toToken",
         "identifier": {
          "type": "Identifier",
          "name": "toToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "maxAmountIn",
         "identifier": {
          "type": "Identifier",
          "name": "maxAmountIn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountOut",
         "identifier": {
          "type": "Identifier",
          "name": "amountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "recipient",
         "identifier": {
          "type": "Identifier",
          "name": "recipient"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "deadline",
         "identifier": {
          "type": "Identifier",
          "name": "deadline"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountIn",
         "identifier": {
          "type": "Identifier",
          "name": "amountIn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "IERC20"
             },
             "length": null
            },
            "name": "_tokens",
            "identifier": {
             "type": "Identifier",
             "name": "_tokens"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "tokens"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "name": "i",
            "identifier": {
             "type": "Identifier",
             "name": "i"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "j",
            "identifier": {
             "type": "Identifier",
             "name": "j"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getIJ"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_tokens"
            },
            {
             "type": "Identifier",
             "name": "fromToken"
            },
            {
             "type": "Identifier",
             "name": "toToken"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "reserves",
            "identifier": {
             "type": "Identifier",
             "name": "reserves"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_updatePumps"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_tokens"
             },
             "memberName": "length"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "-=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "reserves"
            },
            "index": {
             "type": "Identifier",
             "name": "j"
            }
           },
           "right": {
            "type": "Identifier",
            "name": "amountOut"
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "reserveIBefore",
            "identifier": {
             "type": "Identifier",
             "name": "reserveIBefore"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "reserves"
           },
           "index": {
            "type": "Identifier",
            "name": "i"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "reserves"
            },
            "index": {
             "type": "Identifier",
             "name": "i"
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_calcReserve"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "wellFunction"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             },
             {
              "type": "Identifier",
              "name": "reserves"
             },
             {
              "type": "Identifier",
              "name": "i"
             },
             {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "totalSupply"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "amountIn"
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "-",
            "left": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "reserves"
             },
             "index": {
              "type": "Identifier",
              "name": "i"
             }
            },
            "right": {
             "type": "Identifier",
             "name": "reserveIBefore"
            }
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "amountIn"
           },
           "right": {
            "type": "Identifier",
            "name": "maxAmountIn"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "SlippageIn"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "amountIn"
               },
               {
                "type": "Identifier",
                "name": "maxAmountIn"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_swapTo"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "fromToken"
            },
            {
             "type": "Identifier",
             "name": "toToken"
            },
            {
             "type": "Identifier",
             "name": "amountIn"
            },
            {
             "type": "Identifier",
             "name": "amountOut"
            },
            {
             "type": "Identifier",
             "name": "recipient"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_setReserves"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_tokens"
            },
            {
             "type": "Identifier",
             "name": "reserves"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "nonReentrant",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "expire",
         "arguments": [
          {
           "type": "Identifier",
           "name": "deadline"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_swapTo",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "fromToken",
         "identifier": {
          "type": "Identifier",
          "name": "fromToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "toToken",
         "identifier": {
          "type": "Identifier",
          "name": "toToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountIn",
         "identifier": {
          "type": "Identifier",
          "name": "amountIn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountOut",
         "identifier": {
          "type": "Identifier",
          "name": "amountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "recipient",
         "identifier": {
          "type": "Identifier",
          "name": "recipient"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "fromToken"
            },
            "memberName": "safeTransferFrom"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "this"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "amountIn"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "toToken"
            },
            "memberName": "safeTransfer"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "recipient"
            },
            {
             "type": "Identifier",
             "name": "amountOut"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "Swap"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "fromToken"
            },
            {
             "type": "Identifier",
             "name": "toToken"
            },
            {
             "type": "Identifier",
             "name": "amountIn"
            },
            {
             "type": "Identifier",
             "name": "amountOut"
            },
            {
             "type": "Identifier",
             "name": "recipient"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getSwapIn",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "fromToken",
         "identifier": {
          "type": "Identifier",
          "name": "fromToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "toToken",
         "identifier": {
          "type": "Identifier",
          "name": "toToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountOut",
         "identifier": {
          "type": "Identifier",
          "name": "amountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountIn",
         "identifier": {
          "type": "Identifier",
          "name": "amountIn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "IERC20"
             },
             "length": null
            },
            "name": "_tokens",
            "identifier": {
             "type": "Identifier",
             "name": "_tokens"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "tokens"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "name": "i",
            "identifier": {
             "type": "Identifier",
             "name": "i"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "j",
            "identifier": {
             "type": "Identifier",
             "name": "j"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getIJ"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_tokens"
            },
            {
             "type": "Identifier",
             "name": "fromToken"
            },
            {
             "type": "Identifier",
             "name": "toToken"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "reserves",
            "identifier": {
             "type": "Identifier",
             "name": "reserves"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getReserves"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_tokens"
             },
             "memberName": "length"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "-=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "reserves"
            },
            "index": {
             "type": "Identifier",
             "name": "j"
            }
           },
           "right": {
            "type": "Identifier",
            "name": "amountOut"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "amountIn"
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "-",
            "left": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "_calcReserve"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "wellFunction"
               },
               "arguments": [],
               "names": [],
               "identifiers": []
              },
              {
               "type": "Identifier",
               "name": "reserves"
              },
              {
               "type": "Identifier",
               "name": "i"
              },
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "totalSupply"
               },
               "arguments": [],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            "right": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "reserves"
             },
             "index": {
              "type": "Identifier",
              "name": "i"
             }
            }
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "readOnlyNonReentrant",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "shift",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "tokenOut",
         "identifier": {
          "type": "Identifier",
          "name": "tokenOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "minAmountOut",
         "identifier": {
          "type": "Identifier",
          "name": "minAmountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "recipient",
         "identifier": {
          "type": "Identifier",
          "name": "recipient"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountOut",
         "identifier": {
          "type": "Identifier",
          "name": "amountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "IERC20"
             },
             "length": null
            },
            "name": "_tokens",
            "identifier": {
             "type": "Identifier",
             "name": "_tokens"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "tokens"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "tokensLength",
            "identifier": {
             "type": "Identifier",
             "name": "tokensLength"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "_tokens"
           },
           "memberName": "length"
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_updatePumps"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "tokensLength"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "reserves",
            "identifier": {
             "type": "Identifier",
             "name": "reserves"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "NewExpression",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            }
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "tokensLength"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": null
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "Identifier",
            "name": "tokensLength"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": true
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "reserves"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "_tokens"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "i"
                 }
                },
                "memberName": "balanceOf"
               },
               "arguments": [
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "address"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "this"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "j",
            "identifier": {
             "type": "Identifier",
             "name": "j"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getJ"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_tokens"
            },
            {
             "type": "Identifier",
             "name": "tokenOut"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "amountOut"
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "-",
            "left": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "reserves"
             },
             "index": {
              "type": "Identifier",
              "name": "j"
             }
            },
            "right": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "_calcReserve"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "wellFunction"
               },
               "arguments": [],
               "names": [],
               "identifiers": []
              },
              {
               "type": "Identifier",
               "name": "reserves"
              },
              {
               "type": "Identifier",
               "name": "j"
              },
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "totalSupply"
               },
               "arguments": [],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">=",
           "left": {
            "type": "Identifier",
            "name": "amountOut"
           },
           "right": {
            "type": "Identifier",
            "name": "minAmountOut"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "tokenOut"
               },
               "memberName": "safeTransfer"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "recipient"
               },
               {
                "type": "Identifier",
                "name": "amountOut"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "-=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "reserves"
               },
               "index": {
                "type": "Identifier",
                "name": "j"
               }
              },
              "right": {
               "type": "Identifier",
               "name": "amountOut"
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "_setReserves"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_tokens"
               },
               {
                "type": "Identifier",
                "name": "reserves"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "EmitStatement",
             "eventCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "Shift"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "reserves"
               },
               {
                "type": "Identifier",
                "name": "tokenOut"
               },
               {
                "type": "Identifier",
                "name": "amountOut"
               },
               {
                "type": "Identifier",
                "name": "recipient"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "SlippageOut"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "amountOut"
               },
               {
                "type": "Identifier",
                "name": "minAmountOut"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "nonReentrant",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getShiftOut",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "tokenOut",
         "identifier": {
          "type": "Identifier",
          "name": "tokenOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountOut",
         "identifier": {
          "type": "Identifier",
          "name": "amountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "IERC20"
             },
             "length": null
            },
            "name": "_tokens",
            "identifier": {
             "type": "Identifier",
             "name": "_tokens"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "tokens"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "tokensLength",
            "identifier": {
             "type": "Identifier",
             "name": "tokensLength"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "_tokens"
           },
           "memberName": "length"
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "reserves",
            "identifier": {
             "type": "Identifier",
             "name": "reserves"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "NewExpression",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            }
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "tokensLength"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": null
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "Identifier",
            "name": "tokensLength"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": true
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "reserves"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "_tokens"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "i"
                 }
                },
                "memberName": "balanceOf"
               },
               "arguments": [
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "address"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "this"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "j",
            "identifier": {
             "type": "Identifier",
             "name": "j"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getJ"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_tokens"
            },
            {
             "type": "Identifier",
             "name": "tokenOut"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "amountOut"
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "-",
            "left": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "reserves"
             },
             "index": {
              "type": "Identifier",
              "name": "j"
             }
            },
            "right": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "_calcReserve"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "wellFunction"
               },
               "arguments": [],
               "names": [],
               "identifiers": []
              },
              {
               "type": "Identifier",
               "name": "reserves"
              },
              {
               "type": "Identifier",
               "name": "j"
              },
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "totalSupply"
               },
               "arguments": [],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "readOnlyNonReentrant",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "addLiquidity",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "tokenAmountsIn",
         "identifier": {
          "type": "Identifier",
          "name": "tokenAmountsIn"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "minLpAmountOut",
         "identifier": {
          "type": "Identifier",
          "name": "minLpAmountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "recipient",
         "identifier": {
          "type": "Identifier",
          "name": "recipient"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "deadline",
         "identifier": {
          "type": "Identifier",
          "name": "deadline"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpAmountOut",
         "identifier": {
          "type": "Identifier",
          "name": "lpAmountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "lpAmountOut"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_addLiquidity"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "tokenAmountsIn"
             },
             {
              "type": "Identifier",
              "name": "minLpAmountOut"
             },
             {
              "type": "Identifier",
              "name": "recipient"
             },
             {
              "type": "BooleanLiteral",
              "value": false
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "nonReentrant",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "expire",
         "arguments": [
          {
           "type": "Identifier",
           "name": "deadline"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "addLiquidityFeeOnTransfer",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "tokenAmountsIn",
         "identifier": {
          "type": "Identifier",
          "name": "tokenAmountsIn"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "minLpAmountOut",
         "identifier": {
          "type": "Identifier",
          "name": "minLpAmountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "recipient",
         "identifier": {
          "type": "Identifier",
          "name": "recipient"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "deadline",
         "identifier": {
          "type": "Identifier",
          "name": "deadline"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpAmountOut",
         "identifier": {
          "type": "Identifier",
          "name": "lpAmountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "lpAmountOut"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_addLiquidity"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "tokenAmountsIn"
             },
             {
              "type": "Identifier",
              "name": "minLpAmountOut"
             },
             {
              "type": "Identifier",
              "name": "recipient"
             },
             {
              "type": "BooleanLiteral",
              "value": true
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "nonReentrant",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "expire",
         "arguments": [
          {
           "type": "Identifier",
           "name": "deadline"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_addLiquidity",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "tokenAmountsIn",
         "identifier": {
          "type": "Identifier",
          "name": "tokenAmountsIn"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "minLpAmountOut",
         "identifier": {
          "type": "Identifier",
          "name": "minLpAmountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "recipient",
         "identifier": {
          "type": "Identifier",
          "name": "recipient"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "feeOnTransfer",
         "identifier": {
          "type": "Identifier",
          "name": "feeOnTransfer"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpAmountOut",
         "identifier": {
          "type": "Identifier",
          "name": "lpAmountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "IERC20"
             },
             "length": null
            },
            "name": "_tokens",
            "identifier": {
             "type": "Identifier",
             "name": "_tokens"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "tokens"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "tokensLength",
            "identifier": {
             "type": "Identifier",
             "name": "tokensLength"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "_tokens"
           },
           "memberName": "length"
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "reserves",
            "identifier": {
             "type": "Identifier",
             "name": "reserves"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_updatePumps"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "tokensLength"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "_tokenAmountIn",
            "identifier": {
             "type": "Identifier",
             "name": "_tokenAmountIn"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "Identifier",
           "name": "feeOnTransfer"
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ForStatement",
             "initExpression": {
              "type": "VariableDeclarationStatement",
              "variables": [
               {
                "type": "VariableDeclaration",
                "typeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "name": "i",
                "identifier": {
                 "type": "Identifier",
                 "name": "i"
                },
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false,
                "expression": null
               }
              ],
              "initialValue": null
             },
             "conditionExpression": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "i"
              },
              "right": {
               "type": "Identifier",
               "name": "tokensLength"
              }
             },
             "loopExpression": {
              "type": "ExpressionStatement",
              "expression": {
               "type": "UnaryOperation",
               "operator": "++",
               "subExpression": {
                "type": "Identifier",
                "name": "i"
               },
               "isPrefix": true
              }
             },
             "body": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "_tokenAmountIn"
                 },
                 "right": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "tokenAmountsIn"
                  },
                  "index": {
                   "type": "Identifier",
                   "name": "i"
                  }
                 }
                }
               },
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "==",
                 "left": {
                  "type": "Identifier",
                  "name": "_tokenAmountIn"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                 }
                },
                "trueBody": {
                 "type": "ContinueStatement"
                },
                "falseBody": null
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "_tokenAmountIn"
                 },
                 "right": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "Identifier",
                   "name": "_safeTransferFromFeeOnTransfer"
                  },
                  "arguments": [
                   {
                    "type": "IndexAccess",
                    "base": {
                     "type": "Identifier",
                     "name": "_tokens"
                    },
                    "index": {
                     "type": "Identifier",
                     "name": "i"
                    }
                   },
                   {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "msg"
                    },
                    "memberName": "sender"
                   },
                   {
                    "type": "Identifier",
                    "name": "_tokenAmountIn"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "+=",
                 "left": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "reserves"
                  },
                  "index": {
                   "type": "Identifier",
                   "name": "i"
                  }
                 },
                 "right": {
                  "type": "Identifier",
                  "name": "_tokenAmountIn"
                 }
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "tokenAmountsIn"
                  },
                  "index": {
                   "type": "Identifier",
                   "name": "i"
                  }
                 },
                 "right": {
                  "type": "Identifier",
                  "name": "_tokenAmountIn"
                 }
                }
               }
              ]
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ForStatement",
             "initExpression": {
              "type": "VariableDeclarationStatement",
              "variables": [
               {
                "type": "VariableDeclaration",
                "typeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "name": "i",
                "identifier": {
                 "type": "Identifier",
                 "name": "i"
                },
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false,
                "expression": null
               }
              ],
              "initialValue": null
             },
             "conditionExpression": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "i"
              },
              "right": {
               "type": "Identifier",
               "name": "tokensLength"
              }
             },
             "loopExpression": {
              "type": "ExpressionStatement",
              "expression": {
               "type": "UnaryOperation",
               "operator": "++",
               "subExpression": {
                "type": "Identifier",
                "name": "i"
               },
               "isPrefix": true
              }
             },
             "body": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "_tokenAmountIn"
                 },
                 "right": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "tokenAmountsIn"
                  },
                  "index": {
                   "type": "Identifier",
                   "name": "i"
                  }
                 }
                }
               },
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "==",
                 "left": {
                  "type": "Identifier",
                  "name": "_tokenAmountIn"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                 }
                },
                "trueBody": {
                 "type": "ContinueStatement"
                },
                "falseBody": null
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "IndexAccess",
                   "base": {
                    "type": "Identifier",
                    "name": "_tokens"
                   },
                   "index": {
                    "type": "Identifier",
                    "name": "i"
                   }
                  },
                  "memberName": "safeTransferFrom"
                 },
                 "arguments": [
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "msg"
                   },
                   "memberName": "sender"
                  },
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "Identifier",
                    "name": "address"
                   },
                   "arguments": [
                    {
                     "type": "Identifier",
                     "name": "this"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  },
                  {
                   "type": "Identifier",
                   "name": "_tokenAmountIn"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "+=",
                 "left": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "reserves"
                  },
                  "index": {
                   "type": "Identifier",
                   "name": "i"
                  }
                 },
                 "right": {
                  "type": "Identifier",
                  "name": "_tokenAmountIn"
                 }
                }
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "lpAmountOut"
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "-",
            "left": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "_calcLpTokenSupply"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "wellFunction"
               },
               "arguments": [],
               "names": [],
               "identifiers": []
              },
              {
               "type": "Identifier",
               "name": "reserves"
              }
             ],
             "names": [],
             "identifiers": []
            },
            "right": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "totalSupply"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            }
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "lpAmountOut"
           },
           "right": {
            "type": "Identifier",
            "name": "minLpAmountOut"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "SlippageOut"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "lpAmountOut"
               },
               {
                "type": "Identifier",
                "name": "minLpAmountOut"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_mint"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "recipient"
            },
            {
             "type": "Identifier",
             "name": "lpAmountOut"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_setReserves"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_tokens"
            },
            {
             "type": "Identifier",
             "name": "reserves"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "AddLiquidity"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "tokenAmountsIn"
            },
            {
             "type": "Identifier",
             "name": "lpAmountOut"
            },
            {
             "type": "Identifier",
             "name": "recipient"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getAddLiquidityOut",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "tokenAmountsIn",
         "identifier": {
          "type": "Identifier",
          "name": "tokenAmountsIn"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpAmountOut",
         "identifier": {
          "type": "Identifier",
          "name": "lpAmountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "IERC20"
             },
             "length": null
            },
            "name": "_tokens",
            "identifier": {
             "type": "Identifier",
             "name": "_tokens"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "tokens"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "tokensLength",
            "identifier": {
             "type": "Identifier",
             "name": "tokensLength"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "_tokens"
           },
           "memberName": "length"
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "reserves",
            "identifier": {
             "type": "Identifier",
             "name": "reserves"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getReserves"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "tokensLength"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": null
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "Identifier",
            "name": "tokensLength"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": true
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "+=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "reserves"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              },
              "right": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "tokenAmountsIn"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              }
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "lpAmountOut"
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "-",
            "left": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "_calcLpTokenSupply"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "wellFunction"
               },
               "arguments": [],
               "names": [],
               "identifiers": []
              },
              {
               "type": "Identifier",
               "name": "reserves"
              }
             ],
             "names": [],
             "identifiers": []
            },
            "right": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "totalSupply"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            }
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "readOnlyNonReentrant",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "removeLiquidity",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpAmountIn",
         "identifier": {
          "type": "Identifier",
          "name": "lpAmountIn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "minTokenAmountsOut",
         "identifier": {
          "type": "Identifier",
          "name": "minTokenAmountsOut"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "recipient",
         "identifier": {
          "type": "Identifier",
          "name": "recipient"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "deadline",
         "identifier": {
          "type": "Identifier",
          "name": "deadline"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "tokenAmountsOut",
         "identifier": {
          "type": "Identifier",
          "name": "tokenAmountsOut"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "IERC20"
             },
             "length": null
            },
            "name": "_tokens",
            "identifier": {
             "type": "Identifier",
             "name": "_tokens"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "tokens"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "tokensLength",
            "identifier": {
             "type": "Identifier",
             "name": "tokensLength"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "_tokens"
           },
           "memberName": "length"
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "reserves",
            "identifier": {
             "type": "Identifier",
             "name": "reserves"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_updatePumps"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "tokensLength"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "tokenAmountsOut"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_calcLPTokenUnderlying"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "wellFunction"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             },
             {
              "type": "Identifier",
              "name": "lpAmountIn"
             },
             {
              "type": "Identifier",
              "name": "reserves"
             },
             {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "totalSupply"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_burn"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "lpAmountIn"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "_tokenAmountOut",
            "identifier": {
             "type": "Identifier",
             "name": "_tokenAmountOut"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": null
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "Identifier",
            "name": "tokensLength"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": true
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "_tokenAmountOut"
              },
              "right": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "tokenAmountsOut"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              }
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "_tokenAmountOut"
              },
              "right": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "minTokenAmountsOut"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "RevertStatement",
                "revertCall": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "SlippageOut"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "_tokenAmountOut"
                  },
                  {
                   "type": "IndexAccess",
                   "base": {
                    "type": "Identifier",
                    "name": "minTokenAmountsOut"
                   },
                   "index": {
                    "type": "Identifier",
                    "name": "i"
                   }
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": null
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "_tokens"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               },
               "memberName": "safeTransfer"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "recipient"
               },
               {
                "type": "Identifier",
                "name": "_tokenAmountOut"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "-=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "reserves"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              },
              "right": {
               "type": "Identifier",
               "name": "_tokenAmountOut"
              }
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_setReserves"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_tokens"
            },
            {
             "type": "Identifier",
             "name": "reserves"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RemoveLiquidity"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "lpAmountIn"
            },
            {
             "type": "Identifier",
             "name": "tokenAmountsOut"
            },
            {
             "type": "Identifier",
             "name": "recipient"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "nonReentrant",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "expire",
         "arguments": [
          {
           "type": "Identifier",
           "name": "deadline"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getRemoveLiquidityOut",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpAmountIn",
         "identifier": {
          "type": "Identifier",
          "name": "lpAmountIn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "tokenAmountsOut",
         "identifier": {
          "type": "Identifier",
          "name": "tokenAmountsOut"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "IERC20"
             },
             "length": null
            },
            "name": "_tokens",
            "identifier": {
             "type": "Identifier",
             "name": "_tokens"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "tokens"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "reserves",
            "identifier": {
             "type": "Identifier",
             "name": "reserves"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getReserves"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_tokens"
             },
             "memberName": "length"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "lpTokenSupply",
            "identifier": {
             "type": "Identifier",
             "name": "lpTokenSupply"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "totalSupply"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "tokenAmountsOut"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_calcLPTokenUnderlying"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "wellFunction"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             },
             {
              "type": "Identifier",
              "name": "lpAmountIn"
             },
             {
              "type": "Identifier",
              "name": "reserves"
             },
             {
              "type": "Identifier",
              "name": "lpTokenSupply"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "readOnlyNonReentrant",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "removeLiquidityOneToken",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpAmountIn",
         "identifier": {
          "type": "Identifier",
          "name": "lpAmountIn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "tokenOut",
         "identifier": {
          "type": "Identifier",
          "name": "tokenOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "minTokenAmountOut",
         "identifier": {
          "type": "Identifier",
          "name": "minTokenAmountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "recipient",
         "identifier": {
          "type": "Identifier",
          "name": "recipient"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "deadline",
         "identifier": {
          "type": "Identifier",
          "name": "deadline"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "tokenAmountOut",
         "identifier": {
          "type": "Identifier",
          "name": "tokenAmountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "IERC20"
             },
             "length": null
            },
            "name": "_tokens",
            "identifier": {
             "type": "Identifier",
             "name": "_tokens"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "tokens"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "reserves",
            "identifier": {
             "type": "Identifier",
             "name": "reserves"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_updatePumps"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_tokens"
             },
             "memberName": "length"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "j",
            "identifier": {
             "type": "Identifier",
             "name": "j"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getJ"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_tokens"
            },
            {
             "type": "Identifier",
             "name": "tokenOut"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "tokenAmountOut"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_getRemoveLiquidityOneTokenOut"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "lpAmountIn"
             },
             {
              "type": "Identifier",
              "name": "j"
             },
             {
              "type": "Identifier",
              "name": "reserves"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "tokenAmountOut"
           },
           "right": {
            "type": "Identifier",
            "name": "minTokenAmountOut"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "SlippageOut"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "tokenAmountOut"
               },
               {
                "type": "Identifier",
                "name": "minTokenAmountOut"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_burn"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "lpAmountIn"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "tokenOut"
            },
            "memberName": "safeTransfer"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "recipient"
            },
            {
             "type": "Identifier",
             "name": "tokenAmountOut"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "-=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "reserves"
            },
            "index": {
             "type": "Identifier",
             "name": "j"
            }
           },
           "right": {
            "type": "Identifier",
            "name": "tokenAmountOut"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_setReserves"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_tokens"
            },
            {
             "type": "Identifier",
             "name": "reserves"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RemoveLiquidityOneToken"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "lpAmountIn"
            },
            {
             "type": "Identifier",
             "name": "tokenOut"
            },
            {
             "type": "Identifier",
             "name": "tokenAmountOut"
            },
            {
             "type": "Identifier",
             "name": "recipient"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "nonReentrant",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "expire",
         "arguments": [
          {
           "type": "Identifier",
           "name": "deadline"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getRemoveLiquidityOneTokenOut",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpAmountIn",
         "identifier": {
          "type": "Identifier",
          "name": "lpAmountIn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "tokenOut",
         "identifier": {
          "type": "Identifier",
          "name": "tokenOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "tokenAmountOut",
         "identifier": {
          "type": "Identifier",
          "name": "tokenAmountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "IERC20"
             },
             "length": null
            },
            "name": "_tokens",
            "identifier": {
             "type": "Identifier",
             "name": "_tokens"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "tokens"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "reserves",
            "identifier": {
             "type": "Identifier",
             "name": "reserves"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getReserves"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_tokens"
             },
             "memberName": "length"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "tokenAmountOut"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_getRemoveLiquidityOneTokenOut"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "lpAmountIn"
             },
             {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "_getJ"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_tokens"
               },
               {
                "type": "Identifier",
                "name": "tokenOut"
               }
              ],
              "names": [],
              "identifiers": []
             },
             {
              "type": "Identifier",
              "name": "reserves"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "readOnlyNonReentrant",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "_getRemoveLiquidityOneTokenOut",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpAmountIn",
         "identifier": {
          "type": "Identifier",
          "name": "lpAmountIn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "j",
         "identifier": {
          "type": "Identifier",
          "name": "j"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "reserves",
         "identifier": {
          "type": "Identifier",
          "name": "reserves"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "tokenAmountOut",
         "identifier": {
          "type": "Identifier",
          "name": "tokenAmountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "newReserveJ",
            "identifier": {
             "type": "Identifier",
             "name": "newReserveJ"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_calcReserve"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "wellFunction"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "reserves"
            },
            {
             "type": "Identifier",
             "name": "j"
            },
            {
             "type": "BinaryOperation",
             "operator": "-",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "totalSupply"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "Identifier",
              "name": "lpAmountIn"
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "tokenAmountOut"
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "-",
            "left": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "reserves"
             },
             "index": {
              "type": "Identifier",
              "name": "j"
             }
            },
            "right": {
             "type": "Identifier",
             "name": "newReserveJ"
            }
           }
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "removeLiquidityImbalanced",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "maxLpAmountIn",
         "identifier": {
          "type": "Identifier",
          "name": "maxLpAmountIn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "tokenAmountsOut",
         "identifier": {
          "type": "Identifier",
          "name": "tokenAmountsOut"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "recipient",
         "identifier": {
          "type": "Identifier",
          "name": "recipient"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "deadline",
         "identifier": {
          "type": "Identifier",
          "name": "deadline"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpAmountIn",
         "identifier": {
          "type": "Identifier",
          "name": "lpAmountIn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "IERC20"
             },
             "length": null
            },
            "name": "_tokens",
            "identifier": {
             "type": "Identifier",
             "name": "_tokens"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "tokens"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "tokensLength",
            "identifier": {
             "type": "Identifier",
             "name": "tokensLength"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "_tokens"
           },
           "memberName": "length"
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "reserves",
            "identifier": {
             "type": "Identifier",
             "name": "reserves"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_updatePumps"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "tokensLength"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "_tokenAmountOut",
            "identifier": {
             "type": "Identifier",
             "name": "_tokenAmountOut"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": null
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "Identifier",
            "name": "tokensLength"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": true
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "_tokenAmountOut"
              },
              "right": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "tokenAmountsOut"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "_tokens"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               },
               "memberName": "safeTransfer"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "recipient"
               },
               {
                "type": "Identifier",
                "name": "_tokenAmountOut"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "-=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "reserves"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              },
              "right": {
               "type": "Identifier",
               "name": "_tokenAmountOut"
              }
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "lpAmountIn"
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "-",
            "left": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "totalSupply"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            "right": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "_calcLpTokenSupply"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "wellFunction"
               },
               "arguments": [],
               "names": [],
               "identifiers": []
              },
              {
               "type": "Identifier",
               "name": "reserves"
              }
             ],
             "names": [],
             "identifiers": []
            }
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "lpAmountIn"
           },
           "right": {
            "type": "Identifier",
            "name": "maxLpAmountIn"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "SlippageIn"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "lpAmountIn"
               },
               {
                "type": "Identifier",
                "name": "maxLpAmountIn"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_burn"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "lpAmountIn"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_setReserves"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_tokens"
            },
            {
             "type": "Identifier",
             "name": "reserves"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RemoveLiquidity"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "lpAmountIn"
            },
            {
             "type": "Identifier",
             "name": "tokenAmountsOut"
            },
            {
             "type": "Identifier",
             "name": "recipient"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "nonReentrant",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "expire",
         "arguments": [
          {
           "type": "Identifier",
           "name": "deadline"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getRemoveLiquidityImbalancedIn",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "tokenAmountsOut",
         "identifier": {
          "type": "Identifier",
          "name": "tokenAmountsOut"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpAmountIn",
         "identifier": {
          "type": "Identifier",
          "name": "lpAmountIn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "IERC20"
             },
             "length": null
            },
            "name": "_tokens",
            "identifier": {
             "type": "Identifier",
             "name": "_tokens"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "tokens"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "tokensLength",
            "identifier": {
             "type": "Identifier",
             "name": "tokensLength"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "_tokens"
           },
           "memberName": "length"
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "reserves",
            "identifier": {
             "type": "Identifier",
             "name": "reserves"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getReserves"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "tokensLength"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": null
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "Identifier",
            "name": "tokensLength"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": true
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "-=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "reserves"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              },
              "right": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "tokenAmountsOut"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              }
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "lpAmountIn"
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "-",
            "left": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "totalSupply"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            "right": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "_calcLpTokenSupply"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "wellFunction"
               },
               "arguments": [],
               "names": [],
               "identifiers": []
              },
              {
               "type": "Identifier",
               "name": "reserves"
              }
             ],
             "names": [],
             "identifiers": []
            }
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "readOnlyNonReentrant",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "sync",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "recipient",
         "identifier": {
          "type": "Identifier",
          "name": "recipient"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "minLpAmountOut",
         "identifier": {
          "type": "Identifier",
          "name": "minLpAmountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpAmountOut",
         "identifier": {
          "type": "Identifier",
          "name": "lpAmountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "IERC20"
             },
             "length": null
            },
            "name": "_tokens",
            "identifier": {
             "type": "Identifier",
             "name": "_tokens"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "tokens"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "tokensLength",
            "identifier": {
             "type": "Identifier",
             "name": "tokensLength"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "_tokens"
           },
           "memberName": "length"
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_updatePumps"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "tokensLength"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "reserves",
            "identifier": {
             "type": "Identifier",
             "name": "reserves"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "NewExpression",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            }
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "tokensLength"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": null
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "Identifier",
            "name": "tokensLength"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": true
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "reserves"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "_tokens"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "i"
                 }
                },
                "memberName": "balanceOf"
               },
               "arguments": [
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "address"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "this"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "newTokenSupply",
            "identifier": {
             "type": "Identifier",
             "name": "newTokenSupply"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_calcLpTokenSupply"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "wellFunction"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "reserves"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "oldTokenSupply",
            "identifier": {
             "type": "Identifier",
             "name": "oldTokenSupply"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "totalSupply"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "newTokenSupply"
           },
           "right": {
            "type": "Identifier",
            "name": "oldTokenSupply"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "lpAmountOut"
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "-",
               "left": {
                "type": "Identifier",
                "name": "newTokenSupply"
               },
               "right": {
                "type": "Identifier",
                "name": "oldTokenSupply"
               }
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "_mint"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "recipient"
               },
               {
                "type": "Identifier",
                "name": "lpAmountOut"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "lpAmountOut"
           },
           "right": {
            "type": "Identifier",
            "name": "minLpAmountOut"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "SlippageOut"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "lpAmountOut"
               },
               {
                "type": "Identifier",
                "name": "minLpAmountOut"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_setReserves"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_tokens"
            },
            {
             "type": "Identifier",
             "name": "reserves"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "Sync"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "reserves"
            },
            {
             "type": "Identifier",
             "name": "lpAmountOut"
            },
            {
             "type": "Identifier",
             "name": "recipient"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "nonReentrant",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getSyncOut",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpAmountOut",
         "identifier": {
          "type": "Identifier",
          "name": "lpAmountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "IERC20"
             },
             "length": null
            },
            "name": "_tokens",
            "identifier": {
             "type": "Identifier",
             "name": "_tokens"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "tokens"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "tokensLength",
            "identifier": {
             "type": "Identifier",
             "name": "tokensLength"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "_tokens"
           },
           "memberName": "length"
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "reserves",
            "identifier": {
             "type": "Identifier",
             "name": "reserves"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "NewExpression",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            }
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "tokensLength"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": null
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "Identifier",
            "name": "tokensLength"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": true
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "reserves"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "_tokens"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "i"
                 }
                },
                "memberName": "balanceOf"
               },
               "arguments": [
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "address"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "this"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "newTokenSupply",
            "identifier": {
             "type": "Identifier",
             "name": "newTokenSupply"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_calcLpTokenSupply"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "wellFunction"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "reserves"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "oldTokenSupply",
            "identifier": {
             "type": "Identifier",
             "name": "oldTokenSupply"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "totalSupply"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "newTokenSupply"
           },
           "right": {
            "type": "Identifier",
            "name": "oldTokenSupply"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "lpAmountOut"
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "-",
               "left": {
                "type": "Identifier",
                "name": "newTokenSupply"
               },
               "right": {
                "type": "Identifier",
                "name": "oldTokenSupply"
               }
              }
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "readOnlyNonReentrant",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "skim",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "recipient",
         "identifier": {
          "type": "Identifier",
          "name": "recipient"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "skimAmounts",
         "identifier": {
          "type": "Identifier",
          "name": "skimAmounts"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "IERC20"
             },
             "length": null
            },
            "name": "_tokens",
            "identifier": {
             "type": "Identifier",
             "name": "_tokens"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "tokens"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "tokensLength",
            "identifier": {
             "type": "Identifier",
             "name": "tokensLength"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "_tokens"
           },
           "memberName": "length"
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "reserves",
            "identifier": {
             "type": "Identifier",
             "name": "reserves"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getReserves"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "tokensLength"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "skimAmounts"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "NewExpression",
             "typeName": {
              "type": "ArrayTypeName",
              "baseTypeName": {
               "type": "ElementaryTypeName",
               "name": "uint256",
               "stateMutability": null
              },
              "length": null
             }
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "tokensLength"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": null
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "Identifier",
            "name": "tokensLength"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": true
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "skimAmounts"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "-",
               "left": {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "_tokens"
                  },
                  "index": {
                   "type": "Identifier",
                   "name": "i"
                  }
                 },
                 "memberName": "balanceOf"
                },
                "arguments": [
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "Identifier",
                   "name": "address"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "this"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "right": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "reserves"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               }
              }
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": ">",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "skimAmounts"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "IndexAccess",
                   "base": {
                    "type": "Identifier",
                    "name": "_tokens"
                   },
                   "index": {
                    "type": "Identifier",
                    "name": "i"
                   }
                  },
                  "memberName": "safeTransfer"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "recipient"
                  },
                  {
                   "type": "IndexAccess",
                   "base": {
                    "type": "Identifier",
                    "name": "skimAmounts"
                   },
                   "index": {
                    "type": "Identifier",
                    "name": "i"
                   }
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": null
            }
           ]
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "nonReentrant",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getReserves",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "reserves",
         "identifier": {
          "type": "Identifier",
          "name": "reserves"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "reserves"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_getReserves"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "numberOfTokens"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "readOnlyNonReentrant",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "_getReserves",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_numberOfTokens",
         "identifier": {
          "type": "Identifier",
          "name": "_numberOfTokens"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "reserves",
         "identifier": {
          "type": "Identifier",
          "name": "reserves"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "reserves"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "LibBytes"
             },
             "memberName": "readUint128"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "RESERVES_STORAGE_SLOT"
             },
             {
              "type": "Identifier",
              "name": "_numberOfTokens"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "_setReserves",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "IERC20"
          },
          "length": null
         },
         "name": "_tokens",
         "identifier": {
          "type": "Identifier",
          "name": "_tokens"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "reserves",
         "identifier": {
          "type": "Identifier",
          "name": "reserves"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": null
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "reserves"
            },
            "memberName": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": true
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": ">",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "reserves"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "_tokens"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "i"
                 }
                },
                "memberName": "balanceOf"
               },
               "arguments": [
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "address"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "this"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               ],
               "names": [],
               "identifiers": []
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "RevertStatement",
                "revertCall": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "InvalidReserves"
                 },
                 "arguments": [],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": null
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "LibBytes"
            },
            "memberName": "storeUint128"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "RESERVES_STORAGE_SLOT"
            },
            {
             "type": "Identifier",
             "name": "reserves"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_updatePumps",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_numberOfTokens",
         "identifier": {
          "type": "Identifier",
          "name": "_numberOfTokens"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "reserves",
         "identifier": {
          "type": "Identifier",
          "name": "reserves"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "reserves"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_getReserves"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_numberOfTokens"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "_numberOfPumps",
            "identifier": {
             "type": "Identifier",
             "name": "_numberOfPumps"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "numberOfPumps"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "_numberOfPumps"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "Identifier",
              "name": "reserves"
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "_numberOfPumps"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "UserDefinedTypeName",
                "namePath": "Call"
               },
               "name": "_pump",
               "identifier": {
                "type": "Identifier",
                "name": "_pump"
               },
               "storageLocation": "memory",
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "firstPump"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "TryStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "IPump"
                },
                "arguments": [
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "_pump"
                  },
                  "memberName": "target"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "memberName": "update"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "reserves"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_pump"
                },
                "memberName": "data"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "returnParameters": null,
             "body": {
              "type": "Block",
              "statements": []
             },
             "catchClauses": [
              {
               "type": "CatchClause",
               "isReasonStringType": false,
               "kind": null,
               "parameters": null,
               "body": {
                "type": "Block",
                "statements": []
               }
              }
             ]
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ArrayTypeName",
                "baseTypeName": {
                 "type": "UserDefinedTypeName",
                 "namePath": "Call"
                },
                "length": null
               },
               "name": "_pumps",
               "identifier": {
                "type": "Identifier",
                "name": "_pumps"
               },
               "storageLocation": "memory",
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "pumps"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ForStatement",
             "initExpression": {
              "type": "VariableDeclarationStatement",
              "variables": [
               {
                "type": "VariableDeclaration",
                "typeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "name": "i",
                "identifier": {
                 "type": "Identifier",
                 "name": "i"
                },
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false,
                "expression": null
               }
              ],
              "initialValue": null
             },
             "conditionExpression": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "i"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_pumps"
               },
               "memberName": "length"
              }
             },
             "loopExpression": {
              "type": "ExpressionStatement",
              "expression": {
               "type": "UnaryOperation",
               "operator": "++",
               "subExpression": {
                "type": "Identifier",
                "name": "i"
               },
               "isPrefix": true
              }
             },
             "body": {
              "type": "Block",
              "statements": [
               {
                "type": "TryStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "Identifier",
                    "name": "IPump"
                   },
                   "arguments": [
                    {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "IndexAccess",
                      "base": {
                       "type": "Identifier",
                       "name": "_pumps"
                      },
                      "index": {
                       "type": "Identifier",
                       "name": "i"
                      }
                     },
                     "memberName": "target"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  },
                  "memberName": "update"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "reserves"
                  },
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "IndexAccess",
                    "base": {
                     "type": "Identifier",
                     "name": "_pumps"
                    },
                    "index": {
                     "type": "Identifier",
                     "name": "i"
                    }
                   },
                   "memberName": "data"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                },
                "returnParameters": null,
                "body": {
                 "type": "Block",
                 "statements": []
                },
                "catchClauses": [
                 {
                  "type": "CatchClause",
                  "isReasonStringType": false,
                  "kind": null,
                  "parameters": null,
                  "body": {
                   "type": "Block",
                   "statements": []
                  }
                 }
                ]
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_calcLpTokenSupply",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Call"
         },
         "name": "_wellFunction",
         "identifier": {
          "type": "Identifier",
          "name": "_wellFunction"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "reserves",
         "identifier": {
          "type": "Identifier",
          "name": "reserves"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpTokenSupply",
         "identifier": {
          "type": "Identifier",
          "name": "lpTokenSupply"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "lpTokenSupply"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "IWellFunction"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_wellFunction"
                },
                "memberName": "target"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "memberName": "calcLpTokenSupply"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "reserves"
             },
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_wellFunction"
              },
              "memberName": "data"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "_calcReserve",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Call"
         },
         "name": "_wellFunction",
         "identifier": {
          "type": "Identifier",
          "name": "_wellFunction"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "reserves",
         "identifier": {
          "type": "Identifier",
          "name": "reserves"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "j",
         "identifier": {
          "type": "Identifier",
          "name": "j"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpTokenSupply",
         "identifier": {
          "type": "Identifier",
          "name": "lpTokenSupply"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "reserve",
         "identifier": {
          "type": "Identifier",
          "name": "reserve"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "reserve"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "IWellFunction"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_wellFunction"
                },
                "memberName": "target"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "memberName": "calcReserve"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "reserves"
             },
             {
              "type": "Identifier",
              "name": "j"
             },
             {
              "type": "Identifier",
              "name": "lpTokenSupply"
             },
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_wellFunction"
              },
              "memberName": "data"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "_calcLPTokenUnderlying",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Call"
         },
         "name": "_wellFunction",
         "identifier": {
          "type": "Identifier",
          "name": "_wellFunction"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpTokenAmount",
         "identifier": {
          "type": "Identifier",
          "name": "lpTokenAmount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "reserves",
         "identifier": {
          "type": "Identifier",
          "name": "reserves"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpTokenSupply",
         "identifier": {
          "type": "Identifier",
          "name": "lpTokenSupply"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "tokenAmounts",
         "identifier": {
          "type": "Identifier",
          "name": "tokenAmounts"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "tokenAmounts"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "IWellFunction"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_wellFunction"
                },
                "memberName": "target"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "memberName": "calcLPTokenUnderlying"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "lpTokenAmount"
             },
             {
              "type": "Identifier",
              "name": "reserves"
             },
             {
              "type": "Identifier",
              "name": "lpTokenSupply"
             },
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_wellFunction"
              },
              "memberName": "data"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "_getIJ",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "IERC20"
          },
          "length": null
         },
         "name": "_tokens",
         "identifier": {
          "type": "Identifier",
          "name": "_tokens"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "iToken",
         "identifier": {
          "type": "Identifier",
          "name": "iToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "jToken",
         "identifier": {
          "type": "Identifier",
          "name": "jToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "i",
         "identifier": {
          "type": "Identifier",
          "name": "i"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "j",
         "identifier": {
          "type": "Identifier",
          "name": "j"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bool",
             "stateMutability": null
            },
            "name": "foundOne",
            "identifier": {
             "type": "Identifier",
             "name": "foundOne"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "k",
             "identifier": {
              "type": "Identifier",
              "name": "k"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": null
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "k"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_tokens"
            },
            "memberName": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "k"
            },
            "isPrefix": true
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "Identifier",
               "name": "iToken"
              },
              "right": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "_tokens"
               },
               "index": {
                "type": "Identifier",
                "name": "k"
               }
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "i"
                 },
                 "right": {
                  "type": "Identifier",
                  "name": "k"
                 }
                }
               },
               {
                "type": "IfStatement",
                "condition": {
                 "type": "Identifier",
                 "name": "foundOne"
                },
                "trueBody": {
                 "type": "ReturnStatement",
                 "expression": {
                  "type": "TupleExpression",
                  "components": [
                   {
                    "type": "Identifier",
                    "name": "i"
                   },
                   {
                    "type": "Identifier",
                    "name": "j"
                   }
                  ],
                  "isArray": false
                 }
                },
                "falseBody": null
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "foundOne"
                 },
                 "right": {
                  "type": "BooleanLiteral",
                  "value": true
                 }
                }
               }
              ]
             },
             "falseBody": {
              "type": "IfStatement",
              "condition": {
               "type": "BinaryOperation",
               "operator": "==",
               "left": {
                "type": "Identifier",
                "name": "jToken"
               },
               "right": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "_tokens"
                },
                "index": {
                 "type": "Identifier",
                 "name": "k"
                }
               }
              },
              "trueBody": {
               "type": "Block",
               "statements": [
                {
                 "type": "ExpressionStatement",
                 "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                   "type": "Identifier",
                   "name": "j"
                  },
                  "right": {
                   "type": "Identifier",
                   "name": "k"
                  }
                 }
                },
                {
                 "type": "IfStatement",
                 "condition": {
                  "type": "Identifier",
                  "name": "foundOne"
                 },
                 "trueBody": {
                  "type": "ReturnStatement",
                  "expression": {
                   "type": "TupleExpression",
                   "components": [
                    {
                     "type": "Identifier",
                     "name": "i"
                    },
                    {
                     "type": "Identifier",
                     "name": "j"
                    }
                   ],
                   "isArray": false
                  }
                 },
                 "falseBody": null
                },
                {
                 "type": "ExpressionStatement",
                 "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                   "type": "Identifier",
                   "name": "foundOne"
                  },
                  "right": {
                   "type": "BooleanLiteral",
                   "value": true
                  }
                 }
                }
               ]
              },
              "falseBody": null
             }
            }
           ]
          }
         },
         {
          "type": "RevertStatement",
          "revertCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "InvalidTokens"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "_getJ",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "IERC20"
          },
          "length": null
         },
         "name": "_tokens",
         "identifier": {
          "type": "Identifier",
          "name": "_tokens"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "jToken",
         "identifier": {
          "type": "Identifier",
          "name": "jToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "j",
         "identifier": {
          "type": "Identifier",
          "name": "j"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "Identifier",
            "name": "j"
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "j"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_tokens"
            },
            "memberName": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "j"
            },
            "isPrefix": true
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "Identifier",
               "name": "jToken"
              },
              "right": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "_tokens"
               },
               "index": {
                "type": "Identifier",
                "name": "j"
               }
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ReturnStatement",
                "expression": {
                 "type": "Identifier",
                 "name": "j"
                }
               }
              ]
             },
             "falseBody": null
            }
           ]
          }
         },
         {
          "type": "RevertStatement",
          "revertCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "InvalidTokens"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "_safeTransferFromFeeOnTransfer",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "token",
         "identifier": {
          "type": "Identifier",
          "name": "token"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "from",
         "identifier": {
          "type": "Identifier",
          "name": "from"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountTransferred",
         "identifier": {
          "type": "Identifier",
          "name": "amountTransferred"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "balanceBefore",
            "identifier": {
             "type": "Identifier",
             "name": "balanceBefore"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "token"
            },
            "memberName": "balanceOf"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "this"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "token"
            },
            "memberName": "safeTransferFrom"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "from"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "this"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "amountTransferred"
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "-",
            "left": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "token"
              },
              "memberName": "balanceOf"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "address"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "this"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            "right": {
             "type": "Identifier",
             "name": "balanceBefore"
            }
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "ModifierDefinition",
       "name": "expire",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "deadline",
         "identifier": {
          "type": "Identifier",
          "name": "deadline"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "block"
            },
            "memberName": "timestamp"
           },
           "right": {
            "type": "Identifier",
            "name": "deadline"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "Expired"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "_"
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "ModifierDefinition",
       "name": "readOnlyNonReentrant",
       "parameters": [],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "UnaryOperation",
             "operator": "!",
             "subExpression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "_reentrancyGuardEntered"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             },
             "isPrefix": true
            },
            {
             "type": "StringLiteral",
             "value": "ReentrancyGuard: reentrant call",
             "parts": [
              "ReentrancyGuard: reentrant call"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "_"
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-08-basin/src/Aquifer.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.8.20"
    },
    {
     "type": "ImportDirective",
     "path": "oz/security/ReentrancyGuard.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "oz/security/ReentrancyGuard.sol",
      "parts": [
       "oz/security/ReentrancyGuard.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "ReentrancyGuard",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "ReentrancyGuard"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "src/interfaces/IAquifer.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "src/interfaces/IAquifer.sol",
      "parts": [
       "src/interfaces/IAquifer.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IAquifer",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IAquifer"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "src/Well.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "src/Well.sol",
      "parts": [
       "src/Well.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IWell",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IWell"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "src/libraries/LibClone.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "src/libraries/LibClone.sol",
      "parts": [
       "src/libraries/LibClone.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "LibClone",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "LibClone"
       },
       null
      ]
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "Aquifer",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "IAquifer"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ReentrancyGuard"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "address",
        "stateMutability": null
       },
       "libraryName": "LibClone",
       "functions": [],
       "operators": []
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "wellImplementation",
         "identifier": {
          "type": "Identifier",
          "name": "wellImplementation"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": []
       },
       "visibility": "default",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "ReentrancyGuard",
         "arguments": []
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "boreWell",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "implementation",
         "identifier": {
          "type": "Identifier",
          "name": "implementation"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "immutableData",
         "identifier": {
          "type": "Identifier",
          "name": "immutableData"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "initFunctionCall",
         "identifier": {
          "type": "Identifier",
          "name": "initFunctionCall"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "salt",
         "identifier": {
          "type": "Identifier",
          "name": "salt"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "well",
         "identifier": {
          "type": "Identifier",
          "name": "well"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "immutableData"
            },
            "memberName": "length"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "!=",
              "left": {
               "type": "Identifier",
               "name": "salt"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "bytes32",
                "stateMutability": null
               },
               "arguments": [
                {
                 "type": "NumberLiteral",
                 "number": "0",
                 "subdenomination": null
                }
               ],
               "names": [],
               "identifiers": []
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "salt"
                 },
                 "right": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "Identifier",
                   "name": "keccak256"
                  },
                  "arguments": [
                   {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "abi"
                     },
                     "memberName": "encode"
                    },
                    "arguments": [
                     {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "Identifier",
                       "name": "msg"
                      },
                      "memberName": "sender"
                     },
                     {
                      "type": "Identifier",
                      "name": "salt"
                     }
                    ],
                    "names": [],
                    "identifiers": []
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "well"
                 },
                 "right": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "implementation"
                   },
                   "memberName": "cloneDeterministic"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "immutableData"
                   },
                   {
                    "type": "Identifier",
                    "name": "salt"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                }
               }
              ]
             },
             "falseBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "well"
                 },
                 "right": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "implementation"
                   },
                   "memberName": "clone"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "immutableData"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                }
               }
              ]
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "!=",
              "left": {
               "type": "Identifier",
               "name": "salt"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "bytes32",
                "stateMutability": null
               },
               "arguments": [
                {
                 "type": "NumberLiteral",
                 "number": "0",
                 "subdenomination": null
                }
               ],
               "names": [],
               "identifiers": []
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "salt"
                 },
                 "right": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "Identifier",
                   "name": "keccak256"
                  },
                  "arguments": [
                   {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "abi"
                     },
                     "memberName": "encode"
                    },
                    "arguments": [
                     {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "Identifier",
                       "name": "msg"
                      },
                      "memberName": "sender"
                     },
                     {
                      "type": "Identifier",
                      "name": "salt"
                     }
                    ],
                    "names": [],
                    "identifiers": []
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "well"
                 },
                 "right": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "implementation"
                   },
                   "memberName": "cloneDeterministic"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "salt"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                }
               }
              ]
             },
             "falseBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "well"
                 },
                 "right": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "implementation"
                   },
                   "memberName": "clone"
                  },
                  "arguments": [],
                  "names": [],
                  "identifiers": []
                 }
                }
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "initFunctionCall"
            },
            "memberName": "length"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "name": "success",
               "identifier": {
                "type": "Identifier",
                "name": "success"
               },
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "bool",
                "stateMutability": null
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              },
              {
               "type": "VariableDeclaration",
               "name": "returnData",
               "identifier": {
                "type": "Identifier",
                "name": "returnData"
               },
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "bytes",
                "stateMutability": null
               },
               "storageLocation": "memory",
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "well"
               },
               "memberName": "call"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "initFunctionCall"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "UnaryOperation",
              "operator": "!",
              "subExpression": {
               "type": "Identifier",
               "name": "success"
              },
              "isPrefix": true
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "<",
                 "left": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "returnData"
                  },
                  "memberName": "length"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "68",
                  "subdenomination": null
                 }
                },
                "trueBody": {
                 "type": "RevertStatement",
                 "revertCall": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "Identifier",
                   "name": "InitFailed"
                  },
                  "arguments": [
                   {
                    "type": "StringLiteral",
                    "value": "",
                    "parts": [
                     ""
                    ],
                    "isUnicode": [
                     false
                    ]
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                },
                "falseBody": null
               },
               {
                "type": "InlineAssemblyStatement",
                "language": null,
                "flags": [],
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "returnData"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "returnData",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x04"
                     }
                    ]
                   }
                  }
                 ]
                }
               },
               {
                "type": "RevertStatement",
                "revertCall": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "InitFailed"
                 },
                 "arguments": [
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "abi"
                    },
                    "memberName": "decode"
                   },
                   "arguments": [
                    {
                     "type": "Identifier",
                     "name": "returnData"
                    },
                    {
                     "type": "TupleExpression",
                     "components": [
                      {
                       "type": "ElementaryTypeName",
                       "name": "string",
                       "stateMutability": null
                      }
                     ],
                     "isArray": false
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": null
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "UnaryOperation",
           "operator": "!",
           "subExpression": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "IWell"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "well"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "memberName": "isInitialized"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           },
           "isPrefix": true
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "WellNotInitialized"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "IWell"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "well"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "memberName": "aquifer"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "address"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "this"
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "InvalidConfig"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "wellImplementation"
            },
            "index": {
             "type": "Identifier",
             "name": "well"
            }
           },
           "right": {
            "type": "Identifier",
            "name": "implementation"
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "BoreWell"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "well"
            },
            {
             "type": "Identifier",
             "name": "implementation"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "IWell"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "well"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "memberName": "tokens"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "IWell"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "well"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "memberName": "wellFunction"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "IWell"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "well"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "memberName": "pumps"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "IWell"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "well"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "memberName": "wellData"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "nonReentrant",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "predictWellAddress",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "implementation",
         "identifier": {
          "type": "Identifier",
          "name": "implementation"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "immutableData",
         "identifier": {
          "type": "Identifier",
          "name": "immutableData"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "salt",
         "identifier": {
          "type": "Identifier",
          "name": "salt"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "well",
         "identifier": {
          "type": "Identifier",
          "name": "well"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "salt"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "arguments": [
             {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "InvalidSalt"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "salt"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "keccak256"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "abi"
               },
               "memberName": "encode"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "msg"
                },
                "memberName": "sender"
               },
               {
                "type": "Identifier",
                "name": "salt"
               }
              ],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "immutableData"
            },
            "memberName": "length"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "well"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "implementation"
                },
                "memberName": "predictDeterministicAddress"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "immutableData"
                },
                {
                 "type": "Identifier",
                 "name": "salt"
                },
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "address"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "this"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "well"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "implementation"
                },
                "memberName": "predictDeterministicAddress"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "salt"
                },
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "address"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "this"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-08-basin/src/utils/ClonePlus.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.8.20"
    },
    {
     "type": "ImportDirective",
     "path": "./Clone.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./Clone.sol",
      "parts": [
       "./Clone.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Clone",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Clone"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "oz/token/ERC20/utils/SafeERC20.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "oz/token/ERC20/utils/SafeERC20.sol",
      "parts": [
       "oz/token/ERC20/utils/SafeERC20.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IERC20",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IERC20"
       },
       null
      ]
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "ClonePlus",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "Clone"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "_getArgIERC20Array",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "argOffset",
         "identifier": {
          "type": "Identifier",
          "name": "argOffset"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "arrLen",
         "identifier": {
          "type": "Identifier",
          "name": "arrLen"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "IERC20"
          },
          "length": null
         },
         "name": "arr",
         "identifier": {
          "type": "Identifier",
          "name": "arr"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "offset",
            "identifier": {
             "type": "Identifier",
             "name": "offset"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "BinaryOperation",
           "operator": "+",
           "left": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_getImmutableArgsOffset"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           },
           "right": {
            "type": "Identifier",
            "name": "argOffset"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "arr"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "NewExpression",
             "typeName": {
              "type": "ArrayTypeName",
              "baseTypeName": {
               "type": "UserDefinedTypeName",
               "namePath": "IERC20"
              },
              "length": null
             }
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "arrLen"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyCall",
             "functionName": "calldatacopy",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "arr",
                 "arguments": []
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "ONE_WORD",
                 "arguments": []
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "offset",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "shl",
               "arguments": [
                {
                 "type": "DecimalNumber",
                 "value": "5"
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "arrLen",
                 "arguments": []
                }
               ]
              }
             ]
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "_getArgBytes",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "argOffset",
         "identifier": {
          "type": "Identifier",
          "name": "argOffset"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "bytesLen",
         "identifier": {
          "type": "Identifier",
          "name": "bytesLen"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "bytesLen"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "ReturnStatement",
           "expression": {
            "type": "Identifier",
            "name": "data"
           }
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "offset",
            "identifier": {
             "type": "Identifier",
             "name": "offset"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "BinaryOperation",
           "operator": "+",
           "left": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_getImmutableArgsOffset"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           },
           "right": {
            "type": "Identifier",
            "name": "argOffset"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "data"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "NewExpression",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "bytes",
              "stateMutability": null
             }
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "bytesLen"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyCall",
             "functionName": "calldatacopy",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "data",
                 "arguments": []
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "ONE_WORD",
                 "arguments": []
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "offset",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "bytesLen",
               "arguments": []
              }
             ]
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-08-basin/src/utils/Clone.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.8.20"
    },
    {
     "type": "ContractDefinition",
     "name": "Clone",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "ONE_WORD",
         "identifier": {
          "type": "Identifier",
          "name": "ONE_WORD"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "0x20",
          "subdenomination": null
         },
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "0x20",
        "subdenomination": null
       }
      },
      {
       "type": "FunctionDefinition",
       "name": "_getArgAddress",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "argOffset",
         "identifier": {
          "type": "Identifier",
          "name": "argOffset"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "arg",
         "identifier": {
          "type": "Identifier",
          "name": "arg"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "offset",
            "identifier": {
             "type": "Identifier",
             "name": "offset"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getImmutableArgsOffset"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "arg"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "shr",
              "arguments": [
               {
                "type": "HexNumber",
                "value": "0x60"
               },
               {
                "type": "AssemblyCall",
                "functionName": "calldataload",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "offset",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "argOffset",
                    "arguments": []
                   }
                  ]
                 }
                ]
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "_getArgUint256",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "argOffset",
         "identifier": {
          "type": "Identifier",
          "name": "argOffset"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "arg",
         "identifier": {
          "type": "Identifier",
          "name": "arg"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "offset",
            "identifier": {
             "type": "Identifier",
             "name": "offset"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getImmutableArgsOffset"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "arg"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "calldataload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "add",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "offset",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "argOffset",
                  "arguments": []
                 }
                ]
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "_getArgUint256Array",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "argOffset",
         "identifier": {
          "type": "Identifier",
          "name": "argOffset"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "arrLen",
         "identifier": {
          "type": "Identifier",
          "name": "arrLen"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "arr",
         "identifier": {
          "type": "Identifier",
          "name": "arr"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "offset",
            "identifier": {
             "type": "Identifier",
             "name": "offset"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "BinaryOperation",
           "operator": "+",
           "left": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_getImmutableArgsOffset"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           },
           "right": {
            "type": "Identifier",
            "name": "argOffset"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "arr"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "NewExpression",
             "typeName": {
              "type": "ArrayTypeName",
              "baseTypeName": {
               "type": "ElementaryTypeName",
               "name": "uint256",
               "stateMutability": null
              },
              "length": null
             }
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "arrLen"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyCall",
             "functionName": "calldatacopy",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "arr",
                 "arguments": []
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "ONE_WORD",
                 "arguments": []
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "offset",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "shl",
               "arguments": [
                {
                 "type": "DecimalNumber",
                 "value": "5"
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "arrLen",
                 "arguments": []
                }
               ]
              }
             ]
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "_getArgUint64",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "argOffset",
         "identifier": {
          "type": "Identifier",
          "name": "argOffset"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint64",
          "stateMutability": null
         },
         "name": "arg",
         "identifier": {
          "type": "Identifier",
          "name": "arg"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "offset",
            "identifier": {
             "type": "Identifier",
             "name": "offset"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getImmutableArgsOffset"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "arg"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "shr",
              "arguments": [
               {
                "type": "HexNumber",
                "value": "0xc0"
               },
               {
                "type": "AssemblyCall",
                "functionName": "calldataload",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "offset",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "argOffset",
                    "arguments": []
                   }
                  ]
                 }
                ]
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "_getArgUint8",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "argOffset",
         "identifier": {
          "type": "Identifier",
          "name": "argOffset"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "arg",
         "identifier": {
          "type": "Identifier",
          "name": "arg"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "offset",
            "identifier": {
             "type": "Identifier",
             "name": "offset"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getImmutableArgsOffset"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "arg"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "shr",
              "arguments": [
               {
                "type": "HexNumber",
                "value": "0xf8"
               },
               {
                "type": "AssemblyCall",
                "functionName": "calldataload",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "offset",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "argOffset",
                    "arguments": []
                   }
                  ]
                 }
                ]
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "_getImmutableArgsOffset",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "offset",
         "identifier": {
          "type": "Identifier",
          "name": "offset"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "offset"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "sub",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "calldatasize",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "shr",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0xf0"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "calldataload",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "sub",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "calldatasize",
                      "arguments": []
                     },
                     {
                      "type": "DecimalNumber",
                      "value": "2"
                     }
                    ]
                   }
                  ]
                 }
                ]
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-08-basin/src/pumps/MultiFlowPump.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.8.20"
    },
    {
     "type": "ImportDirective",
     "path": "src/interfaces/pumps/IPump.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "src/interfaces/pumps/IPump.sol",
      "parts": [
       "src/interfaces/pumps/IPump.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IPump",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IPump"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "src/interfaces/pumps/IMultiFlowPumpErrors.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "src/interfaces/pumps/IMultiFlowPumpErrors.sol",
      "parts": [
       "src/interfaces/pumps/IMultiFlowPumpErrors.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IMultiFlowPumpErrors",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IMultiFlowPumpErrors"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "src/interfaces/IWell.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "src/interfaces/IWell.sol",
      "parts": [
       "src/interfaces/IWell.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IWell",
       null
      ],
      [
       "Call",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IWell"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "Call"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "src/interfaces/pumps/IInstantaneousPump.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "src/interfaces/pumps/IInstantaneousPump.sol",
      "parts": [
       "src/interfaces/pumps/IInstantaneousPump.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IInstantaneousPump",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IInstantaneousPump"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "src/interfaces/IMultiFlowPumpWellFunction.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "src/interfaces/IMultiFlowPumpWellFunction.sol",
      "parts": [
       "src/interfaces/IMultiFlowPumpWellFunction.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IMultiFlowPumpWellFunction",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IMultiFlowPumpWellFunction"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "src/interfaces/pumps/ICumulativePump.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "src/interfaces/pumps/ICumulativePump.sol",
      "parts": [
       "src/interfaces/pumps/ICumulativePump.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "ICumulativePump",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "ICumulativePump"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "src/libraries/ABDKMathQuad.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "src/libraries/ABDKMathQuad.sol",
      "parts": [
       "src/libraries/ABDKMathQuad.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "ABDKMathQuad",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "ABDKMathQuad"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "src/libraries/LibBytes16.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "src/libraries/LibBytes16.sol",
      "parts": [
       "src/libraries/LibBytes16.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "LibBytes16",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "LibBytes16"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "src/libraries/LibLastReserveBytes.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "src/libraries/LibLastReserveBytes.sol",
      "parts": [
       "src/libraries/LibLastReserveBytes.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "LibLastReserveBytes",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "LibLastReserveBytes"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "oz/utils/math/Math.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "oz/utils/math/Math.sol",
      "parts": [
       "oz/utils/math/Math.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Math",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Math"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "oz/utils/math/SafeCast.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "oz/utils/math/SafeCast.sol",
      "parts": [
       "oz/utils/math/SafeCast.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "SafeCast",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "SafeCast"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "src/libraries/LibMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "src/libraries/LibMath.sol",
      "parts": [
       "src/libraries/LibMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "LibMath",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "LibMath"
       },
       null
      ]
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "MultiFlowPump",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "IPump"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "IMultiFlowPumpErrors"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "IInstantaneousPump"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ICumulativePump"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "bytes32",
        "stateMutability": null
       },
       "libraryName": "LibLastReserveBytes",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "bytes32",
        "stateMutability": null
       },
       "libraryName": "LibBytes16",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "bytes16",
        "stateMutability": null
       },
       "libraryName": "ABDKMathQuad",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "libraryName": "ABDKMathQuad",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "int256",
        "stateMutability": null
       },
       "libraryName": "SafeCast",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "libraryName": "Math",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "libraryName": "LibMath",
       "functions": [],
       "operators": []
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "CAP_PRECISION",
         "identifier": {
          "type": "Identifier",
          "name": "CAP_PRECISION"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "1e18",
          "subdenomination": null
         },
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "1e18",
        "subdenomination": null
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "CAP_PRECISION2",
         "identifier": {
          "type": "Identifier",
          "name": "CAP_PRECISION2"
         },
         "expression": {
          "type": "BinaryOperation",
          "operator": "**",
          "left": {
           "type": "NumberLiteral",
           "number": "2",
           "subdenomination": null
          },
          "right": {
           "type": "NumberLiteral",
           "number": "128",
           "subdenomination": null
          }
         },
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "BinaryOperation",
        "operator": "**",
        "left": {
         "type": "NumberLiteral",
         "number": "2",
         "subdenomination": null
        },
        "right": {
         "type": "NumberLiteral",
         "number": "128",
         "subdenomination": null
        }
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes16",
          "stateMutability": null
         },
         "name": "MAX_CONVERT_TO_128x128",
         "identifier": {
          "type": "Identifier",
          "name": "MAX_CONVERT_TO_128x128"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "0x407dffffffffffffffffffffffffffff",
          "subdenomination": null
         },
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "0x407dffffffffffffffffffffffffffff",
        "subdenomination": null
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "MAX_UINT256_SQRT",
         "identifier": {
          "type": "Identifier",
          "name": "MAX_UINT256_SQRT"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "340_282_366_920_938_463_463_374_607_431_768_211_455",
          "subdenomination": null
         },
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "340_282_366_920_938_463_463_374_607_431_768_211_455",
        "subdenomination": null
       }
      },
      {
       "type": "StructDefinition",
       "name": "PumpState",
       "members": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint40",
          "stateMutability": null
         },
         "name": "lastTimestamp",
         "identifier": {
          "type": "Identifier",
          "name": "lastTimestamp"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "lastReserves",
         "identifier": {
          "type": "Identifier",
          "name": "lastReserves"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "bytes16",
           "stateMutability": null
          },
          "length": null
         },
         "name": "emaReserves",
         "identifier": {
          "type": "Identifier",
          "name": "emaReserves"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "bytes16",
           "stateMutability": null
          },
          "length": null
         },
         "name": "cumulativeReserves",
         "identifier": {
          "type": "Identifier",
          "name": "cumulativeReserves"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "StructDefinition",
       "name": "CapReservesParameters",
       "members": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ArrayTypeName",
           "baseTypeName": {
            "type": "ElementaryTypeName",
            "name": "bytes16",
            "stateMutability": null
           },
           "length": null
          },
          "length": null
         },
         "name": "maxRateChanges",
         "identifier": {
          "type": "Identifier",
          "name": "maxRateChanges"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes16",
          "stateMutability": null
         },
         "name": "maxLpSupplyIncrease",
         "identifier": {
          "type": "Identifier",
          "name": "maxLpSupplyIncrease"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes16",
          "stateMutability": null
         },
         "name": "maxLpSupplyDecrease",
         "identifier": {
          "type": "Identifier",
          "name": "maxLpSupplyDecrease"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "StructDefinition",
       "name": "CapRatesVariables",
       "members": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "r",
         "identifier": {
          "type": "Identifier",
          "name": "r"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "rLast",
         "identifier": {
          "type": "Identifier",
          "name": "rLast"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "rLimit",
         "identifier": {
          "type": "Identifier",
          "name": "rLimit"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "ratios",
         "identifier": {
          "type": "Identifier",
          "name": "ratios"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "FunctionDefinition",
       "name": "update",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "reserves",
         "identifier": {
          "type": "Identifier",
          "name": "reserves"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "reserves"
            },
            "memberName": "length"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "2",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "TooManyTokens"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "name": "alpha",
            "identifier": {
             "type": "Identifier",
             "name": "alpha"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes16",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "capInterval",
            "identifier": {
             "type": "Identifier",
             "name": "capInterval"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "crp",
            "identifier": {
             "type": "Identifier",
             "name": "crp"
            },
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "CapReservesParameters"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "abi"
            },
            "memberName": "decode"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "data"
            },
            {
             "type": "TupleExpression",
             "components": [
              {
               "type": "ElementaryTypeName",
               "name": "bytes16",
               "stateMutability": null
              },
              {
               "type": "ElementaryTypeName",
               "name": "uint256",
               "stateMutability": null
              },
              {
               "type": "Identifier",
               "name": "CapReservesParameters"
              }
             ],
             "isArray": false
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "numberOfReserves",
            "identifier": {
             "type": "Identifier",
             "name": "numberOfReserves"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "reserves"
           },
           "memberName": "length"
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "PumpState"
            },
            "name": "pumpState",
            "identifier": {
             "type": "Identifier",
             "name": "pumpState"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "slot",
            "identifier": {
             "type": "Identifier",
             "name": "slot"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getSlotForAddress"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "TupleExpression",
            "components": [
             null,
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "pumpState"
              },
              "memberName": "lastTimestamp"
             },
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "pumpState"
              },
              "memberName": "lastReserves"
             }
            ],
            "isArray": false
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "slot"
             },
             "memberName": "readLastReserves"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "pumpState"
            },
            "memberName": "lastTimestamp"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "_init"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "slot"
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "ElementaryTypeName",
                 "name": "uint40",
                 "stateMutability": null
                },
                "arguments": [
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "block"
                  },
                  "memberName": "timestamp"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "Identifier",
                "name": "reserves"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ReturnStatement",
             "expression": null
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes16",
             "stateMutability": null
            },
            "name": "alphaN",
            "identifier": {
             "type": "Identifier",
             "name": "alphaN"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes16",
             "stateMutability": null
            },
            "name": "deltaTimestampBytes",
            "identifier": {
             "type": "Identifier",
             "name": "deltaTimestampBytes"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "capExponent",
            "identifier": {
             "type": "Identifier",
             "name": "capExponent"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "Block",
          "statements": [
           {
            "type": "VariableDeclarationStatement",
            "variables": [
             {
              "type": "VariableDeclaration",
              "typeName": {
               "type": "ElementaryTypeName",
               "name": "uint256",
               "stateMutability": null
              },
              "name": "deltaTimestamp",
              "identifier": {
               "type": "Identifier",
               "name": "deltaTimestamp"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
             }
            ],
            "initialValue": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "_getDeltaTimestamp"
             },
             "arguments": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "pumpState"
               },
               "memberName": "lastTimestamp"
              }
             ],
             "names": [],
             "identifiers": []
            }
           },
           {
            "type": "IfStatement",
            "condition": {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "Identifier",
              "name": "deltaTimestamp"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            "trueBody": {
             "type": "ReturnStatement",
             "expression": null
            },
            "falseBody": null
           },
           {
            "type": "ExpressionStatement",
            "expression": {
             "type": "BinaryOperation",
             "operator": "=",
             "left": {
              "type": "Identifier",
              "name": "alphaN"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "alpha"
               },
               "memberName": "powu"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "deltaTimestamp"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           },
           {
            "type": "ExpressionStatement",
            "expression": {
             "type": "BinaryOperation",
             "operator": "=",
             "left": {
              "type": "Identifier",
              "name": "deltaTimestampBytes"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "deltaTimestamp"
               },
               "memberName": "fromUInt"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           },
           {
            "type": "ExpressionStatement",
            "expression": {
             "type": "BinaryOperation",
             "operator": "=",
             "left": {
              "type": "Identifier",
              "name": "capExponent"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "calcCapExponent"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "deltaTimestamp"
               },
               {
                "type": "Identifier",
                "name": "capInterval"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           }
          ]
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "pumpState"
            },
            "memberName": "lastReserves"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_capReserves"
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "sender"
             },
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "pumpState"
              },
              "memberName": "lastReserves"
             },
             {
              "type": "Identifier",
              "name": "reserves"
             },
             {
              "type": "Identifier",
              "name": "capExponent"
             },
             {
              "type": "Identifier",
              "name": "crp"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "numSlots",
            "identifier": {
             "type": "Identifier",
             "name": "numSlots"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getSlotsOffset"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "numberOfReserves"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "slot"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "slot",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "numSlots",
                "arguments": []
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "pumpState"
            },
            "memberName": "emaReserves"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "slot"
             },
             "memberName": "readBytes16"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "numberOfReserves"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "slot"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "slot",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "numSlots",
                "arguments": []
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "pumpState"
            },
            "memberName": "cumulativeReserves"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "slot"
             },
             "memberName": "readBytes16"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "numberOfReserves"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes16",
             "stateMutability": null
            },
            "name": "lastReserve",
            "identifier": {
             "type": "Identifier",
             "name": "lastReserve"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": null
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "Identifier",
            "name": "numberOfReserves"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": true
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "lastReserve"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "pumpState"
                  },
                  "memberName": "lastReserves"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "i"
                 }
                },
                "memberName": "fromUIntToLog2"
               },
               "arguments": [],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "pumpState"
                },
                "memberName": "emaReserves"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "lastReserve"
                  },
                  "memberName": "mul"
                 },
                 "arguments": [
                  {
                   "type": "TupleExpression",
                   "components": [
                    {
                     "type": "FunctionCall",
                     "expression": {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "MemberAccess",
                       "expression": {
                        "type": "Identifier",
                        "name": "ABDKMathQuad"
                       },
                       "memberName": "ONE"
                      },
                      "memberName": "sub"
                     },
                     "arguments": [
                      {
                       "type": "Identifier",
                       "name": "alphaN"
                      }
                     ],
                     "names": [],
                     "identifiers": []
                    }
                   ],
                   "isArray": false
                  }
                 ],
                 "names": [],
                 "identifiers": []
                },
                "memberName": "add"
               },
               "arguments": [
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "IndexAccess",
                   "base": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "pumpState"
                    },
                    "memberName": "emaReserves"
                   },
                   "index": {
                    "type": "Identifier",
                    "name": "i"
                   }
                  },
                  "memberName": "mul"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "alphaN"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "pumpState"
                },
                "memberName": "cumulativeReserves"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "pumpState"
                  },
                  "memberName": "cumulativeReserves"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "i"
                 }
                },
                "memberName": "add"
               },
               "arguments": [
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "lastReserve"
                  },
                  "memberName": "mul"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "deltaTimestampBytes"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "slot"
            },
            "memberName": "storeBytes16"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "pumpState"
             },
             "memberName": "cumulativeReserves"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "slot"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "sub",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "slot",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "numSlots",
                "arguments": []
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "slot"
            },
            "memberName": "storeBytes16"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "pumpState"
             },
             "memberName": "emaReserves"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "slot"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "sub",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "slot",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "numSlots",
                "arguments": []
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "slot"
            },
            "memberName": "storeLastReserves"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "ElementaryTypeName",
              "name": "uint40",
              "stateMutability": null
             },
             "arguments": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "block"
               },
               "memberName": "timestamp"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "pumpState"
             },
             "memberName": "lastReserves"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_init",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "slot",
         "identifier": {
          "type": "Identifier",
          "name": "slot"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint40",
          "stateMutability": null
         },
         "name": "lastTimestamp",
         "identifier": {
          "type": "Identifier",
          "name": "lastTimestamp"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "reserves",
         "identifier": {
          "type": "Identifier",
          "name": "reserves"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "numberOfReserves",
            "identifier": {
             "type": "Identifier",
             "name": "numberOfReserves"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "reserves"
           },
           "memberName": "length"
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "bytes16",
              "stateMutability": null
             },
             "length": null
            },
            "name": "byteReserves",
            "identifier": {
             "type": "Identifier",
             "name": "byteReserves"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "NewExpression",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "bytes16",
              "stateMutability": null
             },
             "length": null
            }
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "numberOfReserves"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": null
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "Identifier",
            "name": "numberOfReserves"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": true
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "_reserve",
               "identifier": {
                "type": "Identifier",
                "name": "_reserve"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "reserves"
              },
              "index": {
               "type": "Identifier",
               "name": "i"
              }
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "Identifier",
               "name": "_reserve"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "ReturnStatement",
              "expression": null
             },
             "falseBody": null
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "byteReserves"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_reserve"
                },
                "memberName": "fromUIntToLog2"
               },
               "arguments": [],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "slot"
            },
            "memberName": "storeLastReserves"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "lastTimestamp"
            },
            {
             "type": "Identifier",
             "name": "reserves"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "numSlots",
            "identifier": {
             "type": "Identifier",
             "name": "numSlots"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getSlotsOffset"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "numberOfReserves"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "slot"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "slot",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "numSlots",
                "arguments": []
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "slot"
            },
            "memberName": "storeBytes16"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "byteReserves"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "readLastCappedReserves",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "well",
         "identifier": {
          "type": "Identifier",
          "name": "well"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "lastCappedReserves",
         "identifier": {
          "type": "Identifier",
          "name": "lastCappedReserves"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint8",
             "stateMutability": null
            },
            "name": "numberOfReserves",
            "identifier": {
             "type": "Identifier",
             "name": "numberOfReserves"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "TupleExpression",
            "components": [
             {
              "type": "Identifier",
              "name": "numberOfReserves"
             },
             null,
             {
              "type": "Identifier",
              "name": "lastCappedReserves"
             }
            ],
            "isArray": false
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "_getSlotForAddress"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "well"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "memberName": "readLastReserves"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "numberOfReserves"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "NotInitialized"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "readCappedReserves",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "well",
         "identifier": {
          "type": "Identifier",
          "name": "well"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "cappedReserves",
         "identifier": {
          "type": "Identifier",
          "name": "cappedReserves"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           null,
           {
            "type": "VariableDeclaration",
            "name": "capInterval",
            "identifier": {
             "type": "Identifier",
             "name": "capInterval"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "crp",
            "identifier": {
             "type": "Identifier",
             "name": "crp"
            },
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "CapReservesParameters"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "abi"
            },
            "memberName": "decode"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "data"
            },
            {
             "type": "TupleExpression",
             "components": [
              {
               "type": "ElementaryTypeName",
               "name": "bytes16",
               "stateMutability": null
              },
              {
               "type": "ElementaryTypeName",
               "name": "uint256",
               "stateMutability": null
              },
              {
               "type": "Identifier",
               "name": "CapReservesParameters"
              }
             ],
             "isArray": false
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "slot",
            "identifier": {
             "type": "Identifier",
             "name": "slot"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getSlotForAddress"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "well"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "currentReserves",
            "identifier": {
             "type": "Identifier",
             "name": "currentReserves"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "IWell"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "well"
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "getReserves"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint8",
             "stateMutability": null
            },
            "name": "numberOfReserves",
            "identifier": {
             "type": "Identifier",
             "name": "numberOfReserves"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint40",
             "stateMutability": null
            },
            "name": "lastTimestamp",
            "identifier": {
             "type": "Identifier",
             "name": "lastTimestamp"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "TupleExpression",
            "components": [
             {
              "type": "Identifier",
              "name": "numberOfReserves"
             },
             {
              "type": "Identifier",
              "name": "lastTimestamp"
             },
             {
              "type": "Identifier",
              "name": "cappedReserves"
             }
            ],
            "isArray": false
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "slot"
             },
             "memberName": "readLastReserves"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "numberOfReserves"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "NotInitialized"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "deltaTimestamp",
            "identifier": {
             "type": "Identifier",
             "name": "deltaTimestamp"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getDeltaTimestamp"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "lastTimestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "deltaTimestamp"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "Identifier",
              "name": "cappedReserves"
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "capExponent",
            "identifier": {
             "type": "Identifier",
             "name": "capExponent"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "calcCapExponent"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "deltaTimestamp"
            },
            {
             "type": "Identifier",
             "name": "capInterval"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "cappedReserves"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_capReserves"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "well"
             },
             {
              "type": "Identifier",
              "name": "cappedReserves"
             },
             {
              "type": "Identifier",
              "name": "currentReserves"
             },
             {
              "type": "Identifier",
              "name": "capExponent"
             },
             {
              "type": "Identifier",
              "name": "crp"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "_capReserves",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "well",
         "identifier": {
          "type": "Identifier",
          "name": "well"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "lastReserves",
         "identifier": {
          "type": "Identifier",
          "name": "lastReserves"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "reserves",
         "identifier": {
          "type": "Identifier",
          "name": "reserves"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "capExponent",
         "identifier": {
          "type": "Identifier",
          "name": "capExponent"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "CapReservesParameters"
         },
         "name": "crp",
         "identifier": {
          "type": "Identifier",
          "name": "crp"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "cappedReserves",
         "identifier": {
          "type": "Identifier",
          "name": "cappedReserves"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "Call"
            },
            "name": "wf",
            "identifier": {
             "type": "Identifier",
             "name": "wf"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "IWell"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "well"
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "wellFunction"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "IMultiFlowPumpWellFunction"
            },
            "name": "mfpWf",
            "identifier": {
             "type": "Identifier",
             "name": "mfpWf"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "IMultiFlowPumpWellFunction"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "wf"
             },
             "memberName": "target"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "cappedReserves"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_capLpTokenSupply"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "lastReserves"
             },
             {
              "type": "Identifier",
              "name": "reserves"
             },
             {
              "type": "Identifier",
              "name": "capExponent"
             },
             {
              "type": "Identifier",
              "name": "crp"
             },
             {
              "type": "Identifier",
              "name": "mfpWf"
             },
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "wf"
              },
              "memberName": "data"
             },
             {
              "type": "BooleanLiteral",
              "value": true
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "cappedReserves"
            },
            "memberName": "length"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "cappedReserves"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "_capRates"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "lastReserves"
                },
                {
                 "type": "Identifier",
                 "name": "reserves"
                },
                {
                 "type": "Identifier",
                 "name": "capExponent"
                },
                {
                 "type": "Identifier",
                 "name": "crp"
                },
                {
                 "type": "Identifier",
                 "name": "mfpWf"
                },
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "wf"
                 },
                 "memberName": "data"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "cappedReserves"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "_capLpTokenSupply"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "lastReserves"
                },
                {
                 "type": "Identifier",
                 "name": "cappedReserves"
                },
                {
                 "type": "Identifier",
                 "name": "capExponent"
                },
                {
                 "type": "Identifier",
                 "name": "crp"
                },
                {
                 "type": "Identifier",
                 "name": "mfpWf"
                },
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "wf"
                 },
                 "memberName": "data"
                },
                {
                 "type": "BooleanLiteral",
                 "value": false
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "cappedReserves"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "_capRates"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "lastReserves"
                },
                {
                 "type": "Identifier",
                 "name": "cappedReserves"
                },
                {
                 "type": "Identifier",
                 "name": "capExponent"
                },
                {
                 "type": "Identifier",
                 "name": "crp"
                },
                {
                 "type": "Identifier",
                 "name": "mfpWf"
                },
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "wf"
                 },
                 "memberName": "data"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "_capRates",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "lastReserves",
         "identifier": {
          "type": "Identifier",
          "name": "lastReserves"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "reserves",
         "identifier": {
          "type": "Identifier",
          "name": "reserves"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "capExponent",
         "identifier": {
          "type": "Identifier",
          "name": "capExponent"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "CapReservesParameters"
         },
         "name": "crp",
         "identifier": {
          "type": "Identifier",
          "name": "crp"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IMultiFlowPumpWellFunction"
         },
         "name": "mfpWf",
         "identifier": {
          "type": "Identifier",
          "name": "mfpWf"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "cappedReserves",
         "identifier": {
          "type": "Identifier",
          "name": "cappedReserves"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "cappedReserves"
           },
           "right": {
            "type": "Identifier",
            "name": "reserves"
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "name": "i",
            "identifier": {
             "type": "Identifier",
             "name": "i"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "j",
            "identifier": {
             "type": "Identifier",
             "name": "j"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "Conditional",
           "condition": {
            "type": "BinaryOperation",
            "operator": ">",
            "left": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "lastReserves"
             },
             "index": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            "right": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "lastReserves"
             },
             "index": {
              "type": "NumberLiteral",
              "number": "1",
              "subdenomination": null
             }
            }
           },
           "trueExpression": {
            "type": "TupleExpression",
            "components": [
             {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             },
             {
              "type": "NumberLiteral",
              "number": "1",
              "subdenomination": null
             }
            ],
            "isArray": false
           },
           "falseExpression": {
            "type": "TupleExpression",
            "components": [
             {
              "type": "NumberLiteral",
              "number": "1",
              "subdenomination": null
             },
             {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            ],
            "isArray": false
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "CapRatesVariables"
            },
            "name": "crv",
            "identifier": {
             "type": "Identifier",
             "name": "crv"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "crv"
            },
            "memberName": "rLast"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "mfpWf"
             },
             "memberName": "calcRate"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "lastReserves"
             },
             {
              "type": "Identifier",
              "name": "i"
             },
             {
              "type": "Identifier",
              "name": "j"
             },
             {
              "type": "Identifier",
              "name": "data"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "crv"
            },
            "memberName": "r"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "mfpWf"
             },
             "memberName": "calcRate"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "cappedReserves"
             },
             {
              "type": "Identifier",
              "name": "i"
             },
             {
              "type": "Identifier",
              "name": "j"
             },
             {
              "type": "Identifier",
              "name": "data"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "crv"
            },
            "memberName": "r"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "crv"
            },
            "memberName": "rLast"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "bytes16",
                "stateMutability": null
               },
               "name": "tempExp",
               "identifier": {
                "type": "Identifier",
                "name": "tempExp"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "ABDKMathQuad"
                  },
                  "memberName": "ONE"
                 },
                 "memberName": "add"
                },
                "arguments": [
                 {
                  "type": "IndexAccess",
                  "base": {
                   "type": "IndexAccess",
                   "base": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "crp"
                    },
                    "memberName": "maxRateChanges"
                   },
                   "index": {
                    "type": "Identifier",
                    "name": "i"
                   }
                  },
                  "index": {
                   "type": "Identifier",
                   "name": "j"
                  }
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "memberName": "powu"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "capExponent"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "crv"
               },
               "memberName": "rLimit"
              },
              "right": {
               "type": "Conditional",
               "condition": {
                "type": "BinaryOperation",
                "operator": "!=",
                "left": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "tempExp"
                  },
                  "memberName": "cmp"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "MAX_CONVERT_TO_128x128"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                },
                "right": {
                 "type": "UnaryOperation",
                 "operator": "-",
                 "subExpression": {
                  "type": "NumberLiteral",
                  "number": "1",
                  "subdenomination": null
                 },
                 "isPrefix": true
                }
               },
               "trueExpression": {
                "type": "BinaryOperation",
                "operator": "=",
                "left": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "crv"
                 },
                 "memberName": "rLimit"
                },
                "right": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "Identifier",
                   "name": "type"
                  },
                  "arguments": [
                   {
                    "type": "ElementaryTypeName",
                    "name": "uint256",
                    "stateMutability": null
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 },
                 "memberName": "max"
                }
               },
               "falseExpression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "crv"
                  },
                  "memberName": "rLast"
                 },
                 "memberName": "mulDivOrMax"
                },
                "arguments": [
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "tempExp"
                     },
                     "memberName": "to128x128"
                    },
                    "arguments": [],
                    "names": [],
                    "identifiers": []
                   },
                   "memberName": "toUint256"
                  },
                  "arguments": [],
                  "names": [],
                  "identifiers": []
                 },
                 {
                  "type": "Identifier",
                  "name": "CAP_PRECISION2"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              }
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": ">",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "crv"
               },
               "memberName": "r"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "crv"
               },
               "memberName": "rLimit"
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "calcReservesAtRatioSwap"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "mfpWf"
                  },
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "crv"
                   },
                   "memberName": "rLimit"
                  },
                  {
                   "type": "Identifier",
                   "name": "cappedReserves"
                  },
                  {
                   "type": "Identifier",
                   "name": "i"
                  },
                  {
                   "type": "Identifier",
                   "name": "j"
                  },
                  {
                   "type": "Identifier",
                   "name": "data"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": null
            }
           ]
          },
          "falseBody": {
           "type": "IfStatement",
           "condition": {
            "type": "BinaryOperation",
            "operator": "<",
            "left": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "crv"
             },
             "memberName": "r"
            },
            "right": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "crv"
             },
             "memberName": "rLast"
            }
           },
           "trueBody": {
            "type": "Block",
            "statements": [
             {
              "type": "VariableDeclarationStatement",
              "variables": [
               {
                "type": "VariableDeclaration",
                "typeName": {
                 "type": "ElementaryTypeName",
                 "name": "bytes16",
                 "stateMutability": null
                },
                "name": "tempExp",
                "identifier": {
                 "type": "Identifier",
                 "name": "tempExp"
                },
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false,
                "expression": null
               }
              ],
              "initialValue": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "ABDKMathQuad"
                   },
                   "memberName": "ONE"
                  },
                  "memberName": "div"
                 },
                 "arguments": [
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "ABDKMathQuad"
                     },
                     "memberName": "ONE"
                    },
                    "memberName": "add"
                   },
                   "arguments": [
                    {
                     "type": "IndexAccess",
                     "base": {
                      "type": "IndexAccess",
                      "base": {
                       "type": "MemberAccess",
                       "expression": {
                        "type": "Identifier",
                        "name": "crp"
                       },
                       "memberName": "maxRateChanges"
                      },
                      "index": {
                       "type": "Identifier",
                       "name": "j"
                      }
                     },
                     "index": {
                      "type": "Identifier",
                      "name": "i"
                     }
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 ],
                 "names": [],
                 "identifiers": []
                },
                "memberName": "powu"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "capExponent"
                }
               ],
               "names": [],
               "identifiers": []
              }
             },
             {
              "type": "IfStatement",
              "condition": {
               "type": "BinaryOperation",
               "operator": "!=",
               "left": {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "tempExp"
                 },
                 "memberName": "cmp"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "MAX_CONVERT_TO_128x128"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "right": {
                "type": "UnaryOperation",
                "operator": "-",
                "subExpression": {
                 "type": "NumberLiteral",
                 "number": "1",
                 "subdenomination": null
                },
                "isPrefix": true
               }
              },
              "trueBody": {
               "type": "Block",
               "statements": [
                {
                 "type": "ExpressionStatement",
                 "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "crv"
                   },
                   "memberName": "rLimit"
                  },
                  "right": {
                   "type": "NumberLiteral",
                   "number": "0",
                   "subdenomination": null
                  }
                 }
                }
               ]
              },
              "falseBody": {
               "type": "Block",
               "statements": [
                {
                 "type": "ExpressionStatement",
                 "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "crv"
                   },
                   "memberName": "rLimit"
                  },
                  "right": {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "crv"
                     },
                     "memberName": "rLast"
                    },
                    "memberName": "mulDiv"
                   },
                   "arguments": [
                    {
                     "type": "FunctionCall",
                     "expression": {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "FunctionCall",
                       "expression": {
                        "type": "MemberAccess",
                        "expression": {
                         "type": "Identifier",
                         "name": "tempExp"
                        },
                        "memberName": "to128x128"
                       },
                       "arguments": [],
                       "names": [],
                       "identifiers": []
                      },
                      "memberName": "toUint256"
                     },
                     "arguments": [],
                     "names": [],
                     "identifiers": []
                    },
                    {
                     "type": "Identifier",
                     "name": "CAP_PRECISION2"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 }
                }
               ]
              }
             },
             {
              "type": "IfStatement",
              "condition": {
               "type": "BinaryOperation",
               "operator": "<",
               "left": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "crv"
                },
                "memberName": "r"
               },
               "right": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "crv"
                },
                "memberName": "rLimit"
               }
              },
              "trueBody": {
               "type": "Block",
               "statements": [
                {
                 "type": "ExpressionStatement",
                 "expression": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "Identifier",
                   "name": "calcReservesAtRatioSwap"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "mfpWf"
                   },
                   {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "crv"
                    },
                    "memberName": "rLimit"
                   },
                   {
                    "type": "Identifier",
                    "name": "cappedReserves"
                   },
                   {
                    "type": "Identifier",
                    "name": "i"
                   },
                   {
                    "type": "Identifier",
                    "name": "j"
                   },
                   {
                    "type": "Identifier",
                    "name": "data"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                }
               ]
              },
              "falseBody": null
             }
            ]
           },
           "falseBody": null
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "_capLpTokenSupply",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "lastReserves",
         "identifier": {
          "type": "Identifier",
          "name": "lastReserves"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "reserves",
         "identifier": {
          "type": "Identifier",
          "name": "reserves"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "capExponent",
         "identifier": {
          "type": "Identifier",
          "name": "capExponent"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "CapReservesParameters"
         },
         "name": "crp",
         "identifier": {
          "type": "Identifier",
          "name": "crp"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IMultiFlowPumpWellFunction"
         },
         "name": "mfpWf",
         "identifier": {
          "type": "Identifier",
          "name": "mfpWf"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "returnIfBelowMin",
         "identifier": {
          "type": "Identifier",
          "name": "returnIfBelowMin"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "cappedReserves",
         "identifier": {
          "type": "Identifier",
          "name": "cappedReserves"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "cappedReserves"
           },
           "right": {
            "type": "Identifier",
            "name": "reserves"
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "lastLpTokenSupply",
            "identifier": {
             "type": "Identifier",
             "name": "lastLpTokenSupply"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "tryCalcLpTokenSupply"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "mfpWf"
            },
            {
             "type": "Identifier",
             "name": "lastReserves"
            },
            {
             "type": "Identifier",
             "name": "data"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "lpTokenSupply",
            "identifier": {
             "type": "Identifier",
             "name": "lpTokenSupply"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "tryCalcLpTokenSupply"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "mfpWf"
            },
            {
             "type": "Identifier",
             "name": "cappedReserves"
            },
            {
             "type": "Identifier",
             "name": "data"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "lpTokenSupply"
           },
           "right": {
            "type": "Identifier",
            "name": "lastLpTokenSupply"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "bytes16",
                "stateMutability": null
               },
               "name": "tempExp",
               "identifier": {
                "type": "Identifier",
                "name": "tempExp"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "ABDKMathQuad"
                  },
                  "memberName": "ONE"
                 },
                 "memberName": "add"
                },
                "arguments": [
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "crp"
                  },
                  "memberName": "maxLpSupplyIncrease"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "memberName": "powu"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "capExponent"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "maxLpTokenSupply",
               "identifier": {
                "type": "Identifier",
                "name": "maxLpTokenSupply"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "Conditional",
              "condition": {
               "type": "BinaryOperation",
               "operator": "!=",
               "left": {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "tempExp"
                 },
                 "memberName": "cmp"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "MAX_CONVERT_TO_128x128"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "right": {
                "type": "UnaryOperation",
                "operator": "-",
                "subExpression": {
                 "type": "NumberLiteral",
                 "number": "1",
                 "subdenomination": null
                },
                "isPrefix": true
               }
              },
              "trueExpression": {
               "type": "MemberAccess",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "type"
                },
                "arguments": [
                 {
                  "type": "ElementaryTypeName",
                  "name": "uint256",
                  "stateMutability": null
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "memberName": "max"
              },
              "falseExpression": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "lastLpTokenSupply"
                },
                "memberName": "mulDiv"
               },
               "arguments": [
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "tempExp"
                    },
                    "memberName": "to128x128"
                   },
                   "arguments": [],
                   "names": [],
                   "identifiers": []
                  },
                  "memberName": "toUint256"
                 },
                 "arguments": [],
                 "names": [],
                 "identifiers": []
                },
                {
                 "type": "Identifier",
                 "name": "CAP_PRECISION2"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": ">",
              "left": {
               "type": "Identifier",
               "name": "lpTokenSupply"
              },
              "right": {
               "type": "Identifier",
               "name": "maxLpTokenSupply"
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "IfStatement",
                "condition": {
                 "type": "Identifier",
                 "name": "returnIfBelowMin"
                },
                "trueBody": {
                 "type": "ReturnStatement",
                 "expression": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "NewExpression",
                   "typeName": {
                    "type": "ArrayTypeName",
                    "baseTypeName": {
                     "type": "ElementaryTypeName",
                     "name": "uint256",
                     "stateMutability": null
                    },
                    "length": null
                   }
                  },
                  "arguments": [
                   {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                },
                "falseBody": null
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "cappedReserves"
                 },
                 "right": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "Identifier",
                   "name": "tryCalcLPTokenUnderlying"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "mfpWf"
                   },
                   {
                    "type": "Identifier",
                    "name": "maxLpTokenSupply"
                   },
                   {
                    "type": "Identifier",
                    "name": "cappedReserves"
                   },
                   {
                    "type": "Identifier",
                    "name": "lpTokenSupply"
                   },
                   {
                    "type": "Identifier",
                    "name": "data"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                }
               }
              ]
             },
             "falseBody": null
            }
           ]
          },
          "falseBody": {
           "type": "IfStatement",
           "condition": {
            "type": "BinaryOperation",
            "operator": "<",
            "left": {
             "type": "Identifier",
             "name": "lpTokenSupply"
            },
            "right": {
             "type": "Identifier",
             "name": "lastLpTokenSupply"
            }
           },
           "trueBody": {
            "type": "Block",
            "statements": [
             {
              "type": "VariableDeclarationStatement",
              "variables": [
               {
                "type": "VariableDeclaration",
                "typeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "name": "minLpTokenSupply",
                "identifier": {
                 "type": "Identifier",
                 "name": "minLpTokenSupply"
                },
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false,
                "expression": null
               }
              ],
              "initialValue": {
               "type": "BinaryOperation",
               "operator": "/",
               "left": {
                "type": "BinaryOperation",
                "operator": "*",
                "left": {
                 "type": "Identifier",
                 "name": "lastLpTokenSupply"
                },
                "right": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "FunctionCall",
                     "expression": {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "TupleExpression",
                       "components": [
                        {
                         "type": "FunctionCall",
                         "expression": {
                          "type": "MemberAccess",
                          "expression": {
                           "type": "MemberAccess",
                           "expression": {
                            "type": "Identifier",
                            "name": "ABDKMathQuad"
                           },
                           "memberName": "ONE"
                          },
                          "memberName": "sub"
                         },
                         "arguments": [
                          {
                           "type": "MemberAccess",
                           "expression": {
                            "type": "Identifier",
                            "name": "crp"
                           },
                           "memberName": "maxLpSupplyDecrease"
                          }
                         ],
                         "names": [],
                         "identifiers": []
                        }
                       ],
                       "isArray": false
                      },
                      "memberName": "powu"
                     },
                     "arguments": [
                      {
                       "type": "Identifier",
                       "name": "capExponent"
                      }
                     ],
                     "names": [],
                     "identifiers": []
                    },
                    "memberName": "to128x128"
                   },
                   "arguments": [],
                   "names": [],
                   "identifiers": []
                  },
                  "memberName": "toUint256"
                 },
                 "arguments": [],
                 "names": [],
                 "identifiers": []
                }
               },
               "right": {
                "type": "Identifier",
                "name": "CAP_PRECISION2"
               }
              }
             },
             {
              "type": "IfStatement",
              "condition": {
               "type": "BinaryOperation",
               "operator": "<",
               "left": {
                "type": "Identifier",
                "name": "lpTokenSupply"
               },
               "right": {
                "type": "Identifier",
                "name": "minLpTokenSupply"
               }
              },
              "trueBody": {
               "type": "Block",
               "statements": [
                {
                 "type": "ExpressionStatement",
                 "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                   "type": "Identifier",
                   "name": "cappedReserves"
                  },
                  "right": {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "Identifier",
                    "name": "tryCalcLPTokenUnderlying"
                   },
                   "arguments": [
                    {
                     "type": "Identifier",
                     "name": "mfpWf"
                    },
                    {
                     "type": "Identifier",
                     "name": "minLpTokenSupply"
                    },
                    {
                     "type": "Identifier",
                     "name": "cappedReserves"
                    },
                    {
                     "type": "Identifier",
                     "name": "lpTokenSupply"
                    },
                    {
                     "type": "Identifier",
                     "name": "data"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 }
                }
               ]
              },
              "falseBody": null
             }
            ]
           },
           "falseBody": null
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "readLastInstantaneousReserves",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "well",
         "identifier": {
          "type": "Identifier",
          "name": "well"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "emaReserves",
         "identifier": {
          "type": "Identifier",
          "name": "emaReserves"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "slot",
            "identifier": {
             "type": "Identifier",
             "name": "slot"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getSlotForAddress"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "well"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint8",
             "stateMutability": null
            },
            "name": "numberOfReserves",
            "identifier": {
             "type": "Identifier",
             "name": "numberOfReserves"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "slot"
            },
            "memberName": "readNumberOfReserves"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "numberOfReserves"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "NotInitialized"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "offset",
            "identifier": {
             "type": "Identifier",
             "name": "offset"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getSlotsOffset"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "numberOfReserves"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "slot"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "slot",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "offset",
                "arguments": []
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "bytes16",
              "stateMutability": null
             },
             "length": null
            },
            "name": "byteReserves",
            "identifier": {
             "type": "Identifier",
             "name": "byteReserves"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "slot"
            },
            "memberName": "readBytes16"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "numberOfReserves"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "emaReserves"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "NewExpression",
             "typeName": {
              "type": "ArrayTypeName",
              "baseTypeName": {
               "type": "ElementaryTypeName",
               "name": "uint256",
               "stateMutability": null
              },
              "length": null
             }
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "numberOfReserves"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": null
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "Identifier",
            "name": "numberOfReserves"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": true
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "emaReserves"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "byteReserves"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "i"
                 }
                },
                "memberName": "pow_2ToUInt"
               },
               "arguments": [],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "readInstantaneousReserves",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "well",
         "identifier": {
          "type": "Identifier",
          "name": "well"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "emaReserves",
         "identifier": {
          "type": "Identifier",
          "name": "emaReserves"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "name": "alpha",
            "identifier": {
             "type": "Identifier",
             "name": "alpha"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes16",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "capInterval",
            "identifier": {
             "type": "Identifier",
             "name": "capInterval"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "crp",
            "identifier": {
             "type": "Identifier",
             "name": "crp"
            },
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "CapReservesParameters"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "abi"
            },
            "memberName": "decode"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "data"
            },
            {
             "type": "TupleExpression",
             "components": [
              {
               "type": "ElementaryTypeName",
               "name": "bytes16",
               "stateMutability": null
              },
              {
               "type": "ElementaryTypeName",
               "name": "uint256",
               "stateMutability": null
              },
              {
               "type": "Identifier",
               "name": "CapReservesParameters"
              }
             ],
             "isArray": false
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "slot",
            "identifier": {
             "type": "Identifier",
             "name": "slot"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getSlotForAddress"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "well"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "reserves",
            "identifier": {
             "type": "Identifier",
             "name": "reserves"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "IWell"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "well"
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "getReserves"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "name": "numberOfReserves",
            "identifier": {
             "type": "Identifier",
             "name": "numberOfReserves"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint8",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "lastTimestamp",
            "identifier": {
             "type": "Identifier",
             "name": "lastTimestamp"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint40",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "lastReserves",
            "identifier": {
             "type": "Identifier",
             "name": "lastReserves"
            },
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "slot"
            },
            "memberName": "readLastReserves"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "numberOfReserves"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "NotInitialized"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "offset",
            "identifier": {
             "type": "Identifier",
             "name": "offset"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getSlotsOffset"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "numberOfReserves"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "slot"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "slot",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "offset",
                "arguments": []
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "bytes16",
              "stateMutability": null
             },
             "length": null
            },
            "name": "lastEmaReserves",
            "identifier": {
             "type": "Identifier",
             "name": "lastEmaReserves"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "slot"
            },
            "memberName": "readBytes16"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "numberOfReserves"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "emaReserves"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "NewExpression",
             "typeName": {
              "type": "ArrayTypeName",
              "baseTypeName": {
               "type": "ElementaryTypeName",
               "name": "uint256",
               "stateMutability": null
              },
              "length": null
             }
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "numberOfReserves"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "deltaTimestamp",
            "identifier": {
             "type": "Identifier",
             "name": "deltaTimestamp"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getDeltaTimestamp"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "lastTimestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "deltaTimestamp"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ForStatement",
             "initExpression": {
              "type": "VariableDeclarationStatement",
              "variables": [
               {
                "type": "VariableDeclaration",
                "typeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "name": "i",
                "identifier": {
                 "type": "Identifier",
                 "name": "i"
                },
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false,
                "expression": null
               }
              ],
              "initialValue": null
             },
             "conditionExpression": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "i"
              },
              "right": {
               "type": "Identifier",
               "name": "numberOfReserves"
              }
             },
             "loopExpression": {
              "type": "ExpressionStatement",
              "expression": {
               "type": "UnaryOperation",
               "operator": "++",
               "subExpression": {
                "type": "Identifier",
                "name": "i"
               },
               "isPrefix": true
              }
             },
             "body": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "emaReserves"
                  },
                  "index": {
                   "type": "Identifier",
                   "name": "i"
                  }
                 },
                 "right": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "IndexAccess",
                    "base": {
                     "type": "Identifier",
                     "name": "lastEmaReserves"
                    },
                    "index": {
                     "type": "Identifier",
                     "name": "i"
                    }
                   },
                   "memberName": "pow_2ToUInt"
                  },
                  "arguments": [],
                  "names": [],
                  "identifiers": []
                 }
                }
               }
              ]
             }
            },
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "Identifier",
              "name": "emaReserves"
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "capExponent",
            "identifier": {
             "type": "Identifier",
             "name": "capExponent"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "calcCapExponent"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "deltaTimestamp"
            },
            {
             "type": "Identifier",
             "name": "capInterval"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "lastReserves"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_capReserves"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "well"
             },
             {
              "type": "Identifier",
              "name": "lastReserves"
             },
             {
              "type": "Identifier",
              "name": "reserves"
             },
             {
              "type": "Identifier",
              "name": "capExponent"
             },
             {
              "type": "Identifier",
              "name": "crp"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes16",
             "stateMutability": null
            },
            "name": "alphaN",
            "identifier": {
             "type": "Identifier",
             "name": "alphaN"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "alpha"
            },
            "memberName": "powu"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "deltaTimestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": null
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "Identifier",
            "name": "numberOfReserves"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": true
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "emaReserves"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "FunctionCall",
                     "expression": {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "IndexAccess",
                       "base": {
                        "type": "Identifier",
                        "name": "lastReserves"
                       },
                       "index": {
                        "type": "Identifier",
                        "name": "i"
                       }
                      },
                      "memberName": "fromUIntToLog2"
                     },
                     "arguments": [],
                     "names": [],
                     "identifiers": []
                    },
                    "memberName": "mul"
                   },
                   "arguments": [
                    {
                     "type": "TupleExpression",
                     "components": [
                      {
                       "type": "FunctionCall",
                       "expression": {
                        "type": "MemberAccess",
                        "expression": {
                         "type": "MemberAccess",
                         "expression": {
                          "type": "Identifier",
                          "name": "ABDKMathQuad"
                         },
                         "memberName": "ONE"
                        },
                        "memberName": "sub"
                       },
                       "arguments": [
                        {
                         "type": "Identifier",
                         "name": "alphaN"
                        }
                       ],
                       "names": [],
                       "identifiers": []
                      }
                     ],
                     "isArray": false
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  },
                  "memberName": "add"
                 },
                 "arguments": [
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "IndexAccess",
                     "base": {
                      "type": "Identifier",
                      "name": "lastEmaReserves"
                     },
                     "index": {
                      "type": "Identifier",
                      "name": "i"
                     }
                    },
                    "memberName": "mul"
                   },
                   "arguments": [
                    {
                     "type": "Identifier",
                     "name": "alphaN"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 ],
                 "names": [],
                 "identifiers": []
                },
                "memberName": "pow_2ToUInt"
               },
               "arguments": [],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "readLastCumulativeReserves",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "well",
         "identifier": {
          "type": "Identifier",
          "name": "well"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "bytes16",
           "stateMutability": null
          },
          "length": null
         },
         "name": "cumulativeReserves",
         "identifier": {
          "type": "Identifier",
          "name": "cumulativeReserves"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "slot",
            "identifier": {
             "type": "Identifier",
             "name": "slot"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getSlotForAddress"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "well"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint8",
             "stateMutability": null
            },
            "name": "numberOfReserves",
            "identifier": {
             "type": "Identifier",
             "name": "numberOfReserves"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "slot"
            },
            "memberName": "readNumberOfReserves"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "numberOfReserves"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "NotInitialized"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "offset",
            "identifier": {
             "type": "Identifier",
             "name": "offset"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "BinaryOperation",
           "operator": "<<",
           "left": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_getSlotsOffset"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "numberOfReserves"
             }
            ],
            "names": [],
            "identifiers": []
           },
           "right": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          }
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "slot"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "slot",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "offset",
                "arguments": []
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "cumulativeReserves"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "slot"
             },
             "memberName": "readBytes16"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "numberOfReserves"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "readCumulativeReserves",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "well",
         "identifier": {
          "type": "Identifier",
          "name": "well"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "cumulativeReserves",
         "identifier": {
          "type": "Identifier",
          "name": "cumulativeReserves"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "bytes16",
              "stateMutability": null
             },
             "length": null
            },
            "name": "byteCumulativeReserves",
            "identifier": {
             "type": "Identifier",
             "name": "byteCumulativeReserves"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_readCumulativeReserves"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "well"
            },
            {
             "type": "Identifier",
             "name": "data"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "cumulativeReserves"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "abi"
             },
             "memberName": "encode"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "byteCumulativeReserves"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "_readCumulativeReserves",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "well",
         "identifier": {
          "type": "Identifier",
          "name": "well"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "bytes16",
           "stateMutability": null
          },
          "length": null
         },
         "name": "cumulativeReserves",
         "identifier": {
          "type": "Identifier",
          "name": "cumulativeReserves"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           null,
           {
            "type": "VariableDeclaration",
            "name": "capInterval",
            "identifier": {
             "type": "Identifier",
             "name": "capInterval"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "crp",
            "identifier": {
             "type": "Identifier",
             "name": "crp"
            },
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "CapReservesParameters"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "abi"
            },
            "memberName": "decode"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "data"
            },
            {
             "type": "TupleExpression",
             "components": [
              {
               "type": "ElementaryTypeName",
               "name": "bytes16",
               "stateMutability": null
              },
              {
               "type": "ElementaryTypeName",
               "name": "uint256",
               "stateMutability": null
              },
              {
               "type": "Identifier",
               "name": "CapReservesParameters"
              }
             ],
             "isArray": false
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "slot",
            "identifier": {
             "type": "Identifier",
             "name": "slot"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getSlotForAddress"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "well"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "reserves",
            "identifier": {
             "type": "Identifier",
             "name": "reserves"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "IWell"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "well"
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "getReserves"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "name": "numberOfReserves",
            "identifier": {
             "type": "Identifier",
             "name": "numberOfReserves"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint8",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "lastTimestamp",
            "identifier": {
             "type": "Identifier",
             "name": "lastTimestamp"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint40",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "lastReserves",
            "identifier": {
             "type": "Identifier",
             "name": "lastReserves"
            },
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "slot"
            },
            "memberName": "readLastReserves"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "numberOfReserves"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "NotInitialized"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "offset",
            "identifier": {
             "type": "Identifier",
             "name": "offset"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "BinaryOperation",
           "operator": "<<",
           "left": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_getSlotsOffset"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "numberOfReserves"
             }
            ],
            "names": [],
            "identifiers": []
           },
           "right": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          }
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "slot"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "slot",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "offset",
                "arguments": []
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "cumulativeReserves"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "slot"
             },
             "memberName": "readBytes16"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "numberOfReserves"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "deltaTimestamp",
            "identifier": {
             "type": "Identifier",
             "name": "deltaTimestamp"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getDeltaTimestamp"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "lastTimestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "deltaTimestamp"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "Identifier",
              "name": "cumulativeReserves"
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes16",
             "stateMutability": null
            },
            "name": "deltaTimestampBytes",
            "identifier": {
             "type": "Identifier",
             "name": "deltaTimestampBytes"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "deltaTimestamp"
            },
            "memberName": "fromUInt"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "capExponent",
            "identifier": {
             "type": "Identifier",
             "name": "capExponent"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "calcCapExponent"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "deltaTimestamp"
            },
            {
             "type": "Identifier",
             "name": "capInterval"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "lastReserves"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_capReserves"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "well"
             },
             {
              "type": "Identifier",
              "name": "lastReserves"
             },
             {
              "type": "Identifier",
              "name": "reserves"
             },
             {
              "type": "Identifier",
              "name": "capExponent"
             },
             {
              "type": "Identifier",
              "name": "crp"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": null
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "cumulativeReserves"
            },
            "memberName": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": true
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "cumulativeReserves"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "cumulativeReserves"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "i"
                 }
                },
                "memberName": "add"
               },
               "arguments": [
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "IndexAccess",
                     "base": {
                      "type": "Identifier",
                      "name": "lastReserves"
                     },
                     "index": {
                      "type": "Identifier",
                      "name": "i"
                     }
                    },
                    "memberName": "fromUIntToLog2"
                   },
                   "arguments": [],
                   "names": [],
                   "identifiers": []
                  },
                  "memberName": "mul"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "deltaTimestampBytes"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "readTwaReserves",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "well",
         "identifier": {
          "type": "Identifier",
          "name": "well"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "startCumulativeReserves",
         "identifier": {
          "type": "Identifier",
          "name": "startCumulativeReserves"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "startTimestamp",
         "identifier": {
          "type": "Identifier",
          "name": "startTimestamp"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "twaReserves",
         "identifier": {
          "type": "Identifier",
          "name": "twaReserves"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "cumulativeReserves",
         "identifier": {
          "type": "Identifier",
          "name": "cumulativeReserves"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "bytes16",
              "stateMutability": null
             },
             "length": null
            },
            "name": "byteCumulativeReserves",
            "identifier": {
             "type": "Identifier",
             "name": "byteCumulativeReserves"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_readCumulativeReserves"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "well"
            },
            {
             "type": "Identifier",
             "name": "data"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "bytes16",
              "stateMutability": null
             },
             "length": null
            },
            "name": "byteStartCumulativeReserves",
            "identifier": {
             "type": "Identifier",
             "name": "byteStartCumulativeReserves"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "abi"
            },
            "memberName": "decode"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "startCumulativeReserves"
            },
            {
             "type": "TupleExpression",
             "components": [
              {
               "type": "ArrayTypeName",
               "baseTypeName": {
                "type": "ElementaryTypeName",
                "name": "bytes16",
                "stateMutability": null
               },
               "length": null
              }
             ],
             "isArray": false
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "twaReserves"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "NewExpression",
             "typeName": {
              "type": "ArrayTypeName",
              "baseTypeName": {
               "type": "ElementaryTypeName",
               "name": "uint256",
               "stateMutability": null
              },
              "length": null
             }
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "byteCumulativeReserves"
              },
              "memberName": "length"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes16",
             "stateMutability": null
            },
            "name": "deltaTimestamp",
            "identifier": {
             "type": "Identifier",
             "name": "deltaTimestamp"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "_getDeltaTimestamp"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "uint40",
                "stateMutability": null
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "startTimestamp"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "fromUInt"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "deltaTimestamp"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "ElementaryTypeName",
             "name": "bytes16",
             "stateMutability": null
            },
            "arguments": [
             {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "NoTimePassed"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": null
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "byteCumulativeReserves"
            },
            "memberName": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": true
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "twaReserves"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "TupleExpression",
                   "components": [
                    {
                     "type": "FunctionCall",
                     "expression": {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "IndexAccess",
                       "base": {
                        "type": "Identifier",
                        "name": "byteCumulativeReserves"
                       },
                       "index": {
                        "type": "Identifier",
                        "name": "i"
                       }
                      },
                      "memberName": "sub"
                     },
                     "arguments": [
                      {
                       "type": "IndexAccess",
                       "base": {
                        "type": "Identifier",
                        "name": "byteStartCumulativeReserves"
                       },
                       "index": {
                        "type": "Identifier",
                        "name": "i"
                       }
                      }
                     ],
                     "names": [],
                     "identifiers": []
                    }
                   ],
                   "isArray": false
                  },
                  "memberName": "div"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "deltaTimestamp"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                },
                "memberName": "pow_2ToUInt"
               },
               "arguments": [],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "cumulativeReserves"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "abi"
             },
             "memberName": "encode"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "byteCumulativeReserves"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "calcCapExponent",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "deltaTimestamp",
         "identifier": {
          "type": "Identifier",
          "name": "deltaTimestamp"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "capInterval",
         "identifier": {
          "type": "Identifier",
          "name": "capInterval"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "capExponent",
         "identifier": {
          "type": "Identifier",
          "name": "capExponent"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "capExponent"
           },
           "right": {
            "type": "TupleExpression",
            "components": [
             {
              "type": "BinaryOperation",
              "operator": "+",
              "left": {
               "type": "BinaryOperation",
               "operator": "/",
               "left": {
                "type": "TupleExpression",
                "components": [
                 {
                  "type": "BinaryOperation",
                  "operator": "-",
                  "left": {
                   "type": "Identifier",
                   "name": "deltaTimestamp"
                  },
                  "right": {
                   "type": "NumberLiteral",
                   "number": "1",
                   "subdenomination": null
                  }
                 }
                ],
                "isArray": false
               },
               "right": {
                "type": "Identifier",
                "name": "capInterval"
               }
              },
              "right": {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              }
             }
            ],
            "isArray": false
           }
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "calcReservesAtRatioSwap",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IMultiFlowPumpWellFunction"
         },
         "name": "mfpWf",
         "identifier": {
          "type": "Identifier",
          "name": "mfpWf"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "rLimit",
         "identifier": {
          "type": "Identifier",
          "name": "rLimit"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "reserves",
         "identifier": {
          "type": "Identifier",
          "name": "reserves"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "i",
         "identifier": {
          "type": "Identifier",
          "name": "i"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "j",
         "identifier": {
          "type": "Identifier",
          "name": "j"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "ratios",
            "identifier": {
             "type": "Identifier",
             "name": "ratios"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "NewExpression",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            }
           },
           "arguments": [
            {
             "type": "NumberLiteral",
             "number": "2",
             "subdenomination": null
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "ratios"
            },
            "index": {
             "type": "Identifier",
             "name": "i"
            }
           },
           "right": {
            "type": "Identifier",
            "name": "rLimit"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "ratios"
            },
            "index": {
             "type": "Identifier",
             "name": "j"
            }
           },
           "right": {
            "type": "Identifier",
            "name": "CAP_PRECISION"
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "cappedReserveI",
            "identifier": {
             "type": "Identifier",
             "name": "cappedReserveI"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "Math"
            },
            "memberName": "max"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "tryCalcReserveAtRatioSwap"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "mfpWf"
              },
              {
               "type": "Identifier",
               "name": "reserves"
              },
              {
               "type": "Identifier",
               "name": "i"
              },
              {
               "type": "Identifier",
               "name": "ratios"
              },
              {
               "type": "Identifier",
               "name": "data"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "reserves"
            },
            "index": {
             "type": "Identifier",
             "name": "j"
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "Math"
             },
             "memberName": "max"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "tryCalcReserveAtRatioSwap"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "mfpWf"
               },
               {
                "type": "Identifier",
                "name": "reserves"
               },
               {
                "type": "Identifier",
                "name": "j"
               },
               {
                "type": "Identifier",
                "name": "ratios"
               },
               {
                "type": "Identifier",
                "name": "data"
               }
              ],
              "names": [],
              "identifiers": []
             },
             {
              "type": "NumberLiteral",
              "number": "1",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "reserves"
            },
            "index": {
             "type": "Identifier",
             "name": "i"
            }
           },
           "right": {
            "type": "Identifier",
            "name": "cappedReserveI"
           }
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "reserves"
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "_getSlotForAddress",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "addressValue",
         "identifier": {
          "type": "Identifier",
          "name": "addressValue"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_slot",
         "identifier": {
          "type": "Identifier",
          "name": "_slot"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "_slot"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "ElementaryTypeName",
               "name": "bytes20",
               "stateMutability": null
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "addressValue"
               }
              ],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "_getSlotsOffset",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "numberOfReserves",
         "identifier": {
          "type": "Identifier",
          "name": "numberOfReserves"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_slotsOffset",
         "identifier": {
          "type": "Identifier",
          "name": "_slotsOffset"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "_slotsOffset"
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "<<",
            "left": {
             "type": "TupleExpression",
             "components": [
              {
               "type": "BinaryOperation",
               "operator": "+",
               "left": {
                "type": "BinaryOperation",
                "operator": "/",
                "left": {
                 "type": "TupleExpression",
                 "components": [
                  {
                   "type": "BinaryOperation",
                   "operator": "-",
                   "left": {
                    "type": "Identifier",
                    "name": "numberOfReserves"
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "1",
                    "subdenomination": null
                   }
                  }
                 ],
                 "isArray": false
                },
                "right": {
                 "type": "NumberLiteral",
                 "number": "2",
                 "subdenomination": null
                }
               },
               "right": {
                "type": "NumberLiteral",
                "number": "1",
                "subdenomination": null
               }
              }
             ],
             "isArray": false
            },
            "right": {
             "type": "NumberLiteral",
             "number": "5",
             "subdenomination": null
            }
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "_getDeltaTimestamp",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint40",
          "stateMutability": null
         },
         "name": "lastTimestamp",
         "identifier": {
          "type": "Identifier",
          "name": "lastTimestamp"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_deltaTimestamp",
         "identifier": {
          "type": "Identifier",
          "name": "_deltaTimestamp"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "ElementaryTypeName",
            "name": "uint256",
            "stateMutability": null
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "-",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "ElementaryTypeName",
               "name": "uint40",
               "stateMutability": null
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "block"
                },
                "memberName": "timestamp"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "Identifier",
              "name": "lastTimestamp"
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "tryCalcReserveAtRatioSwap",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IMultiFlowPumpWellFunction"
         },
         "name": "wf",
         "identifier": {
          "type": "Identifier",
          "name": "wf"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "reserves",
         "identifier": {
          "type": "Identifier",
          "name": "reserves"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "i",
         "identifier": {
          "type": "Identifier",
          "name": "i"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "ratios",
         "identifier": {
          "type": "Identifier",
          "name": "ratios"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "reserve",
         "identifier": {
          "type": "Identifier",
          "name": "reserve"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "TryStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "wf"
            },
            "memberName": "calcReserveAtRatioSwap"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "reserves"
            },
            {
             "type": "Identifier",
             "name": "i"
            },
            {
             "type": "Identifier",
             "name": "ratios"
            },
            {
             "type": "Identifier",
             "name": "data"
            }
           ],
           "names": [],
           "identifiers": []
          },
          "returnParameters": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "_reserve",
            "identifier": {
             "type": "Identifier",
             "name": "_reserve"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "reserve"
              },
              "right": {
               "type": "Identifier",
               "name": "_reserve"
              }
             }
            }
           ]
          },
          "catchClauses": [
           {
            "type": "CatchClause",
            "isReasonStringType": false,
            "kind": null,
            "parameters": null,
            "body": {
             "type": "Block",
             "statements": [
              {
               "type": "ExpressionStatement",
               "expression": {
                "type": "BinaryOperation",
                "operator": "=",
                "left": {
                 "type": "Identifier",
                 "name": "reserve"
                },
                "right": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "Identifier",
                   "name": "type"
                  },
                  "arguments": [
                   {
                    "type": "ElementaryTypeName",
                    "name": "uint256",
                    "stateMutability": null
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 },
                 "memberName": "max"
                }
               }
              }
             ]
            }
           }
          ]
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "tryCalcLpTokenSupply",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IMultiFlowPumpWellFunction"
         },
         "name": "wf",
         "identifier": {
          "type": "Identifier",
          "name": "wf"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "reserves",
         "identifier": {
          "type": "Identifier",
          "name": "reserves"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpTokenSupply",
         "identifier": {
          "type": "Identifier",
          "name": "lpTokenSupply"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "TryStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "wf"
            },
            "memberName": "calcLpTokenSupply"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "reserves"
            },
            {
             "type": "Identifier",
             "name": "data"
            }
           ],
           "names": [],
           "identifiers": []
          },
          "returnParameters": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "_lpTokenSupply",
            "identifier": {
             "type": "Identifier",
             "name": "_lpTokenSupply"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "lpTokenSupply"
              },
              "right": {
               "type": "Identifier",
               "name": "_lpTokenSupply"
              }
             }
            }
           ]
          },
          "catchClauses": [
           {
            "type": "CatchClause",
            "isReasonStringType": false,
            "kind": null,
            "parameters": null,
            "body": {
             "type": "Block",
             "statements": [
              {
               "type": "ExpressionStatement",
               "expression": {
                "type": "BinaryOperation",
                "operator": "=",
                "left": {
                 "type": "Identifier",
                 "name": "lpTokenSupply"
                },
                "right": {
                 "type": "Identifier",
                 "name": "MAX_UINT256_SQRT"
                }
               }
              }
             ]
            }
           }
          ]
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "tryCalcLPTokenUnderlying",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IMultiFlowPumpWellFunction"
         },
         "name": "wf",
         "identifier": {
          "type": "Identifier",
          "name": "wf"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpTokenAmount",
         "identifier": {
          "type": "Identifier",
          "name": "lpTokenAmount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "reserves",
         "identifier": {
          "type": "Identifier",
          "name": "reserves"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpTokenSupply",
         "identifier": {
          "type": "Identifier",
          "name": "lpTokenSupply"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "underlyingAmounts",
         "identifier": {
          "type": "Identifier",
          "name": "underlyingAmounts"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "TryStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "wf"
            },
            "memberName": "calcLPTokenUnderlying"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "lpTokenAmount"
            },
            {
             "type": "Identifier",
             "name": "reserves"
            },
            {
             "type": "Identifier",
             "name": "lpTokenSupply"
            },
            {
             "type": "Identifier",
             "name": "data"
            }
           ],
           "names": [],
           "identifiers": []
          },
          "returnParameters": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "_underlyingAmounts",
            "identifier": {
             "type": "Identifier",
             "name": "_underlyingAmounts"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "underlyingAmounts"
              },
              "right": {
               "type": "Identifier",
               "name": "_underlyingAmounts"
              }
             }
            },
            {
             "type": "ForStatement",
             "initExpression": {
              "type": "VariableDeclarationStatement",
              "variables": [
               {
                "type": "VariableDeclaration",
                "typeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "name": "i",
                "identifier": {
                 "type": "Identifier",
                 "name": "i"
                },
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false,
                "expression": null
               }
              ],
              "initialValue": null
             },
             "conditionExpression": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "i"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "underlyingAmounts"
               },
               "memberName": "length"
              }
             },
             "loopExpression": {
              "type": "ExpressionStatement",
              "expression": {
               "type": "UnaryOperation",
               "operator": "++",
               "subExpression": {
                "type": "Identifier",
                "name": "i"
               },
               "isPrefix": true
              }
             },
             "body": {
              "type": "Block",
              "statements": [
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "==",
                 "left": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "underlyingAmounts"
                  },
                  "index": {
                   "type": "Identifier",
                   "name": "i"
                  }
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                 }
                },
                "trueBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                     "type": "IndexAccess",
                     "base": {
                      "type": "Identifier",
                      "name": "underlyingAmounts"
                     },
                     "index": {
                      "type": "Identifier",
                      "name": "i"
                     }
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "1",
                     "subdenomination": null
                    }
                   }
                  }
                 ]
                },
                "falseBody": null
               }
              ]
             }
            }
           ]
          },
          "catchClauses": [
           {
            "type": "CatchClause",
            "isReasonStringType": false,
            "kind": null,
            "parameters": null,
            "body": {
             "type": "Block",
             "statements": [
              {
               "type": "ExpressionStatement",
               "expression": {
                "type": "BinaryOperation",
                "operator": "=",
                "left": {
                 "type": "Identifier",
                 "name": "underlyingAmounts"
                },
                "right": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "NewExpression",
                  "typeName": {
                   "type": "ArrayTypeName",
                   "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256",
                    "stateMutability": null
                   },
                   "length": null
                  }
                 },
                 "arguments": [
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "reserves"
                   },
                   "memberName": "length"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              },
              {
               "type": "ForStatement",
               "initExpression": {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "ElementaryTypeName",
                   "name": "uint256",
                   "stateMutability": null
                  },
                  "name": "i",
                  "identifier": {
                   "type": "Identifier",
                   "name": "i"
                  },
                  "storageLocation": null,
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": null
               },
               "conditionExpression": {
                "type": "BinaryOperation",
                "operator": "<",
                "left": {
                 "type": "Identifier",
                 "name": "i"
                },
                "right": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "reserves"
                 },
                 "memberName": "length"
                }
               },
               "loopExpression": {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "UnaryOperation",
                 "operator": "++",
                 "subExpression": {
                  "type": "Identifier",
                  "name": "i"
                 },
                 "isPrefix": true
                }
               },
               "body": {
                "type": "Block",
                "statements": [
                 {
                  "type": "ExpressionStatement",
                  "expression": {
                   "type": "BinaryOperation",
                   "operator": "=",
                   "left": {
                    "type": "IndexAccess",
                    "base": {
                     "type": "Identifier",
                     "name": "underlyingAmounts"
                    },
                    "index": {
                     "type": "Identifier",
                     "name": "i"
                    }
                   },
                   "right": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "FunctionCall",
                     "expression": {
                      "type": "Identifier",
                      "name": "type"
                     },
                     "arguments": [
                      {
                       "type": "ElementaryTypeName",
                       "name": "uint256",
                       "stateMutability": null
                      }
                     ],
                     "names": [],
                     "identifiers": []
                    },
                    "memberName": "max"
                   }
                  }
                 }
                ]
               }
              }
             ]
            }
           }
          ]
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-08-basin/src/libraries/LibWellUpgradeableConstructor.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.8.20"
    },
    {
     "type": "ImportDirective",
     "path": "src/libraries/LibContractInfo.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "src/libraries/LibContractInfo.sol",
      "parts": [
       "src/libraries/LibContractInfo.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "LibContractInfo",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "LibContractInfo"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "src/Well.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "src/Well.sol",
      "parts": [
       "src/Well.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Call",
       null
      ],
      [
       "IERC20",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Call"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "IERC20"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "src/WellUpgradeable.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "src/WellUpgradeable.sol",
      "parts": [
       "src/WellUpgradeable.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "WellUpgradeable",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "WellUpgradeable"
       },
       null
      ]
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "LibWellUpgradeableConstructor",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "encodeWellDeploymentData",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_aquifer",
         "identifier": {
          "type": "Identifier",
          "name": "_aquifer"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "IERC20"
          },
          "length": null
         },
         "name": "_tokens",
         "identifier": {
          "type": "Identifier",
          "name": "_tokens"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Call"
         },
         "name": "_wellFunction",
         "identifier": {
          "type": "Identifier",
          "name": "_wellFunction"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "Call"
          },
          "length": null
         },
         "name": "_pumps",
         "identifier": {
          "type": "Identifier",
          "name": "_pumps"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "immutableData",
         "identifier": {
          "type": "Identifier",
          "name": "immutableData"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "initData",
         "identifier": {
          "type": "Identifier",
          "name": "initData"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "immutableData"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "encodeWellImmutableData"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_aquifer"
             },
             {
              "type": "Identifier",
              "name": "_tokens"
             },
             {
              "type": "Identifier",
              "name": "_wellFunction"
             },
             {
              "type": "Identifier",
              "name": "_pumps"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "initData"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "abi"
             },
             "memberName": "encodeWithSelector"
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "WellUpgradeable"
               },
               "memberName": "initNoWellToken"
              },
              "memberName": "selector"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "encodeWellImmutableData",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_aquifer",
         "identifier": {
          "type": "Identifier",
          "name": "_aquifer"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "IERC20"
          },
          "length": null
         },
         "name": "_tokens",
         "identifier": {
          "type": "Identifier",
          "name": "_tokens"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Call"
         },
         "name": "_wellFunction",
         "identifier": {
          "type": "Identifier",
          "name": "_wellFunction"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "Call"
          },
          "length": null
         },
         "name": "_pumps",
         "identifier": {
          "type": "Identifier",
          "name": "_pumps"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "immutableData",
         "identifier": {
          "type": "Identifier",
          "name": "immutableData"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "immutableData"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "abi"
             },
             "memberName": "encodePacked"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_aquifer"
             },
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_tokens"
              },
              "memberName": "length"
             },
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_wellFunction"
              },
              "memberName": "target"
             },
             {
              "type": "MemberAccess",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_wellFunction"
               },
               "memberName": "data"
              },
              "memberName": "length"
             },
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_pumps"
              },
              "memberName": "length"
             },
             {
              "type": "Identifier",
              "name": "_tokens"
             },
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_wellFunction"
              },
              "memberName": "data"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": null
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_pumps"
            },
            "memberName": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": true
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "immutableData"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "immutableData"
                },
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "_pumps"
                  },
                  "index": {
                   "type": "Identifier",
                   "name": "i"
                  }
                 },
                 "memberName": "target"
                },
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "IndexAccess",
                   "base": {
                    "type": "Identifier",
                    "name": "_pumps"
                   },
                   "index": {
                    "type": "Identifier",
                    "name": "i"
                   }
                  },
                  "memberName": "data"
                 },
                 "memberName": "length"
                },
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "_pumps"
                  },
                  "index": {
                   "type": "Identifier",
                   "name": "i"
                  }
                 },
                 "memberName": "data"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "encodeWellInitFunctionCall",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "IERC20"
          },
          "length": null
         },
         "name": "_tokens",
         "identifier": {
          "type": "Identifier",
          "name": "_tokens"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Call"
         },
         "name": "_wellFunction",
         "identifier": {
          "type": "Identifier",
          "name": "_wellFunction"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "initFunctionCall",
         "identifier": {
          "type": "Identifier",
          "name": "initFunctionCall"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "string",
             "stateMutability": null
            },
            "name": "name",
            "identifier": {
             "type": "Identifier",
             "name": "name"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "LibContractInfo"
            },
            "memberName": "getSymbol"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "_tokens"
               },
               "index": {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "string",
             "stateMutability": null
            },
            "name": "symbol",
            "identifier": {
             "type": "Identifier",
             "name": "symbol"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "Identifier",
           "name": "name"
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_tokens"
            },
            "memberName": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": true
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "name"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "ElementaryTypeName",
                 "name": "string",
                 "stateMutability": null
                },
                "memberName": "concat"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "name"
                },
                {
                 "type": "StringLiteral",
                 "value": ":",
                 "parts": [
                  ":"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "LibContractInfo"
                  },
                  "memberName": "getSymbol"
                 },
                 "arguments": [
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "Identifier",
                    "name": "address"
                   },
                   "arguments": [
                    {
                     "type": "IndexAccess",
                     "base": {
                      "type": "Identifier",
                      "name": "_tokens"
                     },
                     "index": {
                      "type": "Identifier",
                      "name": "i"
                     }
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "symbol"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "ElementaryTypeName",
                 "name": "string",
                 "stateMutability": null
                },
                "memberName": "concat"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "symbol"
                },
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "LibContractInfo"
                  },
                  "memberName": "getSymbol"
                 },
                 "arguments": [
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "Identifier",
                    "name": "address"
                   },
                   "arguments": [
                    {
                     "type": "IndexAccess",
                     "base": {
                      "type": "Identifier",
                      "name": "_tokens"
                     },
                     "index": {
                      "type": "Identifier",
                      "name": "i"
                     }
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "name"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "ElementaryTypeName",
              "name": "string",
              "stateMutability": null
             },
             "memberName": "concat"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "name"
             },
             {
              "type": "StringLiteral",
              "value": " ",
              "parts": [
               " "
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "LibContractInfo"
               },
               "memberName": "getName"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_wellFunction"
                },
                "memberName": "target"
               }
              ],
              "names": [],
              "identifiers": []
             },
             {
              "type": "StringLiteral",
              "value": " Upgradeable Well",
              "parts": [
               " Upgradeable Well"
              ],
              "isUnicode": [
               false
              ]
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "symbol"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "ElementaryTypeName",
              "name": "string",
              "stateMutability": null
             },
             "memberName": "concat"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "symbol"
             },
             {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "LibContractInfo"
               },
               "memberName": "getSymbol"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_wellFunction"
                },
                "memberName": "target"
               }
              ],
              "names": [],
              "identifiers": []
             },
             {
              "type": "StringLiteral",
              "value": "uw",
              "parts": [
               "uw"
              ],
              "isUnicode": [
               false
              ]
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "initFunctionCall"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "abi"
             },
             "memberName": "encodeWithSelector"
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "WellUpgradeable"
               },
               "memberName": "init"
              },
              "memberName": "selector"
             },
             {
              "type": "Identifier",
              "name": "name"
             },
             {
              "type": "Identifier",
              "name": "symbol"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "encodeCall",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "target",
         "identifier": {
          "type": "Identifier",
          "name": "target"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Call"
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "Call"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "target"
            },
            {
             "type": "Identifier",
             "name": "data"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      }
     ],
     "kind": "library"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-08-basin/src/libraries/LibWellConstructor.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.8.20"
    },
    {
     "type": "ImportDirective",
     "path": "src/libraries/LibContractInfo.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "src/libraries/LibContractInfo.sol",
      "parts": [
       "src/libraries/LibContractInfo.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "LibContractInfo",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "LibContractInfo"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "src/Well.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "src/Well.sol",
      "parts": [
       "src/Well.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Call",
       null
      ],
      [
       "IERC20",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Call"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "IERC20"
       },
       null
      ]
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "LibWellConstructor",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "encodeWellDeploymentData",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_aquifer",
         "identifier": {
          "type": "Identifier",
          "name": "_aquifer"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "IERC20"
          },
          "length": null
         },
         "name": "_tokens",
         "identifier": {
          "type": "Identifier",
          "name": "_tokens"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Call"
         },
         "name": "_wellFunction",
         "identifier": {
          "type": "Identifier",
          "name": "_wellFunction"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "Call"
          },
          "length": null
         },
         "name": "_pumps",
         "identifier": {
          "type": "Identifier",
          "name": "_pumps"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "immutableData",
         "identifier": {
          "type": "Identifier",
          "name": "immutableData"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "initData",
         "identifier": {
          "type": "Identifier",
          "name": "initData"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "immutableData"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "encodeWellImmutableData"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_aquifer"
             },
             {
              "type": "Identifier",
              "name": "_tokens"
             },
             {
              "type": "Identifier",
              "name": "_wellFunction"
             },
             {
              "type": "Identifier",
              "name": "_pumps"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "initData"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "encodeWellInitFunctionCall"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_tokens"
             },
             {
              "type": "Identifier",
              "name": "_wellFunction"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "encodeWellImmutableData",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_aquifer",
         "identifier": {
          "type": "Identifier",
          "name": "_aquifer"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "IERC20"
          },
          "length": null
         },
         "name": "_tokens",
         "identifier": {
          "type": "Identifier",
          "name": "_tokens"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Call"
         },
         "name": "_wellFunction",
         "identifier": {
          "type": "Identifier",
          "name": "_wellFunction"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "Call"
          },
          "length": null
         },
         "name": "_pumps",
         "identifier": {
          "type": "Identifier",
          "name": "_pumps"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "immutableData",
         "identifier": {
          "type": "Identifier",
          "name": "immutableData"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "immutableData"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "abi"
             },
             "memberName": "encodePacked"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_aquifer"
             },
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_tokens"
              },
              "memberName": "length"
             },
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_wellFunction"
              },
              "memberName": "target"
             },
             {
              "type": "MemberAccess",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_wellFunction"
               },
               "memberName": "data"
              },
              "memberName": "length"
             },
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_pumps"
              },
              "memberName": "length"
             },
             {
              "type": "Identifier",
              "name": "_tokens"
             },
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_wellFunction"
              },
              "memberName": "data"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": null
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_pumps"
            },
            "memberName": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": true
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "immutableData"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "immutableData"
                },
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "_pumps"
                  },
                  "index": {
                   "type": "Identifier",
                   "name": "i"
                  }
                 },
                 "memberName": "target"
                },
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "IndexAccess",
                   "base": {
                    "type": "Identifier",
                    "name": "_pumps"
                   },
                   "index": {
                    "type": "Identifier",
                    "name": "i"
                   }
                  },
                  "memberName": "data"
                 },
                 "memberName": "length"
                },
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "_pumps"
                  },
                  "index": {
                   "type": "Identifier",
                   "name": "i"
                  }
                 },
                 "memberName": "data"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "encodeWellInitFunctionCall",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "IERC20"
          },
          "length": null
         },
         "name": "_tokens",
         "identifier": {
          "type": "Identifier",
          "name": "_tokens"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Call"
         },
         "name": "_wellFunction",
         "identifier": {
          "type": "Identifier",
          "name": "_wellFunction"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "initFunctionCall",
         "identifier": {
          "type": "Identifier",
          "name": "initFunctionCall"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "string",
             "stateMutability": null
            },
            "name": "name",
            "identifier": {
             "type": "Identifier",
             "name": "name"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "LibContractInfo"
            },
            "memberName": "getSymbol"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "_tokens"
               },
               "index": {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "string",
             "stateMutability": null
            },
            "name": "symbol",
            "identifier": {
             "type": "Identifier",
             "name": "symbol"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "Identifier",
           "name": "name"
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_tokens"
            },
            "memberName": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": true
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "name"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "ElementaryTypeName",
                 "name": "string",
                 "stateMutability": null
                },
                "memberName": "concat"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "name"
                },
                {
                 "type": "StringLiteral",
                 "value": ":",
                 "parts": [
                  ":"
                 ],
                 "isUnicode": [
                  false
                 ]
                },
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "LibContractInfo"
                  },
                  "memberName": "getSymbol"
                 },
                 "arguments": [
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "Identifier",
                    "name": "address"
                   },
                   "arguments": [
                    {
                     "type": "IndexAccess",
                     "base": {
                      "type": "Identifier",
                      "name": "_tokens"
                     },
                     "index": {
                      "type": "Identifier",
                      "name": "i"
                     }
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "symbol"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "ElementaryTypeName",
                 "name": "string",
                 "stateMutability": null
                },
                "memberName": "concat"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "symbol"
                },
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "LibContractInfo"
                  },
                  "memberName": "getSymbol"
                 },
                 "arguments": [
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "Identifier",
                    "name": "address"
                   },
                   "arguments": [
                    {
                     "type": "IndexAccess",
                     "base": {
                      "type": "Identifier",
                      "name": "_tokens"
                     },
                     "index": {
                      "type": "Identifier",
                      "name": "i"
                     }
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "name"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "ElementaryTypeName",
              "name": "string",
              "stateMutability": null
             },
             "memberName": "concat"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "name"
             },
             {
              "type": "StringLiteral",
              "value": " ",
              "parts": [
               " "
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "LibContractInfo"
               },
               "memberName": "getName"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_wellFunction"
                },
                "memberName": "target"
               }
              ],
              "names": [],
              "identifiers": []
             },
             {
              "type": "StringLiteral",
              "value": " Well",
              "parts": [
               " Well"
              ],
              "isUnicode": [
               false
              ]
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "symbol"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "ElementaryTypeName",
              "name": "string",
              "stateMutability": null
             },
             "memberName": "concat"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "symbol"
             },
             {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "LibContractInfo"
               },
               "memberName": "getSymbol"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_wellFunction"
                },
                "memberName": "target"
               }
              ],
              "names": [],
              "identifiers": []
             },
             {
              "type": "StringLiteral",
              "value": "w",
              "parts": [
               "w"
              ],
              "isUnicode": [
               false
              ]
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "initFunctionCall"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "abi"
             },
             "memberName": "encodeWithSignature"
            },
            "arguments": [
             {
              "type": "StringLiteral",
              "value": "init(string,string)",
              "parts": [
               "init(string,string)"
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "Identifier",
              "name": "name"
             },
             {
              "type": "Identifier",
              "name": "symbol"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "encodeCall",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "target",
         "identifier": {
          "type": "Identifier",
          "name": "target"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Call"
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "Call"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "target"
            },
            {
             "type": "Identifier",
             "name": "data"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      }
     ],
     "kind": "library"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-08-basin/src/libraries/LibMath.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.8.20"
    },
    {
     "type": "ContractDefinition",
     "name": "LibMath",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "roundUpDiv",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "a",
         "identifier": {
          "type": "Identifier",
          "name": "a"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "b",
         "identifier": {
          "type": "Identifier",
          "name": "b"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "a"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "ReturnStatement",
           "expression": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "falseBody": null
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "+",
           "left": {
            "type": "BinaryOperation",
            "operator": "/",
            "left": {
             "type": "TupleExpression",
             "components": [
              {
               "type": "BinaryOperation",
               "operator": "-",
               "left": {
                "type": "Identifier",
                "name": "a"
               },
               "right": {
                "type": "NumberLiteral",
                "number": "1",
                "subdenomination": null
               }
              }
             ],
             "isArray": false
            },
            "right": {
             "type": "Identifier",
             "name": "b"
            }
           },
           "right": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "nthRoot",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "a",
         "identifier": {
          "type": "Identifier",
          "name": "a"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "n",
         "identifier": {
          "type": "Identifier",
          "name": "n"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "root",
         "identifier": {
          "type": "Identifier",
          "name": "root"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "assert"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "Identifier",
              "name": "n"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "1",
              "subdenomination": null
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "a"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "ReturnStatement",
           "expression": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "BinaryOperation",
            "operator": "&",
            "left": {
             "type": "Identifier",
             "name": "n"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "Identifier",
               "name": "n"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "2",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "ReturnStatement",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "sqrt"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "a"
                }
               ],
               "names": [],
               "identifiers": []
              }
             },
             "falseBody": null
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "Identifier",
               "name": "n"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "4",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "ReturnStatement",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "sqrt"
               },
               "arguments": [
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "sqrt"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "a"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               ],
               "names": [],
               "identifiers": []
              }
             },
             "falseBody": null
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "Identifier",
               "name": "n"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "8",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "ReturnStatement",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "sqrt"
               },
               "arguments": [
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "sqrt"
                 },
                 "arguments": [
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "Identifier",
                    "name": "sqrt"
                   },
                   "arguments": [
                    {
                     "type": "Identifier",
                     "name": "a"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               ],
               "names": [],
               "identifiers": []
              }
             },
             "falseBody": null
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "Identifier",
               "name": "n"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "16",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "ReturnStatement",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "sqrt"
               },
               "arguments": [
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "sqrt"
                 },
                 "arguments": [
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "Identifier",
                    "name": "sqrt"
                   },
                   "arguments": [
                    {
                     "type": "FunctionCall",
                     "expression": {
                      "type": "Identifier",
                      "name": "sqrt"
                     },
                     "arguments": [
                      {
                       "type": "Identifier",
                       "name": "a"
                      }
                     ],
                     "names": [],
                     "identifiers": []
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               ],
               "names": [],
               "identifiers": []
              }
             },
             "falseBody": null
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "a0",
            "identifier": {
             "type": "Identifier",
             "name": "a0"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "BinaryOperation",
           "operator": "*",
           "left": {
            "type": "TupleExpression",
            "components": [
             {
              "type": "BinaryOperation",
              "operator": "**",
              "left": {
               "type": "NumberLiteral",
               "number": "10",
               "subdenomination": null
              },
              "right": {
               "type": "Identifier",
               "name": "n"
              }
             }
            ],
            "isArray": false
           },
           "right": {
            "type": "Identifier",
            "name": "a"
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "xNew",
            "identifier": {
             "type": "Identifier",
             "name": "xNew"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "NumberLiteral",
           "number": "10",
           "subdenomination": null
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "x",
            "identifier": {
             "type": "Identifier",
             "name": "x"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "WhileStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "Identifier",
            "name": "xNew"
           },
           "right": {
            "type": "Identifier",
            "name": "x"
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "x"
              },
              "right": {
               "type": "Identifier",
               "name": "xNew"
              }
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "t0",
               "identifier": {
                "type": "Identifier",
                "name": "t0"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "BinaryOperation",
              "operator": "**",
              "left": {
               "type": "Identifier",
               "name": "x"
              },
              "right": {
               "type": "TupleExpression",
               "components": [
                {
                 "type": "BinaryOperation",
                 "operator": "-",
                 "left": {
                  "type": "Identifier",
                  "name": "n"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "1",
                  "subdenomination": null
                 }
                }
               ],
               "isArray": false
              }
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": ">",
              "left": {
               "type": "BinaryOperation",
               "operator": "*",
               "left": {
                "type": "Identifier",
                "name": "x"
               },
               "right": {
                "type": "Identifier",
                "name": "t0"
               }
              },
              "right": {
               "type": "Identifier",
               "name": "a0"
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "xNew"
                 },
                 "right": {
                  "type": "BinaryOperation",
                  "operator": "-",
                  "left": {
                   "type": "Identifier",
                   "name": "x"
                  },
                  "right": {
                   "type": "BinaryOperation",
                   "operator": "/",
                   "left": {
                    "type": "TupleExpression",
                    "components": [
                     {
                      "type": "BinaryOperation",
                      "operator": "-",
                      "left": {
                       "type": "Identifier",
                       "name": "x"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": "/",
                       "left": {
                        "type": "Identifier",
                        "name": "a0"
                       },
                       "right": {
                        "type": "Identifier",
                        "name": "t0"
                       }
                      }
                     }
                    ],
                    "isArray": false
                   },
                   "right": {
                    "type": "Identifier",
                    "name": "n"
                   }
                  }
                 }
                }
               }
              ]
             },
             "falseBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "xNew"
                 },
                 "right": {
                  "type": "BinaryOperation",
                  "operator": "+",
                  "left": {
                   "type": "Identifier",
                   "name": "x"
                  },
                  "right": {
                   "type": "BinaryOperation",
                   "operator": "/",
                   "left": {
                    "type": "TupleExpression",
                    "components": [
                     {
                      "type": "BinaryOperation",
                      "operator": "-",
                      "left": {
                       "type": "BinaryOperation",
                       "operator": "/",
                       "left": {
                        "type": "Identifier",
                        "name": "a0"
                       },
                       "right": {
                        "type": "Identifier",
                        "name": "t0"
                       }
                      },
                      "right": {
                       "type": "Identifier",
                       "name": "x"
                      }
                     }
                    ],
                    "isArray": false
                   },
                   "right": {
                    "type": "Identifier",
                    "name": "n"
                   }
                  }
                 }
                }
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "root"
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "/",
            "left": {
             "type": "TupleExpression",
             "components": [
              {
               "type": "BinaryOperation",
               "operator": "+",
               "left": {
                "type": "Identifier",
                "name": "xNew"
               },
               "right": {
                "type": "NumberLiteral",
                "number": "5",
                "subdenomination": null
               }
              }
             ],
             "isArray": false
            },
            "right": {
             "type": "NumberLiteral",
             "number": "10",
             "subdenomination": null
            }
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "sqrt",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "a",
         "identifier": {
          "type": "Identifier",
          "name": "a"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "z",
         "identifier": {
          "type": "Identifier",
          "name": "z"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "y"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "a",
              "arguments": []
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "z"
              }
             ],
             "expression": {
              "type": "DecimalNumber",
              "value": "181"
             }
            },
            {
             "type": "AssemblyIf",
             "condition": {
              "type": "AssemblyCall",
              "functionName": "iszero",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "lt",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "y",
                  "arguments": []
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x10000000000000000000000000000000000"
                 }
                ]
               }
              ]
             },
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyAssignment",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "y"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "shr",
                 "arguments": [
                  {
                   "type": "DecimalNumber",
                   "value": "128"
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "y",
                   "arguments": []
                  }
                 ]
                }
               },
               {
                "type": "AssemblyAssignment",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "z"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "shl",
                 "arguments": [
                  {
                   "type": "DecimalNumber",
                   "value": "64"
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "z",
                   "arguments": []
                  }
                 ]
                }
               }
              ]
             }
            },
            {
             "type": "AssemblyIf",
             "condition": {
              "type": "AssemblyCall",
              "functionName": "iszero",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "lt",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "y",
                  "arguments": []
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x1000000000000000000"
                 }
                ]
               }
              ]
             },
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyAssignment",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "y"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "shr",
                 "arguments": [
                  {
                   "type": "DecimalNumber",
                   "value": "64"
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "y",
                   "arguments": []
                  }
                 ]
                }
               },
               {
                "type": "AssemblyAssignment",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "z"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "shl",
                 "arguments": [
                  {
                   "type": "DecimalNumber",
                   "value": "32"
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "z",
                   "arguments": []
                  }
                 ]
                }
               }
              ]
             }
            },
            {
             "type": "AssemblyIf",
             "condition": {
              "type": "AssemblyCall",
              "functionName": "iszero",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "lt",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "y",
                  "arguments": []
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x10000000000"
                 }
                ]
               }
              ]
             },
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyAssignment",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "y"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "shr",
                 "arguments": [
                  {
                   "type": "DecimalNumber",
                   "value": "32"
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "y",
                   "arguments": []
                  }
                 ]
                }
               },
               {
                "type": "AssemblyAssignment",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "z"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "shl",
                 "arguments": [
                  {
                   "type": "DecimalNumber",
                   "value": "16"
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "z",
                   "arguments": []
                  }
                 ]
                }
               }
              ]
             }
            },
            {
             "type": "AssemblyIf",
             "condition": {
              "type": "AssemblyCall",
              "functionName": "iszero",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "lt",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "y",
                  "arguments": []
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x1000000"
                 }
                ]
               }
              ]
             },
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyAssignment",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "y"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "shr",
                 "arguments": [
                  {
                   "type": "DecimalNumber",
                   "value": "16"
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "y",
                   "arguments": []
                  }
                 ]
                }
               },
               {
                "type": "AssemblyAssignment",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "z"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "shl",
                 "arguments": [
                  {
                   "type": "DecimalNumber",
                   "value": "8"
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "z",
                   "arguments": []
                  }
                 ]
                }
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "z"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "shr",
              "arguments": [
               {
                "type": "DecimalNumber",
                "value": "18"
               },
               {
                "type": "AssemblyCall",
                "functionName": "mul",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "z",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "y",
                    "arguments": []
                   },
                   {
                    "type": "DecimalNumber",
                    "value": "65536"
                   }
                  ]
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "z"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "shr",
              "arguments": [
               {
                "type": "DecimalNumber",
                "value": "1"
               },
               {
                "type": "AssemblyCall",
                "functionName": "add",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "z",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "div",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "a",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   }
                  ]
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "z"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "shr",
              "arguments": [
               {
                "type": "DecimalNumber",
                "value": "1"
               },
               {
                "type": "AssemblyCall",
                "functionName": "add",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "z",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "div",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "a",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   }
                  ]
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "z"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "shr",
              "arguments": [
               {
                "type": "DecimalNumber",
                "value": "1"
               },
               {
                "type": "AssemblyCall",
                "functionName": "add",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "z",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "div",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "a",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   }
                  ]
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "z"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "shr",
              "arguments": [
               {
                "type": "DecimalNumber",
                "value": "1"
               },
               {
                "type": "AssemblyCall",
                "functionName": "add",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "z",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "div",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "a",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   }
                  ]
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "z"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "shr",
              "arguments": [
               {
                "type": "DecimalNumber",
                "value": "1"
               },
               {
                "type": "AssemblyCall",
                "functionName": "add",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "z",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "div",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "a",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   }
                  ]
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "z"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "shr",
              "arguments": [
               {
                "type": "DecimalNumber",
                "value": "1"
               },
               {
                "type": "AssemblyCall",
                "functionName": "add",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "z",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "div",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "a",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   }
                  ]
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "z"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "shr",
              "arguments": [
               {
                "type": "DecimalNumber",
                "value": "1"
               },
               {
                "type": "AssemblyCall",
                "functionName": "add",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "z",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "div",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "a",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   }
                  ]
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "z"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "sub",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "z",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "lt",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "div",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "a",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "z",
                    "arguments": []
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "z",
                  "arguments": []
                 }
                ]
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "mulDivOrMax",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "x",
         "identifier": {
          "type": "Identifier",
          "name": "x"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "y",
         "identifier": {
          "type": "Identifier",
          "name": "y"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "denominator",
         "identifier": {
          "type": "Identifier",
          "name": "denominator"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "result",
         "identifier": {
          "type": "Identifier",
          "name": "result"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "UncheckedStatement",
          "block": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "prod0",
               "identifier": {
                "type": "Identifier",
                "name": "prod0"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": null
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "prod1",
               "identifier": {
                "type": "Identifier",
                "name": "prod1"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": null
            },
            {
             "type": "InlineAssemblyStatement",
             "language": null,
             "flags": [],
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "mm"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "mulmod",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "x",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "y",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "not",
                   "arguments": [
                    {
                     "type": "DecimalNumber",
                     "value": "0"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyAssignment",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "prod0"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "mul",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "x",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "y",
                   "arguments": []
                  }
                 ]
                }
               },
               {
                "type": "AssemblyAssignment",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "prod1"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "sub",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "sub",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "mm",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "prod0",
                     "arguments": []
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "lt",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "mm",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "prod0",
                     "arguments": []
                    }
                   ]
                  }
                 ]
                }
               }
              ]
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "Identifier",
               "name": "prod1"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ReturnStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "/",
                 "left": {
                  "type": "Identifier",
                  "name": "prod0"
                 },
                 "right": {
                  "type": "Identifier",
                  "name": "denominator"
                 }
                }
               }
              ]
             },
             "falseBody": null
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "<=",
              "left": {
               "type": "Identifier",
               "name": "denominator"
              },
              "right": {
               "type": "Identifier",
               "name": "prod1"
              }
             },
             "trueBody": {
              "type": "ReturnStatement",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "type"
                },
                "arguments": [
                 {
                  "type": "ElementaryTypeName",
                  "name": "uint256",
                  "stateMutability": null
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "memberName": "max"
              }
             },
             "falseBody": null
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "remainder",
               "identifier": {
                "type": "Identifier",
                "name": "remainder"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": null
            },
            {
             "type": "InlineAssemblyStatement",
             "language": null,
             "flags": [],
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyAssignment",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "remainder"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "mulmod",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "x",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "y",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "denominator",
                   "arguments": []
                  }
                 ]
                }
               },
               {
                "type": "AssemblyAssignment",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "prod1"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "sub",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "prod1",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "gt",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "remainder",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "prod0",
                     "arguments": []
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyAssignment",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "prod0"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "sub",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "prod0",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "remainder",
                   "arguments": []
                  }
                 ]
                }
               }
              ]
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "twos",
               "identifier": {
                "type": "Identifier",
                "name": "twos"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "BinaryOperation",
              "operator": "&",
              "left": {
               "type": "Identifier",
               "name": "denominator"
              },
              "right": {
               "type": "TupleExpression",
               "components": [
                {
                 "type": "BinaryOperation",
                 "operator": "+",
                 "left": {
                  "type": "UnaryOperation",
                  "operator": "~",
                  "subExpression": {
                   "type": "Identifier",
                   "name": "denominator"
                  },
                  "isPrefix": true
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "1",
                  "subdenomination": null
                 }
                }
               ],
               "isArray": false
              }
             }
            },
            {
             "type": "InlineAssemblyStatement",
             "language": null,
             "flags": [],
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyAssignment",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "denominator"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "div",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "denominator",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "twos",
                   "arguments": []
                  }
                 ]
                }
               },
               {
                "type": "AssemblyAssignment",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "prod0"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "div",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "prod0",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "twos",
                   "arguments": []
                  }
                 ]
                }
               },
               {
                "type": "AssemblyAssignment",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "twos"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "div",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "sub",
                     "arguments": [
                      {
                       "type": "DecimalNumber",
                       "value": "0"
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "twos",
                       "arguments": []
                      }
                     ]
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "twos",
                     "arguments": []
                    }
                   ]
                  },
                  {
                   "type": "DecimalNumber",
                   "value": "1"
                  }
                 ]
                }
               }
              ]
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "|=",
              "left": {
               "type": "Identifier",
               "name": "prod0"
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "*",
               "left": {
                "type": "Identifier",
                "name": "prod1"
               },
               "right": {
                "type": "Identifier",
                "name": "twos"
               }
              }
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "inverse",
               "identifier": {
                "type": "Identifier",
                "name": "inverse"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "BinaryOperation",
              "operator": "^",
              "left": {
               "type": "TupleExpression",
               "components": [
                {
                 "type": "BinaryOperation",
                 "operator": "*",
                 "left": {
                  "type": "NumberLiteral",
                  "number": "3",
                  "subdenomination": null
                 },
                 "right": {
                  "type": "Identifier",
                  "name": "denominator"
                 }
                }
               ],
               "isArray": false
              },
              "right": {
               "type": "NumberLiteral",
               "number": "2",
               "subdenomination": null
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "*=",
              "left": {
               "type": "Identifier",
               "name": "inverse"
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "-",
               "left": {
                "type": "NumberLiteral",
                "number": "2",
                "subdenomination": null
               },
               "right": {
                "type": "BinaryOperation",
                "operator": "*",
                "left": {
                 "type": "Identifier",
                 "name": "denominator"
                },
                "right": {
                 "type": "Identifier",
                 "name": "inverse"
                }
               }
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "*=",
              "left": {
               "type": "Identifier",
               "name": "inverse"
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "-",
               "left": {
                "type": "NumberLiteral",
                "number": "2",
                "subdenomination": null
               },
               "right": {
                "type": "BinaryOperation",
                "operator": "*",
                "left": {
                 "type": "Identifier",
                 "name": "denominator"
                },
                "right": {
                 "type": "Identifier",
                 "name": "inverse"
                }
               }
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "*=",
              "left": {
               "type": "Identifier",
               "name": "inverse"
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "-",
               "left": {
                "type": "NumberLiteral",
                "number": "2",
                "subdenomination": null
               },
               "right": {
                "type": "BinaryOperation",
                "operator": "*",
                "left": {
                 "type": "Identifier",
                 "name": "denominator"
                },
                "right": {
                 "type": "Identifier",
                 "name": "inverse"
                }
               }
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "*=",
              "left": {
               "type": "Identifier",
               "name": "inverse"
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "-",
               "left": {
                "type": "NumberLiteral",
                "number": "2",
                "subdenomination": null
               },
               "right": {
                "type": "BinaryOperation",
                "operator": "*",
                "left": {
                 "type": "Identifier",
                 "name": "denominator"
                },
                "right": {
                 "type": "Identifier",
                 "name": "inverse"
                }
               }
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "*=",
              "left": {
               "type": "Identifier",
               "name": "inverse"
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "-",
               "left": {
                "type": "NumberLiteral",
                "number": "2",
                "subdenomination": null
               },
               "right": {
                "type": "BinaryOperation",
                "operator": "*",
                "left": {
                 "type": "Identifier",
                 "name": "denominator"
                },
                "right": {
                 "type": "Identifier",
                 "name": "inverse"
                }
               }
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "*=",
              "left": {
               "type": "Identifier",
               "name": "inverse"
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "-",
               "left": {
                "type": "NumberLiteral",
                "number": "2",
                "subdenomination": null
               },
               "right": {
                "type": "BinaryOperation",
                "operator": "*",
                "left": {
                 "type": "Identifier",
                 "name": "denominator"
                },
                "right": {
                 "type": "Identifier",
                 "name": "inverse"
                }
               }
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "result"
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "*",
               "left": {
                "type": "Identifier",
                "name": "prod0"
               },
               "right": {
                "type": "Identifier",
                "name": "inverse"
               }
              }
             }
            },
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "Identifier",
              "name": "result"
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      }
     ],
     "kind": "library"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-08-basin/src/libraries/LibLastReserveBytes.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.8.20"
    },
    {
     "type": "ImportDirective",
     "path": "src/libraries/ABDKMathQuad.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "src/libraries/ABDKMathQuad.sol",
      "parts": [
       "src/libraries/ABDKMathQuad.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "ABDKMathQuad",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "ABDKMathQuad"
       },
       null
      ]
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "LibLastReserveBytes",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "libraryName": "ABDKMathQuad",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "bytes16",
        "stateMutability": null
       },
       "libraryName": "ABDKMathQuad",
       "functions": [],
       "operators": []
      },
      {
       "type": "FunctionDefinition",
       "name": "readNumberOfReserves",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "slot",
         "identifier": {
          "type": "Identifier",
          "name": "slot"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "_numberOfReserves",
         "identifier": {
          "type": "Identifier",
          "name": "_numberOfReserves"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "_numberOfReserves"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "shr",
              "arguments": [
               {
                "type": "DecimalNumber",
                "value": "248"
               },
               {
                "type": "AssemblyCall",
                "functionName": "sload",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "slot",
                  "arguments": []
                 }
                ]
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "storeLastReserves",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "slot",
         "identifier": {
          "type": "Identifier",
          "name": "slot"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint40",
          "stateMutability": null
         },
         "name": "lastTimestamp",
         "identifier": {
          "type": "Identifier",
          "name": "lastTimestamp"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "lastReserves",
         "identifier": {
          "type": "Identifier",
          "name": "lastReserves"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint8",
             "stateMutability": null
            },
            "name": "n",
            "identifier": {
             "type": "Identifier",
             "name": "n"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "ElementaryTypeName",
            "name": "uint8",
            "stateMutability": null
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "lastReserves"
             },
             "memberName": "length"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "bytes16",
              "stateMutability": null
             },
             "length": null
            },
            "name": "reserves",
            "identifier": {
             "type": "Identifier",
             "name": "reserves"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "NewExpression",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "bytes16",
              "stateMutability": null
             },
             "length": null
            }
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "n"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": null
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "Identifier",
            "name": "n"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": true
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "reserves"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "lastReserves"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "i"
                 }
                },
                "memberName": "fromUInt"
               },
               "arguments": [],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "n"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "InlineAssemblyStatement",
             "language": null,
             "flags": [],
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyCall",
                "functionName": "sstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "slot",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "or",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "or",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "shl",
                      "arguments": [
                       {
                        "type": "DecimalNumber",
                        "value": "208"
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "lastTimestamp",
                        "arguments": []
                       }
                      ]
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "shl",
                      "arguments": [
                       {
                        "type": "DecimalNumber",
                        "value": "248"
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "n",
                        "arguments": []
                       }
                      ]
                     }
                    ]
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "shl",
                    "arguments": [
                     {
                      "type": "DecimalNumber",
                      "value": "104"
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "shr",
                      "arguments": [
                       {
                        "type": "DecimalNumber",
                        "value": "152"
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "mload",
                        "arguments": [
                         {
                          "type": "AssemblyCall",
                          "functionName": "add",
                          "arguments": [
                           {
                            "type": "AssemblyCall",
                            "functionName": "reserves",
                            "arguments": []
                           },
                           {
                            "type": "DecimalNumber",
                            "value": "32"
                           }
                          ]
                         }
                        ]
                       }
                      ]
                     }
                    ]
                   }
                  ]
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "ReturnStatement",
             "expression": null
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyCall",
             "functionName": "sstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "slot",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "or",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "or",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "shl",
                   "arguments": [
                    {
                     "type": "DecimalNumber",
                     "value": "208"
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "lastTimestamp",
                     "arguments": []
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "shl",
                   "arguments": [
                    {
                     "type": "DecimalNumber",
                     "value": "248"
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "n",
                     "arguments": []
                    }
                   ]
                  }
                 ]
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "or",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "shl",
                   "arguments": [
                    {
                     "type": "DecimalNumber",
                     "value": "104"
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "shr",
                     "arguments": [
                      {
                       "type": "DecimalNumber",
                       "value": "152"
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "mload",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "add",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "reserves",
                           "arguments": []
                          },
                          {
                           "type": "DecimalNumber",
                           "value": "32"
                          }
                         ]
                        }
                       ]
                      }
                     ]
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "shr",
                   "arguments": [
                    {
                     "type": "DecimalNumber",
                     "value": "152"
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "mload",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "add",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "reserves",
                         "arguments": []
                        },
                        {
                         "type": "DecimalNumber",
                         "value": "64"
                        }
                       ]
                      }
                     ]
                    }
                   ]
                  }
                 ]
                }
               ]
              }
             ]
            }
           ]
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "n"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "2",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "maxI",
               "identifier": {
                "type": "Identifier",
                "name": "maxI"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "BinaryOperation",
              "operator": "/",
              "left": {
               "type": "Identifier",
               "name": "n"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "2",
               "subdenomination": null
              }
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "iByte",
               "identifier": {
                "type": "Identifier",
                "name": "iByte"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": null
            },
            {
             "type": "ForStatement",
             "initExpression": {
              "type": "VariableDeclarationStatement",
              "variables": [
               {
                "type": "VariableDeclaration",
                "typeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "name": "i",
                "identifier": {
                 "type": "Identifier",
                 "name": "i"
                },
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false,
                "expression": null
               }
              ],
              "initialValue": {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              }
             },
             "conditionExpression": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "i"
              },
              "right": {
               "type": "Identifier",
               "name": "maxI"
              }
             },
             "loopExpression": {
              "type": "ExpressionStatement",
              "expression": {
               "type": "UnaryOperation",
               "operator": "++",
               "subExpression": {
                "type": "Identifier",
                "name": "i"
               },
               "isPrefix": true
              }
             },
             "body": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "iByte"
                 },
                 "right": {
                  "type": "BinaryOperation",
                  "operator": "*",
                  "left": {
                   "type": "Identifier",
                   "name": "i"
                  },
                  "right": {
                   "type": "NumberLiteral",
                   "number": "64",
                   "subdenomination": null
                  }
                 }
                }
               },
               {
                "type": "InlineAssemblyStatement",
                "language": null,
                "flags": [],
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "sstore",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "slot",
                       "arguments": []
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "i",
                       "arguments": []
                      }
                     ]
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "mload",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "add",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "reserves",
                           "arguments": []
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "add",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "iByte",
                             "arguments": []
                            },
                            {
                             "type": "DecimalNumber",
                             "value": "32"
                            }
                           ]
                          }
                         ]
                        }
                       ]
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "shr",
                       "arguments": [
                        {
                         "type": "DecimalNumber",
                         "value": "128"
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "mload",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "add",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "reserves",
                             "arguments": []
                            },
                            {
                             "type": "AssemblyCall",
                             "functionName": "add",
                             "arguments": [
                              {
                               "type": "AssemblyCall",
                               "functionName": "iByte",
                               "arguments": []
                              },
                              {
                               "type": "DecimalNumber",
                               "value": "64"
                              }
                             ]
                            }
                           ]
                          }
                         ]
                        }
                       ]
                      }
                     ]
                    }
                   ]
                  }
                 ]
                }
               }
              ]
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "BinaryOperation",
               "operator": "&",
               "left": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "reserves"
                },
                "memberName": "length"
               },
               "right": {
                "type": "NumberLiteral",
                "number": "1",
                "subdenomination": null
               }
              },
              "right": {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "iByte"
                 },
                 "right": {
                  "type": "BinaryOperation",
                  "operator": "*",
                  "left": {
                   "type": "Identifier",
                   "name": "maxI"
                  },
                  "right": {
                   "type": "NumberLiteral",
                   "number": "64",
                   "subdenomination": null
                  }
                 }
                }
               },
               {
                "type": "InlineAssemblyStatement",
                "language": null,
                "flags": [],
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "sstore",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "slot",
                       "arguments": []
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "maxI",
                       "arguments": []
                      }
                     ]
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "mload",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "add",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "reserves",
                           "arguments": []
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "add",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "iByte",
                             "arguments": []
                            },
                            {
                             "type": "DecimalNumber",
                             "value": "32"
                            }
                           ]
                          }
                         ]
                        }
                       ]
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "shr",
                       "arguments": [
                        {
                         "type": "DecimalNumber",
                         "value": "128"
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "shl",
                         "arguments": [
                          {
                           "type": "DecimalNumber",
                           "value": "128"
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "sload",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "add",
                             "arguments": [
                              {
                               "type": "AssemblyCall",
                               "functionName": "slot",
                               "arguments": []
                              },
                              {
                               "type": "AssemblyCall",
                               "functionName": "maxI",
                               "arguments": []
                              }
                             ]
                            }
                           ]
                          }
                         ]
                        }
                       ]
                      }
                     ]
                    }
                   ]
                  }
                 ]
                }
               }
              ]
             },
             "falseBody": null
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "readLastReserves",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "slot",
         "identifier": {
          "type": "Identifier",
          "name": "slot"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "n",
         "identifier": {
          "type": "Identifier",
          "name": "n"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint40",
          "stateMutability": null
         },
         "name": "lastTimestamp",
         "identifier": {
          "type": "Identifier",
          "name": "lastTimestamp"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "lastReserves",
         "identifier": {
          "type": "Identifier",
          "name": "lastReserves"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "temp",
            "identifier": {
             "type": "Identifier",
             "name": "temp"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "temp"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "sload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "slot",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "n"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "shr",
              "arguments": [
               {
                "type": "DecimalNumber",
                "value": "248"
               },
               {
                "type": "AssemblyCall",
                "functionName": "temp",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "lastTimestamp"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "shr",
              "arguments": [
               {
                "type": "DecimalNumber",
                "value": "208"
               },
               {
                "type": "AssemblyCall",
                "functionName": "temp",
                "arguments": []
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "n"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "ReturnStatement",
           "expression": {
            "type": "TupleExpression",
            "components": [
             {
              "type": "Identifier",
              "name": "n"
             },
             {
              "type": "Identifier",
              "name": "lastTimestamp"
             },
             {
              "type": "Identifier",
              "name": "lastReserves"
             }
            ],
            "isArray": false
           }
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "bytes16",
              "stateMutability": null
             },
             "length": null
            },
            "name": "reserves",
            "identifier": {
             "type": "Identifier",
             "name": "reserves"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "NewExpression",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "bytes16",
              "stateMutability": null
             },
             "length": null
            }
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "n"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "reserves",
                 "arguments": []
                },
                {
                 "type": "DecimalNumber",
                 "value": "32"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "shl",
               "arguments": [
                {
                 "type": "DecimalNumber",
                 "value": "152"
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "shr",
                 "arguments": [
                  {
                   "type": "DecimalNumber",
                   "value": "104"
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "temp",
                   "arguments": []
                  }
                 ]
                }
               ]
              }
             ]
            }
           ]
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "n"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "lastReserves"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "NewExpression",
                "typeName": {
                 "type": "ArrayTypeName",
                 "baseTypeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256",
                  "stateMutability": null
                 },
                 "length": null
                }
               },
               "arguments": [
                {
                 "type": "NumberLiteral",
                 "number": "1",
                 "subdenomination": null
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "lastReserves"
               },
               "index": {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "reserves"
                 },
                 "index": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                 }
                },
                "memberName": "toUInt"
               },
               "arguments": [],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "TupleExpression",
              "components": [
               {
                "type": "Identifier",
                "name": "n"
               },
               {
                "type": "Identifier",
                "name": "lastTimestamp"
               },
               {
                "type": "Identifier",
                "name": "lastReserves"
               }
              ],
              "isArray": false
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "reserves",
                 "arguments": []
                },
                {
                 "type": "DecimalNumber",
                 "value": "64"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "shl",
               "arguments": [
                {
                 "type": "DecimalNumber",
                 "value": "152"
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "temp",
                 "arguments": []
                }
               ]
              }
             ]
            }
           ]
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "n"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "2",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "iByte",
               "identifier": {
                "type": "Identifier",
                "name": "iByte"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": null
            },
            {
             "type": "ForStatement",
             "initExpression": {
              "type": "VariableDeclarationStatement",
              "variables": [
               {
                "type": "VariableDeclaration",
                "typeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "name": "i",
                "identifier": {
                 "type": "Identifier",
                 "name": "i"
                },
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false,
                "expression": null
               }
              ],
              "initialValue": {
               "type": "NumberLiteral",
               "number": "3",
               "subdenomination": null
              }
             },
             "conditionExpression": {
              "type": "BinaryOperation",
              "operator": "<=",
              "left": {
               "type": "Identifier",
               "name": "i"
              },
              "right": {
               "type": "Identifier",
               "name": "n"
              }
             },
             "loopExpression": {
              "type": "ExpressionStatement",
              "expression": {
               "type": "UnaryOperation",
               "operator": "++",
               "subExpression": {
                "type": "Identifier",
                "name": "i"
               },
               "isPrefix": true
              }
             },
             "body": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "iByte"
                 },
                 "right": {
                  "type": "BinaryOperation",
                  "operator": "/",
                  "left": {
                   "type": "TupleExpression",
                   "components": [
                    {
                     "type": "BinaryOperation",
                     "operator": "-",
                     "left": {
                      "type": "Identifier",
                      "name": "i"
                     },
                     "right": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                     }
                    }
                   ],
                   "isArray": false
                  },
                  "right": {
                   "type": "NumberLiteral",
                   "number": "2",
                   "subdenomination": null
                  }
                 }
                }
               },
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "==",
                 "left": {
                  "type": "BinaryOperation",
                  "operator": "&",
                  "left": {
                   "type": "Identifier",
                   "name": "i"
                  },
                  "right": {
                   "type": "NumberLiteral",
                   "number": "1",
                   "subdenomination": null
                  }
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "1",
                  "subdenomination": null
                 }
                },
                "trueBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "InlineAssemblyStatement",
                   "language": null,
                   "flags": [],
                   "body": {
                    "type": "AssemblyBlock",
                    "operations": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "mstore",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "add",
                        "arguments": [
                         {
                          "type": "AssemblyCall",
                          "functionName": "reserves",
                          "arguments": []
                         },
                         {
                          "type": "AssemblyCall",
                          "functionName": "mul",
                          "arguments": [
                           {
                            "type": "AssemblyCall",
                            "functionName": "i",
                            "arguments": []
                           },
                           {
                            "type": "DecimalNumber",
                            "value": "32"
                           }
                          ]
                         }
                        ]
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "sload",
                        "arguments": [
                         {
                          "type": "AssemblyCall",
                          "functionName": "add",
                          "arguments": [
                           {
                            "type": "AssemblyCall",
                            "functionName": "slot",
                            "arguments": []
                           },
                           {
                            "type": "AssemblyCall",
                            "functionName": "iByte",
                            "arguments": []
                           }
                          ]
                         }
                        ]
                       }
                      ]
                     }
                    ]
                   }
                  }
                 ]
                },
                "falseBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "InlineAssemblyStatement",
                   "language": null,
                   "flags": [],
                   "body": {
                    "type": "AssemblyBlock",
                    "operations": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "mstore",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "add",
                        "arguments": [
                         {
                          "type": "AssemblyCall",
                          "functionName": "reserves",
                          "arguments": []
                         },
                         {
                          "type": "AssemblyCall",
                          "functionName": "mul",
                          "arguments": [
                           {
                            "type": "AssemblyCall",
                            "functionName": "i",
                            "arguments": []
                           },
                           {
                            "type": "DecimalNumber",
                            "value": "32"
                           }
                          ]
                         }
                        ]
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "shl",
                        "arguments": [
                         {
                          "type": "DecimalNumber",
                          "value": "128"
                         },
                         {
                          "type": "AssemblyCall",
                          "functionName": "sload",
                          "arguments": [
                           {
                            "type": "AssemblyCall",
                            "functionName": "add",
                            "arguments": [
                             {
                              "type": "AssemblyCall",
                              "functionName": "slot",
                              "arguments": []
                             },
                             {
                              "type": "AssemblyCall",
                              "functionName": "iByte",
                              "arguments": []
                             }
                            ]
                           }
                          ]
                         }
                        ]
                       }
                      ]
                     }
                    ]
                   }
                  }
                 ]
                }
               }
              ]
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "lastReserves"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "NewExpression",
             "typeName": {
              "type": "ArrayTypeName",
              "baseTypeName": {
               "type": "ElementaryTypeName",
               "name": "uint256",
               "stateMutability": null
              },
              "length": null
             }
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "n"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": null
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "Identifier",
            "name": "n"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": true
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "lastReserves"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "reserves"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "i"
                 }
                },
                "memberName": "toUInt"
               },
               "arguments": [],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "readBytes",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "slot",
         "identifier": {
          "type": "Identifier",
          "name": "slot"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "value",
         "identifier": {
          "type": "Identifier",
          "name": "value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "value"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "sload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "slot",
                "arguments": []
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "library"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-08-basin/src/libraries/LibContractInfo.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.8.20"
    },
    {
     "type": "ContractDefinition",
     "name": "LibContractInfo",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "getSymbol",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_contract",
         "identifier": {
          "type": "Identifier",
          "name": "_contract"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "symbol",
         "identifier": {
          "type": "Identifier",
          "name": "symbol"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "name": "success",
            "identifier": {
             "type": "Identifier",
             "name": "success"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bool",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "data",
            "identifier": {
             "type": "Identifier",
             "name": "data"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes",
             "stateMutability": null
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_contract"
            },
            "memberName": "staticcall"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "abi"
              },
              "memberName": "encodeWithSignature"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "symbol()",
               "parts": [
                "symbol()"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "symbol"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "NewExpression",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "string",
              "stateMutability": null
             }
            },
            "arguments": [
             {
              "type": "NumberLiteral",
              "number": "4",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "Identifier",
           "name": "success"
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "symbol"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "decode"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "data"
                },
                {
                 "type": "TupleExpression",
                 "components": [
                  {
                   "type": "ElementaryTypeName",
                   "name": "string",
                   "stateMutability": null
                  }
                 ],
                 "isArray": false
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "InlineAssemblyStatement",
             "language": null,
             "flags": [],
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "symbol",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x20"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "shl",
                  "arguments": [
                   {
                    "type": "DecimalNumber",
                    "value": "224"
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "shr",
                    "arguments": [
                     {
                      "type": "DecimalNumber",
                      "value": "128"
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "_contract",
                      "arguments": []
                     }
                    ]
                   }
                  ]
                 }
                ]
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getName",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_contract",
         "identifier": {
          "type": "Identifier",
          "name": "_contract"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "name",
         "identifier": {
          "type": "Identifier",
          "name": "name"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "name": "success",
            "identifier": {
             "type": "Identifier",
             "name": "success"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bool",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "data",
            "identifier": {
             "type": "Identifier",
             "name": "data"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes",
             "stateMutability": null
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_contract"
            },
            "memberName": "staticcall"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "abi"
              },
              "memberName": "encodeWithSignature"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "name()",
               "parts": [
                "name()"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "name"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "NewExpression",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "string",
              "stateMutability": null
             }
            },
            "arguments": [
             {
              "type": "NumberLiteral",
              "number": "8",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "Identifier",
           "name": "success"
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "name"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "decode"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "data"
                },
                {
                 "type": "TupleExpression",
                 "components": [
                  {
                   "type": "ElementaryTypeName",
                   "name": "string",
                   "stateMutability": null
                  }
                 ],
                 "isArray": false
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "InlineAssemblyStatement",
             "language": null,
             "flags": [],
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "name",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x20"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "shl",
                  "arguments": [
                   {
                    "type": "DecimalNumber",
                    "value": "224"
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "shr",
                    "arguments": [
                     {
                      "type": "DecimalNumber",
                      "value": "128"
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "_contract",
                      "arguments": []
                     }
                    ]
                   }
                  ]
                 }
                ]
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getDecimals",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_contract",
         "identifier": {
          "type": "Identifier",
          "name": "_contract"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "decimals",
         "identifier": {
          "type": "Identifier",
          "name": "decimals"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "name": "success",
            "identifier": {
             "type": "Identifier",
             "name": "success"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bool",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "data",
            "identifier": {
             "type": "Identifier",
             "name": "data"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes",
             "stateMutability": null
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_contract"
            },
            "memberName": "staticcall"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "abi"
              },
              "memberName": "encodeWithSignature"
             },
             "arguments": [
              {
               "type": "StringLiteral",
               "value": "decimals()",
               "parts": [
                "decimals()"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "decimals"
           },
           "right": {
            "type": "Conditional",
            "condition": {
             "type": "Identifier",
             "name": "success"
            },
            "trueExpression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "abi"
              },
              "memberName": "decode"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "data"
              },
              {
               "type": "TupleExpression",
               "components": [
                {
                 "type": "ElementaryTypeName",
                 "name": "uint8",
                 "stateMutability": null
                }
               ],
               "isArray": false
              }
             ],
             "names": [],
             "identifiers": []
            },
            "falseExpression": {
             "type": "NumberLiteral",
             "number": "18",
             "subdenomination": null
            }
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "library"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-08-basin/src/libraries/LibClone.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.8.20"
    },
    {
     "type": "ContractDefinition",
     "name": "LibClone",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "CustomErrorDefinition",
       "name": "DeploymentFailed",
       "parameters": []
      },
      {
       "type": "CustomErrorDefinition",
       "name": "SaltDoesNotStartWithCaller",
       "parameters": []
      },
      {
       "type": "FunctionDefinition",
       "name": "clone",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "implementation",
         "identifier": {
          "type": "Identifier",
          "name": "implementation"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "instance",
         "identifier": {
          "type": "Identifier",
          "name": "instance"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x21"
              },
              {
               "type": "HexNumber",
               "value": "0x5af43d3d93803e602a57fd5bf3"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x14"
              },
              {
               "type": "AssemblyCall",
               "functionName": "implementation",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x00"
              },
              {
               "type": "HexNumber",
               "value": "0x602c3d8160093d39f33d3d3d3d363d3d37363d73"
              }
             ]
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "instance"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "create",
              "arguments": [
               {
                "type": "DecimalNumber",
                "value": "0"
               },
               {
                "type": "HexNumber",
                "value": "0x0c"
               },
               {
                "type": "HexNumber",
                "value": "0x35"
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x21"
              },
              {
               "type": "DecimalNumber",
               "value": "0"
              }
             ]
            },
            {
             "type": "AssemblyIf",
             "condition": {
              "type": "AssemblyCall",
              "functionName": "iszero",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "instance",
                "arguments": []
               }
              ]
             },
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x00"
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x30116425"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "revert",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x1c"
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x04"
                 }
                ]
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "cloneDeterministic",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "implementation",
         "identifier": {
          "type": "Identifier",
          "name": "implementation"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "salt",
         "identifier": {
          "type": "Identifier",
          "name": "salt"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "instance",
         "identifier": {
          "type": "Identifier",
          "name": "instance"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x21"
              },
              {
               "type": "HexNumber",
               "value": "0x5af43d3d93803e602a57fd5bf3"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x14"
              },
              {
               "type": "AssemblyCall",
               "functionName": "implementation",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x00"
              },
              {
               "type": "HexNumber",
               "value": "0x602c3d8160093d39f33d3d3d3d363d3d37363d73"
              }
             ]
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "instance"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "create2",
              "arguments": [
               {
                "type": "DecimalNumber",
                "value": "0"
               },
               {
                "type": "HexNumber",
                "value": "0x0c"
               },
               {
                "type": "HexNumber",
                "value": "0x35"
               },
               {
                "type": "AssemblyCall",
                "functionName": "salt",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x21"
              },
              {
               "type": "DecimalNumber",
               "value": "0"
              }
             ]
            },
            {
             "type": "AssemblyIf",
             "condition": {
              "type": "AssemblyCall",
              "functionName": "iszero",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "instance",
                "arguments": []
               }
              ]
             },
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x00"
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x30116425"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "revert",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x1c"
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x04"
                 }
                ]
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "initCodeHash",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "implementation",
         "identifier": {
          "type": "Identifier",
          "name": "implementation"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "hash",
         "identifier": {
          "type": "Identifier",
          "name": "hash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x21"
              },
              {
               "type": "HexNumber",
               "value": "0x5af43d3d93803e602a57fd5bf3"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x14"
              },
              {
               "type": "AssemblyCall",
               "functionName": "implementation",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x00"
              },
              {
               "type": "HexNumber",
               "value": "0x602c3d8160093d39f33d3d3d3d363d3d37363d73"
              }
             ]
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "hash"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "keccak256",
              "arguments": [
               {
                "type": "HexNumber",
                "value": "0x0c"
               },
               {
                "type": "HexNumber",
                "value": "0x35"
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x21"
              },
              {
               "type": "DecimalNumber",
               "value": "0"
              }
             ]
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "predictDeterministicAddress",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "implementation",
         "identifier": {
          "type": "Identifier",
          "name": "implementation"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "salt",
         "identifier": {
          "type": "Identifier",
          "name": "salt"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "deployer",
         "identifier": {
          "type": "Identifier",
          "name": "deployer"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "predicted",
         "identifier": {
          "type": "Identifier",
          "name": "predicted"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "hash",
            "identifier": {
             "type": "Identifier",
             "name": "hash"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "initCodeHash"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "implementation"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "predicted"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "predictDeterministicAddress"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "hash"
             },
             {
              "type": "Identifier",
              "name": "salt"
             },
             {
              "type": "Identifier",
              "name": "deployer"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "clone",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "implementation",
         "identifier": {
          "type": "Identifier",
          "name": "implementation"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "instance",
         "identifier": {
          "type": "Identifier",
          "name": "instance"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "mBefore3"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "sub",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "data",
                  "arguments": []
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x60"
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "mBefore2"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "sub",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "data",
                  "arguments": []
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x40"
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "mBefore1"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "sub",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "data",
                  "arguments": []
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x20"
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "dataLength"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "data",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "dataEnd"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "add",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "data",
                  "arguments": []
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x20"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "dataLength",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "mAfter1"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "dataEnd",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "extraLength"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "dataLength",
                "arguments": []
               },
               {
                "type": "DecimalNumber",
                "value": "2"
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "data",
               "arguments": []
              },
              {
               "type": "HexNumber",
               "value": "0x5af43d3d93803e606057fd5bf3"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "sub",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "data",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x0d"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "implementation",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "sub",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "data",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x21"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "or",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "shl",
                 "arguments": [
                  {
                   "type": "HexNumber",
                   "value": "0x48"
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "extraLength",
                   "arguments": []
                  }
                 ]
                },
                {
                 "type": "HexNumber",
                 "value": "0x593da1005b363d3d373d3d3d3d610000806062363936013d73"
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "sub",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "data",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x3a"
                }
               ]
              },
              {
               "type": "HexNumber",
               "value": "0x9e4ac34f21c619cefc926c8bd93b54bf5a39c7ab2127a895af1cc0691d7e3dff"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "sub",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "data",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x5a"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "or",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "shl",
                 "arguments": [
                  {
                   "type": "HexNumber",
                   "value": "0x78"
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "extraLength",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x62"
                    }
                   ]
                  }
                 ]
                },
                {
                 "type": "HexNumber",
                 "value": "0x6100003d81600a3d39f336602c57343d527f"
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "dataEnd",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "shl",
               "arguments": [
                {
                 "type": "HexNumber",
                 "value": "0xf0"
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "extraLength",
                 "arguments": []
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "instance"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "create",
              "arguments": [
               {
                "type": "DecimalNumber",
                "value": "0"
               },
               {
                "type": "AssemblyCall",
                "functionName": "sub",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "data",
                  "arguments": []
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x4c"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "add",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "extraLength",
                  "arguments": []
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x6c"
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyIf",
             "condition": {
              "type": "AssemblyCall",
              "functionName": "iszero",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "instance",
                "arguments": []
               }
              ]
             },
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x00"
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x30116425"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "revert",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x1c"
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x04"
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "dataEnd",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "mAfter1",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "data",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "dataLength",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "sub",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "data",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x20"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "mBefore1",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "sub",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "data",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x40"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "mBefore2",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "sub",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "data",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x60"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "mBefore3",
               "arguments": []
              }
             ]
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "cloneDeterministic",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "implementation",
         "identifier": {
          "type": "Identifier",
          "name": "implementation"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "salt",
         "identifier": {
          "type": "Identifier",
          "name": "salt"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "instance",
         "identifier": {
          "type": "Identifier",
          "name": "instance"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "mBefore3"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "sub",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "data",
                  "arguments": []
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x60"
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "mBefore2"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "sub",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "data",
                  "arguments": []
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x40"
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "mBefore1"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "sub",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "data",
                  "arguments": []
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x20"
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "dataLength"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "data",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "dataEnd"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "add",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "data",
                  "arguments": []
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x20"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "dataLength",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "mAfter1"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "dataEnd",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "extraLength"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "dataLength",
                "arguments": []
               },
               {
                "type": "DecimalNumber",
                "value": "2"
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "data",
               "arguments": []
              },
              {
               "type": "HexNumber",
               "value": "0x5af43d3d93803e606057fd5bf3"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "sub",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "data",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x0d"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "implementation",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "sub",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "data",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x21"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "or",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "shl",
                 "arguments": [
                  {
                   "type": "HexNumber",
                   "value": "0x48"
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "extraLength",
                   "arguments": []
                  }
                 ]
                },
                {
                 "type": "HexNumber",
                 "value": "0x593da1005b363d3d373d3d3d3d610000806062363936013d73"
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "sub",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "data",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x3a"
                }
               ]
              },
              {
               "type": "HexNumber",
               "value": "0x9e4ac34f21c619cefc926c8bd93b54bf5a39c7ab2127a895af1cc0691d7e3dff"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "sub",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "data",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x5a"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "or",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "shl",
                 "arguments": [
                  {
                   "type": "HexNumber",
                   "value": "0x78"
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "extraLength",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x62"
                    }
                   ]
                  }
                 ]
                },
                {
                 "type": "HexNumber",
                 "value": "0x6100003d81600a3d39f336602c57343d527f"
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "dataEnd",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "shl",
               "arguments": [
                {
                 "type": "HexNumber",
                 "value": "0xf0"
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "extraLength",
                 "arguments": []
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "instance"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "create2",
              "arguments": [
               {
                "type": "DecimalNumber",
                "value": "0"
               },
               {
                "type": "AssemblyCall",
                "functionName": "sub",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "data",
                  "arguments": []
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x4c"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "add",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "extraLength",
                  "arguments": []
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x6c"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "salt",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyIf",
             "condition": {
              "type": "AssemblyCall",
              "functionName": "iszero",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "instance",
                "arguments": []
               }
              ]
             },
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x00"
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x30116425"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "revert",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x1c"
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x04"
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "dataEnd",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "mAfter1",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "data",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "dataLength",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "sub",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "data",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x20"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "mBefore1",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "sub",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "data",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x40"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "mBefore2",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "sub",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "data",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x60"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "mBefore3",
               "arguments": []
              }
             ]
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "initCodeHash",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "implementation",
         "identifier": {
          "type": "Identifier",
          "name": "implementation"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "hash",
         "identifier": {
          "type": "Identifier",
          "name": "hash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "mBefore3"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "sub",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "data",
                  "arguments": []
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x60"
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "mBefore2"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "sub",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "data",
                  "arguments": []
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x40"
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "mBefore1"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "sub",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "data",
                  "arguments": []
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x20"
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "dataLength"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "data",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "dataEnd"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "add",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "data",
                  "arguments": []
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x20"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "dataLength",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "mAfter1"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "dataEnd",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "extraLength"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "dataLength",
                "arguments": []
               },
               {
                "type": "DecimalNumber",
                "value": "2"
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "data",
               "arguments": []
              },
              {
               "type": "HexNumber",
               "value": "0x5af43d3d93803e606057fd5bf3"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "sub",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "data",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x0d"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "implementation",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "sub",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "data",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x21"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "or",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "shl",
                 "arguments": [
                  {
                   "type": "HexNumber",
                   "value": "0x48"
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "extraLength",
                   "arguments": []
                  }
                 ]
                },
                {
                 "type": "HexNumber",
                 "value": "0x593da1005b363d3d373d3d3d3d610000806062363936013d73"
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "sub",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "data",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x3a"
                }
               ]
              },
              {
               "type": "HexNumber",
               "value": "0x9e4ac34f21c619cefc926c8bd93b54bf5a39c7ab2127a895af1cc0691d7e3dff"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "sub",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "data",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x5a"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "or",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "shl",
                 "arguments": [
                  {
                   "type": "HexNumber",
                   "value": "0x78"
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "extraLength",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x62"
                    }
                   ]
                  }
                 ]
                },
                {
                 "type": "HexNumber",
                 "value": "0x6100003d81600a3d39f336602c57343d527f"
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "dataEnd",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "shl",
               "arguments": [
                {
                 "type": "HexNumber",
                 "value": "0xf0"
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "extraLength",
                 "arguments": []
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "hash"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "keccak256",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "sub",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "data",
                  "arguments": []
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x4c"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "add",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "extraLength",
                  "arguments": []
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x6c"
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "dataEnd",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "mAfter1",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "data",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "dataLength",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "sub",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "data",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x20"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "mBefore1",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "sub",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "data",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x40"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "mBefore2",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "sub",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "data",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x60"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "mBefore3",
               "arguments": []
              }
             ]
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "predictDeterministicAddress",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "implementation",
         "identifier": {
          "type": "Identifier",
          "name": "implementation"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "salt",
         "identifier": {
          "type": "Identifier",
          "name": "salt"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "deployer",
         "identifier": {
          "type": "Identifier",
          "name": "deployer"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "predicted",
         "identifier": {
          "type": "Identifier",
          "name": "predicted"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "hash",
            "identifier": {
             "type": "Identifier",
             "name": "hash"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "initCodeHash"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "implementation"
            },
            {
             "type": "Identifier",
             "name": "data"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "predicted"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "predictDeterministicAddress"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "hash"
             },
             {
              "type": "Identifier",
              "name": "salt"
             },
             {
              "type": "Identifier",
              "name": "deployer"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "predictDeterministicAddress",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "hash",
         "identifier": {
          "type": "Identifier",
          "name": "hash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "salt",
         "identifier": {
          "type": "Identifier",
          "name": "salt"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "deployer",
         "identifier": {
          "type": "Identifier",
          "name": "deployer"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "predicted",
         "identifier": {
          "type": "Identifier",
          "name": "predicted"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyCall",
             "functionName": "mstore8",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x00"
              },
              {
               "type": "HexNumber",
               "value": "0xff"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x35"
              },
              {
               "type": "AssemblyCall",
               "functionName": "hash",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x01"
              },
              {
               "type": "AssemblyCall",
               "functionName": "shl",
               "arguments": [
                {
                 "type": "DecimalNumber",
                 "value": "96"
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "deployer",
                 "arguments": []
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x15"
              },
              {
               "type": "AssemblyCall",
               "functionName": "salt",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "predicted"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "keccak256",
              "arguments": [
               {
                "type": "HexNumber",
                "value": "0x00"
               },
               {
                "type": "HexNumber",
                "value": "0x55"
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x35"
              },
              {
               "type": "DecimalNumber",
               "value": "0"
              }
             ]
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "checkStartsWithCaller",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "salt",
         "identifier": {
          "type": "Identifier",
          "name": "salt"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyIf",
             "condition": {
              "type": "AssemblyCall",
              "functionName": "iszero",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "or",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "iszero",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "shr",
                    "arguments": [
                     {
                      "type": "DecimalNumber",
                      "value": "96"
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "salt",
                      "arguments": []
                     }
                    ]
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "eq",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "caller",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "shr",
                    "arguments": [
                     {
                      "type": "DecimalNumber",
                      "value": "96"
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "salt",
                      "arguments": []
                     }
                    ]
                   }
                  ]
                 }
                ]
               }
              ]
             },
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x00"
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x2f634836"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "revert",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x1c"
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x04"
                 }
                ]
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "library"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-08-basin/src/libraries/LibBytes16.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.8.20"
    },
    {
     "type": "ContractDefinition",
     "name": "LibBytes16",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "storeBytes16",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "slot",
         "identifier": {
          "type": "Identifier",
          "name": "slot"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "bytes16",
           "stateMutability": null
          },
          "length": null
         },
         "name": "reserves",
         "identifier": {
          "type": "Identifier",
          "name": "reserves"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "reserves"
            },
            "memberName": "length"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "2",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "InlineAssemblyStatement",
             "language": null,
             "flags": [],
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyCall",
                "functionName": "sstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "slot",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "mload",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "add",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "reserves",
                        "arguments": []
                       },
                       {
                        "type": "DecimalNumber",
                        "value": "32"
                       }
                      ]
                     }
                    ]
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "shr",
                    "arguments": [
                     {
                      "type": "DecimalNumber",
                      "value": "128"
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "mload",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "add",
                        "arguments": [
                         {
                          "type": "AssemblyCall",
                          "functionName": "reserves",
                          "arguments": []
                         },
                         {
                          "type": "DecimalNumber",
                          "value": "64"
                         }
                        ]
                       }
                      ]
                     }
                    ]
                   }
                  ]
                 }
                ]
               }
              ]
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "maxI",
               "identifier": {
                "type": "Identifier",
                "name": "maxI"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "BinaryOperation",
              "operator": "/",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "reserves"
               },
               "memberName": "length"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "2",
               "subdenomination": null
              }
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "iByte",
               "identifier": {
                "type": "Identifier",
                "name": "iByte"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": null
            },
            {
             "type": "ForStatement",
             "initExpression": {
              "type": "VariableDeclarationStatement",
              "variables": [
               {
                "type": "VariableDeclaration",
                "typeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "name": "i",
                "identifier": {
                 "type": "Identifier",
                 "name": "i"
                },
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false,
                "expression": null
               }
              ],
              "initialValue": null
             },
             "conditionExpression": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "i"
              },
              "right": {
               "type": "Identifier",
               "name": "maxI"
              }
             },
             "loopExpression": {
              "type": "ExpressionStatement",
              "expression": {
               "type": "UnaryOperation",
               "operator": "++",
               "subExpression": {
                "type": "Identifier",
                "name": "i"
               },
               "isPrefix": true
              }
             },
             "body": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "iByte"
                 },
                 "right": {
                  "type": "BinaryOperation",
                  "operator": "*",
                  "left": {
                   "type": "Identifier",
                   "name": "i"
                  },
                  "right": {
                   "type": "NumberLiteral",
                   "number": "64",
                   "subdenomination": null
                  }
                 }
                }
               },
               {
                "type": "InlineAssemblyStatement",
                "language": null,
                "flags": [],
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "sstore",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "slot",
                       "arguments": []
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "i",
                       "arguments": []
                      }
                     ]
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "mload",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "add",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "reserves",
                           "arguments": []
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "add",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "iByte",
                             "arguments": []
                            },
                            {
                             "type": "DecimalNumber",
                             "value": "32"
                            }
                           ]
                          }
                         ]
                        }
                       ]
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "shr",
                       "arguments": [
                        {
                         "type": "DecimalNumber",
                         "value": "128"
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "mload",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "add",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "reserves",
                             "arguments": []
                            },
                            {
                             "type": "AssemblyCall",
                             "functionName": "add",
                             "arguments": [
                              {
                               "type": "AssemblyCall",
                               "functionName": "iByte",
                               "arguments": []
                              },
                              {
                               "type": "DecimalNumber",
                               "value": "64"
                              }
                             ]
                            }
                           ]
                          }
                         ]
                        }
                       ]
                      }
                     ]
                    }
                   ]
                  }
                 ]
                }
               }
              ]
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "BinaryOperation",
               "operator": "&",
               "left": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "reserves"
                },
                "memberName": "length"
               },
               "right": {
                "type": "NumberLiteral",
                "number": "1",
                "subdenomination": null
               }
              },
              "right": {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "iByte"
                 },
                 "right": {
                  "type": "BinaryOperation",
                  "operator": "*",
                  "left": {
                   "type": "Identifier",
                   "name": "maxI"
                  },
                  "right": {
                   "type": "NumberLiteral",
                   "number": "64",
                   "subdenomination": null
                  }
                 }
                }
               },
               {
                "type": "InlineAssemblyStatement",
                "language": null,
                "flags": [],
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "sstore",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "slot",
                       "arguments": []
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "maxI",
                       "arguments": []
                      }
                     ]
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "mload",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "add",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "reserves",
                           "arguments": []
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "add",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "iByte",
                             "arguments": []
                            },
                            {
                             "type": "DecimalNumber",
                             "value": "32"
                            }
                           ]
                          }
                         ]
                        }
                       ]
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "shr",
                       "arguments": [
                        {
                         "type": "DecimalNumber",
                         "value": "128"
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "shl",
                         "arguments": [
                          {
                           "type": "DecimalNumber",
                           "value": "128"
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "sload",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "add",
                             "arguments": [
                              {
                               "type": "AssemblyCall",
                               "functionName": "slot",
                               "arguments": []
                              },
                              {
                               "type": "AssemblyCall",
                               "functionName": "maxI",
                               "arguments": []
                              }
                             ]
                            }
                           ]
                          }
                         ]
                        }
                       ]
                      }
                     ]
                    }
                   ]
                  }
                 ]
                }
               }
              ]
             },
             "falseBody": null
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "readBytes16",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "slot",
         "identifier": {
          "type": "Identifier",
          "name": "slot"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "n",
         "identifier": {
          "type": "Identifier",
          "name": "n"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "bytes16",
           "stateMutability": null
          },
          "length": null
         },
         "name": "reserves",
         "identifier": {
          "type": "Identifier",
          "name": "reserves"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "reserves"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "NewExpression",
             "typeName": {
              "type": "ArrayTypeName",
              "baseTypeName": {
               "type": "ElementaryTypeName",
               "name": "bytes16",
               "stateMutability": null
              },
              "length": null
             }
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "n"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "n"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "2",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "InlineAssemblyStatement",
             "language": null,
             "flags": [],
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "reserves",
                    "arguments": []
                   },
                   {
                    "type": "DecimalNumber",
                    "value": "32"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "sload",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "slot",
                    "arguments": []
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "reserves",
                    "arguments": []
                   },
                   {
                    "type": "DecimalNumber",
                    "value": "64"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "shl",
                  "arguments": [
                   {
                    "type": "DecimalNumber",
                    "value": "128"
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "sload",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "slot",
                      "arguments": []
                     }
                    ]
                   }
                  ]
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "Identifier",
              "name": "reserves"
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "iByte",
            "identifier": {
             "type": "Identifier",
             "name": "iByte"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<=",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "Identifier",
            "name": "n"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": true
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "iByte"
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "/",
               "left": {
                "type": "TupleExpression",
                "components": [
                 {
                  "type": "BinaryOperation",
                  "operator": "-",
                  "left": {
                   "type": "Identifier",
                   "name": "i"
                  },
                  "right": {
                   "type": "NumberLiteral",
                   "number": "1",
                   "subdenomination": null
                  }
                 }
                ],
                "isArray": false
               },
               "right": {
                "type": "NumberLiteral",
                "number": "2",
                "subdenomination": null
               }
              }
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "BinaryOperation",
               "operator": "&",
               "left": {
                "type": "Identifier",
                "name": "i"
               },
               "right": {
                "type": "NumberLiteral",
                "number": "1",
                "subdenomination": null
               }
              },
              "right": {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "InlineAssemblyStatement",
                "language": null,
                "flags": [],
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "reserves",
                       "arguments": []
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "mul",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "i",
                         "arguments": []
                        },
                        {
                         "type": "DecimalNumber",
                         "value": "32"
                        }
                       ]
                      }
                     ]
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "sload",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "add",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "slot",
                         "arguments": []
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "iByte",
                         "arguments": []
                        }
                       ]
                      }
                     ]
                    }
                   ]
                  }
                 ]
                }
               }
              ]
             },
             "falseBody": {
              "type": "Block",
              "statements": [
               {
                "type": "InlineAssemblyStatement",
                "language": null,
                "flags": [],
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "reserves",
                       "arguments": []
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "mul",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "i",
                         "arguments": []
                        },
                        {
                         "type": "DecimalNumber",
                         "value": "32"
                        }
                       ]
                      }
                     ]
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "shl",
                     "arguments": [
                      {
                       "type": "DecimalNumber",
                       "value": "128"
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "sload",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "add",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "slot",
                           "arguments": []
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "iByte",
                           "arguments": []
                          }
                         ]
                        }
                       ]
                      }
                     ]
                    }
                   ]
                  }
                 ]
                }
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "library"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-08-basin/src/libraries/LibBytes.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.8.20"
    },
    {
     "type": "ContractDefinition",
     "name": "LibBytes",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "MAX_UINT128",
         "identifier": {
          "type": "Identifier",
          "name": "MAX_UINT128"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "340_282_366_920_938_463_463_374_607_431_768_211_455",
          "subdenomination": null
         },
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "340_282_366_920_938_463_463_374_607_431_768_211_455",
        "subdenomination": null
       }
      },
      {
       "type": "FunctionDefinition",
       "name": "storeUint128",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "slot",
         "identifier": {
          "type": "Identifier",
          "name": "slot"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "reserves",
         "identifier": {
          "type": "Identifier",
          "name": "reserves"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "reserves"
            },
            "memberName": "length"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "2",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "<=",
                "left": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "reserves"
                 },
                 "index": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                 }
                },
                "right": {
                 "type": "Identifier",
                 "name": "MAX_UINT128"
                }
               },
               {
                "type": "StringLiteral",
                "value": "ByteStorage: too large",
                "parts": [
                 "ByteStorage: too large"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "<=",
                "left": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "reserves"
                 },
                 "index": {
                  "type": "NumberLiteral",
                  "number": "1",
                  "subdenomination": null
                 }
                },
                "right": {
                 "type": "Identifier",
                 "name": "MAX_UINT128"
                }
               },
               {
                "type": "StringLiteral",
                "value": "ByteStorage: too large",
                "parts": [
                 "ByteStorage: too large"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "InlineAssemblyStatement",
             "language": null,
             "flags": [],
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyCall",
                "functionName": "sstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "slot",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "mload",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "add",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "reserves",
                        "arguments": []
                       },
                       {
                        "type": "DecimalNumber",
                        "value": "32"
                       }
                      ]
                     }
                    ]
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "shl",
                    "arguments": [
                     {
                      "type": "DecimalNumber",
                      "value": "128"
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "mload",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "add",
                        "arguments": [
                         {
                          "type": "AssemblyCall",
                          "functionName": "reserves",
                          "arguments": []
                         },
                         {
                          "type": "DecimalNumber",
                          "value": "64"
                         }
                        ]
                       }
                      ]
                     }
                    ]
                   }
                  ]
                 }
                ]
               }
              ]
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "maxI",
               "identifier": {
                "type": "Identifier",
                "name": "maxI"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "BinaryOperation",
              "operator": "/",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "reserves"
               },
               "memberName": "length"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "2",
               "subdenomination": null
              }
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "iByte",
               "identifier": {
                "type": "Identifier",
                "name": "iByte"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": null
            },
            {
             "type": "ForStatement",
             "initExpression": {
              "type": "VariableDeclarationStatement",
              "variables": [
               {
                "type": "VariableDeclaration",
                "typeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "name": "i",
                "identifier": {
                 "type": "Identifier",
                 "name": "i"
                },
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false,
                "expression": null
               }
              ],
              "initialValue": null
             },
             "conditionExpression": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "i"
              },
              "right": {
               "type": "Identifier",
               "name": "maxI"
              }
             },
             "loopExpression": {
              "type": "ExpressionStatement",
              "expression": {
               "type": "UnaryOperation",
               "operator": "++",
               "subExpression": {
                "type": "Identifier",
                "name": "i"
               },
               "isPrefix": true
              }
             },
             "body": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "require"
                 },
                 "arguments": [
                  {
                   "type": "BinaryOperation",
                   "operator": "<=",
                   "left": {
                    "type": "IndexAccess",
                    "base": {
                     "type": "Identifier",
                     "name": "reserves"
                    },
                    "index": {
                     "type": "BinaryOperation",
                     "operator": "*",
                     "left": {
                      "type": "NumberLiteral",
                      "number": "2",
                      "subdenomination": null
                     },
                     "right": {
                      "type": "Identifier",
                      "name": "i"
                     }
                    }
                   },
                   "right": {
                    "type": "Identifier",
                    "name": "MAX_UINT128"
                   }
                  },
                  {
                   "type": "StringLiteral",
                   "value": "ByteStorage: too large",
                   "parts": [
                    "ByteStorage: too large"
                   ],
                   "isUnicode": [
                    false
                   ]
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "require"
                 },
                 "arguments": [
                  {
                   "type": "BinaryOperation",
                   "operator": "<=",
                   "left": {
                    "type": "IndexAccess",
                    "base": {
                     "type": "Identifier",
                     "name": "reserves"
                    },
                    "index": {
                     "type": "BinaryOperation",
                     "operator": "+",
                     "left": {
                      "type": "BinaryOperation",
                      "operator": "*",
                      "left": {
                       "type": "NumberLiteral",
                       "number": "2",
                       "subdenomination": null
                      },
                      "right": {
                       "type": "Identifier",
                       "name": "i"
                      }
                     },
                     "right": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                     }
                    }
                   },
                   "right": {
                    "type": "Identifier",
                    "name": "MAX_UINT128"
                   }
                  },
                  {
                   "type": "StringLiteral",
                   "value": "ByteStorage: too large",
                   "parts": [
                    "ByteStorage: too large"
                   ],
                   "isUnicode": [
                    false
                   ]
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "iByte"
                 },
                 "right": {
                  "type": "BinaryOperation",
                  "operator": "*",
                  "left": {
                   "type": "Identifier",
                   "name": "i"
                  },
                  "right": {
                   "type": "NumberLiteral",
                   "number": "64",
                   "subdenomination": null
                  }
                 }
                }
               },
               {
                "type": "InlineAssemblyStatement",
                "language": null,
                "flags": [],
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "sstore",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "slot",
                       "arguments": []
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "i",
                       "arguments": []
                      }
                     ]
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "mload",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "add",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "reserves",
                           "arguments": []
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "add",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "iByte",
                             "arguments": []
                            },
                            {
                             "type": "DecimalNumber",
                             "value": "32"
                            }
                           ]
                          }
                         ]
                        }
                       ]
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "shl",
                       "arguments": [
                        {
                         "type": "DecimalNumber",
                         "value": "128"
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "mload",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "add",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "reserves",
                             "arguments": []
                            },
                            {
                             "type": "AssemblyCall",
                             "functionName": "add",
                             "arguments": [
                              {
                               "type": "AssemblyCall",
                               "functionName": "iByte",
                               "arguments": []
                              },
                              {
                               "type": "DecimalNumber",
                               "value": "64"
                              }
                             ]
                            }
                           ]
                          }
                         ]
                        }
                       ]
                      }
                     ]
                    }
                   ]
                  }
                 ]
                }
               }
              ]
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "BinaryOperation",
               "operator": "&",
               "left": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "reserves"
                },
                "memberName": "length"
               },
               "right": {
                "type": "NumberLiteral",
                "number": "1",
                "subdenomination": null
               }
              },
              "right": {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "require"
                 },
                 "arguments": [
                  {
                   "type": "BinaryOperation",
                   "operator": "<=",
                   "left": {
                    "type": "IndexAccess",
                    "base": {
                     "type": "Identifier",
                     "name": "reserves"
                    },
                    "index": {
                     "type": "BinaryOperation",
                     "operator": "-",
                     "left": {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "Identifier",
                       "name": "reserves"
                      },
                      "memberName": "length"
                     },
                     "right": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                     }
                    }
                   },
                   "right": {
                    "type": "Identifier",
                    "name": "MAX_UINT128"
                   }
                  },
                  {
                   "type": "StringLiteral",
                   "value": "ByteStorage: too large",
                   "parts": [
                    "ByteStorage: too large"
                   ],
                   "isUnicode": [
                    false
                   ]
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "iByte"
                 },
                 "right": {
                  "type": "BinaryOperation",
                  "operator": "*",
                  "left": {
                   "type": "Identifier",
                   "name": "maxI"
                  },
                  "right": {
                   "type": "NumberLiteral",
                   "number": "64",
                   "subdenomination": null
                  }
                 }
                }
               },
               {
                "type": "InlineAssemblyStatement",
                "language": null,
                "flags": [],
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "sstore",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "slot",
                       "arguments": []
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "maxI",
                       "arguments": []
                      }
                     ]
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "mload",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "add",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "reserves",
                           "arguments": []
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "add",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "iByte",
                             "arguments": []
                            },
                            {
                             "type": "DecimalNumber",
                             "value": "32"
                            }
                           ]
                          }
                         ]
                        }
                       ]
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "shr",
                       "arguments": [
                        {
                         "type": "DecimalNumber",
                         "value": "128"
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "shl",
                         "arguments": [
                          {
                           "type": "DecimalNumber",
                           "value": "128"
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "sload",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "add",
                             "arguments": [
                              {
                               "type": "AssemblyCall",
                               "functionName": "slot",
                               "arguments": []
                              },
                              {
                               "type": "AssemblyCall",
                               "functionName": "maxI",
                               "arguments": []
                              }
                             ]
                            }
                           ]
                          }
                         ]
                        }
                       ]
                      }
                     ]
                    }
                   ]
                  }
                 ]
                }
               }
              ]
             },
             "falseBody": null
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "readUint128",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "slot",
         "identifier": {
          "type": "Identifier",
          "name": "slot"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "n",
         "identifier": {
          "type": "Identifier",
          "name": "n"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "reserves",
         "identifier": {
          "type": "Identifier",
          "name": "reserves"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "reserves"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "NewExpression",
             "typeName": {
              "type": "ArrayTypeName",
              "baseTypeName": {
               "type": "ElementaryTypeName",
               "name": "uint256",
               "stateMutability": null
              },
              "length": null
             }
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "n"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "n"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "2",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "InlineAssemblyStatement",
             "language": null,
             "flags": [],
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "reserves",
                    "arguments": []
                   },
                   {
                    "type": "DecimalNumber",
                    "value": "32"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "shr",
                  "arguments": [
                   {
                    "type": "DecimalNumber",
                    "value": "128"
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "shl",
                    "arguments": [
                     {
                      "type": "DecimalNumber",
                      "value": "128"
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "sload",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "slot",
                        "arguments": []
                       }
                      ]
                     }
                    ]
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "reserves",
                    "arguments": []
                   },
                   {
                    "type": "DecimalNumber",
                    "value": "64"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "shr",
                  "arguments": [
                   {
                    "type": "DecimalNumber",
                    "value": "128"
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "sload",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "slot",
                      "arguments": []
                     }
                    ]
                   }
                  ]
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "Identifier",
              "name": "reserves"
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "iByte",
            "identifier": {
             "type": "Identifier",
             "name": "iByte"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<=",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "Identifier",
            "name": "n"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": true
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "iByte"
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "/",
               "left": {
                "type": "TupleExpression",
                "components": [
                 {
                  "type": "BinaryOperation",
                  "operator": "-",
                  "left": {
                   "type": "Identifier",
                   "name": "i"
                  },
                  "right": {
                   "type": "NumberLiteral",
                   "number": "1",
                   "subdenomination": null
                  }
                 }
                ],
                "isArray": false
               },
               "right": {
                "type": "NumberLiteral",
                "number": "2",
                "subdenomination": null
               }
              }
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "BinaryOperation",
               "operator": "&",
               "left": {
                "type": "Identifier",
                "name": "i"
               },
               "right": {
                "type": "NumberLiteral",
                "number": "1",
                "subdenomination": null
               }
              },
              "right": {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "InlineAssemblyStatement",
                "language": null,
                "flags": [],
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "reserves",
                       "arguments": []
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "mul",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "i",
                         "arguments": []
                        },
                        {
                         "type": "DecimalNumber",
                         "value": "32"
                        }
                       ]
                      }
                     ]
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "shr",
                     "arguments": [
                      {
                       "type": "DecimalNumber",
                       "value": "128"
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "shl",
                       "arguments": [
                        {
                         "type": "DecimalNumber",
                         "value": "128"
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "sload",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "add",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "slot",
                             "arguments": []
                            },
                            {
                             "type": "AssemblyCall",
                             "functionName": "iByte",
                             "arguments": []
                            }
                           ]
                          }
                         ]
                        }
                       ]
                      }
                     ]
                    }
                   ]
                  }
                 ]
                }
               }
              ]
             },
             "falseBody": {
              "type": "Block",
              "statements": [
               {
                "type": "InlineAssemblyStatement",
                "language": null,
                "flags": [],
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "reserves",
                       "arguments": []
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "mul",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "i",
                         "arguments": []
                        },
                        {
                         "type": "DecimalNumber",
                         "value": "32"
                        }
                       ]
                      }
                     ]
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "shr",
                     "arguments": [
                      {
                       "type": "DecimalNumber",
                       "value": "128"
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "sload",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "add",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "slot",
                           "arguments": []
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "iByte",
                           "arguments": []
                          }
                         ]
                        }
                       ]
                      }
                     ]
                    }
                   ]
                  }
                 ]
                }
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "library"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-08-basin/src/libraries/ABDKMathQuad.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.8.20"
    },
    {
     "type": "ContractDefinition",
     "name": "ABDKMathQuad",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes16",
          "stateMutability": null
         },
         "name": "POSITIVE_ZERO",
         "identifier": {
          "type": "Identifier",
          "name": "POSITIVE_ZERO"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "0x00000000000000000000000000000000",
          "subdenomination": null
         },
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "0x00000000000000000000000000000000",
        "subdenomination": null
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes16",
          "stateMutability": null
         },
         "name": "NEGATIVE_ZERO",
         "identifier": {
          "type": "Identifier",
          "name": "NEGATIVE_ZERO"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "0x80000000000000000000000000000000",
          "subdenomination": null
         },
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "0x80000000000000000000000000000000",
        "subdenomination": null
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes16",
          "stateMutability": null
         },
         "name": "POSITIVE_INFINITY",
         "identifier": {
          "type": "Identifier",
          "name": "POSITIVE_INFINITY"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "0x7FFF0000000000000000000000000000",
          "subdenomination": null
         },
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "0x7FFF0000000000000000000000000000",
        "subdenomination": null
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes16",
          "stateMutability": null
         },
         "name": "NEGATIVE_INFINITY",
         "identifier": {
          "type": "Identifier",
          "name": "NEGATIVE_INFINITY"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "0xFFFF0000000000000000000000000000",
          "subdenomination": null
         },
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "0xFFFF0000000000000000000000000000",
        "subdenomination": null
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes16",
          "stateMutability": null
         },
         "name": "NaN",
         "identifier": {
          "type": "Identifier",
          "name": "NaN"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "0x7FFF8000000000000000000000000000",
          "subdenomination": null
         },
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "0x7FFF8000000000000000000000000000",
        "subdenomination": null
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes16",
          "stateMutability": null
         },
         "name": "ONE",
         "identifier": {
          "type": "Identifier",
          "name": "ONE"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "0x3fff0000000000000000000000000000",
          "subdenomination": null
         },
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "0x3fff0000000000000000000000000000",
        "subdenomination": null
       }
      },
      {
       "type": "FunctionDefinition",
       "name": "fromInt",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "int",
          "stateMutability": null
         },
         "name": "x",
         "identifier": {
          "type": "Identifier",
          "name": "x"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes16",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "UncheckedStatement",
          "block": {
           "type": "Block",
           "statements": [
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "Identifier",
               "name": "x"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ReturnStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "ElementaryTypeName",
                  "name": "bytes16",
                  "stateMutability": null
                 },
                 "arguments": [
                  {
                   "type": "NumberLiteral",
                   "number": "0",
                   "subdenomination": null
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": {
              "type": "Block",
              "statements": [
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "ElementaryTypeName",
                   "name": "uint256",
                   "stateMutability": null
                  },
                  "name": "result",
                  "identifier": {
                   "type": "Identifier",
                   "name": "result"
                  },
                  "storageLocation": null,
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "ElementaryTypeName",
                  "name": "uint256",
                  "stateMutability": null
                 },
                 "arguments": [
                  {
                   "type": "Conditional",
                   "condition": {
                    "type": "BinaryOperation",
                    "operator": ">",
                    "left": {
                     "type": "Identifier",
                     "name": "x"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0",
                     "subdenomination": null
                    }
                   },
                   "trueExpression": {
                    "type": "Identifier",
                    "name": "x"
                   },
                   "falseExpression": {
                    "type": "UnaryOperation",
                    "operator": "-",
                    "subExpression": {
                     "type": "Identifier",
                     "name": "x"
                    },
                    "isPrefix": true
                   }
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "ElementaryTypeName",
                   "name": "uint256",
                   "stateMutability": null
                  },
                  "name": "msb",
                  "identifier": {
                   "type": "Identifier",
                   "name": "msb"
                  },
                  "storageLocation": null,
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "mostSignificantBit"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "result"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "<",
                 "left": {
                  "type": "Identifier",
                  "name": "msb"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "112",
                  "subdenomination": null
                 }
                },
                "trueBody": {
                 "type": "ExpressionStatement",
                 "expression": {
                  "type": "BinaryOperation",
                  "operator": "<<=",
                  "left": {
                   "type": "Identifier",
                   "name": "result"
                  },
                  "right": {
                   "type": "BinaryOperation",
                   "operator": "-",
                   "left": {
                    "type": "NumberLiteral",
                    "number": "112",
                    "subdenomination": null
                   },
                   "right": {
                    "type": "Identifier",
                    "name": "msb"
                   }
                  }
                 }
                },
                "falseBody": {
                 "type": "IfStatement",
                 "condition": {
                  "type": "BinaryOperation",
                  "operator": ">",
                  "left": {
                   "type": "Identifier",
                   "name": "msb"
                  },
                  "right": {
                   "type": "NumberLiteral",
                   "number": "112",
                   "subdenomination": null
                  }
                 },
                 "trueBody": {
                  "type": "ExpressionStatement",
                  "expression": {
                   "type": "BinaryOperation",
                   "operator": ">>=",
                   "left": {
                    "type": "Identifier",
                    "name": "result"
                   },
                   "right": {
                    "type": "BinaryOperation",
                    "operator": "-",
                    "left": {
                     "type": "Identifier",
                     "name": "msb"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "112",
                     "subdenomination": null
                    }
                   }
                  }
                 },
                 "falseBody": null
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "result"
                 },
                 "right": {
                  "type": "BinaryOperation",
                  "operator": "|",
                  "left": {
                   "type": "BinaryOperation",
                   "operator": "&",
                   "left": {
                    "type": "Identifier",
                    "name": "result"
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
                    "subdenomination": null
                   }
                  },
                  "right": {
                   "type": "BinaryOperation",
                   "operator": "<<",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "+",
                    "left": {
                     "type": "NumberLiteral",
                     "number": "16_383",
                     "subdenomination": null
                    },
                    "right": {
                     "type": "Identifier",
                     "name": "msb"
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "112",
                    "subdenomination": null
                   }
                  }
                 }
                }
               },
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "<",
                 "left": {
                  "type": "Identifier",
                  "name": "x"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                 }
                },
                "trueBody": {
                 "type": "ExpressionStatement",
                 "expression": {
                  "type": "BinaryOperation",
                  "operator": "|=",
                  "left": {
                   "type": "Identifier",
                   "name": "result"
                  },
                  "right": {
                   "type": "NumberLiteral",
                   "number": "0x80000000000000000000000000000000",
                   "subdenomination": null
                  }
                 }
                },
                "falseBody": null
               },
               {
                "type": "ReturnStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "ElementaryTypeName",
                  "name": "bytes16",
                  "stateMutability": null
                 },
                 "arguments": [
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "ElementaryTypeName",
                    "name": "uint128",
                    "stateMutability": null
                   },
                   "arguments": [
                    {
                     "type": "Identifier",
                     "name": "result"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "toInt",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes16",
          "stateMutability": null
         },
         "name": "x",
         "identifier": {
          "type": "Identifier",
          "name": "x"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "int",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "UncheckedStatement",
          "block": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "exponent",
               "identifier": {
                "type": "Identifier",
                "name": "exponent"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "BinaryOperation",
              "operator": "&",
              "left": {
               "type": "BinaryOperation",
               "operator": ">>",
               "left": {
                "type": "FunctionCall",
                "expression": {
                 "type": "ElementaryTypeName",
                 "name": "uint128",
                 "stateMutability": null
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "x"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "right": {
                "type": "NumberLiteral",
                "number": "112",
                "subdenomination": null
               }
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0x7FFF",
               "subdenomination": null
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "<=",
                "left": {
                 "type": "Identifier",
                 "name": "exponent"
                },
                "right": {
                 "type": "NumberLiteral",
                 "number": "16_638",
                 "subdenomination": null
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "exponent"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "16_383",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "ReturnStatement",
              "expression": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "falseBody": null
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "result",
               "identifier": {
                "type": "Identifier",
                "name": "result"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "BinaryOperation",
              "operator": "|",
              "left": {
               "type": "BinaryOperation",
               "operator": "&",
               "left": {
                "type": "FunctionCall",
                "expression": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "arguments": [
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "ElementaryTypeName",
                   "name": "uint128",
                   "stateMutability": null
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "x"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "right": {
                "type": "NumberLiteral",
                "number": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
                "subdenomination": null
               }
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0x10000000000000000000000000000",
               "subdenomination": null
              }
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "exponent"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "16_495",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "ExpressionStatement",
              "expression": {
               "type": "BinaryOperation",
               "operator": ">>=",
               "left": {
                "type": "Identifier",
                "name": "result"
               },
               "right": {
                "type": "BinaryOperation",
                "operator": "-",
                "left": {
                 "type": "NumberLiteral",
                 "number": "16_495",
                 "subdenomination": null
                },
                "right": {
                 "type": "Identifier",
                 "name": "exponent"
                }
               }
              }
             },
             "falseBody": {
              "type": "IfStatement",
              "condition": {
               "type": "BinaryOperation",
               "operator": ">",
               "left": {
                "type": "Identifier",
                "name": "exponent"
               },
               "right": {
                "type": "NumberLiteral",
                "number": "16_495",
                "subdenomination": null
               }
              },
              "trueBody": {
               "type": "ExpressionStatement",
               "expression": {
                "type": "BinaryOperation",
                "operator": "<<=",
                "left": {
                 "type": "Identifier",
                 "name": "result"
                },
                "right": {
                 "type": "BinaryOperation",
                 "operator": "-",
                 "left": {
                  "type": "Identifier",
                  "name": "exponent"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "16_495",
                  "subdenomination": null
                 }
                }
               }
              },
              "falseBody": null
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": ">=",
              "left": {
               "type": "FunctionCall",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "uint128",
                "stateMutability": null
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "x"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0x80000000000000000000000000000000",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "require"
                 },
                 "arguments": [
                  {
                   "type": "BinaryOperation",
                   "operator": "<=",
                   "left": {
                    "type": "Identifier",
                    "name": "result"
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0x8000000000000000000000000000000000000000000000000000000000000000",
                    "subdenomination": null
                   }
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "ReturnStatement",
                "expression": {
                 "type": "UnaryOperation",
                 "operator": "-",
                 "subExpression": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "ElementaryTypeName",
                   "name": "int",
                   "stateMutability": null
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "result"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 },
                 "isPrefix": true
                }
               }
              ]
             },
             "falseBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "require"
                 },
                 "arguments": [
                  {
                   "type": "BinaryOperation",
                   "operator": "<=",
                   "left": {
                    "type": "Identifier",
                    "name": "result"
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
                    "subdenomination": null
                   }
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "ReturnStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "ElementaryTypeName",
                  "name": "int",
                  "stateMutability": null
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "result"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "fromUIntToLog2",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "x",
         "identifier": {
          "type": "Identifier",
          "name": "x"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes16",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "UncheckedStatement",
          "block": {
           "type": "Block",
           "statements": [
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "Identifier",
               "name": "x"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ReturnStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "ElementaryTypeName",
                  "name": "bytes16",
                  "stateMutability": null
                 },
                 "arguments": [
                  {
                   "type": "NumberLiteral",
                   "number": "0",
                   "subdenomination": null
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": {
              "type": "Block",
              "statements": [
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "ElementaryTypeName",
                   "name": "uint256",
                   "stateMutability": null
                  },
                  "name": "result",
                  "identifier": {
                   "type": "Identifier",
                   "name": "result"
                  },
                  "storageLocation": null,
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "Identifier",
                 "name": "x"
                }
               },
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "ElementaryTypeName",
                   "name": "uint256",
                   "stateMutability": null
                  },
                  "name": "msb",
                  "identifier": {
                   "type": "Identifier",
                   "name": "msb"
                  },
                  "storageLocation": null,
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "mostSignificantBit"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "result"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "<",
                 "left": {
                  "type": "Identifier",
                  "name": "msb"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "112",
                  "subdenomination": null
                 }
                },
                "trueBody": {
                 "type": "ExpressionStatement",
                 "expression": {
                  "type": "BinaryOperation",
                  "operator": "<<=",
                  "left": {
                   "type": "Identifier",
                   "name": "result"
                  },
                  "right": {
                   "type": "BinaryOperation",
                   "operator": "-",
                   "left": {
                    "type": "NumberLiteral",
                    "number": "112",
                    "subdenomination": null
                   },
                   "right": {
                    "type": "Identifier",
                    "name": "msb"
                   }
                  }
                 }
                },
                "falseBody": {
                 "type": "IfStatement",
                 "condition": {
                  "type": "BinaryOperation",
                  "operator": ">",
                  "left": {
                   "type": "Identifier",
                   "name": "msb"
                  },
                  "right": {
                   "type": "NumberLiteral",
                   "number": "112",
                   "subdenomination": null
                  }
                 },
                 "trueBody": {
                  "type": "ExpressionStatement",
                  "expression": {
                   "type": "BinaryOperation",
                   "operator": ">>=",
                   "left": {
                    "type": "Identifier",
                    "name": "result"
                   },
                   "right": {
                    "type": "BinaryOperation",
                    "operator": "-",
                    "left": {
                     "type": "Identifier",
                     "name": "msb"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "112",
                     "subdenomination": null
                    }
                   }
                  }
                 },
                 "falseBody": null
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "result"
                 },
                 "right": {
                  "type": "BinaryOperation",
                  "operator": "|",
                  "left": {
                   "type": "BinaryOperation",
                   "operator": "&",
                   "left": {
                    "type": "Identifier",
                    "name": "result"
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
                    "subdenomination": null
                   }
                  },
                  "right": {
                   "type": "BinaryOperation",
                   "operator": "<<",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "+",
                    "left": {
                     "type": "NumberLiteral",
                     "number": "16_383",
                     "subdenomination": null
                    },
                    "right": {
                     "type": "Identifier",
                     "name": "msb"
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "112",
                    "subdenomination": null
                   }
                  }
                 }
                }
               },
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": ">",
                 "left": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "ElementaryTypeName",
                   "name": "uint128",
                   "stateMutability": null
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "result"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "0x80000000000000000000000000000000",
                  "subdenomination": null
                 }
                },
                "trueBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "ReturnStatement",
                   "expression": {
                    "type": "Identifier",
                    "name": "NaN"
                   }
                  }
                 ]
                },
                "falseBody": {
                 "type": "IfStatement",
                 "condition": {
                  "type": "BinaryOperation",
                  "operator": "==",
                  "left": {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "ElementaryTypeName",
                    "name": "bytes16",
                    "stateMutability": null
                   },
                   "arguments": [
                    {
                     "type": "FunctionCall",
                     "expression": {
                      "type": "ElementaryTypeName",
                      "name": "uint128",
                      "stateMutability": null
                     },
                     "arguments": [
                      {
                       "type": "Identifier",
                       "name": "result"
                      }
                     ],
                     "names": [],
                     "identifiers": []
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  },
                  "right": {
                   "type": "NumberLiteral",
                   "number": "0x3FFF0000000000000000000000000000",
                   "subdenomination": null
                  }
                 },
                 "trueBody": {
                  "type": "Block",
                  "statements": [
                   {
                    "type": "ReturnStatement",
                    "expression": {
                     "type": "Identifier",
                     "name": "POSITIVE_ZERO"
                    }
                   }
                  ]
                 },
                 "falseBody": {
                  "type": "Block",
                  "statements": [
                   {
                    "type": "VariableDeclarationStatement",
                    "variables": [
                     {
                      "type": "VariableDeclaration",
                      "typeName": {
                       "type": "ElementaryTypeName",
                       "name": "uint256",
                       "stateMutability": null
                      },
                      "name": "xExponent",
                      "identifier": {
                       "type": "Identifier",
                       "name": "xExponent"
                      },
                      "storageLocation": null,
                      "isStateVar": false,
                      "isIndexed": false,
                      "expression": null
                     }
                    ],
                    "initialValue": {
                     "type": "BinaryOperation",
                     "operator": "&",
                     "left": {
                      "type": "BinaryOperation",
                      "operator": ">>",
                      "left": {
                       "type": "FunctionCall",
                       "expression": {
                        "type": "ElementaryTypeName",
                        "name": "uint128",
                        "stateMutability": null
                       },
                       "arguments": [
                        {
                         "type": "Identifier",
                         "name": "result"
                        }
                       ],
                       "names": [],
                       "identifiers": []
                      },
                      "right": {
                       "type": "NumberLiteral",
                       "number": "112",
                       "subdenomination": null
                      }
                     },
                     "right": {
                      "type": "NumberLiteral",
                      "number": "0x7FFF",
                      "subdenomination": null
                     }
                    }
                   },
                   {
                    "type": "IfStatement",
                    "condition": {
                     "type": "BinaryOperation",
                     "operator": "==",
                     "left": {
                      "type": "Identifier",
                      "name": "xExponent"
                     },
                     "right": {
                      "type": "NumberLiteral",
                      "number": "0x7FFF",
                      "subdenomination": null
                     }
                    },
                    "trueBody": {
                     "type": "Block",
                     "statements": [
                      {
                       "type": "ReturnStatement",
                       "expression": {
                        "type": "FunctionCall",
                        "expression": {
                         "type": "ElementaryTypeName",
                         "name": "bytes16",
                         "stateMutability": null
                        },
                        "arguments": [
                         {
                          "type": "FunctionCall",
                          "expression": {
                           "type": "ElementaryTypeName",
                           "name": "uint128",
                           "stateMutability": null
                          },
                          "arguments": [
                           {
                            "type": "Identifier",
                            "name": "result"
                           }
                          ],
                          "names": [],
                          "identifiers": []
                         }
                        ],
                        "names": [],
                        "identifiers": []
                       }
                      }
                     ]
                    },
                    "falseBody": {
                     "type": "Block",
                     "statements": [
                      {
                       "type": "VariableDeclarationStatement",
                       "variables": [
                        {
                         "type": "VariableDeclaration",
                         "typeName": {
                          "type": "ElementaryTypeName",
                          "name": "uint256",
                          "stateMutability": null
                         },
                         "name": "xSignifier",
                         "identifier": {
                          "type": "Identifier",
                          "name": "xSignifier"
                         },
                         "storageLocation": null,
                         "isStateVar": false,
                         "isIndexed": false,
                         "expression": null
                        }
                       ],
                       "initialValue": {
                        "type": "BinaryOperation",
                        "operator": "&",
                        "left": {
                         "type": "Identifier",
                         "name": "result"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
                         "subdenomination": null
                        }
                       }
                      },
                      {
                       "type": "IfStatement",
                       "condition": {
                        "type": "BinaryOperation",
                        "operator": "==",
                        "left": {
                         "type": "Identifier",
                         "name": "xExponent"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0",
                         "subdenomination": null
                        }
                       },
                       "trueBody": {
                        "type": "ExpressionStatement",
                        "expression": {
                         "type": "BinaryOperation",
                         "operator": "=",
                         "left": {
                          "type": "Identifier",
                          "name": "xExponent"
                         },
                         "right": {
                          "type": "NumberLiteral",
                          "number": "1",
                          "subdenomination": null
                         }
                        }
                       },
                       "falseBody": {
                        "type": "ExpressionStatement",
                        "expression": {
                         "type": "BinaryOperation",
                         "operator": "|=",
                         "left": {
                          "type": "Identifier",
                          "name": "xSignifier"
                         },
                         "right": {
                          "type": "NumberLiteral",
                          "number": "0x10000000000000000000000000000",
                          "subdenomination": null
                         }
                        }
                       }
                      },
                      {
                       "type": "IfStatement",
                       "condition": {
                        "type": "BinaryOperation",
                        "operator": "==",
                        "left": {
                         "type": "Identifier",
                         "name": "xSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0",
                         "subdenomination": null
                        }
                       },
                       "trueBody": {
                        "type": "ReturnStatement",
                        "expression": {
                         "type": "Identifier",
                         "name": "NEGATIVE_INFINITY"
                        }
                       },
                       "falseBody": null
                      },
                      {
                       "type": "VariableDeclarationStatement",
                       "variables": [
                        {
                         "type": "VariableDeclaration",
                         "typeName": {
                          "type": "ElementaryTypeName",
                          "name": "bool",
                          "stateMutability": null
                         },
                         "name": "resultNegative",
                         "identifier": {
                          "type": "Identifier",
                          "name": "resultNegative"
                         },
                         "storageLocation": null,
                         "isStateVar": false,
                         "isIndexed": false,
                         "expression": null
                        }
                       ],
                       "initialValue": null
                      },
                      {
                       "type": "VariableDeclarationStatement",
                       "variables": [
                        {
                         "type": "VariableDeclaration",
                         "typeName": {
                          "type": "ElementaryTypeName",
                          "name": "uint256",
                          "stateMutability": null
                         },
                         "name": "resultExponent",
                         "identifier": {
                          "type": "Identifier",
                          "name": "resultExponent"
                         },
                         "storageLocation": null,
                         "isStateVar": false,
                         "isIndexed": false,
                         "expression": null
                        }
                       ],
                       "initialValue": {
                        "type": "NumberLiteral",
                        "number": "16_495",
                        "subdenomination": null
                       }
                      },
                      {
                       "type": "VariableDeclarationStatement",
                       "variables": [
                        {
                         "type": "VariableDeclaration",
                         "typeName": {
                          "type": "ElementaryTypeName",
                          "name": "uint256",
                          "stateMutability": null
                         },
                         "name": "resultSignifier",
                         "identifier": {
                          "type": "Identifier",
                          "name": "resultSignifier"
                         },
                         "storageLocation": null,
                         "isStateVar": false,
                         "isIndexed": false,
                         "expression": null
                        }
                       ],
                       "initialValue": null
                      },
                      {
                       "type": "IfStatement",
                       "condition": {
                        "type": "BinaryOperation",
                        "operator": ">=",
                        "left": {
                         "type": "Identifier",
                         "name": "xExponent"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x3FFF",
                         "subdenomination": null
                        }
                       },
                       "trueBody": {
                        "type": "Block",
                        "statements": [
                         {
                          "type": "ExpressionStatement",
                          "expression": {
                           "type": "BinaryOperation",
                           "operator": "=",
                           "left": {
                            "type": "Identifier",
                            "name": "resultNegative"
                           },
                           "right": {
                            "type": "BooleanLiteral",
                            "value": false
                           }
                          }
                         },
                         {
                          "type": "ExpressionStatement",
                          "expression": {
                           "type": "BinaryOperation",
                           "operator": "=",
                           "left": {
                            "type": "Identifier",
                            "name": "resultSignifier"
                           },
                           "right": {
                            "type": "BinaryOperation",
                            "operator": "-",
                            "left": {
                             "type": "Identifier",
                             "name": "xExponent"
                            },
                            "right": {
                             "type": "NumberLiteral",
                             "number": "0x3FFF",
                             "subdenomination": null
                            }
                           }
                          }
                         },
                         {
                          "type": "ExpressionStatement",
                          "expression": {
                           "type": "BinaryOperation",
                           "operator": "<<=",
                           "left": {
                            "type": "Identifier",
                            "name": "xSignifier"
                           },
                           "right": {
                            "type": "NumberLiteral",
                            "number": "15",
                            "subdenomination": null
                           }
                          }
                         }
                        ]
                       },
                       "falseBody": {
                        "type": "Block",
                        "statements": [
                         {
                          "type": "ExpressionStatement",
                          "expression": {
                           "type": "BinaryOperation",
                           "operator": "=",
                           "left": {
                            "type": "Identifier",
                            "name": "resultNegative"
                           },
                           "right": {
                            "type": "BooleanLiteral",
                            "value": true
                           }
                          }
                         },
                         {
                          "type": "IfStatement",
                          "condition": {
                           "type": "BinaryOperation",
                           "operator": ">=",
                           "left": {
                            "type": "Identifier",
                            "name": "xSignifier"
                           },
                           "right": {
                            "type": "NumberLiteral",
                            "number": "0x10000000000000000000000000000",
                            "subdenomination": null
                           }
                          },
                          "trueBody": {
                           "type": "Block",
                           "statements": [
                            {
                             "type": "ExpressionStatement",
                             "expression": {
                              "type": "BinaryOperation",
                              "operator": "=",
                              "left": {
                               "type": "Identifier",
                               "name": "resultSignifier"
                              },
                              "right": {
                               "type": "BinaryOperation",
                               "operator": "-",
                               "left": {
                                "type": "NumberLiteral",
                                "number": "0x3FFE",
                                "subdenomination": null
                               },
                               "right": {
                                "type": "Identifier",
                                "name": "xExponent"
                               }
                              }
                             }
                            },
                            {
                             "type": "ExpressionStatement",
                             "expression": {
                              "type": "BinaryOperation",
                              "operator": "<<=",
                              "left": {
                               "type": "Identifier",
                               "name": "xSignifier"
                              },
                              "right": {
                               "type": "NumberLiteral",
                               "number": "15",
                               "subdenomination": null
                              }
                             }
                            }
                           ]
                          },
                          "falseBody": {
                           "type": "Block",
                           "statements": [
                            {
                             "type": "ExpressionStatement",
                             "expression": {
                              "type": "BinaryOperation",
                              "operator": "=",
                              "left": {
                               "type": "Identifier",
                               "name": "msb"
                              },
                              "right": {
                               "type": "FunctionCall",
                               "expression": {
                                "type": "Identifier",
                                "name": "mostSignificantBit"
                               },
                               "arguments": [
                                {
                                 "type": "Identifier",
                                 "name": "xSignifier"
                                }
                               ],
                               "names": [],
                               "identifiers": []
                              }
                             }
                            },
                            {
                             "type": "ExpressionStatement",
                             "expression": {
                              "type": "BinaryOperation",
                              "operator": "=",
                              "left": {
                               "type": "Identifier",
                               "name": "resultSignifier"
                              },
                              "right": {
                               "type": "BinaryOperation",
                               "operator": "-",
                               "left": {
                                "type": "NumberLiteral",
                                "number": "16_493",
                                "subdenomination": null
                               },
                               "right": {
                                "type": "Identifier",
                                "name": "msb"
                               }
                              }
                             }
                            },
                            {
                             "type": "ExpressionStatement",
                             "expression": {
                              "type": "BinaryOperation",
                              "operator": "<<=",
                              "left": {
                               "type": "Identifier",
                               "name": "xSignifier"
                              },
                              "right": {
                               "type": "BinaryOperation",
                               "operator": "-",
                               "left": {
                                "type": "NumberLiteral",
                                "number": "127",
                                "subdenomination": null
                               },
                               "right": {
                                "type": "Identifier",
                                "name": "msb"
                               }
                              }
                             }
                            }
                           ]
                          }
                         }
                        ]
                       }
                      },
                      {
                       "type": "IfStatement",
                       "condition": {
                        "type": "BinaryOperation",
                        "operator": "==",
                        "left": {
                         "type": "Identifier",
                         "name": "xSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x80000000000000000000000000000000",
                         "subdenomination": null
                        }
                       },
                       "trueBody": {
                        "type": "Block",
                        "statements": [
                         {
                          "type": "IfStatement",
                          "condition": {
                           "type": "Identifier",
                           "name": "resultNegative"
                          },
                          "trueBody": {
                           "type": "ExpressionStatement",
                           "expression": {
                            "type": "BinaryOperation",
                            "operator": "+=",
                            "left": {
                             "type": "Identifier",
                             "name": "resultSignifier"
                            },
                            "right": {
                             "type": "NumberLiteral",
                             "number": "1",
                             "subdenomination": null
                            }
                           }
                          },
                          "falseBody": null
                         },
                         {
                          "type": "VariableDeclarationStatement",
                          "variables": [
                           {
                            "type": "VariableDeclaration",
                            "typeName": {
                             "type": "ElementaryTypeName",
                             "name": "uint256",
                             "stateMutability": null
                            },
                            "name": "shift",
                            "identifier": {
                             "type": "Identifier",
                             "name": "shift"
                            },
                            "storageLocation": null,
                            "isStateVar": false,
                            "isIndexed": false,
                            "expression": null
                           }
                          ],
                          "initialValue": {
                           "type": "BinaryOperation",
                           "operator": "-",
                           "left": {
                            "type": "NumberLiteral",
                            "number": "112",
                            "subdenomination": null
                           },
                           "right": {
                            "type": "FunctionCall",
                            "expression": {
                             "type": "Identifier",
                             "name": "mostSignificantBit"
                            },
                            "arguments": [
                             {
                              "type": "Identifier",
                              "name": "resultSignifier"
                             }
                            ],
                            "names": [],
                            "identifiers": []
                           }
                          }
                         },
                         {
                          "type": "ExpressionStatement",
                          "expression": {
                           "type": "BinaryOperation",
                           "operator": "<<=",
                           "left": {
                            "type": "Identifier",
                            "name": "resultSignifier"
                           },
                           "right": {
                            "type": "Identifier",
                            "name": "shift"
                           }
                          }
                         },
                         {
                          "type": "ExpressionStatement",
                          "expression": {
                           "type": "BinaryOperation",
                           "operator": "-=",
                           "left": {
                            "type": "Identifier",
                            "name": "resultExponent"
                           },
                           "right": {
                            "type": "Identifier",
                            "name": "shift"
                           }
                          }
                         }
                        ]
                       },
                       "falseBody": {
                        "type": "Block",
                        "statements": [
                         {
                          "type": "VariableDeclarationStatement",
                          "variables": [
                           {
                            "type": "VariableDeclaration",
                            "typeName": {
                             "type": "ElementaryTypeName",
                             "name": "uint256",
                             "stateMutability": null
                            },
                            "name": "bb",
                            "identifier": {
                             "type": "Identifier",
                             "name": "bb"
                            },
                            "storageLocation": null,
                            "isStateVar": false,
                            "isIndexed": false,
                            "expression": null
                           }
                          ],
                          "initialValue": {
                           "type": "Conditional",
                           "condition": {
                            "type": "Identifier",
                            "name": "resultNegative"
                           },
                           "trueExpression": {
                            "type": "NumberLiteral",
                            "number": "1",
                            "subdenomination": null
                           },
                           "falseExpression": {
                            "type": "NumberLiteral",
                            "number": "0",
                            "subdenomination": null
                           }
                          }
                         },
                         {
                          "type": "WhileStatement",
                          "condition": {
                           "type": "BinaryOperation",
                           "operator": "<",
                           "left": {
                            "type": "Identifier",
                            "name": "resultSignifier"
                           },
                           "right": {
                            "type": "NumberLiteral",
                            "number": "0x10000000000000000000000000000",
                            "subdenomination": null
                           }
                          },
                          "body": {
                           "type": "Block",
                           "statements": [
                            {
                             "type": "ExpressionStatement",
                             "expression": {
                              "type": "BinaryOperation",
                              "operator": "<<=",
                              "left": {
                               "type": "Identifier",
                               "name": "resultSignifier"
                              },
                              "right": {
                               "type": "NumberLiteral",
                               "number": "1",
                               "subdenomination": null
                              }
                             }
                            },
                            {
                             "type": "ExpressionStatement",
                             "expression": {
                              "type": "BinaryOperation",
                              "operator": "-=",
                              "left": {
                               "type": "Identifier",
                               "name": "resultExponent"
                              },
                              "right": {
                               "type": "NumberLiteral",
                               "number": "1",
                               "subdenomination": null
                              }
                             }
                            },
                            {
                             "type": "ExpressionStatement",
                             "expression": {
                              "type": "BinaryOperation",
                              "operator": "*=",
                              "left": {
                               "type": "Identifier",
                               "name": "xSignifier"
                              },
                              "right": {
                               "type": "Identifier",
                               "name": "xSignifier"
                              }
                             }
                            },
                            {
                             "type": "VariableDeclarationStatement",
                             "variables": [
                              {
                               "type": "VariableDeclaration",
                               "typeName": {
                                "type": "ElementaryTypeName",
                                "name": "uint256",
                                "stateMutability": null
                               },
                               "name": "b",
                               "identifier": {
                                "type": "Identifier",
                                "name": "b"
                               },
                               "storageLocation": null,
                               "isStateVar": false,
                               "isIndexed": false,
                               "expression": null
                              }
                             ],
                             "initialValue": {
                              "type": "BinaryOperation",
                              "operator": ">>",
                              "left": {
                               "type": "Identifier",
                               "name": "xSignifier"
                              },
                              "right": {
                               "type": "NumberLiteral",
                               "number": "255",
                               "subdenomination": null
                              }
                             }
                            },
                            {
                             "type": "ExpressionStatement",
                             "expression": {
                              "type": "BinaryOperation",
                              "operator": "+=",
                              "left": {
                               "type": "Identifier",
                               "name": "resultSignifier"
                              },
                              "right": {
                               "type": "BinaryOperation",
                               "operator": "^",
                               "left": {
                                "type": "Identifier",
                                "name": "b"
                               },
                               "right": {
                                "type": "Identifier",
                                "name": "bb"
                               }
                              }
                             }
                            },
                            {
                             "type": "ExpressionStatement",
                             "expression": {
                              "type": "BinaryOperation",
                              "operator": ">>=",
                              "left": {
                               "type": "Identifier",
                               "name": "xSignifier"
                              },
                              "right": {
                               "type": "BinaryOperation",
                               "operator": "+",
                               "left": {
                                "type": "NumberLiteral",
                                "number": "127",
                                "subdenomination": null
                               },
                               "right": {
                                "type": "Identifier",
                                "name": "b"
                               }
                              }
                             }
                            }
                           ]
                          }
                         }
                        ]
                       }
                      },
                      {
                       "type": "ReturnStatement",
                       "expression": {
                        "type": "FunctionCall",
                        "expression": {
                         "type": "ElementaryTypeName",
                         "name": "bytes16",
                         "stateMutability": null
                        },
                        "arguments": [
                         {
                          "type": "FunctionCall",
                          "expression": {
                           "type": "ElementaryTypeName",
                           "name": "uint128",
                           "stateMutability": null
                          },
                          "arguments": [
                           {
                            "type": "BinaryOperation",
                            "operator": "|",
                            "left": {
                             "type": "BinaryOperation",
                             "operator": "|",
                             "left": {
                              "type": "TupleExpression",
                              "components": [
                               {
                                "type": "Conditional",
                                "condition": {
                                 "type": "Identifier",
                                 "name": "resultNegative"
                                },
                                "trueExpression": {
                                 "type": "NumberLiteral",
                                 "number": "0x80000000000000000000000000000000",
                                 "subdenomination": null
                                },
                                "falseExpression": {
                                 "type": "NumberLiteral",
                                 "number": "0",
                                 "subdenomination": null
                                }
                               }
                              ],
                              "isArray": false
                             },
                             "right": {
                              "type": "BinaryOperation",
                              "operator": "<<",
                              "left": {
                               "type": "Identifier",
                               "name": "resultExponent"
                              },
                              "right": {
                               "type": "NumberLiteral",
                               "number": "112",
                               "subdenomination": null
                              }
                             }
                            },
                            "right": {
                             "type": "BinaryOperation",
                             "operator": "&",
                             "left": {
                              "type": "Identifier",
                              "name": "resultSignifier"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
                              "subdenomination": null
                             }
                            }
                           }
                          ],
                          "names": [],
                          "identifiers": []
                         }
                        ],
                        "names": [],
                        "identifiers": []
                       }
                      }
                     ]
                    }
                   }
                  ]
                 }
                }
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "fromUInt",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "x",
         "identifier": {
          "type": "Identifier",
          "name": "x"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes16",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "UncheckedStatement",
          "block": {
           "type": "Block",
           "statements": [
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "Identifier",
               "name": "x"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ReturnStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "ElementaryTypeName",
                  "name": "bytes16",
                  "stateMutability": null
                 },
                 "arguments": [
                  {
                   "type": "NumberLiteral",
                   "number": "0",
                   "subdenomination": null
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": {
              "type": "Block",
              "statements": [
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "ElementaryTypeName",
                   "name": "uint256",
                   "stateMutability": null
                  },
                  "name": "result",
                  "identifier": {
                   "type": "Identifier",
                   "name": "result"
                  },
                  "storageLocation": null,
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "Identifier",
                 "name": "x"
                }
               },
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "ElementaryTypeName",
                   "name": "uint256",
                   "stateMutability": null
                  },
                  "name": "msb",
                  "identifier": {
                   "type": "Identifier",
                   "name": "msb"
                  },
                  "storageLocation": null,
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "mostSignificantBit"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "result"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "<",
                 "left": {
                  "type": "Identifier",
                  "name": "msb"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "112",
                  "subdenomination": null
                 }
                },
                "trueBody": {
                 "type": "ExpressionStatement",
                 "expression": {
                  "type": "BinaryOperation",
                  "operator": "<<=",
                  "left": {
                   "type": "Identifier",
                   "name": "result"
                  },
                  "right": {
                   "type": "BinaryOperation",
                   "operator": "-",
                   "left": {
                    "type": "NumberLiteral",
                    "number": "112",
                    "subdenomination": null
                   },
                   "right": {
                    "type": "Identifier",
                    "name": "msb"
                   }
                  }
                 }
                },
                "falseBody": {
                 "type": "IfStatement",
                 "condition": {
                  "type": "BinaryOperation",
                  "operator": ">",
                  "left": {
                   "type": "Identifier",
                   "name": "msb"
                  },
                  "right": {
                   "type": "NumberLiteral",
                   "number": "112",
                   "subdenomination": null
                  }
                 },
                 "trueBody": {
                  "type": "ExpressionStatement",
                  "expression": {
                   "type": "BinaryOperation",
                   "operator": ">>=",
                   "left": {
                    "type": "Identifier",
                    "name": "result"
                   },
                   "right": {
                    "type": "BinaryOperation",
                    "operator": "-",
                    "left": {
                     "type": "Identifier",
                     "name": "msb"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "112",
                     "subdenomination": null
                    }
                   }
                  }
                 },
                 "falseBody": null
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "result"
                 },
                 "right": {
                  "type": "BinaryOperation",
                  "operator": "|",
                  "left": {
                   "type": "BinaryOperation",
                   "operator": "&",
                   "left": {
                    "type": "Identifier",
                    "name": "result"
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
                    "subdenomination": null
                   }
                  },
                  "right": {
                   "type": "BinaryOperation",
                   "operator": "<<",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "+",
                    "left": {
                     "type": "NumberLiteral",
                     "number": "16_383",
                     "subdenomination": null
                    },
                    "right": {
                     "type": "Identifier",
                     "name": "msb"
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "112",
                    "subdenomination": null
                   }
                  }
                 }
                }
               },
               {
                "type": "ReturnStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "ElementaryTypeName",
                  "name": "bytes16",
                  "stateMutability": null
                 },
                 "arguments": [
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "ElementaryTypeName",
                    "name": "uint128",
                    "stateMutability": null
                   },
                   "arguments": [
                    {
                     "type": "Identifier",
                     "name": "result"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "toUInt",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes16",
          "stateMutability": null
         },
         "name": "x",
         "identifier": {
          "type": "Identifier",
          "name": "x"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "UncheckedStatement",
          "block": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "exponent",
               "identifier": {
                "type": "Identifier",
                "name": "exponent"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "BinaryOperation",
              "operator": "&",
              "left": {
               "type": "BinaryOperation",
               "operator": ">>",
               "left": {
                "type": "FunctionCall",
                "expression": {
                 "type": "ElementaryTypeName",
                 "name": "uint128",
                 "stateMutability": null
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "x"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "right": {
                "type": "NumberLiteral",
                "number": "112",
                "subdenomination": null
               }
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0x7FFF",
               "subdenomination": null
              }
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "exponent"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "16_383",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "ReturnStatement",
              "expression": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "falseBody": null
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "<",
                "left": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "ElementaryTypeName",
                  "name": "uint128",
                  "stateMutability": null
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "x"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                },
                "right": {
                 "type": "NumberLiteral",
                 "number": "0x80000000000000000000000000000000",
                 "subdenomination": null
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "<=",
                "left": {
                 "type": "Identifier",
                 "name": "exponent"
                },
                "right": {
                 "type": "NumberLiteral",
                 "number": "16_638",
                 "subdenomination": null
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "result",
               "identifier": {
                "type": "Identifier",
                "name": "result"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "BinaryOperation",
              "operator": "|",
              "left": {
               "type": "BinaryOperation",
               "operator": "&",
               "left": {
                "type": "FunctionCall",
                "expression": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "arguments": [
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "ElementaryTypeName",
                   "name": "uint128",
                   "stateMutability": null
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "x"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "right": {
                "type": "NumberLiteral",
                "number": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
                "subdenomination": null
               }
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0x10000000000000000000000000000",
               "subdenomination": null
              }
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "exponent"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "16_495",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "ExpressionStatement",
              "expression": {
               "type": "BinaryOperation",
               "operator": ">>=",
               "left": {
                "type": "Identifier",
                "name": "result"
               },
               "right": {
                "type": "BinaryOperation",
                "operator": "-",
                "left": {
                 "type": "NumberLiteral",
                 "number": "16_495",
                 "subdenomination": null
                },
                "right": {
                 "type": "Identifier",
                 "name": "exponent"
                }
               }
              }
             },
             "falseBody": {
              "type": "IfStatement",
              "condition": {
               "type": "BinaryOperation",
               "operator": ">",
               "left": {
                "type": "Identifier",
                "name": "exponent"
               },
               "right": {
                "type": "NumberLiteral",
                "number": "16_495",
                "subdenomination": null
               }
              },
              "trueBody": {
               "type": "ExpressionStatement",
               "expression": {
                "type": "BinaryOperation",
                "operator": "<<=",
                "left": {
                 "type": "Identifier",
                 "name": "result"
                },
                "right": {
                 "type": "BinaryOperation",
                 "operator": "-",
                 "left": {
                  "type": "Identifier",
                  "name": "exponent"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "16_495",
                  "subdenomination": null
                 }
                }
               }
              },
              "falseBody": null
             }
            },
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "Identifier",
              "name": "result"
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "from128x128",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "int",
          "stateMutability": null
         },
         "name": "x",
         "identifier": {
          "type": "Identifier",
          "name": "x"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes16",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "UncheckedStatement",
          "block": {
           "type": "Block",
           "statements": [
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "Identifier",
               "name": "x"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ReturnStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "ElementaryTypeName",
                  "name": "bytes16",
                  "stateMutability": null
                 },
                 "arguments": [
                  {
                   "type": "NumberLiteral",
                   "number": "0",
                   "subdenomination": null
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": {
              "type": "Block",
              "statements": [
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "ElementaryTypeName",
                   "name": "uint256",
                   "stateMutability": null
                  },
                  "name": "result",
                  "identifier": {
                   "type": "Identifier",
                   "name": "result"
                  },
                  "storageLocation": null,
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "ElementaryTypeName",
                  "name": "uint256",
                  "stateMutability": null
                 },
                 "arguments": [
                  {
                   "type": "Conditional",
                   "condition": {
                    "type": "BinaryOperation",
                    "operator": ">",
                    "left": {
                     "type": "Identifier",
                     "name": "x"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0",
                     "subdenomination": null
                    }
                   },
                   "trueExpression": {
                    "type": "Identifier",
                    "name": "x"
                   },
                   "falseExpression": {
                    "type": "UnaryOperation",
                    "operator": "-",
                    "subExpression": {
                     "type": "Identifier",
                     "name": "x"
                    },
                    "isPrefix": true
                   }
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "ElementaryTypeName",
                   "name": "uint256",
                   "stateMutability": null
                  },
                  "name": "msb",
                  "identifier": {
                   "type": "Identifier",
                   "name": "msb"
                  },
                  "storageLocation": null,
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "mostSignificantBit"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "result"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "<",
                 "left": {
                  "type": "Identifier",
                  "name": "msb"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "112",
                  "subdenomination": null
                 }
                },
                "trueBody": {
                 "type": "ExpressionStatement",
                 "expression": {
                  "type": "BinaryOperation",
                  "operator": "<<=",
                  "left": {
                   "type": "Identifier",
                   "name": "result"
                  },
                  "right": {
                   "type": "BinaryOperation",
                   "operator": "-",
                   "left": {
                    "type": "NumberLiteral",
                    "number": "112",
                    "subdenomination": null
                   },
                   "right": {
                    "type": "Identifier",
                    "name": "msb"
                   }
                  }
                 }
                },
                "falseBody": {
                 "type": "IfStatement",
                 "condition": {
                  "type": "BinaryOperation",
                  "operator": ">",
                  "left": {
                   "type": "Identifier",
                   "name": "msb"
                  },
                  "right": {
                   "type": "NumberLiteral",
                   "number": "112",
                   "subdenomination": null
                  }
                 },
                 "trueBody": {
                  "type": "ExpressionStatement",
                  "expression": {
                   "type": "BinaryOperation",
                   "operator": ">>=",
                   "left": {
                    "type": "Identifier",
                    "name": "result"
                   },
                   "right": {
                    "type": "BinaryOperation",
                    "operator": "-",
                    "left": {
                     "type": "Identifier",
                     "name": "msb"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "112",
                     "subdenomination": null
                    }
                   }
                  }
                 },
                 "falseBody": null
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "result"
                 },
                 "right": {
                  "type": "BinaryOperation",
                  "operator": "|",
                  "left": {
                   "type": "BinaryOperation",
                   "operator": "&",
                   "left": {
                    "type": "Identifier",
                    "name": "result"
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
                    "subdenomination": null
                   }
                  },
                  "right": {
                   "type": "BinaryOperation",
                   "operator": "<<",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "+",
                    "left": {
                     "type": "NumberLiteral",
                     "number": "16_255",
                     "subdenomination": null
                    },
                    "right": {
                     "type": "Identifier",
                     "name": "msb"
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "112",
                    "subdenomination": null
                   }
                  }
                 }
                }
               },
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "<",
                 "left": {
                  "type": "Identifier",
                  "name": "x"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                 }
                },
                "trueBody": {
                 "type": "ExpressionStatement",
                 "expression": {
                  "type": "BinaryOperation",
                  "operator": "|=",
                  "left": {
                   "type": "Identifier",
                   "name": "result"
                  },
                  "right": {
                   "type": "NumberLiteral",
                   "number": "0x80000000000000000000000000000000",
                   "subdenomination": null
                  }
                 }
                },
                "falseBody": null
               },
               {
                "type": "ReturnStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "ElementaryTypeName",
                  "name": "bytes16",
                  "stateMutability": null
                 },
                 "arguments": [
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "ElementaryTypeName",
                    "name": "uint128",
                    "stateMutability": null
                   },
                   "arguments": [
                    {
                     "type": "Identifier",
                     "name": "result"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "to128x128",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes16",
          "stateMutability": null
         },
         "name": "x",
         "identifier": {
          "type": "Identifier",
          "name": "x"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "int",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "UncheckedStatement",
          "block": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "exponent",
               "identifier": {
                "type": "Identifier",
                "name": "exponent"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "BinaryOperation",
              "operator": "&",
              "left": {
               "type": "BinaryOperation",
               "operator": ">>",
               "left": {
                "type": "FunctionCall",
                "expression": {
                 "type": "ElementaryTypeName",
                 "name": "uint128",
                 "stateMutability": null
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "x"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "right": {
                "type": "NumberLiteral",
                "number": "112",
                "subdenomination": null
               }
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0x7FFF",
               "subdenomination": null
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "<=",
                "left": {
                 "type": "Identifier",
                 "name": "exponent"
                },
                "right": {
                 "type": "NumberLiteral",
                 "number": "16_510",
                 "subdenomination": null
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "exponent"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "16_255",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "ReturnStatement",
              "expression": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "falseBody": null
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "result",
               "identifier": {
                "type": "Identifier",
                "name": "result"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "BinaryOperation",
              "operator": "|",
              "left": {
               "type": "BinaryOperation",
               "operator": "&",
               "left": {
                "type": "FunctionCall",
                "expression": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "arguments": [
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "ElementaryTypeName",
                   "name": "uint128",
                   "stateMutability": null
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "x"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "right": {
                "type": "NumberLiteral",
                "number": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
                "subdenomination": null
               }
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0x10000000000000000000000000000",
               "subdenomination": null
              }
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "exponent"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "16_367",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "ExpressionStatement",
              "expression": {
               "type": "BinaryOperation",
               "operator": ">>=",
               "left": {
                "type": "Identifier",
                "name": "result"
               },
               "right": {
                "type": "BinaryOperation",
                "operator": "-",
                "left": {
                 "type": "NumberLiteral",
                 "number": "16_367",
                 "subdenomination": null
                },
                "right": {
                 "type": "Identifier",
                 "name": "exponent"
                }
               }
              }
             },
             "falseBody": {
              "type": "IfStatement",
              "condition": {
               "type": "BinaryOperation",
               "operator": ">",
               "left": {
                "type": "Identifier",
                "name": "exponent"
               },
               "right": {
                "type": "NumberLiteral",
                "number": "16_367",
                "subdenomination": null
               }
              },
              "trueBody": {
               "type": "ExpressionStatement",
               "expression": {
                "type": "BinaryOperation",
                "operator": "<<=",
                "left": {
                 "type": "Identifier",
                 "name": "result"
                },
                "right": {
                 "type": "BinaryOperation",
                 "operator": "-",
                 "left": {
                  "type": "Identifier",
                  "name": "exponent"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "16_367",
                  "subdenomination": null
                 }
                }
               }
              },
              "falseBody": null
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": ">=",
              "left": {
               "type": "FunctionCall",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "uint128",
                "stateMutability": null
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "x"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0x80000000000000000000000000000000",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "require"
                 },
                 "arguments": [
                  {
                   "type": "BinaryOperation",
                   "operator": "<=",
                   "left": {
                    "type": "Identifier",
                    "name": "result"
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0x8000000000000000000000000000000000000000000000000000000000000000",
                    "subdenomination": null
                   }
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "ReturnStatement",
                "expression": {
                 "type": "UnaryOperation",
                 "operator": "-",
                 "subExpression": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "ElementaryTypeName",
                   "name": "int",
                   "stateMutability": null
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "result"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 },
                 "isPrefix": true
                }
               }
              ]
             },
             "falseBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "require"
                 },
                 "arguments": [
                  {
                   "type": "BinaryOperation",
                   "operator": "<=",
                   "left": {
                    "type": "Identifier",
                    "name": "result"
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
                    "subdenomination": null
                   }
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "ReturnStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "ElementaryTypeName",
                  "name": "int",
                  "stateMutability": null
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "result"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "from64x64",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "int128",
          "stateMutability": null
         },
         "name": "x",
         "identifier": {
          "type": "Identifier",
          "name": "x"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes16",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "UncheckedStatement",
          "block": {
           "type": "Block",
           "statements": [
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "Identifier",
               "name": "x"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ReturnStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "ElementaryTypeName",
                  "name": "bytes16",
                  "stateMutability": null
                 },
                 "arguments": [
                  {
                   "type": "NumberLiteral",
                   "number": "0",
                   "subdenomination": null
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": {
              "type": "Block",
              "statements": [
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "ElementaryTypeName",
                   "name": "uint256",
                   "stateMutability": null
                  },
                  "name": "result",
                  "identifier": {
                   "type": "Identifier",
                   "name": "result"
                  },
                  "storageLocation": null,
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "ElementaryTypeName",
                  "name": "uint128",
                  "stateMutability": null
                 },
                 "arguments": [
                  {
                   "type": "Conditional",
                   "condition": {
                    "type": "BinaryOperation",
                    "operator": ">",
                    "left": {
                     "type": "Identifier",
                     "name": "x"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0",
                     "subdenomination": null
                    }
                   },
                   "trueExpression": {
                    "type": "Identifier",
                    "name": "x"
                   },
                   "falseExpression": {
                    "type": "UnaryOperation",
                    "operator": "-",
                    "subExpression": {
                     "type": "Identifier",
                     "name": "x"
                    },
                    "isPrefix": true
                   }
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "ElementaryTypeName",
                   "name": "uint256",
                   "stateMutability": null
                  },
                  "name": "msb",
                  "identifier": {
                   "type": "Identifier",
                   "name": "msb"
                  },
                  "storageLocation": null,
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "mostSignificantBit"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "result"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "<",
                 "left": {
                  "type": "Identifier",
                  "name": "msb"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "112",
                  "subdenomination": null
                 }
                },
                "trueBody": {
                 "type": "ExpressionStatement",
                 "expression": {
                  "type": "BinaryOperation",
                  "operator": "<<=",
                  "left": {
                   "type": "Identifier",
                   "name": "result"
                  },
                  "right": {
                   "type": "BinaryOperation",
                   "operator": "-",
                   "left": {
                    "type": "NumberLiteral",
                    "number": "112",
                    "subdenomination": null
                   },
                   "right": {
                    "type": "Identifier",
                    "name": "msb"
                   }
                  }
                 }
                },
                "falseBody": {
                 "type": "IfStatement",
                 "condition": {
                  "type": "BinaryOperation",
                  "operator": ">",
                  "left": {
                   "type": "Identifier",
                   "name": "msb"
                  },
                  "right": {
                   "type": "NumberLiteral",
                   "number": "112",
                   "subdenomination": null
                  }
                 },
                 "trueBody": {
                  "type": "ExpressionStatement",
                  "expression": {
                   "type": "BinaryOperation",
                   "operator": ">>=",
                   "left": {
                    "type": "Identifier",
                    "name": "result"
                   },
                   "right": {
                    "type": "BinaryOperation",
                    "operator": "-",
                    "left": {
                     "type": "Identifier",
                     "name": "msb"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "112",
                     "subdenomination": null
                    }
                   }
                  }
                 },
                 "falseBody": null
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "result"
                 },
                 "right": {
                  "type": "BinaryOperation",
                  "operator": "|",
                  "left": {
                   "type": "BinaryOperation",
                   "operator": "&",
                   "left": {
                    "type": "Identifier",
                    "name": "result"
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
                    "subdenomination": null
                   }
                  },
                  "right": {
                   "type": "BinaryOperation",
                   "operator": "<<",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "+",
                    "left": {
                     "type": "NumberLiteral",
                     "number": "16_319",
                     "subdenomination": null
                    },
                    "right": {
                     "type": "Identifier",
                     "name": "msb"
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "112",
                    "subdenomination": null
                   }
                  }
                 }
                }
               },
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "<",
                 "left": {
                  "type": "Identifier",
                  "name": "x"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                 }
                },
                "trueBody": {
                 "type": "ExpressionStatement",
                 "expression": {
                  "type": "BinaryOperation",
                  "operator": "|=",
                  "left": {
                   "type": "Identifier",
                   "name": "result"
                  },
                  "right": {
                   "type": "NumberLiteral",
                   "number": "0x80000000000000000000000000000000",
                   "subdenomination": null
                  }
                 }
                },
                "falseBody": null
               },
               {
                "type": "ReturnStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "ElementaryTypeName",
                  "name": "bytes16",
                  "stateMutability": null
                 },
                 "arguments": [
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "ElementaryTypeName",
                    "name": "uint128",
                    "stateMutability": null
                   },
                   "arguments": [
                    {
                     "type": "Identifier",
                     "name": "result"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "to64x64",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes16",
          "stateMutability": null
         },
         "name": "x",
         "identifier": {
          "type": "Identifier",
          "name": "x"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "int128",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "UncheckedStatement",
          "block": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "exponent",
               "identifier": {
                "type": "Identifier",
                "name": "exponent"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "BinaryOperation",
              "operator": "&",
              "left": {
               "type": "BinaryOperation",
               "operator": ">>",
               "left": {
                "type": "FunctionCall",
                "expression": {
                 "type": "ElementaryTypeName",
                 "name": "uint128",
                 "stateMutability": null
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "x"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "right": {
                "type": "NumberLiteral",
                "number": "112",
                "subdenomination": null
               }
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0x7FFF",
               "subdenomination": null
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "<=",
                "left": {
                 "type": "Identifier",
                 "name": "exponent"
                },
                "right": {
                 "type": "NumberLiteral",
                 "number": "16_446",
                 "subdenomination": null
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "exponent"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "16_319",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "ReturnStatement",
              "expression": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "falseBody": null
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "result",
               "identifier": {
                "type": "Identifier",
                "name": "result"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "BinaryOperation",
              "operator": "|",
              "left": {
               "type": "BinaryOperation",
               "operator": "&",
               "left": {
                "type": "FunctionCall",
                "expression": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "arguments": [
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "ElementaryTypeName",
                   "name": "uint128",
                   "stateMutability": null
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "x"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "right": {
                "type": "NumberLiteral",
                "number": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
                "subdenomination": null
               }
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0x10000000000000000000000000000",
               "subdenomination": null
              }
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "exponent"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "16_431",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "ExpressionStatement",
              "expression": {
               "type": "BinaryOperation",
               "operator": ">>=",
               "left": {
                "type": "Identifier",
                "name": "result"
               },
               "right": {
                "type": "BinaryOperation",
                "operator": "-",
                "left": {
                 "type": "NumberLiteral",
                 "number": "16_431",
                 "subdenomination": null
                },
                "right": {
                 "type": "Identifier",
                 "name": "exponent"
                }
               }
              }
             },
             "falseBody": {
              "type": "IfStatement",
              "condition": {
               "type": "BinaryOperation",
               "operator": ">",
               "left": {
                "type": "Identifier",
                "name": "exponent"
               },
               "right": {
                "type": "NumberLiteral",
                "number": "16_431",
                "subdenomination": null
               }
              },
              "trueBody": {
               "type": "ExpressionStatement",
               "expression": {
                "type": "BinaryOperation",
                "operator": "<<=",
                "left": {
                 "type": "Identifier",
                 "name": "result"
                },
                "right": {
                 "type": "BinaryOperation",
                 "operator": "-",
                 "left": {
                  "type": "Identifier",
                  "name": "exponent"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "16_431",
                  "subdenomination": null
                 }
                }
               }
              },
              "falseBody": null
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": ">=",
              "left": {
               "type": "FunctionCall",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "uint128",
                "stateMutability": null
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "x"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0x80000000000000000000000000000000",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "require"
                 },
                 "arguments": [
                  {
                   "type": "BinaryOperation",
                   "operator": "<=",
                   "left": {
                    "type": "Identifier",
                    "name": "result"
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0x80000000000000000000000000000000",
                    "subdenomination": null
                   }
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "ReturnStatement",
                "expression": {
                 "type": "UnaryOperation",
                 "operator": "-",
                 "subExpression": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "ElementaryTypeName",
                   "name": "int128",
                   "stateMutability": null
                  },
                  "arguments": [
                   {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "ElementaryTypeName",
                     "name": "int",
                     "stateMutability": null
                    },
                    "arguments": [
                     {
                      "type": "Identifier",
                      "name": "result"
                     }
                    ],
                    "names": [],
                    "identifiers": []
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 },
                 "isPrefix": true
                }
               }
              ]
             },
             "falseBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "require"
                 },
                 "arguments": [
                  {
                   "type": "BinaryOperation",
                   "operator": "<=",
                   "left": {
                    "type": "Identifier",
                    "name": "result"
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
                    "subdenomination": null
                   }
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "ReturnStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "ElementaryTypeName",
                  "name": "int128",
                  "stateMutability": null
                 },
                 "arguments": [
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "ElementaryTypeName",
                    "name": "int",
                    "stateMutability": null
                   },
                   "arguments": [
                    {
                     "type": "Identifier",
                     "name": "result"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "fromOctuple",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "x",
         "identifier": {
          "type": "Identifier",
          "name": "x"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes16",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "UncheckedStatement",
          "block": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "bool",
                "stateMutability": null
               },
               "name": "negative",
               "identifier": {
                "type": "Identifier",
                "name": "negative"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "BinaryOperation",
              "operator": ">",
              "left": {
               "type": "BinaryOperation",
               "operator": "&",
               "left": {
                "type": "Identifier",
                "name": "x"
               },
               "right": {
                "type": "NumberLiteral",
                "number": "0x8000000000000000000000000000000000000000000000000000000000000000",
                "subdenomination": null
               }
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "exponent",
               "identifier": {
                "type": "Identifier",
                "name": "exponent"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "BinaryOperation",
              "operator": "&",
              "left": {
               "type": "BinaryOperation",
               "operator": ">>",
               "left": {
                "type": "FunctionCall",
                "expression": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "x"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "right": {
                "type": "NumberLiteral",
                "number": "236",
                "subdenomination": null
               }
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0x7FFFF",
               "subdenomination": null
              }
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "significand",
               "identifier": {
                "type": "Identifier",
                "name": "significand"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "BinaryOperation",
              "operator": "&",
              "left": {
               "type": "FunctionCall",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "x"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
               "subdenomination": null
              }
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "Identifier",
               "name": "exponent"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0x7FFFF",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": ">",
                 "left": {
                  "type": "Identifier",
                  "name": "significand"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                 }
                },
                "trueBody": {
                 "type": "ReturnStatement",
                 "expression": {
                  "type": "Identifier",
                  "name": "NaN"
                 }
                },
                "falseBody": {
                 "type": "ReturnStatement",
                 "expression": {
                  "type": "Conditional",
                  "condition": {
                   "type": "Identifier",
                   "name": "negative"
                  },
                  "trueExpression": {
                   "type": "Identifier",
                   "name": "NEGATIVE_INFINITY"
                  },
                  "falseExpression": {
                   "type": "Identifier",
                   "name": "POSITIVE_INFINITY"
                  }
                 }
                }
               }
              ]
             },
             "falseBody": null
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": ">",
              "left": {
               "type": "Identifier",
               "name": "exponent"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "278_526",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ReturnStatement",
                "expression": {
                 "type": "Conditional",
                 "condition": {
                  "type": "Identifier",
                  "name": "negative"
                 },
                 "trueExpression": {
                  "type": "Identifier",
                  "name": "NEGATIVE_INFINITY"
                 },
                 "falseExpression": {
                  "type": "Identifier",
                  "name": "POSITIVE_INFINITY"
                 }
                }
               }
              ]
             },
             "falseBody": {
              "type": "IfStatement",
              "condition": {
               "type": "BinaryOperation",
               "operator": "<",
               "left": {
                "type": "Identifier",
                "name": "exponent"
               },
               "right": {
                "type": "NumberLiteral",
                "number": "245_649",
                "subdenomination": null
               }
              },
              "trueBody": {
               "type": "Block",
               "statements": [
                {
                 "type": "ReturnStatement",
                 "expression": {
                  "type": "Conditional",
                  "condition": {
                   "type": "Identifier",
                   "name": "negative"
                  },
                  "trueExpression": {
                   "type": "Identifier",
                   "name": "NEGATIVE_ZERO"
                  },
                  "falseExpression": {
                   "type": "Identifier",
                   "name": "POSITIVE_ZERO"
                  }
                 }
                }
               ]
              },
              "falseBody": {
               "type": "IfStatement",
               "condition": {
                "type": "BinaryOperation",
                "operator": "<",
                "left": {
                 "type": "Identifier",
                 "name": "exponent"
                },
                "right": {
                 "type": "NumberLiteral",
                 "number": "245_761",
                 "subdenomination": null
                }
               },
               "trueBody": {
                "type": "Block",
                "statements": [
                 {
                  "type": "ExpressionStatement",
                  "expression": {
                   "type": "BinaryOperation",
                   "operator": "=",
                   "left": {
                    "type": "Identifier",
                    "name": "significand"
                   },
                   "right": {
                    "type": "BinaryOperation",
                    "operator": ">>",
                    "left": {
                     "type": "TupleExpression",
                     "components": [
                      {
                       "type": "BinaryOperation",
                       "operator": "|",
                       "left": {
                        "type": "Identifier",
                        "name": "significand"
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "0x100000000000000000000000000000000000000000000000000000000000",
                        "subdenomination": null
                       }
                      }
                     ],
                     "isArray": false
                    },
                    "right": {
                     "type": "BinaryOperation",
                     "operator": "-",
                     "left": {
                      "type": "NumberLiteral",
                      "number": "245_885",
                      "subdenomination": null
                     },
                     "right": {
                      "type": "Identifier",
                      "name": "exponent"
                     }
                    }
                   }
                  }
                 },
                 {
                  "type": "ExpressionStatement",
                  "expression": {
                   "type": "BinaryOperation",
                   "operator": "=",
                   "left": {
                    "type": "Identifier",
                    "name": "exponent"
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  }
                 }
                ]
               },
               "falseBody": {
                "type": "Block",
                "statements": [
                 {
                  "type": "ExpressionStatement",
                  "expression": {
                   "type": "BinaryOperation",
                   "operator": ">>=",
                   "left": {
                    "type": "Identifier",
                    "name": "significand"
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "124",
                    "subdenomination": null
                   }
                  }
                 },
                 {
                  "type": "ExpressionStatement",
                  "expression": {
                   "type": "BinaryOperation",
                   "operator": "-=",
                   "left": {
                    "type": "Identifier",
                    "name": "exponent"
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "245_760",
                    "subdenomination": null
                   }
                  }
                 }
                ]
               }
              }
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint128",
                "stateMutability": null
               },
               "name": "result",
               "identifier": {
                "type": "Identifier",
                "name": "result"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "ElementaryTypeName",
               "name": "uint128",
               "stateMutability": null
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "|",
                "left": {
                 "type": "Identifier",
                 "name": "significand"
                },
                "right": {
                 "type": "BinaryOperation",
                 "operator": "<<",
                 "left": {
                  "type": "Identifier",
                  "name": "exponent"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "112",
                  "subdenomination": null
                 }
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "Identifier",
              "name": "negative"
             },
             "trueBody": {
              "type": "ExpressionStatement",
              "expression": {
               "type": "BinaryOperation",
               "operator": "|=",
               "left": {
                "type": "Identifier",
                "name": "result"
               },
               "right": {
                "type": "NumberLiteral",
                "number": "0x80000000000000000000000000000000",
                "subdenomination": null
               }
              }
             },
             "falseBody": null
            },
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "ElementaryTypeName",
               "name": "bytes16",
               "stateMutability": null
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "result"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "toOctuple",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes16",
          "stateMutability": null
         },
         "name": "x",
         "identifier": {
          "type": "Identifier",
          "name": "x"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "UncheckedStatement",
          "block": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "exponent",
               "identifier": {
                "type": "Identifier",
                "name": "exponent"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "BinaryOperation",
              "operator": "&",
              "left": {
               "type": "BinaryOperation",
               "operator": ">>",
               "left": {
                "type": "FunctionCall",
                "expression": {
                 "type": "ElementaryTypeName",
                 "name": "uint128",
                 "stateMutability": null
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "x"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "right": {
                "type": "NumberLiteral",
                "number": "112",
                "subdenomination": null
               }
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0x7FFF",
               "subdenomination": null
              }
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "result",
               "identifier": {
                "type": "Identifier",
                "name": "result"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "BinaryOperation",
              "operator": "&",
              "left": {
               "type": "FunctionCall",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "uint128",
                "stateMutability": null
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "x"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
               "subdenomination": null
              }
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "Identifier",
               "name": "exponent"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0x7FFF",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "exponent"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "0x7FFFF",
                  "subdenomination": null
                 }
                }
               }
              ]
             },
             "falseBody": {
              "type": "IfStatement",
              "condition": {
               "type": "BinaryOperation",
               "operator": "==",
               "left": {
                "type": "Identifier",
                "name": "exponent"
               },
               "right": {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              },
              "trueBody": {
               "type": "Block",
               "statements": [
                {
                 "type": "IfStatement",
                 "condition": {
                  "type": "BinaryOperation",
                  "operator": ">",
                  "left": {
                   "type": "Identifier",
                   "name": "result"
                  },
                  "right": {
                   "type": "NumberLiteral",
                   "number": "0",
                   "subdenomination": null
                  }
                 },
                 "trueBody": {
                  "type": "Block",
                  "statements": [
                   {
                    "type": "VariableDeclarationStatement",
                    "variables": [
                     {
                      "type": "VariableDeclaration",
                      "typeName": {
                       "type": "ElementaryTypeName",
                       "name": "uint256",
                       "stateMutability": null
                      },
                      "name": "msb",
                      "identifier": {
                       "type": "Identifier",
                       "name": "msb"
                      },
                      "storageLocation": null,
                      "isStateVar": false,
                      "isIndexed": false,
                      "expression": null
                     }
                    ],
                    "initialValue": {
                     "type": "FunctionCall",
                     "expression": {
                      "type": "Identifier",
                      "name": "mostSignificantBit"
                     },
                     "arguments": [
                      {
                       "type": "Identifier",
                       "name": "result"
                      }
                     ],
                     "names": [],
                     "identifiers": []
                    }
                   },
                   {
                    "type": "ExpressionStatement",
                    "expression": {
                     "type": "BinaryOperation",
                     "operator": "=",
                     "left": {
                      "type": "Identifier",
                      "name": "result"
                     },
                     "right": {
                      "type": "BinaryOperation",
                      "operator": "&",
                      "left": {
                       "type": "BinaryOperation",
                       "operator": "<<",
                       "left": {
                        "type": "Identifier",
                        "name": "result"
                       },
                       "right": {
                        "type": "BinaryOperation",
                        "operator": "-",
                        "left": {
                         "type": "NumberLiteral",
                         "number": "236",
                         "subdenomination": null
                        },
                        "right": {
                         "type": "Identifier",
                         "name": "msb"
                        }
                       }
                      },
                      "right": {
                       "type": "NumberLiteral",
                       "number": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
                       "subdenomination": null
                      }
                     }
                    }
                   },
                   {
                    "type": "ExpressionStatement",
                    "expression": {
                     "type": "BinaryOperation",
                     "operator": "=",
                     "left": {
                      "type": "Identifier",
                      "name": "exponent"
                     },
                     "right": {
                      "type": "BinaryOperation",
                      "operator": "+",
                      "left": {
                       "type": "NumberLiteral",
                       "number": "245_649",
                       "subdenomination": null
                      },
                      "right": {
                       "type": "Identifier",
                       "name": "msb"
                      }
                     }
                    }
                   }
                  ]
                 },
                 "falseBody": null
                }
               ]
              },
              "falseBody": {
               "type": "Block",
               "statements": [
                {
                 "type": "ExpressionStatement",
                 "expression": {
                  "type": "BinaryOperation",
                  "operator": "<<=",
                  "left": {
                   "type": "Identifier",
                   "name": "result"
                  },
                  "right": {
                   "type": "NumberLiteral",
                   "number": "124",
                   "subdenomination": null
                  }
                 }
                },
                {
                 "type": "ExpressionStatement",
                 "expression": {
                  "type": "BinaryOperation",
                  "operator": "+=",
                  "left": {
                   "type": "Identifier",
                   "name": "exponent"
                  },
                  "right": {
                   "type": "NumberLiteral",
                   "number": "245_760",
                   "subdenomination": null
                  }
                 }
                }
               ]
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "|=",
              "left": {
               "type": "Identifier",
               "name": "result"
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "<<",
               "left": {
                "type": "Identifier",
                "name": "exponent"
               },
               "right": {
                "type": "NumberLiteral",
                "number": "236",
                "subdenomination": null
               }
              }
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": ">=",
              "left": {
               "type": "FunctionCall",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "uint128",
                "stateMutability": null
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "x"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0x80000000000000000000000000000000",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "|=",
                 "left": {
                  "type": "Identifier",
                  "name": "result"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "0x8000000000000000000000000000000000000000000000000000000000000000",
                  "subdenomination": null
                 }
                }
               }
              ]
             },
             "falseBody": null
            },
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "ElementaryTypeName",
               "name": "bytes32",
               "stateMutability": null
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "result"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "fromDouble",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes8",
          "stateMutability": null
         },
         "name": "x",
         "identifier": {
          "type": "Identifier",
          "name": "x"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes16",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "UncheckedStatement",
          "block": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "exponent",
               "identifier": {
                "type": "Identifier",
                "name": "exponent"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "BinaryOperation",
              "operator": "&",
              "left": {
               "type": "BinaryOperation",
               "operator": ">>",
               "left": {
                "type": "FunctionCall",
                "expression": {
                 "type": "ElementaryTypeName",
                 "name": "uint64",
                 "stateMutability": null
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "x"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "right": {
                "type": "NumberLiteral",
                "number": "52",
                "subdenomination": null
               }
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0x7FF",
               "subdenomination": null
              }
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "result",
               "identifier": {
                "type": "Identifier",
                "name": "result"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "BinaryOperation",
              "operator": "&",
              "left": {
               "type": "FunctionCall",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "uint64",
                "stateMutability": null
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "x"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0xFFFFFFFFFFFFF",
               "subdenomination": null
              }
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "Identifier",
               "name": "exponent"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0x7FF",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "exponent"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "0x7FFF",
                  "subdenomination": null
                 }
                }
               }
              ]
             },
             "falseBody": {
              "type": "IfStatement",
              "condition": {
               "type": "BinaryOperation",
               "operator": "==",
               "left": {
                "type": "Identifier",
                "name": "exponent"
               },
               "right": {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              },
              "trueBody": {
               "type": "Block",
               "statements": [
                {
                 "type": "IfStatement",
                 "condition": {
                  "type": "BinaryOperation",
                  "operator": ">",
                  "left": {
                   "type": "Identifier",
                   "name": "result"
                  },
                  "right": {
                   "type": "NumberLiteral",
                   "number": "0",
                   "subdenomination": null
                  }
                 },
                 "trueBody": {
                  "type": "Block",
                  "statements": [
                   {
                    "type": "VariableDeclarationStatement",
                    "variables": [
                     {
                      "type": "VariableDeclaration",
                      "typeName": {
                       "type": "ElementaryTypeName",
                       "name": "uint256",
                       "stateMutability": null
                      },
                      "name": "msb",
                      "identifier": {
                       "type": "Identifier",
                       "name": "msb"
                      },
                      "storageLocation": null,
                      "isStateVar": false,
                      "isIndexed": false,
                      "expression": null
                     }
                    ],
                    "initialValue": {
                     "type": "FunctionCall",
                     "expression": {
                      "type": "Identifier",
                      "name": "mostSignificantBit"
                     },
                     "arguments": [
                      {
                       "type": "Identifier",
                       "name": "result"
                      }
                     ],
                     "names": [],
                     "identifiers": []
                    }
                   },
                   {
                    "type": "ExpressionStatement",
                    "expression": {
                     "type": "BinaryOperation",
                     "operator": "=",
                     "left": {
                      "type": "Identifier",
                      "name": "result"
                     },
                     "right": {
                      "type": "BinaryOperation",
                      "operator": "&",
                      "left": {
                       "type": "BinaryOperation",
                       "operator": "<<",
                       "left": {
                        "type": "Identifier",
                        "name": "result"
                       },
                       "right": {
                        "type": "BinaryOperation",
                        "operator": "-",
                        "left": {
                         "type": "NumberLiteral",
                         "number": "112",
                         "subdenomination": null
                        },
                        "right": {
                         "type": "Identifier",
                         "name": "msb"
                        }
                       }
                      },
                      "right": {
                       "type": "NumberLiteral",
                       "number": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
                       "subdenomination": null
                      }
                     }
                    }
                   },
                   {
                    "type": "ExpressionStatement",
                    "expression": {
                     "type": "BinaryOperation",
                     "operator": "=",
                     "left": {
                      "type": "Identifier",
                      "name": "exponent"
                     },
                     "right": {
                      "type": "BinaryOperation",
                      "operator": "+",
                      "left": {
                       "type": "NumberLiteral",
                       "number": "15_309",
                       "subdenomination": null
                      },
                      "right": {
                       "type": "Identifier",
                       "name": "msb"
                      }
                     }
                    }
                   }
                  ]
                 },
                 "falseBody": null
                }
               ]
              },
              "falseBody": {
               "type": "Block",
               "statements": [
                {
                 "type": "ExpressionStatement",
                 "expression": {
                  "type": "BinaryOperation",
                  "operator": "<<=",
                  "left": {
                   "type": "Identifier",
                   "name": "result"
                  },
                  "right": {
                   "type": "NumberLiteral",
                   "number": "60",
                   "subdenomination": null
                  }
                 }
                },
                {
                 "type": "ExpressionStatement",
                 "expression": {
                  "type": "BinaryOperation",
                  "operator": "+=",
                  "left": {
                   "type": "Identifier",
                   "name": "exponent"
                  },
                  "right": {
                   "type": "NumberLiteral",
                   "number": "15_360",
                   "subdenomination": null
                  }
                 }
                }
               ]
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "|=",
              "left": {
               "type": "Identifier",
               "name": "result"
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "<<",
               "left": {
                "type": "Identifier",
                "name": "exponent"
               },
               "right": {
                "type": "NumberLiteral",
                "number": "112",
                "subdenomination": null
               }
              }
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": ">",
              "left": {
               "type": "BinaryOperation",
               "operator": "&",
               "left": {
                "type": "Identifier",
                "name": "x"
               },
               "right": {
                "type": "NumberLiteral",
                "number": "0x8000000000000000",
                "subdenomination": null
               }
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "|=",
                 "left": {
                  "type": "Identifier",
                  "name": "result"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "0x80000000000000000000000000000000",
                  "subdenomination": null
                 }
                }
               }
              ]
             },
             "falseBody": null
            },
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "ElementaryTypeName",
               "name": "bytes16",
               "stateMutability": null
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "ElementaryTypeName",
                 "name": "uint128",
                 "stateMutability": null
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "result"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "toDouble",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes16",
          "stateMutability": null
         },
         "name": "x",
         "identifier": {
          "type": "Identifier",
          "name": "x"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes8",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "UncheckedStatement",
          "block": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "bool",
                "stateMutability": null
               },
               "name": "negative",
               "identifier": {
                "type": "Identifier",
                "name": "negative"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "BinaryOperation",
              "operator": ">=",
              "left": {
               "type": "FunctionCall",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "uint128",
                "stateMutability": null
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "x"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0x80000000000000000000000000000000",
               "subdenomination": null
              }
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "exponent",
               "identifier": {
                "type": "Identifier",
                "name": "exponent"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "BinaryOperation",
              "operator": "&",
              "left": {
               "type": "BinaryOperation",
               "operator": ">>",
               "left": {
                "type": "FunctionCall",
                "expression": {
                 "type": "ElementaryTypeName",
                 "name": "uint128",
                 "stateMutability": null
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "x"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "right": {
                "type": "NumberLiteral",
                "number": "112",
                "subdenomination": null
               }
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0x7FFF",
               "subdenomination": null
              }
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "significand",
               "identifier": {
                "type": "Identifier",
                "name": "significand"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "BinaryOperation",
              "operator": "&",
              "left": {
               "type": "FunctionCall",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "uint128",
                "stateMutability": null
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "x"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
               "subdenomination": null
              }
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "Identifier",
               "name": "exponent"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0x7FFF",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": ">",
                 "left": {
                  "type": "Identifier",
                  "name": "significand"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                 }
                },
                "trueBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "ReturnStatement",
                   "expression": {
                    "type": "NumberLiteral",
                    "number": "0x7FF8000000000000",
                    "subdenomination": null
                   }
                  }
                 ]
                },
                "falseBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "ReturnStatement",
                   "expression": {
                    "type": "Conditional",
                    "condition": {
                     "type": "Identifier",
                     "name": "negative"
                    },
                    "trueExpression": {
                     "type": "FunctionCall",
                     "expression": {
                      "type": "ElementaryTypeName",
                      "name": "bytes8",
                      "stateMutability": null
                     },
                     "arguments": [
                      {
                       "type": "NumberLiteral",
                       "number": "0xFFF0000000000000",
                       "subdenomination": null
                      }
                     ],
                     "names": [],
                     "identifiers": []
                    },
                    "falseExpression": {
                     "type": "FunctionCall",
                     "expression": {
                      "type": "ElementaryTypeName",
                      "name": "bytes8",
                      "stateMutability": null
                     },
                     "arguments": [
                      {
                       "type": "NumberLiteral",
                       "number": "0x7FF0000000000000",
                       "subdenomination": null
                      }
                     ],
                     "names": [],
                     "identifiers": []
                    }
                   }
                  }
                 ]
                }
               }
              ]
             },
             "falseBody": null
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": ">",
              "left": {
               "type": "Identifier",
               "name": "exponent"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "17_406",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ReturnStatement",
                "expression": {
                 "type": "Conditional",
                 "condition": {
                  "type": "Identifier",
                  "name": "negative"
                 },
                 "trueExpression": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "ElementaryTypeName",
                   "name": "bytes8",
                   "stateMutability": null
                  },
                  "arguments": [
                   {
                    "type": "NumberLiteral",
                    "number": "0xFFF0000000000000",
                    "subdenomination": null
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 },
                 "falseExpression": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "ElementaryTypeName",
                   "name": "bytes8",
                   "stateMutability": null
                  },
                  "arguments": [
                   {
                    "type": "NumberLiteral",
                    "number": "0x7FF0000000000000",
                    "subdenomination": null
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                }
               }
              ]
             },
             "falseBody": {
              "type": "IfStatement",
              "condition": {
               "type": "BinaryOperation",
               "operator": "<",
               "left": {
                "type": "Identifier",
                "name": "exponent"
               },
               "right": {
                "type": "NumberLiteral",
                "number": "15_309",
                "subdenomination": null
               }
              },
              "trueBody": {
               "type": "Block",
               "statements": [
                {
                 "type": "ReturnStatement",
                 "expression": {
                  "type": "Conditional",
                  "condition": {
                   "type": "Identifier",
                   "name": "negative"
                  },
                  "trueExpression": {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "ElementaryTypeName",
                    "name": "bytes8",
                    "stateMutability": null
                   },
                   "arguments": [
                    {
                     "type": "NumberLiteral",
                     "number": "0x8000000000000000",
                     "subdenomination": null
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  },
                  "falseExpression": {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "ElementaryTypeName",
                    "name": "bytes8",
                    "stateMutability": null
                   },
                   "arguments": [
                    {
                     "type": "NumberLiteral",
                     "number": "0x0000000000000000",
                     "subdenomination": null
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 }
                }
               ]
              },
              "falseBody": {
               "type": "IfStatement",
               "condition": {
                "type": "BinaryOperation",
                "operator": "<",
                "left": {
                 "type": "Identifier",
                 "name": "exponent"
                },
                "right": {
                 "type": "NumberLiteral",
                 "number": "15_361",
                 "subdenomination": null
                }
               },
               "trueBody": {
                "type": "Block",
                "statements": [
                 {
                  "type": "ExpressionStatement",
                  "expression": {
                   "type": "BinaryOperation",
                   "operator": "=",
                   "left": {
                    "type": "Identifier",
                    "name": "significand"
                   },
                   "right": {
                    "type": "BinaryOperation",
                    "operator": ">>",
                    "left": {
                     "type": "TupleExpression",
                     "components": [
                      {
                       "type": "BinaryOperation",
                       "operator": "|",
                       "left": {
                        "type": "Identifier",
                        "name": "significand"
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "0x10000000000000000000000000000",
                        "subdenomination": null
                       }
                      }
                     ],
                     "isArray": false
                    },
                    "right": {
                     "type": "BinaryOperation",
                     "operator": "-",
                     "left": {
                      "type": "NumberLiteral",
                      "number": "15_421",
                      "subdenomination": null
                     },
                     "right": {
                      "type": "Identifier",
                      "name": "exponent"
                     }
                    }
                   }
                  }
                 },
                 {
                  "type": "ExpressionStatement",
                  "expression": {
                   "type": "BinaryOperation",
                   "operator": "=",
                   "left": {
                    "type": "Identifier",
                    "name": "exponent"
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  }
                 }
                ]
               },
               "falseBody": {
                "type": "Block",
                "statements": [
                 {
                  "type": "ExpressionStatement",
                  "expression": {
                   "type": "BinaryOperation",
                   "operator": ">>=",
                   "left": {
                    "type": "Identifier",
                    "name": "significand"
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "60",
                    "subdenomination": null
                   }
                  }
                 },
                 {
                  "type": "ExpressionStatement",
                  "expression": {
                   "type": "BinaryOperation",
                   "operator": "-=",
                   "left": {
                    "type": "Identifier",
                    "name": "exponent"
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "15_360",
                    "subdenomination": null
                   }
                  }
                 }
                ]
               }
              }
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint64",
                "stateMutability": null
               },
               "name": "result",
               "identifier": {
                "type": "Identifier",
                "name": "result"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "ElementaryTypeName",
               "name": "uint64",
               "stateMutability": null
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "|",
                "left": {
                 "type": "Identifier",
                 "name": "significand"
                },
                "right": {
                 "type": "BinaryOperation",
                 "operator": "<<",
                 "left": {
                  "type": "Identifier",
                  "name": "exponent"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "52",
                  "subdenomination": null
                 }
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "Identifier",
              "name": "negative"
             },
             "trueBody": {
              "type": "ExpressionStatement",
              "expression": {
               "type": "BinaryOperation",
               "operator": "|=",
               "left": {
                "type": "Identifier",
                "name": "result"
               },
               "right": {
                "type": "NumberLiteral",
                "number": "0x8000000000000000",
                "subdenomination": null
               }
              }
             },
             "falseBody": null
            },
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "ElementaryTypeName",
               "name": "bytes8",
               "stateMutability": null
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "result"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "isNaN",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes16",
          "stateMutability": null
         },
         "name": "x",
         "identifier": {
          "type": "Identifier",
          "name": "x"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "UncheckedStatement",
          "block": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": ">",
              "left": {
               "type": "BinaryOperation",
               "operator": "&",
               "left": {
                "type": "FunctionCall",
                "expression": {
                 "type": "ElementaryTypeName",
                 "name": "uint128",
                 "stateMutability": null
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "x"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "right": {
                "type": "NumberLiteral",
                "number": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
                "subdenomination": null
               }
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0x7FFF0000000000000000000000000000",
               "subdenomination": null
              }
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "isInfinity",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes16",
          "stateMutability": null
         },
         "name": "x",
         "identifier": {
          "type": "Identifier",
          "name": "x"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "UncheckedStatement",
          "block": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "BinaryOperation",
               "operator": "&",
               "left": {
                "type": "FunctionCall",
                "expression": {
                 "type": "ElementaryTypeName",
                 "name": "uint128",
                 "stateMutability": null
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "x"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "right": {
                "type": "NumberLiteral",
                "number": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
                "subdenomination": null
               }
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0x7FFF0000000000000000000000000000",
               "subdenomination": null
              }
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "sign",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes16",
          "stateMutability": null
         },
         "name": "x",
         "identifier": {
          "type": "Identifier",
          "name": "x"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "int8",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "UncheckedStatement",
          "block": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint128",
                "stateMutability": null
               },
               "name": "absoluteX",
               "identifier": {
                "type": "Identifier",
                "name": "absoluteX"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "BinaryOperation",
              "operator": "&",
              "left": {
               "type": "FunctionCall",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "uint128",
                "stateMutability": null
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "x"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
               "subdenomination": null
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "<=",
                "left": {
                 "type": "Identifier",
                 "name": "absoluteX"
                },
                "right": {
                 "type": "NumberLiteral",
                 "number": "0x7FFF0000000000000000000000000000",
                 "subdenomination": null
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "Identifier",
               "name": "absoluteX"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "ReturnStatement",
              "expression": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "falseBody": {
              "type": "IfStatement",
              "condition": {
               "type": "BinaryOperation",
               "operator": ">=",
               "left": {
                "type": "FunctionCall",
                "expression": {
                 "type": "ElementaryTypeName",
                 "name": "uint128",
                 "stateMutability": null
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "x"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "right": {
                "type": "NumberLiteral",
                "number": "0x80000000000000000000000000000000",
                "subdenomination": null
               }
              },
              "trueBody": {
               "type": "ReturnStatement",
               "expression": {
                "type": "UnaryOperation",
                "operator": "-",
                "subExpression": {
                 "type": "NumberLiteral",
                 "number": "1",
                 "subdenomination": null
                },
                "isPrefix": true
               }
              },
              "falseBody": {
               "type": "ReturnStatement",
               "expression": {
                "type": "NumberLiteral",
                "number": "1",
                "subdenomination": null
               }
              }
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "cmp",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes16",
          "stateMutability": null
         },
         "name": "x",
         "identifier": {
          "type": "Identifier",
          "name": "x"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes16",
          "stateMutability": null
         },
         "name": "y",
         "identifier": {
          "type": "Identifier",
          "name": "y"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "int8",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "UncheckedStatement",
          "block": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint128",
                "stateMutability": null
               },
               "name": "absoluteX",
               "identifier": {
                "type": "Identifier",
                "name": "absoluteX"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "BinaryOperation",
              "operator": "&",
              "left": {
               "type": "FunctionCall",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "uint128",
                "stateMutability": null
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "x"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
               "subdenomination": null
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "<=",
                "left": {
                 "type": "Identifier",
                 "name": "absoluteX"
                },
                "right": {
                 "type": "NumberLiteral",
                 "number": "0x7FFF0000000000000000000000000000",
                 "subdenomination": null
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint128",
                "stateMutability": null
               },
               "name": "absoluteY",
               "identifier": {
                "type": "Identifier",
                "name": "absoluteY"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "BinaryOperation",
              "operator": "&",
              "left": {
               "type": "FunctionCall",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "uint128",
                "stateMutability": null
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "y"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
               "subdenomination": null
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "<=",
                "left": {
                 "type": "Identifier",
                 "name": "absoluteY"
                },
                "right": {
                 "type": "NumberLiteral",
                 "number": "0x7FFF0000000000000000000000000000",
                 "subdenomination": null
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "||",
                "left": {
                 "type": "BinaryOperation",
                 "operator": "!=",
                 "left": {
                  "type": "Identifier",
                  "name": "x"
                 },
                 "right": {
                  "type": "Identifier",
                  "name": "y"
                 }
                },
                "right": {
                 "type": "BinaryOperation",
                 "operator": "<",
                 "left": {
                  "type": "Identifier",
                  "name": "absoluteX"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "0x7FFF0000000000000000000000000000",
                  "subdenomination": null
                 }
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "Identifier",
               "name": "x"
              },
              "right": {
               "type": "Identifier",
               "name": "y"
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ReturnStatement",
                "expression": {
                 "type": "NumberLiteral",
                 "number": "0",
                 "subdenomination": null
                }
               }
              ]
             },
             "falseBody": {
              "type": "Block",
              "statements": [
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "ElementaryTypeName",
                   "name": "bool",
                   "stateMutability": null
                  },
                  "name": "negativeX",
                  "identifier": {
                   "type": "Identifier",
                   "name": "negativeX"
                  },
                  "storageLocation": null,
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "BinaryOperation",
                 "operator": ">=",
                 "left": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "ElementaryTypeName",
                   "name": "uint128",
                   "stateMutability": null
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "x"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "0x80000000000000000000000000000000",
                  "subdenomination": null
                 }
                }
               },
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "ElementaryTypeName",
                   "name": "bool",
                   "stateMutability": null
                  },
                  "name": "negativeY",
                  "identifier": {
                   "type": "Identifier",
                   "name": "negativeY"
                  },
                  "storageLocation": null,
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "BinaryOperation",
                 "operator": ">=",
                 "left": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "ElementaryTypeName",
                   "name": "uint128",
                   "stateMutability": null
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "y"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "0x80000000000000000000000000000000",
                  "subdenomination": null
                 }
                }
               },
               {
                "type": "IfStatement",
                "condition": {
                 "type": "Identifier",
                 "name": "negativeX"
                },
                "trueBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "IfStatement",
                   "condition": {
                    "type": "Identifier",
                    "name": "negativeY"
                   },
                   "trueBody": {
                    "type": "ReturnStatement",
                    "expression": {
                     "type": "Conditional",
                     "condition": {
                      "type": "BinaryOperation",
                      "operator": ">",
                      "left": {
                       "type": "Identifier",
                       "name": "absoluteX"
                      },
                      "right": {
                       "type": "Identifier",
                       "name": "absoluteY"
                      }
                     },
                     "trueExpression": {
                      "type": "UnaryOperation",
                      "operator": "-",
                      "subExpression": {
                       "type": "NumberLiteral",
                       "number": "1",
                       "subdenomination": null
                      },
                      "isPrefix": true
                     },
                     "falseExpression": {
                      "type": "FunctionCall",
                      "expression": {
                       "type": "ElementaryTypeName",
                       "name": "int8",
                       "stateMutability": null
                      },
                      "arguments": [
                       {
                        "type": "NumberLiteral",
                        "number": "1",
                        "subdenomination": null
                       }
                      ],
                      "names": [],
                      "identifiers": []
                     }
                    }
                   },
                   "falseBody": {
                    "type": "ReturnStatement",
                    "expression": {
                     "type": "UnaryOperation",
                     "operator": "-",
                     "subExpression": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                     },
                     "isPrefix": true
                    }
                   }
                  }
                 ]
                },
                "falseBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "IfStatement",
                   "condition": {
                    "type": "Identifier",
                    "name": "negativeY"
                   },
                   "trueBody": {
                    "type": "ReturnStatement",
                    "expression": {
                     "type": "NumberLiteral",
                     "number": "1",
                     "subdenomination": null
                    }
                   },
                   "falseBody": {
                    "type": "ReturnStatement",
                    "expression": {
                     "type": "Conditional",
                     "condition": {
                      "type": "BinaryOperation",
                      "operator": ">",
                      "left": {
                       "type": "Identifier",
                       "name": "absoluteX"
                      },
                      "right": {
                       "type": "Identifier",
                       "name": "absoluteY"
                      }
                     },
                     "trueExpression": {
                      "type": "FunctionCall",
                      "expression": {
                       "type": "ElementaryTypeName",
                       "name": "int8",
                       "stateMutability": null
                      },
                      "arguments": [
                       {
                        "type": "NumberLiteral",
                        "number": "1",
                        "subdenomination": null
                       }
                      ],
                      "names": [],
                      "identifiers": []
                     },
                     "falseExpression": {
                      "type": "UnaryOperation",
                      "operator": "-",
                      "subExpression": {
                       "type": "NumberLiteral",
                       "number": "1",
                       "subdenomination": null
                      },
                      "isPrefix": true
                     }
                    }
                   }
                  }
                 ]
                }
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "eq",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes16",
          "stateMutability": null
         },
         "name": "x",
         "identifier": {
          "type": "Identifier",
          "name": "x"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes16",
          "stateMutability": null
         },
         "name": "y",
         "identifier": {
          "type": "Identifier",
          "name": "y"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "UncheckedStatement",
          "block": {
           "type": "Block",
           "statements": [
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "Identifier",
               "name": "x"
              },
              "right": {
               "type": "Identifier",
               "name": "y"
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ReturnStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "<",
                 "left": {
                  "type": "BinaryOperation",
                  "operator": "&",
                  "left": {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "ElementaryTypeName",
                    "name": "uint128",
                    "stateMutability": null
                   },
                   "arguments": [
                    {
                     "type": "Identifier",
                     "name": "x"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  },
                  "right": {
                   "type": "NumberLiteral",
                   "number": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
                   "subdenomination": null
                  }
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "0x7FFF0000000000000000000000000000",
                  "subdenomination": null
                 }
                }
               }
              ]
             },
             "falseBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ReturnStatement",
                "expression": {
                 "type": "BooleanLiteral",
                 "value": false
                }
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "add",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes16",
          "stateMutability": null
         },
         "name": "x",
         "identifier": {
          "type": "Identifier",
          "name": "x"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes16",
          "stateMutability": null
         },
         "name": "y",
         "identifier": {
          "type": "Identifier",
          "name": "y"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes16",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "UncheckedStatement",
          "block": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "xExponent",
               "identifier": {
                "type": "Identifier",
                "name": "xExponent"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "BinaryOperation",
              "operator": "&",
              "left": {
               "type": "BinaryOperation",
               "operator": ">>",
               "left": {
                "type": "FunctionCall",
                "expression": {
                 "type": "ElementaryTypeName",
                 "name": "uint128",
                 "stateMutability": null
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "x"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "right": {
                "type": "NumberLiteral",
                "number": "112",
                "subdenomination": null
               }
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0x7FFF",
               "subdenomination": null
              }
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "yExponent",
               "identifier": {
                "type": "Identifier",
                "name": "yExponent"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "BinaryOperation",
              "operator": "&",
              "left": {
               "type": "BinaryOperation",
               "operator": ">>",
               "left": {
                "type": "FunctionCall",
                "expression": {
                 "type": "ElementaryTypeName",
                 "name": "uint128",
                 "stateMutability": null
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "y"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "right": {
                "type": "NumberLiteral",
                "number": "112",
                "subdenomination": null
               }
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0x7FFF",
               "subdenomination": null
              }
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "Identifier",
               "name": "xExponent"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0x7FFF",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "==",
                 "left": {
                  "type": "Identifier",
                  "name": "yExponent"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "0x7FFF",
                  "subdenomination": null
                 }
                },
                "trueBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "IfStatement",
                   "condition": {
                    "type": "BinaryOperation",
                    "operator": "==",
                    "left": {
                     "type": "Identifier",
                     "name": "x"
                    },
                    "right": {
                     "type": "Identifier",
                     "name": "y"
                    }
                   },
                   "trueBody": {
                    "type": "ReturnStatement",
                    "expression": {
                     "type": "Identifier",
                     "name": "x"
                    }
                   },
                   "falseBody": {
                    "type": "ReturnStatement",
                    "expression": {
                     "type": "Identifier",
                     "name": "NaN"
                    }
                   }
                  }
                 ]
                },
                "falseBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "ReturnStatement",
                   "expression": {
                    "type": "Identifier",
                    "name": "x"
                   }
                  }
                 ]
                }
               }
              ]
             },
             "falseBody": {
              "type": "IfStatement",
              "condition": {
               "type": "BinaryOperation",
               "operator": "==",
               "left": {
                "type": "Identifier",
                "name": "yExponent"
               },
               "right": {
                "type": "NumberLiteral",
                "number": "0x7FFF",
                "subdenomination": null
               }
              },
              "trueBody": {
               "type": "Block",
               "statements": [
                {
                 "type": "ReturnStatement",
                 "expression": {
                  "type": "Identifier",
                  "name": "y"
                 }
                }
               ]
              },
              "falseBody": {
               "type": "Block",
               "statements": [
                {
                 "type": "VariableDeclarationStatement",
                 "variables": [
                  {
                   "type": "VariableDeclaration",
                   "typeName": {
                    "type": "ElementaryTypeName",
                    "name": "bool",
                    "stateMutability": null
                   },
                   "name": "xSign",
                   "identifier": {
                    "type": "Identifier",
                    "name": "xSign"
                   },
                   "storageLocation": null,
                   "isStateVar": false,
                   "isIndexed": false,
                   "expression": null
                  }
                 ],
                 "initialValue": {
                  "type": "BinaryOperation",
                  "operator": ">=",
                  "left": {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "ElementaryTypeName",
                    "name": "uint128",
                    "stateMutability": null
                   },
                   "arguments": [
                    {
                     "type": "Identifier",
                     "name": "x"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  },
                  "right": {
                   "type": "NumberLiteral",
                   "number": "0x80000000000000000000000000000000",
                   "subdenomination": null
                  }
                 }
                },
                {
                 "type": "VariableDeclarationStatement",
                 "variables": [
                  {
                   "type": "VariableDeclaration",
                   "typeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256",
                    "stateMutability": null
                   },
                   "name": "xSignifier",
                   "identifier": {
                    "type": "Identifier",
                    "name": "xSignifier"
                   },
                   "storageLocation": null,
                   "isStateVar": false,
                   "isIndexed": false,
                   "expression": null
                  }
                 ],
                 "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "&",
                  "left": {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "ElementaryTypeName",
                    "name": "uint128",
                    "stateMutability": null
                   },
                   "arguments": [
                    {
                     "type": "Identifier",
                     "name": "x"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  },
                  "right": {
                   "type": "NumberLiteral",
                   "number": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
                   "subdenomination": null
                  }
                 }
                },
                {
                 "type": "IfStatement",
                 "condition": {
                  "type": "BinaryOperation",
                  "operator": "==",
                  "left": {
                   "type": "Identifier",
                   "name": "xExponent"
                  },
                  "right": {
                   "type": "NumberLiteral",
                   "number": "0",
                   "subdenomination": null
                  }
                 },
                 "trueBody": {
                  "type": "ExpressionStatement",
                  "expression": {
                   "type": "BinaryOperation",
                   "operator": "=",
                   "left": {
                    "type": "Identifier",
                    "name": "xExponent"
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "1",
                    "subdenomination": null
                   }
                  }
                 },
                 "falseBody": {
                  "type": "ExpressionStatement",
                  "expression": {
                   "type": "BinaryOperation",
                   "operator": "|=",
                   "left": {
                    "type": "Identifier",
                    "name": "xSignifier"
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0x10000000000000000000000000000",
                    "subdenomination": null
                   }
                  }
                 }
                },
                {
                 "type": "VariableDeclarationStatement",
                 "variables": [
                  {
                   "type": "VariableDeclaration",
                   "typeName": {
                    "type": "ElementaryTypeName",
                    "name": "bool",
                    "stateMutability": null
                   },
                   "name": "ySign",
                   "identifier": {
                    "type": "Identifier",
                    "name": "ySign"
                   },
                   "storageLocation": null,
                   "isStateVar": false,
                   "isIndexed": false,
                   "expression": null
                  }
                 ],
                 "initialValue": {
                  "type": "BinaryOperation",
                  "operator": ">=",
                  "left": {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "ElementaryTypeName",
                    "name": "uint128",
                    "stateMutability": null
                   },
                   "arguments": [
                    {
                     "type": "Identifier",
                     "name": "y"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  },
                  "right": {
                   "type": "NumberLiteral",
                   "number": "0x80000000000000000000000000000000",
                   "subdenomination": null
                  }
                 }
                },
                {
                 "type": "VariableDeclarationStatement",
                 "variables": [
                  {
                   "type": "VariableDeclaration",
                   "typeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256",
                    "stateMutability": null
                   },
                   "name": "ySignifier",
                   "identifier": {
                    "type": "Identifier",
                    "name": "ySignifier"
                   },
                   "storageLocation": null,
                   "isStateVar": false,
                   "isIndexed": false,
                   "expression": null
                  }
                 ],
                 "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "&",
                  "left": {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "ElementaryTypeName",
                    "name": "uint128",
                    "stateMutability": null
                   },
                   "arguments": [
                    {
                     "type": "Identifier",
                     "name": "y"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  },
                  "right": {
                   "type": "NumberLiteral",
                   "number": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
                   "subdenomination": null
                  }
                 }
                },
                {
                 "type": "IfStatement",
                 "condition": {
                  "type": "BinaryOperation",
                  "operator": "==",
                  "left": {
                   "type": "Identifier",
                   "name": "yExponent"
                  },
                  "right": {
                   "type": "NumberLiteral",
                   "number": "0",
                   "subdenomination": null
                  }
                 },
                 "trueBody": {
                  "type": "ExpressionStatement",
                  "expression": {
                   "type": "BinaryOperation",
                   "operator": "=",
                   "left": {
                    "type": "Identifier",
                    "name": "yExponent"
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "1",
                    "subdenomination": null
                   }
                  }
                 },
                 "falseBody": {
                  "type": "ExpressionStatement",
                  "expression": {
                   "type": "BinaryOperation",
                   "operator": "|=",
                   "left": {
                    "type": "Identifier",
                    "name": "ySignifier"
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0x10000000000000000000000000000",
                    "subdenomination": null
                   }
                  }
                 }
                },
                {
                 "type": "IfStatement",
                 "condition": {
                  "type": "BinaryOperation",
                  "operator": "==",
                  "left": {
                   "type": "Identifier",
                   "name": "xSignifier"
                  },
                  "right": {
                   "type": "NumberLiteral",
                   "number": "0",
                   "subdenomination": null
                  }
                 },
                 "trueBody": {
                  "type": "Block",
                  "statements": [
                   {
                    "type": "ReturnStatement",
                    "expression": {
                     "type": "Conditional",
                     "condition": {
                      "type": "BinaryOperation",
                      "operator": "==",
                      "left": {
                       "type": "Identifier",
                       "name": "y"
                      },
                      "right": {
                       "type": "Identifier",
                       "name": "NEGATIVE_ZERO"
                      }
                     },
                     "trueExpression": {
                      "type": "Identifier",
                      "name": "POSITIVE_ZERO"
                     },
                     "falseExpression": {
                      "type": "Identifier",
                      "name": "y"
                     }
                    }
                   }
                  ]
                 },
                 "falseBody": {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": "==",
                   "left": {
                    "type": "Identifier",
                    "name": "ySignifier"
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ReturnStatement",
                     "expression": {
                      "type": "Conditional",
                      "condition": {
                       "type": "BinaryOperation",
                       "operator": "==",
                       "left": {
                        "type": "Identifier",
                        "name": "x"
                       },
                       "right": {
                        "type": "Identifier",
                        "name": "NEGATIVE_ZERO"
                       }
                      },
                      "trueExpression": {
                       "type": "Identifier",
                       "name": "POSITIVE_ZERO"
                      },
                      "falseExpression": {
                       "type": "Identifier",
                       "name": "x"
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "VariableDeclarationStatement",
                     "variables": [
                      {
                       "type": "VariableDeclaration",
                       "typeName": {
                        "type": "ElementaryTypeName",
                        "name": "int",
                        "stateMutability": null
                       },
                       "name": "delta",
                       "identifier": {
                        "type": "Identifier",
                        "name": "delta"
                       },
                       "storageLocation": null,
                       "isStateVar": false,
                       "isIndexed": false,
                       "expression": null
                      }
                     ],
                     "initialValue": {
                      "type": "BinaryOperation",
                      "operator": "-",
                      "left": {
                       "type": "FunctionCall",
                       "expression": {
                        "type": "ElementaryTypeName",
                        "name": "int",
                        "stateMutability": null
                       },
                       "arguments": [
                        {
                         "type": "Identifier",
                         "name": "xExponent"
                        }
                       ],
                       "names": [],
                       "identifiers": []
                      },
                      "right": {
                       "type": "FunctionCall",
                       "expression": {
                        "type": "ElementaryTypeName",
                        "name": "int",
                        "stateMutability": null
                       },
                       "arguments": [
                        {
                         "type": "Identifier",
                         "name": "yExponent"
                        }
                       ],
                       "names": [],
                       "identifiers": []
                      }
                     }
                    },
                    {
                     "type": "IfStatement",
                     "condition": {
                      "type": "BinaryOperation",
                      "operator": "==",
                      "left": {
                       "type": "Identifier",
                       "name": "xSign"
                      },
                      "right": {
                       "type": "Identifier",
                       "name": "ySign"
                      }
                     },
                     "trueBody": {
                      "type": "Block",
                      "statements": [
                       {
                        "type": "IfStatement",
                        "condition": {
                         "type": "BinaryOperation",
                         "operator": ">",
                         "left": {
                          "type": "Identifier",
                          "name": "delta"
                         },
                         "right": {
                          "type": "NumberLiteral",
                          "number": "112",
                          "subdenomination": null
                         }
                        },
                        "trueBody": {
                         "type": "Block",
                         "statements": [
                          {
                           "type": "ReturnStatement",
                           "expression": {
                            "type": "Identifier",
                            "name": "x"
                           }
                          }
                         ]
                        },
                        "falseBody": {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": ">",
                          "left": {
                           "type": "Identifier",
                           "name": "delta"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "0",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "ExpressionStatement",
                            "expression": {
                             "type": "BinaryOperation",
                             "operator": ">>=",
                             "left": {
                              "type": "Identifier",
                              "name": "ySignifier"
                             },
                             "right": {
                              "type": "FunctionCall",
                              "expression": {
                               "type": "ElementaryTypeName",
                               "name": "uint256",
                               "stateMutability": null
                              },
                              "arguments": [
                               {
                                "type": "Identifier",
                                "name": "delta"
                               }
                              ],
                              "names": [],
                              "identifiers": []
                             }
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "IfStatement",
                          "condition": {
                           "type": "BinaryOperation",
                           "operator": "<",
                           "left": {
                            "type": "Identifier",
                            "name": "delta"
                           },
                           "right": {
                            "type": "UnaryOperation",
                            "operator": "-",
                            "subExpression": {
                             "type": "NumberLiteral",
                             "number": "112",
                             "subdenomination": null
                            },
                            "isPrefix": true
                           }
                          },
                          "trueBody": {
                           "type": "Block",
                           "statements": [
                            {
                             "type": "ReturnStatement",
                             "expression": {
                              "type": "Identifier",
                              "name": "y"
                             }
                            }
                           ]
                          },
                          "falseBody": {
                           "type": "IfStatement",
                           "condition": {
                            "type": "BinaryOperation",
                            "operator": "<",
                            "left": {
                             "type": "Identifier",
                             "name": "delta"
                            },
                            "right": {
                             "type": "NumberLiteral",
                             "number": "0",
                             "subdenomination": null
                            }
                           },
                           "trueBody": {
                            "type": "Block",
                            "statements": [
                             {
                              "type": "ExpressionStatement",
                              "expression": {
                               "type": "BinaryOperation",
                               "operator": ">>=",
                               "left": {
                                "type": "Identifier",
                                "name": "xSignifier"
                               },
                               "right": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "ElementaryTypeName",
                                 "name": "uint256",
                                 "stateMutability": null
                                },
                                "arguments": [
                                 {
                                  "type": "UnaryOperation",
                                  "operator": "-",
                                  "subExpression": {
                                   "type": "Identifier",
                                   "name": "delta"
                                  },
                                  "isPrefix": true
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             },
                             {
                              "type": "ExpressionStatement",
                              "expression": {
                               "type": "BinaryOperation",
                               "operator": "=",
                               "left": {
                                "type": "Identifier",
                                "name": "xExponent"
                               },
                               "right": {
                                "type": "Identifier",
                                "name": "yExponent"
                               }
                              }
                             }
                            ]
                           },
                           "falseBody": null
                          }
                         }
                        }
                       },
                       {
                        "type": "ExpressionStatement",
                        "expression": {
                         "type": "BinaryOperation",
                         "operator": "+=",
                         "left": {
                          "type": "Identifier",
                          "name": "xSignifier"
                         },
                         "right": {
                          "type": "Identifier",
                          "name": "ySignifier"
                         }
                        }
                       },
                       {
                        "type": "IfStatement",
                        "condition": {
                         "type": "BinaryOperation",
                         "operator": ">=",
                         "left": {
                          "type": "Identifier",
                          "name": "xSignifier"
                         },
                         "right": {
                          "type": "NumberLiteral",
                          "number": "0x20000000000000000000000000000",
                          "subdenomination": null
                         }
                        },
                        "trueBody": {
                         "type": "Block",
                         "statements": [
                          {
                           "type": "ExpressionStatement",
                           "expression": {
                            "type": "BinaryOperation",
                            "operator": ">>=",
                            "left": {
                             "type": "Identifier",
                             "name": "xSignifier"
                            },
                            "right": {
                             "type": "NumberLiteral",
                             "number": "1",
                             "subdenomination": null
                            }
                           }
                          },
                          {
                           "type": "ExpressionStatement",
                           "expression": {
                            "type": "BinaryOperation",
                            "operator": "+=",
                            "left": {
                             "type": "Identifier",
                             "name": "xExponent"
                            },
                            "right": {
                             "type": "NumberLiteral",
                             "number": "1",
                             "subdenomination": null
                            }
                           }
                          }
                         ]
                        },
                        "falseBody": null
                       },
                       {
                        "type": "IfStatement",
                        "condition": {
                         "type": "BinaryOperation",
                         "operator": "==",
                         "left": {
                          "type": "Identifier",
                          "name": "xExponent"
                         },
                         "right": {
                          "type": "NumberLiteral",
                          "number": "0x7FFF",
                          "subdenomination": null
                         }
                        },
                        "trueBody": {
                         "type": "Block",
                         "statements": [
                          {
                           "type": "ReturnStatement",
                           "expression": {
                            "type": "Conditional",
                            "condition": {
                             "type": "Identifier",
                             "name": "xSign"
                            },
                            "trueExpression": {
                             "type": "Identifier",
                             "name": "NEGATIVE_INFINITY"
                            },
                            "falseExpression": {
                             "type": "Identifier",
                             "name": "POSITIVE_INFINITY"
                            }
                           }
                          }
                         ]
                        },
                        "falseBody": {
                         "type": "Block",
                         "statements": [
                          {
                           "type": "IfStatement",
                           "condition": {
                            "type": "BinaryOperation",
                            "operator": "<",
                            "left": {
                             "type": "Identifier",
                             "name": "xSignifier"
                            },
                            "right": {
                             "type": "NumberLiteral",
                             "number": "0x10000000000000000000000000000",
                             "subdenomination": null
                            }
                           },
                           "trueBody": {
                            "type": "ExpressionStatement",
                            "expression": {
                             "type": "BinaryOperation",
                             "operator": "=",
                             "left": {
                              "type": "Identifier",
                              "name": "xExponent"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "0",
                              "subdenomination": null
                             }
                            }
                           },
                           "falseBody": {
                            "type": "ExpressionStatement",
                            "expression": {
                             "type": "BinaryOperation",
                             "operator": "&=",
                             "left": {
                              "type": "Identifier",
                              "name": "xSignifier"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
                              "subdenomination": null
                             }
                            }
                           }
                          },
                          {
                           "type": "ReturnStatement",
                           "expression": {
                            "type": "FunctionCall",
                            "expression": {
                             "type": "ElementaryTypeName",
                             "name": "bytes16",
                             "stateMutability": null
                            },
                            "arguments": [
                             {
                              "type": "FunctionCall",
                              "expression": {
                               "type": "ElementaryTypeName",
                               "name": "uint128",
                               "stateMutability": null
                              },
                              "arguments": [
                               {
                                "type": "BinaryOperation",
                                "operator": "|",
                                "left": {
                                 "type": "BinaryOperation",
                                 "operator": "|",
                                 "left": {
                                  "type": "TupleExpression",
                                  "components": [
                                   {
                                    "type": "Conditional",
                                    "condition": {
                                     "type": "Identifier",
                                     "name": "xSign"
                                    },
                                    "trueExpression": {
                                     "type": "NumberLiteral",
                                     "number": "0x80000000000000000000000000000000",
                                     "subdenomination": null
                                    },
                                    "falseExpression": {
                                     "type": "NumberLiteral",
                                     "number": "0",
                                     "subdenomination": null
                                    }
                                   }
                                  ],
                                  "isArray": false
                                 },
                                 "right": {
                                  "type": "TupleExpression",
                                  "components": [
                                   {
                                    "type": "BinaryOperation",
                                    "operator": "<<",
                                    "left": {
                                     "type": "Identifier",
                                     "name": "xExponent"
                                    },
                                    "right": {
                                     "type": "NumberLiteral",
                                     "number": "112",
                                     "subdenomination": null
                                    }
                                   }
                                  ],
                                  "isArray": false
                                 }
                                },
                                "right": {
                                 "type": "Identifier",
                                 "name": "xSignifier"
                                }
                               }
                              ],
                              "names": [],
                              "identifiers": []
                             }
                            ],
                            "names": [],
                            "identifiers": []
                           }
                          }
                         ]
                        }
                       }
                      ]
                     },
                     "falseBody": {
                      "type": "Block",
                      "statements": [
                       {
                        "type": "IfStatement",
                        "condition": {
                         "type": "BinaryOperation",
                         "operator": ">",
                         "left": {
                          "type": "Identifier",
                          "name": "delta"
                         },
                         "right": {
                          "type": "NumberLiteral",
                          "number": "0",
                          "subdenomination": null
                         }
                        },
                        "trueBody": {
                         "type": "Block",
                         "statements": [
                          {
                           "type": "ExpressionStatement",
                           "expression": {
                            "type": "BinaryOperation",
                            "operator": "<<=",
                            "left": {
                             "type": "Identifier",
                             "name": "xSignifier"
                            },
                            "right": {
                             "type": "NumberLiteral",
                             "number": "1",
                             "subdenomination": null
                            }
                           }
                          },
                          {
                           "type": "ExpressionStatement",
                           "expression": {
                            "type": "BinaryOperation",
                            "operator": "-=",
                            "left": {
                             "type": "Identifier",
                             "name": "xExponent"
                            },
                            "right": {
                             "type": "NumberLiteral",
                             "number": "1",
                             "subdenomination": null
                            }
                           }
                          }
                         ]
                        },
                        "falseBody": {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "delta"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "0",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "ExpressionStatement",
                            "expression": {
                             "type": "BinaryOperation",
                             "operator": "<<=",
                             "left": {
                              "type": "Identifier",
                              "name": "ySignifier"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "1",
                              "subdenomination": null
                             }
                            }
                           },
                           {
                            "type": "ExpressionStatement",
                            "expression": {
                             "type": "BinaryOperation",
                             "operator": "=",
                             "left": {
                              "type": "Identifier",
                              "name": "xExponent"
                             },
                             "right": {
                              "type": "BinaryOperation",
                              "operator": "-",
                              "left": {
                               "type": "Identifier",
                               "name": "yExponent"
                              },
                              "right": {
                               "type": "NumberLiteral",
                               "number": "1",
                               "subdenomination": null
                              }
                             }
                            }
                           }
                          ]
                         },
                         "falseBody": null
                        }
                       },
                       {
                        "type": "IfStatement",
                        "condition": {
                         "type": "BinaryOperation",
                         "operator": ">",
                         "left": {
                          "type": "Identifier",
                          "name": "delta"
                         },
                         "right": {
                          "type": "NumberLiteral",
                          "number": "112",
                          "subdenomination": null
                         }
                        },
                        "trueBody": {
                         "type": "ExpressionStatement",
                         "expression": {
                          "type": "BinaryOperation",
                          "operator": "=",
                          "left": {
                           "type": "Identifier",
                           "name": "ySignifier"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "1",
                           "subdenomination": null
                          }
                         }
                        },
                        "falseBody": {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": ">",
                          "left": {
                           "type": "Identifier",
                           "name": "delta"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "1",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "ExpressionStatement",
                          "expression": {
                           "type": "BinaryOperation",
                           "operator": "=",
                           "left": {
                            "type": "Identifier",
                            "name": "ySignifier"
                           },
                           "right": {
                            "type": "BinaryOperation",
                            "operator": "+",
                            "left": {
                             "type": "TupleExpression",
                             "components": [
                              {
                               "type": "BinaryOperation",
                               "operator": ">>",
                               "left": {
                                "type": "BinaryOperation",
                                "operator": "-",
                                "left": {
                                 "type": "Identifier",
                                 "name": "ySignifier"
                                },
                                "right": {
                                 "type": "NumberLiteral",
                                 "number": "1",
                                 "subdenomination": null
                                }
                               },
                               "right": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "ElementaryTypeName",
                                 "name": "uint256",
                                 "stateMutability": null
                                },
                                "arguments": [
                                 {
                                  "type": "BinaryOperation",
                                  "operator": "-",
                                  "left": {
                                   "type": "Identifier",
                                   "name": "delta"
                                  },
                                  "right": {
                                   "type": "NumberLiteral",
                                   "number": "1",
                                   "subdenomination": null
                                  }
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ],
                             "isArray": false
                            },
                            "right": {
                             "type": "NumberLiteral",
                             "number": "1",
                             "subdenomination": null
                            }
                           }
                          }
                         },
                         "falseBody": {
                          "type": "IfStatement",
                          "condition": {
                           "type": "BinaryOperation",
                           "operator": "<",
                           "left": {
                            "type": "Identifier",
                            "name": "delta"
                           },
                           "right": {
                            "type": "UnaryOperation",
                            "operator": "-",
                            "subExpression": {
                             "type": "NumberLiteral",
                             "number": "112",
                             "subdenomination": null
                            },
                            "isPrefix": true
                           }
                          },
                          "trueBody": {
                           "type": "ExpressionStatement",
                           "expression": {
                            "type": "BinaryOperation",
                            "operator": "=",
                            "left": {
                             "type": "Identifier",
                             "name": "xSignifier"
                            },
                            "right": {
                             "type": "NumberLiteral",
                             "number": "1",
                             "subdenomination": null
                            }
                           }
                          },
                          "falseBody": {
                           "type": "IfStatement",
                           "condition": {
                            "type": "BinaryOperation",
                            "operator": "<",
                            "left": {
                             "type": "Identifier",
                             "name": "delta"
                            },
                            "right": {
                             "type": "UnaryOperation",
                             "operator": "-",
                             "subExpression": {
                              "type": "NumberLiteral",
                              "number": "1",
                              "subdenomination": null
                             },
                             "isPrefix": true
                            }
                           },
                           "trueBody": {
                            "type": "ExpressionStatement",
                            "expression": {
                             "type": "BinaryOperation",
                             "operator": "=",
                             "left": {
                              "type": "Identifier",
                              "name": "xSignifier"
                             },
                             "right": {
                              "type": "BinaryOperation",
                              "operator": "+",
                              "left": {
                               "type": "TupleExpression",
                               "components": [
                                {
                                 "type": "BinaryOperation",
                                 "operator": ">>",
                                 "left": {
                                  "type": "BinaryOperation",
                                  "operator": "-",
                                  "left": {
                                   "type": "Identifier",
                                   "name": "xSignifier"
                                  },
                                  "right": {
                                   "type": "NumberLiteral",
                                   "number": "1",
                                   "subdenomination": null
                                  }
                                 },
                                 "right": {
                                  "type": "FunctionCall",
                                  "expression": {
                                   "type": "ElementaryTypeName",
                                   "name": "uint256",
                                   "stateMutability": null
                                  },
                                  "arguments": [
                                   {
                                    "type": "BinaryOperation",
                                    "operator": "-",
                                    "left": {
                                     "type": "UnaryOperation",
                                     "operator": "-",
                                     "subExpression": {
                                      "type": "Identifier",
                                      "name": "delta"
                                     },
                                     "isPrefix": true
                                    },
                                    "right": {
                                     "type": "NumberLiteral",
                                     "number": "1",
                                     "subdenomination": null
                                    }
                                   }
                                  ],
                                  "names": [],
                                  "identifiers": []
                                 }
                                }
                               ],
                               "isArray": false
                              },
                              "right": {
                               "type": "NumberLiteral",
                               "number": "1",
                               "subdenomination": null
                              }
                             }
                            }
                           },
                           "falseBody": null
                          }
                         }
                        }
                       },
                       {
                        "type": "IfStatement",
                        "condition": {
                         "type": "BinaryOperation",
                         "operator": ">=",
                         "left": {
                          "type": "Identifier",
                          "name": "xSignifier"
                         },
                         "right": {
                          "type": "Identifier",
                          "name": "ySignifier"
                         }
                        },
                        "trueBody": {
                         "type": "Block",
                         "statements": [
                          {
                           "type": "ExpressionStatement",
                           "expression": {
                            "type": "BinaryOperation",
                            "operator": "-=",
                            "left": {
                             "type": "Identifier",
                             "name": "xSignifier"
                            },
                            "right": {
                             "type": "Identifier",
                             "name": "ySignifier"
                            }
                           }
                          }
                         ]
                        },
                        "falseBody": {
                         "type": "Block",
                         "statements": [
                          {
                           "type": "ExpressionStatement",
                           "expression": {
                            "type": "BinaryOperation",
                            "operator": "=",
                            "left": {
                             "type": "Identifier",
                             "name": "xSignifier"
                            },
                            "right": {
                             "type": "BinaryOperation",
                             "operator": "-",
                             "left": {
                              "type": "Identifier",
                              "name": "ySignifier"
                             },
                             "right": {
                              "type": "Identifier",
                              "name": "xSignifier"
                             }
                            }
                           }
                          },
                          {
                           "type": "ExpressionStatement",
                           "expression": {
                            "type": "BinaryOperation",
                            "operator": "=",
                            "left": {
                             "type": "Identifier",
                             "name": "xSign"
                            },
                            "right": {
                             "type": "Identifier",
                             "name": "ySign"
                            }
                           }
                          }
                         ]
                        }
                       },
                       {
                        "type": "IfStatement",
                        "condition": {
                         "type": "BinaryOperation",
                         "operator": "==",
                         "left": {
                          "type": "Identifier",
                          "name": "xSignifier"
                         },
                         "right": {
                          "type": "NumberLiteral",
                          "number": "0",
                          "subdenomination": null
                         }
                        },
                        "trueBody": {
                         "type": "Block",
                         "statements": [
                          {
                           "type": "ReturnStatement",
                           "expression": {
                            "type": "Identifier",
                            "name": "POSITIVE_ZERO"
                           }
                          }
                         ]
                        },
                        "falseBody": null
                       },
                       {
                        "type": "VariableDeclarationStatement",
                        "variables": [
                         {
                          "type": "VariableDeclaration",
                          "typeName": {
                           "type": "ElementaryTypeName",
                           "name": "uint256",
                           "stateMutability": null
                          },
                          "name": "msb",
                          "identifier": {
                           "type": "Identifier",
                           "name": "msb"
                          },
                          "storageLocation": null,
                          "isStateVar": false,
                          "isIndexed": false,
                          "expression": null
                         }
                        ],
                        "initialValue": {
                         "type": "FunctionCall",
                         "expression": {
                          "type": "Identifier",
                          "name": "mostSignificantBit"
                         },
                         "arguments": [
                          {
                           "type": "Identifier",
                           "name": "xSignifier"
                          }
                         ],
                         "names": [],
                         "identifiers": []
                        }
                       },
                       {
                        "type": "IfStatement",
                        "condition": {
                         "type": "BinaryOperation",
                         "operator": "==",
                         "left": {
                          "type": "Identifier",
                          "name": "msb"
                         },
                         "right": {
                          "type": "NumberLiteral",
                          "number": "113",
                          "subdenomination": null
                         }
                        },
                        "trueBody": {
                         "type": "Block",
                         "statements": [
                          {
                           "type": "ExpressionStatement",
                           "expression": {
                            "type": "BinaryOperation",
                            "operator": "=",
                            "left": {
                             "type": "Identifier",
                             "name": "xSignifier"
                            },
                            "right": {
                             "type": "BinaryOperation",
                             "operator": "&",
                             "left": {
                              "type": "BinaryOperation",
                              "operator": ">>",
                              "left": {
                               "type": "Identifier",
                               "name": "xSignifier"
                              },
                              "right": {
                               "type": "NumberLiteral",
                               "number": "1",
                               "subdenomination": null
                              }
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
                              "subdenomination": null
                             }
                            }
                           }
                          },
                          {
                           "type": "ExpressionStatement",
                           "expression": {
                            "type": "BinaryOperation",
                            "operator": "+=",
                            "left": {
                             "type": "Identifier",
                             "name": "xExponent"
                            },
                            "right": {
                             "type": "NumberLiteral",
                             "number": "1",
                             "subdenomination": null
                            }
                           }
                          }
                         ]
                        },
                        "falseBody": {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "msb"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "112",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "VariableDeclarationStatement",
                            "variables": [
                             {
                              "type": "VariableDeclaration",
                              "typeName": {
                               "type": "ElementaryTypeName",
                               "name": "uint256",
                               "stateMutability": null
                              },
                              "name": "shift",
                              "identifier": {
                               "type": "Identifier",
                               "name": "shift"
                              },
                              "storageLocation": null,
                              "isStateVar": false,
                              "isIndexed": false,
                              "expression": null
                             }
                            ],
                            "initialValue": {
                             "type": "BinaryOperation",
                             "operator": "-",
                             "left": {
                              "type": "NumberLiteral",
                              "number": "112",
                              "subdenomination": null
                             },
                             "right": {
                              "type": "Identifier",
                              "name": "msb"
                             }
                            }
                           },
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": ">",
                             "left": {
                              "type": "Identifier",
                              "name": "xExponent"
                             },
                             "right": {
                              "type": "Identifier",
                              "name": "shift"
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ExpressionStatement",
                               "expression": {
                                "type": "BinaryOperation",
                                "operator": "=",
                                "left": {
                                 "type": "Identifier",
                                 "name": "xSignifier"
                                },
                                "right": {
                                 "type": "BinaryOperation",
                                 "operator": "&",
                                 "left": {
                                  "type": "BinaryOperation",
                                  "operator": "<<",
                                  "left": {
                                   "type": "Identifier",
                                   "name": "xSignifier"
                                  },
                                  "right": {
                                   "type": "Identifier",
                                   "name": "shift"
                                  }
                                 },
                                 "right": {
                                  "type": "NumberLiteral",
                                  "number": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
                                  "subdenomination": null
                                 }
                                }
                               }
                              },
                              {
                               "type": "ExpressionStatement",
                               "expression": {
                                "type": "BinaryOperation",
                                "operator": "-=",
                                "left": {
                                 "type": "Identifier",
                                 "name": "xExponent"
                                },
                                "right": {
                                 "type": "Identifier",
                                 "name": "shift"
                                }
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ExpressionStatement",
                               "expression": {
                                "type": "BinaryOperation",
                                "operator": "<<=",
                                "left": {
                                 "type": "Identifier",
                                 "name": "xSignifier"
                                },
                                "right": {
                                 "type": "BinaryOperation",
                                 "operator": "-",
                                 "left": {
                                  "type": "Identifier",
                                  "name": "xExponent"
                                 },
                                 "right": {
                                  "type": "NumberLiteral",
                                  "number": "1",
                                  "subdenomination": null
                                 }
                                }
                               }
                              },
                              {
                               "type": "ExpressionStatement",
                               "expression": {
                                "type": "BinaryOperation",
                                "operator": "=",
                                "left": {
                                 "type": "Identifier",
                                 "name": "xExponent"
                                },
                                "right": {
                                 "type": "NumberLiteral",
                                 "number": "0",
                                 "subdenomination": null
                                }
                               }
                              }
                             ]
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "ExpressionStatement",
                            "expression": {
                             "type": "BinaryOperation",
                             "operator": "&=",
                             "left": {
                              "type": "Identifier",
                              "name": "xSignifier"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
                              "subdenomination": null
                             }
                            }
                           }
                          ]
                         }
                        }
                       },
                       {
                        "type": "IfStatement",
                        "condition": {
                         "type": "BinaryOperation",
                         "operator": "==",
                         "left": {
                          "type": "Identifier",
                          "name": "xExponent"
                         },
                         "right": {
                          "type": "NumberLiteral",
                          "number": "0x7FFF",
                          "subdenomination": null
                         }
                        },
                        "trueBody": {
                         "type": "Block",
                         "statements": [
                          {
                           "type": "ReturnStatement",
                           "expression": {
                            "type": "Conditional",
                            "condition": {
                             "type": "Identifier",
                             "name": "xSign"
                            },
                            "trueExpression": {
                             "type": "Identifier",
                             "name": "NEGATIVE_INFINITY"
                            },
                            "falseExpression": {
                             "type": "Identifier",
                             "name": "POSITIVE_INFINITY"
                            }
                           }
                          }
                         ]
                        },
                        "falseBody": {
                         "type": "Block",
                         "statements": [
                          {
                           "type": "ReturnStatement",
                           "expression": {
                            "type": "FunctionCall",
                            "expression": {
                             "type": "ElementaryTypeName",
                             "name": "bytes16",
                             "stateMutability": null
                            },
                            "arguments": [
                             {
                              "type": "FunctionCall",
                              "expression": {
                               "type": "ElementaryTypeName",
                               "name": "uint128",
                               "stateMutability": null
                              },
                              "arguments": [
                               {
                                "type": "BinaryOperation",
                                "operator": "|",
                                "left": {
                                 "type": "BinaryOperation",
                                 "operator": "|",
                                 "left": {
                                  "type": "TupleExpression",
                                  "components": [
                                   {
                                    "type": "Conditional",
                                    "condition": {
                                     "type": "Identifier",
                                     "name": "xSign"
                                    },
                                    "trueExpression": {
                                     "type": "NumberLiteral",
                                     "number": "0x80000000000000000000000000000000",
                                     "subdenomination": null
                                    },
                                    "falseExpression": {
                                     "type": "NumberLiteral",
                                     "number": "0",
                                     "subdenomination": null
                                    }
                                   }
                                  ],
                                  "isArray": false
                                 },
                                 "right": {
                                  "type": "TupleExpression",
                                  "components": [
                                   {
                                    "type": "BinaryOperation",
                                    "operator": "<<",
                                    "left": {
                                     "type": "Identifier",
                                     "name": "xExponent"
                                    },
                                    "right": {
                                     "type": "NumberLiteral",
                                     "number": "112",
                                     "subdenomination": null
                                    }
                                   }
                                  ],
                                  "isArray": false
                                 }
                                },
                                "right": {
                                 "type": "Identifier",
                                 "name": "xSignifier"
                                }
                               }
                              ],
                              "names": [],
                              "identifiers": []
                             }
                            ],
                            "names": [],
                            "identifiers": []
                           }
                          }
                         ]
                        }
                       }
                      ]
                     }
                    }
                   ]
                  }
                 }
                }
               ]
              }
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "sub",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes16",
          "stateMutability": null
         },
         "name": "x",
         "identifier": {
          "type": "Identifier",
          "name": "x"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes16",
          "stateMutability": null
         },
         "name": "y",
         "identifier": {
          "type": "Identifier",
          "name": "y"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes16",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "UncheckedStatement",
          "block": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "add"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "x"
               },
               {
                "type": "BinaryOperation",
                "operator": "^",
                "left": {
                 "type": "Identifier",
                 "name": "y"
                },
                "right": {
                 "type": "NumberLiteral",
                 "number": "0x80000000000000000000000000000000",
                 "subdenomination": null
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "mul",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes16",
          "stateMutability": null
         },
         "name": "x",
         "identifier": {
          "type": "Identifier",
          "name": "x"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes16",
          "stateMutability": null
         },
         "name": "y",
         "identifier": {
          "type": "Identifier",
          "name": "y"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes16",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "UncheckedStatement",
          "block": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "xExponent",
               "identifier": {
                "type": "Identifier",
                "name": "xExponent"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "BinaryOperation",
              "operator": "&",
              "left": {
               "type": "BinaryOperation",
               "operator": ">>",
               "left": {
                "type": "FunctionCall",
                "expression": {
                 "type": "ElementaryTypeName",
                 "name": "uint128",
                 "stateMutability": null
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "x"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "right": {
                "type": "NumberLiteral",
                "number": "112",
                "subdenomination": null
               }
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0x7FFF",
               "subdenomination": null
              }
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "yExponent",
               "identifier": {
                "type": "Identifier",
                "name": "yExponent"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "BinaryOperation",
              "operator": "&",
              "left": {
               "type": "BinaryOperation",
               "operator": ">>",
               "left": {
                "type": "FunctionCall",
                "expression": {
                 "type": "ElementaryTypeName",
                 "name": "uint128",
                 "stateMutability": null
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "y"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "right": {
                "type": "NumberLiteral",
                "number": "112",
                "subdenomination": null
               }
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0x7FFF",
               "subdenomination": null
              }
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "Identifier",
               "name": "xExponent"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0x7FFF",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "==",
                 "left": {
                  "type": "Identifier",
                  "name": "yExponent"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "0x7FFF",
                  "subdenomination": null
                 }
                },
                "trueBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "IfStatement",
                   "condition": {
                    "type": "BinaryOperation",
                    "operator": "==",
                    "left": {
                     "type": "Identifier",
                     "name": "x"
                    },
                    "right": {
                     "type": "Identifier",
                     "name": "y"
                    }
                   },
                   "trueBody": {
                    "type": "ReturnStatement",
                    "expression": {
                     "type": "BinaryOperation",
                     "operator": "^",
                     "left": {
                      "type": "Identifier",
                      "name": "x"
                     },
                     "right": {
                      "type": "BinaryOperation",
                      "operator": "&",
                      "left": {
                       "type": "Identifier",
                       "name": "y"
                      },
                      "right": {
                       "type": "NumberLiteral",
                       "number": "0x80000000000000000000000000000000",
                       "subdenomination": null
                      }
                     }
                    }
                   },
                   "falseBody": {
                    "type": "IfStatement",
                    "condition": {
                     "type": "BinaryOperation",
                     "operator": "==",
                     "left": {
                      "type": "BinaryOperation",
                      "operator": "^",
                      "left": {
                       "type": "Identifier",
                       "name": "x"
                      },
                      "right": {
                       "type": "Identifier",
                       "name": "y"
                      }
                     },
                     "right": {
                      "type": "NumberLiteral",
                      "number": "0x80000000000000000000000000000000",
                      "subdenomination": null
                     }
                    },
                    "trueBody": {
                     "type": "ReturnStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "|",
                      "left": {
                       "type": "Identifier",
                       "name": "x"
                      },
                      "right": {
                       "type": "Identifier",
                       "name": "y"
                      }
                     }
                    },
                    "falseBody": {
                     "type": "ReturnStatement",
                     "expression": {
                      "type": "Identifier",
                      "name": "NaN"
                     }
                    }
                   }
                  }
                 ]
                },
                "falseBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "IfStatement",
                   "condition": {
                    "type": "BinaryOperation",
                    "operator": "==",
                    "left": {
                     "type": "BinaryOperation",
                     "operator": "&",
                     "left": {
                      "type": "Identifier",
                      "name": "y"
                     },
                     "right": {
                      "type": "NumberLiteral",
                      "number": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
                      "subdenomination": null
                     }
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0",
                     "subdenomination": null
                    }
                   },
                   "trueBody": {
                    "type": "ReturnStatement",
                    "expression": {
                     "type": "Identifier",
                     "name": "NaN"
                    }
                   },
                   "falseBody": {
                    "type": "ReturnStatement",
                    "expression": {
                     "type": "BinaryOperation",
                     "operator": "^",
                     "left": {
                      "type": "Identifier",
                      "name": "x"
                     },
                     "right": {
                      "type": "BinaryOperation",
                      "operator": "&",
                      "left": {
                       "type": "Identifier",
                       "name": "y"
                      },
                      "right": {
                       "type": "NumberLiteral",
                       "number": "0x80000000000000000000000000000000",
                       "subdenomination": null
                      }
                     }
                    }
                   }
                  }
                 ]
                }
               }
              ]
             },
             "falseBody": {
              "type": "IfStatement",
              "condition": {
               "type": "BinaryOperation",
               "operator": "==",
               "left": {
                "type": "Identifier",
                "name": "yExponent"
               },
               "right": {
                "type": "NumberLiteral",
                "number": "0x7FFF",
                "subdenomination": null
               }
              },
              "trueBody": {
               "type": "Block",
               "statements": [
                {
                 "type": "IfStatement",
                 "condition": {
                  "type": "BinaryOperation",
                  "operator": "==",
                  "left": {
                   "type": "BinaryOperation",
                   "operator": "&",
                   "left": {
                    "type": "Identifier",
                    "name": "x"
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
                    "subdenomination": null
                   }
                  },
                  "right": {
                   "type": "NumberLiteral",
                   "number": "0",
                   "subdenomination": null
                  }
                 },
                 "trueBody": {
                  "type": "ReturnStatement",
                  "expression": {
                   "type": "Identifier",
                   "name": "NaN"
                  }
                 },
                 "falseBody": {
                  "type": "ReturnStatement",
                  "expression": {
                   "type": "BinaryOperation",
                   "operator": "^",
                   "left": {
                    "type": "Identifier",
                    "name": "y"
                   },
                   "right": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "x"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x80000000000000000000000000000000",
                     "subdenomination": null
                    }
                   }
                  }
                 }
                }
               ]
              },
              "falseBody": {
               "type": "Block",
               "statements": [
                {
                 "type": "VariableDeclarationStatement",
                 "variables": [
                  {
                   "type": "VariableDeclaration",
                   "typeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256",
                    "stateMutability": null
                   },
                   "name": "xSignifier",
                   "identifier": {
                    "type": "Identifier",
                    "name": "xSignifier"
                   },
                   "storageLocation": null,
                   "isStateVar": false,
                   "isIndexed": false,
                   "expression": null
                  }
                 ],
                 "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "&",
                  "left": {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "ElementaryTypeName",
                    "name": "uint128",
                    "stateMutability": null
                   },
                   "arguments": [
                    {
                     "type": "Identifier",
                     "name": "x"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  },
                  "right": {
                   "type": "NumberLiteral",
                   "number": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
                   "subdenomination": null
                  }
                 }
                },
                {
                 "type": "IfStatement",
                 "condition": {
                  "type": "BinaryOperation",
                  "operator": "==",
                  "left": {
                   "type": "Identifier",
                   "name": "xExponent"
                  },
                  "right": {
                   "type": "NumberLiteral",
                   "number": "0",
                   "subdenomination": null
                  }
                 },
                 "trueBody": {
                  "type": "ExpressionStatement",
                  "expression": {
                   "type": "BinaryOperation",
                   "operator": "=",
                   "left": {
                    "type": "Identifier",
                    "name": "xExponent"
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "1",
                    "subdenomination": null
                   }
                  }
                 },
                 "falseBody": {
                  "type": "ExpressionStatement",
                  "expression": {
                   "type": "BinaryOperation",
                   "operator": "|=",
                   "left": {
                    "type": "Identifier",
                    "name": "xSignifier"
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0x10000000000000000000000000000",
                    "subdenomination": null
                   }
                  }
                 }
                },
                {
                 "type": "VariableDeclarationStatement",
                 "variables": [
                  {
                   "type": "VariableDeclaration",
                   "typeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256",
                    "stateMutability": null
                   },
                   "name": "ySignifier",
                   "identifier": {
                    "type": "Identifier",
                    "name": "ySignifier"
                   },
                   "storageLocation": null,
                   "isStateVar": false,
                   "isIndexed": false,
                   "expression": null
                  }
                 ],
                 "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "&",
                  "left": {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "ElementaryTypeName",
                    "name": "uint128",
                    "stateMutability": null
                   },
                   "arguments": [
                    {
                     "type": "Identifier",
                     "name": "y"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  },
                  "right": {
                   "type": "NumberLiteral",
                   "number": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
                   "subdenomination": null
                  }
                 }
                },
                {
                 "type": "IfStatement",
                 "condition": {
                  "type": "BinaryOperation",
                  "operator": "==",
                  "left": {
                   "type": "Identifier",
                   "name": "yExponent"
                  },
                  "right": {
                   "type": "NumberLiteral",
                   "number": "0",
                   "subdenomination": null
                  }
                 },
                 "trueBody": {
                  "type": "ExpressionStatement",
                  "expression": {
                   "type": "BinaryOperation",
                   "operator": "=",
                   "left": {
                    "type": "Identifier",
                    "name": "yExponent"
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "1",
                    "subdenomination": null
                   }
                  }
                 },
                 "falseBody": {
                  "type": "ExpressionStatement",
                  "expression": {
                   "type": "BinaryOperation",
                   "operator": "|=",
                   "left": {
                    "type": "Identifier",
                    "name": "ySignifier"
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0x10000000000000000000000000000",
                    "subdenomination": null
                   }
                  }
                 }
                },
                {
                 "type": "ExpressionStatement",
                 "expression": {
                  "type": "BinaryOperation",
                  "operator": "*=",
                  "left": {
                   "type": "Identifier",
                   "name": "xSignifier"
                  },
                  "right": {
                   "type": "Identifier",
                   "name": "ySignifier"
                  }
                 }
                },
                {
                 "type": "IfStatement",
                 "condition": {
                  "type": "BinaryOperation",
                  "operator": "==",
                  "left": {
                   "type": "Identifier",
                   "name": "xSignifier"
                  },
                  "right": {
                   "type": "NumberLiteral",
                   "number": "0",
                   "subdenomination": null
                  }
                 },
                 "trueBody": {
                  "type": "Block",
                  "statements": [
                   {
                    "type": "ReturnStatement",
                    "expression": {
                     "type": "Conditional",
                     "condition": {
                      "type": "BinaryOperation",
                      "operator": ">",
                      "left": {
                       "type": "BinaryOperation",
                       "operator": "&",
                       "left": {
                        "type": "TupleExpression",
                        "components": [
                         {
                          "type": "BinaryOperation",
                          "operator": "^",
                          "left": {
                           "type": "Identifier",
                           "name": "x"
                          },
                          "right": {
                           "type": "Identifier",
                           "name": "y"
                          }
                         }
                        ],
                        "isArray": false
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "0x80000000000000000000000000000000",
                        "subdenomination": null
                       }
                      },
                      "right": {
                       "type": "NumberLiteral",
                       "number": "0",
                       "subdenomination": null
                      }
                     },
                     "trueExpression": {
                      "type": "Identifier",
                      "name": "NEGATIVE_ZERO"
                     },
                     "falseExpression": {
                      "type": "Identifier",
                      "name": "POSITIVE_ZERO"
                     }
                    }
                   }
                  ]
                 },
                 "falseBody": null
                },
                {
                 "type": "ExpressionStatement",
                 "expression": {
                  "type": "BinaryOperation",
                  "operator": "+=",
                  "left": {
                   "type": "Identifier",
                   "name": "xExponent"
                  },
                  "right": {
                   "type": "Identifier",
                   "name": "yExponent"
                  }
                 }
                },
                {
                 "type": "VariableDeclarationStatement",
                 "variables": [
                  {
                   "type": "VariableDeclaration",
                   "typeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256",
                    "stateMutability": null
                   },
                   "name": "msb",
                   "identifier": {
                    "type": "Identifier",
                    "name": "msb"
                   },
                   "storageLocation": null,
                   "isStateVar": false,
                   "isIndexed": false,
                   "expression": null
                  }
                 ],
                 "initialValue": {
                  "type": "Conditional",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">=",
                   "left": {
                    "type": "Identifier",
                    "name": "xSignifier"
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0x200000000000000000000000000000000000000000000000000000000",
                    "subdenomination": null
                   }
                  },
                  "trueExpression": {
                   "type": "NumberLiteral",
                   "number": "225",
                   "subdenomination": null
                  },
                  "falseExpression": {
                   "type": "Conditional",
                   "condition": {
                    "type": "BinaryOperation",
                    "operator": ">=",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x100000000000000000000000000000000000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "trueExpression": {
                    "type": "NumberLiteral",
                    "number": "224",
                    "subdenomination": null
                   },
                   "falseExpression": {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "Identifier",
                     "name": "mostSignificantBit"
                    },
                    "arguments": [
                     {
                      "type": "Identifier",
                      "name": "xSignifier"
                     }
                    ],
                    "names": [],
                    "identifiers": []
                   }
                  }
                 }
                },
                {
                 "type": "IfStatement",
                 "condition": {
                  "type": "BinaryOperation",
                  "operator": "<",
                  "left": {
                   "type": "BinaryOperation",
                   "operator": "+",
                   "left": {
                    "type": "Identifier",
                    "name": "xExponent"
                   },
                   "right": {
                    "type": "Identifier",
                    "name": "msb"
                   }
                  },
                  "right": {
                   "type": "NumberLiteral",
                   "number": "16_496",
                   "subdenomination": null
                  }
                 },
                 "trueBody": {
                  "type": "Block",
                  "statements": [
                   {
                    "type": "ExpressionStatement",
                    "expression": {
                     "type": "BinaryOperation",
                     "operator": "=",
                     "left": {
                      "type": "Identifier",
                      "name": "xExponent"
                     },
                     "right": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                     }
                    }
                   },
                   {
                    "type": "ExpressionStatement",
                    "expression": {
                     "type": "BinaryOperation",
                     "operator": "=",
                     "left": {
                      "type": "Identifier",
                      "name": "xSignifier"
                     },
                     "right": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                     }
                    }
                   }
                  ]
                 },
                 "falseBody": {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": "<",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "+",
                    "left": {
                     "type": "Identifier",
                     "name": "xExponent"
                    },
                    "right": {
                     "type": "Identifier",
                     "name": "msb"
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "16_608",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "IfStatement",
                     "condition": {
                      "type": "BinaryOperation",
                      "operator": "<",
                      "left": {
                       "type": "Identifier",
                       "name": "xExponent"
                      },
                      "right": {
                       "type": "NumberLiteral",
                       "number": "16_496",
                       "subdenomination": null
                      }
                     },
                     "trueBody": {
                      "type": "Block",
                      "statements": [
                       {
                        "type": "ExpressionStatement",
                        "expression": {
                         "type": "BinaryOperation",
                         "operator": ">>=",
                         "left": {
                          "type": "Identifier",
                          "name": "xSignifier"
                         },
                         "right": {
                          "type": "BinaryOperation",
                          "operator": "-",
                          "left": {
                           "type": "NumberLiteral",
                           "number": "16_496",
                           "subdenomination": null
                          },
                          "right": {
                           "type": "Identifier",
                           "name": "xExponent"
                          }
                         }
                        }
                       }
                      ]
                     },
                     "falseBody": {
                      "type": "IfStatement",
                      "condition": {
                       "type": "BinaryOperation",
                       "operator": ">",
                       "left": {
                        "type": "Identifier",
                        "name": "xExponent"
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "16_496",
                        "subdenomination": null
                       }
                      },
                      "trueBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "ExpressionStatement",
                         "expression": {
                          "type": "BinaryOperation",
                          "operator": "<<=",
                          "left": {
                           "type": "Identifier",
                           "name": "xSignifier"
                          },
                          "right": {
                           "type": "BinaryOperation",
                           "operator": "-",
                           "left": {
                            "type": "Identifier",
                            "name": "xExponent"
                           },
                           "right": {
                            "type": "NumberLiteral",
                            "number": "16_496",
                            "subdenomination": null
                           }
                          }
                         }
                        }
                       ]
                      },
                      "falseBody": null
                     }
                    },
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "xExponent"
                      },
                      "right": {
                       "type": "NumberLiteral",
                       "number": "0",
                       "subdenomination": null
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": {
                   "type": "IfStatement",
                   "condition": {
                    "type": "BinaryOperation",
                    "operator": ">",
                    "left": {
                     "type": "BinaryOperation",
                     "operator": "+",
                     "left": {
                      "type": "Identifier",
                      "name": "xExponent"
                     },
                     "right": {
                      "type": "Identifier",
                      "name": "msb"
                     }
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "49_373",
                     "subdenomination": null
                    }
                   },
                   "trueBody": {
                    "type": "Block",
                    "statements": [
                     {
                      "type": "ExpressionStatement",
                      "expression": {
                       "type": "BinaryOperation",
                       "operator": "=",
                       "left": {
                        "type": "Identifier",
                        "name": "xExponent"
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "0x7FFF",
                        "subdenomination": null
                       }
                      }
                     },
                     {
                      "type": "ExpressionStatement",
                      "expression": {
                       "type": "BinaryOperation",
                       "operator": "=",
                       "left": {
                        "type": "Identifier",
                        "name": "xSignifier"
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "0",
                        "subdenomination": null
                       }
                      }
                     }
                    ]
                   },
                   "falseBody": {
                    "type": "Block",
                    "statements": [
                     {
                      "type": "IfStatement",
                      "condition": {
                       "type": "BinaryOperation",
                       "operator": ">",
                       "left": {
                        "type": "Identifier",
                        "name": "msb"
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "112",
                        "subdenomination": null
                       }
                      },
                      "trueBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "ExpressionStatement",
                         "expression": {
                          "type": "BinaryOperation",
                          "operator": ">>=",
                          "left": {
                           "type": "Identifier",
                           "name": "xSignifier"
                          },
                          "right": {
                           "type": "BinaryOperation",
                           "operator": "-",
                           "left": {
                            "type": "Identifier",
                            "name": "msb"
                           },
                           "right": {
                            "type": "NumberLiteral",
                            "number": "112",
                            "subdenomination": null
                           }
                          }
                         }
                        }
                       ]
                      },
                      "falseBody": {
                       "type": "IfStatement",
                       "condition": {
                        "type": "BinaryOperation",
                        "operator": "<",
                        "left": {
                         "type": "Identifier",
                         "name": "msb"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "112",
                         "subdenomination": null
                        }
                       },
                       "trueBody": {
                        "type": "Block",
                        "statements": [
                         {
                          "type": "ExpressionStatement",
                          "expression": {
                           "type": "BinaryOperation",
                           "operator": "<<=",
                           "left": {
                            "type": "Identifier",
                            "name": "xSignifier"
                           },
                           "right": {
                            "type": "BinaryOperation",
                            "operator": "-",
                            "left": {
                             "type": "NumberLiteral",
                             "number": "112",
                             "subdenomination": null
                            },
                            "right": {
                             "type": "Identifier",
                             "name": "msb"
                            }
                           }
                          }
                         }
                        ]
                       },
                       "falseBody": null
                      }
                     },
                     {
                      "type": "ExpressionStatement",
                      "expression": {
                       "type": "BinaryOperation",
                       "operator": "&=",
                       "left": {
                        "type": "Identifier",
                        "name": "xSignifier"
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
                        "subdenomination": null
                       }
                      }
                     },
                     {
                      "type": "ExpressionStatement",
                      "expression": {
                       "type": "BinaryOperation",
                       "operator": "=",
                       "left": {
                        "type": "Identifier",
                        "name": "xExponent"
                       },
                       "right": {
                        "type": "BinaryOperation",
                        "operator": "-",
                        "left": {
                         "type": "BinaryOperation",
                         "operator": "+",
                         "left": {
                          "type": "Identifier",
                          "name": "xExponent"
                         },
                         "right": {
                          "type": "Identifier",
                          "name": "msb"
                         }
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "16_607",
                         "subdenomination": null
                        }
                       }
                      }
                     }
                    ]
                   }
                  }
                 }
                },
                {
                 "type": "ReturnStatement",
                 "expression": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "ElementaryTypeName",
                   "name": "bytes16",
                   "stateMutability": null
                  },
                  "arguments": [
                   {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "ElementaryTypeName",
                     "name": "uint128",
                     "stateMutability": null
                    },
                    "arguments": [
                     {
                      "type": "BinaryOperation",
                      "operator": "|",
                      "left": {
                       "type": "BinaryOperation",
                       "operator": "|",
                       "left": {
                        "type": "FunctionCall",
                        "expression": {
                         "type": "ElementaryTypeName",
                         "name": "uint128",
                         "stateMutability": null
                        },
                        "arguments": [
                         {
                          "type": "BinaryOperation",
                          "operator": "&",
                          "left": {
                           "type": "TupleExpression",
                           "components": [
                            {
                             "type": "BinaryOperation",
                             "operator": "^",
                             "left": {
                              "type": "Identifier",
                              "name": "x"
                             },
                             "right": {
                              "type": "Identifier",
                              "name": "y"
                             }
                            }
                           ],
                           "isArray": false
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "0x80000000000000000000000000000000",
                           "subdenomination": null
                          }
                         }
                        ],
                        "names": [],
                        "identifiers": []
                       },
                       "right": {
                        "type": "BinaryOperation",
                        "operator": "<<",
                        "left": {
                         "type": "Identifier",
                         "name": "xExponent"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "112",
                         "subdenomination": null
                        }
                       }
                      },
                      "right": {
                       "type": "Identifier",
                       "name": "xSignifier"
                      }
                     }
                    ],
                    "names": [],
                    "identifiers": []
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                }
               ]
              }
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "div",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes16",
          "stateMutability": null
         },
         "name": "x",
         "identifier": {
          "type": "Identifier",
          "name": "x"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes16",
          "stateMutability": null
         },
         "name": "y",
         "identifier": {
          "type": "Identifier",
          "name": "y"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes16",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "UncheckedStatement",
          "block": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "xExponent",
               "identifier": {
                "type": "Identifier",
                "name": "xExponent"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "BinaryOperation",
              "operator": "&",
              "left": {
               "type": "BinaryOperation",
               "operator": ">>",
               "left": {
                "type": "FunctionCall",
                "expression": {
                 "type": "ElementaryTypeName",
                 "name": "uint128",
                 "stateMutability": null
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "x"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "right": {
                "type": "NumberLiteral",
                "number": "112",
                "subdenomination": null
               }
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0x7FFF",
               "subdenomination": null
              }
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "yExponent",
               "identifier": {
                "type": "Identifier",
                "name": "yExponent"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "BinaryOperation",
              "operator": "&",
              "left": {
               "type": "BinaryOperation",
               "operator": ">>",
               "left": {
                "type": "FunctionCall",
                "expression": {
                 "type": "ElementaryTypeName",
                 "name": "uint128",
                 "stateMutability": null
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "y"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "right": {
                "type": "NumberLiteral",
                "number": "112",
                "subdenomination": null
               }
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0x7FFF",
               "subdenomination": null
              }
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "Identifier",
               "name": "xExponent"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0x7FFF",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "==",
                 "left": {
                  "type": "Identifier",
                  "name": "yExponent"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "0x7FFF",
                  "subdenomination": null
                 }
                },
                "trueBody": {
                 "type": "ReturnStatement",
                 "expression": {
                  "type": "Identifier",
                  "name": "NaN"
                 }
                },
                "falseBody": {
                 "type": "ReturnStatement",
                 "expression": {
                  "type": "BinaryOperation",
                  "operator": "^",
                  "left": {
                   "type": "Identifier",
                   "name": "x"
                  },
                  "right": {
                   "type": "BinaryOperation",
                   "operator": "&",
                   "left": {
                    "type": "Identifier",
                    "name": "y"
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0x80000000000000000000000000000000",
                    "subdenomination": null
                   }
                  }
                 }
                }
               }
              ]
             },
             "falseBody": {
              "type": "IfStatement",
              "condition": {
               "type": "BinaryOperation",
               "operator": "==",
               "left": {
                "type": "Identifier",
                "name": "yExponent"
               },
               "right": {
                "type": "NumberLiteral",
                "number": "0x7FFF",
                "subdenomination": null
               }
              },
              "trueBody": {
               "type": "Block",
               "statements": [
                {
                 "type": "IfStatement",
                 "condition": {
                  "type": "BinaryOperation",
                  "operator": "!=",
                  "left": {
                   "type": "BinaryOperation",
                   "operator": "&",
                   "left": {
                    "type": "Identifier",
                    "name": "y"
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0x0000FFFFFFFFFFFFFFFFFFFFFFFFFFFF",
                    "subdenomination": null
                   }
                  },
                  "right": {
                   "type": "NumberLiteral",
                   "number": "0",
                   "subdenomination": null
                  }
                 },
                 "trueBody": {
                  "type": "ReturnStatement",
                  "expression": {
                   "type": "Identifier",
                   "name": "NaN"
                  }
                 },
                 "falseBody": {
                  "type": "ReturnStatement",
                  "expression": {
                   "type": "BinaryOperation",
                   "operator": "|",
                   "left": {
                    "type": "Identifier",
                    "name": "POSITIVE_ZERO"
                   },
                   "right": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "TupleExpression",
                     "components": [
                      {
                       "type": "BinaryOperation",
                       "operator": "^",
                       "left": {
                        "type": "Identifier",
                        "name": "x"
                       },
                       "right": {
                        "type": "Identifier",
                        "name": "y"
                       }
                      }
                     ],
                     "isArray": false
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x80000000000000000000000000000000",
                     "subdenomination": null
                    }
                   }
                  }
                 }
                }
               ]
              },
              "falseBody": {
               "type": "IfStatement",
               "condition": {
                "type": "BinaryOperation",
                "operator": "==",
                "left": {
                 "type": "BinaryOperation",
                 "operator": "&",
                 "left": {
                  "type": "Identifier",
                  "name": "y"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
                  "subdenomination": null
                 }
                },
                "right": {
                 "type": "NumberLiteral",
                 "number": "0",
                 "subdenomination": null
                }
               },
               "trueBody": {
                "type": "Block",
                "statements": [
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": "==",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "x"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "ReturnStatement",
                   "expression": {
                    "type": "Identifier",
                    "name": "NaN"
                   }
                  },
                  "falseBody": {
                   "type": "ReturnStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "|",
                    "left": {
                     "type": "Identifier",
                     "name": "POSITIVE_INFINITY"
                    },
                    "right": {
                     "type": "BinaryOperation",
                     "operator": "&",
                     "left": {
                      "type": "TupleExpression",
                      "components": [
                       {
                        "type": "BinaryOperation",
                        "operator": "^",
                        "left": {
                         "type": "Identifier",
                         "name": "x"
                        },
                        "right": {
                         "type": "Identifier",
                         "name": "y"
                        }
                       }
                      ],
                      "isArray": false
                     },
                     "right": {
                      "type": "NumberLiteral",
                      "number": "0x80000000000000000000000000000000",
                      "subdenomination": null
                     }
                    }
                   }
                  }
                 }
                ]
               },
               "falseBody": {
                "type": "Block",
                "statements": [
                 {
                  "type": "VariableDeclarationStatement",
                  "variables": [
                   {
                    "type": "VariableDeclaration",
                    "typeName": {
                     "type": "ElementaryTypeName",
                     "name": "uint256",
                     "stateMutability": null
                    },
                    "name": "ySignifier",
                    "identifier": {
                     "type": "Identifier",
                     "name": "ySignifier"
                    },
                    "storageLocation": null,
                    "isStateVar": false,
                    "isIndexed": false,
                    "expression": null
                   }
                  ],
                  "initialValue": {
                   "type": "BinaryOperation",
                   "operator": "&",
                   "left": {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "ElementaryTypeName",
                     "name": "uint128",
                     "stateMutability": null
                    },
                    "arguments": [
                     {
                      "type": "Identifier",
                      "name": "y"
                     }
                    ],
                    "names": [],
                    "identifiers": []
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
                    "subdenomination": null
                   }
                  }
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": "==",
                   "left": {
                    "type": "Identifier",
                    "name": "yExponent"
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                     "type": "Identifier",
                     "name": "yExponent"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "1",
                     "subdenomination": null
                    }
                   }
                  },
                  "falseBody": {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "|=",
                    "left": {
                     "type": "Identifier",
                     "name": "ySignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x10000000000000000000000000000",
                     "subdenomination": null
                    }
                   }
                  }
                 },
                 {
                  "type": "VariableDeclarationStatement",
                  "variables": [
                   {
                    "type": "VariableDeclaration",
                    "typeName": {
                     "type": "ElementaryTypeName",
                     "name": "uint256",
                     "stateMutability": null
                    },
                    "name": "xSignifier",
                    "identifier": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "storageLocation": null,
                    "isStateVar": false,
                    "isIndexed": false,
                    "expression": null
                   }
                  ],
                  "initialValue": {
                   "type": "BinaryOperation",
                   "operator": "&",
                   "left": {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "ElementaryTypeName",
                     "name": "uint128",
                     "stateMutability": null
                    },
                    "arguments": [
                     {
                      "type": "Identifier",
                      "name": "x"
                     }
                    ],
                    "names": [],
                    "identifiers": []
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
                    "subdenomination": null
                   }
                  }
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": "==",
                   "left": {
                    "type": "Identifier",
                    "name": "xExponent"
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "IfStatement",
                     "condition": {
                      "type": "BinaryOperation",
                      "operator": "!=",
                      "left": {
                       "type": "Identifier",
                       "name": "xSignifier"
                      },
                      "right": {
                       "type": "NumberLiteral",
                       "number": "0",
                       "subdenomination": null
                      }
                     },
                     "trueBody": {
                      "type": "Block",
                      "statements": [
                       {
                        "type": "VariableDeclarationStatement",
                        "variables": [
                         {
                          "type": "VariableDeclaration",
                          "typeName": {
                           "type": "ElementaryTypeName",
                           "name": "uint256",
                           "stateMutability": null
                          },
                          "name": "shift",
                          "identifier": {
                           "type": "Identifier",
                           "name": "shift"
                          },
                          "storageLocation": null,
                          "isStateVar": false,
                          "isIndexed": false,
                          "expression": null
                         }
                        ],
                        "initialValue": {
                         "type": "BinaryOperation",
                         "operator": "-",
                         "left": {
                          "type": "NumberLiteral",
                          "number": "226",
                          "subdenomination": null
                         },
                         "right": {
                          "type": "FunctionCall",
                          "expression": {
                           "type": "Identifier",
                           "name": "mostSignificantBit"
                          },
                          "arguments": [
                           {
                            "type": "Identifier",
                            "name": "xSignifier"
                           }
                          ],
                          "names": [],
                          "identifiers": []
                         }
                        }
                       },
                       {
                        "type": "ExpressionStatement",
                        "expression": {
                         "type": "BinaryOperation",
                         "operator": "<<=",
                         "left": {
                          "type": "Identifier",
                          "name": "xSignifier"
                         },
                         "right": {
                          "type": "Identifier",
                          "name": "shift"
                         }
                        }
                       },
                       {
                        "type": "ExpressionStatement",
                        "expression": {
                         "type": "BinaryOperation",
                         "operator": "=",
                         "left": {
                          "type": "Identifier",
                          "name": "xExponent"
                         },
                         "right": {
                          "type": "NumberLiteral",
                          "number": "1",
                          "subdenomination": null
                         }
                        }
                       },
                       {
                        "type": "ExpressionStatement",
                        "expression": {
                         "type": "BinaryOperation",
                         "operator": "+=",
                         "left": {
                          "type": "Identifier",
                          "name": "yExponent"
                         },
                         "right": {
                          "type": "BinaryOperation",
                          "operator": "-",
                          "left": {
                           "type": "Identifier",
                           "name": "shift"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "114",
                           "subdenomination": null
                          }
                         }
                        }
                       }
                      ]
                     },
                     "falseBody": null
                    }
                   ]
                  },
                  "falseBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "xSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": "<<",
                       "left": {
                        "type": "TupleExpression",
                        "components": [
                         {
                          "type": "BinaryOperation",
                          "operator": "|",
                          "left": {
                           "type": "Identifier",
                           "name": "xSignifier"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "0x10000000000000000000000000000",
                           "subdenomination": null
                          }
                         }
                        ],
                        "isArray": false
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "114",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  }
                 },
                 {
                  "type": "ExpressionStatement",
                  "expression": {
                   "type": "BinaryOperation",
                   "operator": "=",
                   "left": {
                    "type": "Identifier",
                    "name": "xSignifier"
                   },
                   "right": {
                    "type": "BinaryOperation",
                    "operator": "/",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "Identifier",
                     "name": "ySignifier"
                    }
                   }
                  }
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": "==",
                   "left": {
                    "type": "Identifier",
                    "name": "xSignifier"
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ReturnStatement",
                     "expression": {
                      "type": "Conditional",
                      "condition": {
                       "type": "BinaryOperation",
                       "operator": ">",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "&",
                        "left": {
                         "type": "TupleExpression",
                         "components": [
                          {
                           "type": "BinaryOperation",
                           "operator": "^",
                           "left": {
                            "type": "Identifier",
                            "name": "x"
                           },
                           "right": {
                            "type": "Identifier",
                            "name": "y"
                           }
                          }
                         ],
                         "isArray": false
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x80000000000000000000000000000000",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "0",
                        "subdenomination": null
                       }
                      },
                      "trueExpression": {
                       "type": "Identifier",
                       "name": "NEGATIVE_ZERO"
                      },
                      "falseExpression": {
                       "type": "Identifier",
                       "name": "POSITIVE_ZERO"
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "ExpressionStatement",
                  "expression": {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "Identifier",
                    "name": "assert"
                   },
                   "arguments": [
                    {
                     "type": "BinaryOperation",
                     "operator": ">=",
                     "left": {
                      "type": "Identifier",
                      "name": "xSignifier"
                     },
                     "right": {
                      "type": "NumberLiteral",
                      "number": "0x1000000000000000000000000000",
                      "subdenomination": null
                     }
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 },
                 {
                  "type": "VariableDeclarationStatement",
                  "variables": [
                   {
                    "type": "VariableDeclaration",
                    "typeName": {
                     "type": "ElementaryTypeName",
                     "name": "uint256",
                     "stateMutability": null
                    },
                    "name": "msb",
                    "identifier": {
                     "type": "Identifier",
                     "name": "msb"
                    },
                    "storageLocation": null,
                    "isStateVar": false,
                    "isIndexed": false,
                    "expression": null
                   }
                  ],
                  "initialValue": {
                   "type": "Conditional",
                   "condition": {
                    "type": "BinaryOperation",
                    "operator": ">=",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x80000000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "trueExpression": {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "Identifier",
                     "name": "mostSignificantBit"
                    },
                    "arguments": [
                     {
                      "type": "Identifier",
                      "name": "xSignifier"
                     }
                    ],
                    "names": [],
                    "identifiers": []
                   },
                   "falseExpression": {
                    "type": "Conditional",
                    "condition": {
                     "type": "BinaryOperation",
                     "operator": ">=",
                     "left": {
                      "type": "Identifier",
                      "name": "xSignifier"
                     },
                     "right": {
                      "type": "NumberLiteral",
                      "number": "0x40000000000000000000000000000",
                      "subdenomination": null
                     }
                    },
                    "trueExpression": {
                     "type": "NumberLiteral",
                     "number": "114",
                     "subdenomination": null
                    },
                    "falseExpression": {
                     "type": "Conditional",
                     "condition": {
                      "type": "BinaryOperation",
                      "operator": ">=",
                      "left": {
                       "type": "Identifier",
                       "name": "xSignifier"
                      },
                      "right": {
                       "type": "NumberLiteral",
                       "number": "0x20000000000000000000000000000",
                       "subdenomination": null
                      }
                     },
                     "trueExpression": {
                      "type": "NumberLiteral",
                      "number": "113",
                      "subdenomination": null
                     },
                     "falseExpression": {
                      "type": "NumberLiteral",
                      "number": "112",
                      "subdenomination": null
                     }
                    }
                   }
                  }
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "+",
                    "left": {
                     "type": "Identifier",
                     "name": "xExponent"
                    },
                    "right": {
                     "type": "Identifier",
                     "name": "msb"
                    }
                   },
                   "right": {
                    "type": "BinaryOperation",
                    "operator": "+",
                    "left": {
                     "type": "Identifier",
                     "name": "yExponent"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "16_497",
                     "subdenomination": null
                    }
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "xExponent"
                      },
                      "right": {
                       "type": "NumberLiteral",
                       "number": "0x7FFF",
                       "subdenomination": null
                      }
                     }
                    },
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "xSignifier"
                      },
                      "right": {
                       "type": "NumberLiteral",
                       "number": "0",
                       "subdenomination": null
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": {
                   "type": "IfStatement",
                   "condition": {
                    "type": "BinaryOperation",
                    "operator": "<",
                    "left": {
                     "type": "BinaryOperation",
                     "operator": "+",
                     "left": {
                      "type": "BinaryOperation",
                      "operator": "+",
                      "left": {
                       "type": "Identifier",
                       "name": "xExponent"
                      },
                      "right": {
                       "type": "Identifier",
                       "name": "msb"
                      }
                     },
                     "right": {
                      "type": "NumberLiteral",
                      "number": "16_380",
                      "subdenomination": null
                     }
                    },
                    "right": {
                     "type": "Identifier",
                     "name": "yExponent"
                    }
                   },
                   "trueBody": {
                    "type": "Block",
                    "statements": [
                     {
                      "type": "ExpressionStatement",
                      "expression": {
                       "type": "BinaryOperation",
                       "operator": "=",
                       "left": {
                        "type": "Identifier",
                        "name": "xExponent"
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "0",
                        "subdenomination": null
                       }
                      }
                     },
                     {
                      "type": "ExpressionStatement",
                      "expression": {
                       "type": "BinaryOperation",
                       "operator": "=",
                       "left": {
                        "type": "Identifier",
                        "name": "xSignifier"
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "0",
                        "subdenomination": null
                       }
                      }
                     }
                    ]
                   },
                   "falseBody": {
                    "type": "IfStatement",
                    "condition": {
                     "type": "BinaryOperation",
                     "operator": "<",
                     "left": {
                      "type": "BinaryOperation",
                      "operator": "+",
                      "left": {
                       "type": "BinaryOperation",
                       "operator": "+",
                       "left": {
                        "type": "Identifier",
                        "name": "xExponent"
                       },
                       "right": {
                        "type": "Identifier",
                        "name": "msb"
                       }
                      },
                      "right": {
                       "type": "NumberLiteral",
                       "number": "16_268",
                       "subdenomination": null
                      }
                     },
                     "right": {
                      "type": "Identifier",
                      "name": "yExponent"
                     }
                    },
                    "trueBody": {
                     "type": "Block",
                     "statements": [
                      {
                       "type": "IfStatement",
                       "condition": {
                        "type": "BinaryOperation",
                        "operator": ">",
                        "left": {
                         "type": "BinaryOperation",
                         "operator": "+",
                         "left": {
                          "type": "Identifier",
                          "name": "xExponent"
                         },
                         "right": {
                          "type": "NumberLiteral",
                          "number": "16_380",
                          "subdenomination": null
                         }
                        },
                        "right": {
                         "type": "Identifier",
                         "name": "yExponent"
                        }
                       },
                       "trueBody": {
                        "type": "Block",
                        "statements": [
                         {
                          "type": "ExpressionStatement",
                          "expression": {
                           "type": "BinaryOperation",
                           "operator": "<<=",
                           "left": {
                            "type": "Identifier",
                            "name": "xSignifier"
                           },
                           "right": {
                            "type": "BinaryOperation",
                            "operator": "-",
                            "left": {
                             "type": "BinaryOperation",
                             "operator": "+",
                             "left": {
                              "type": "Identifier",
                              "name": "xExponent"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "16_380",
                              "subdenomination": null
                             }
                            },
                            "right": {
                             "type": "Identifier",
                             "name": "yExponent"
                            }
                           }
                          }
                         }
                        ]
                       },
                       "falseBody": {
                        "type": "IfStatement",
                        "condition": {
                         "type": "BinaryOperation",
                         "operator": "<",
                         "left": {
                          "type": "BinaryOperation",
                          "operator": "+",
                          "left": {
                           "type": "Identifier",
                           "name": "xExponent"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "16_380",
                           "subdenomination": null
                          }
                         },
                         "right": {
                          "type": "Identifier",
                          "name": "yExponent"
                         }
                        },
                        "trueBody": {
                         "type": "Block",
                         "statements": [
                          {
                           "type": "ExpressionStatement",
                           "expression": {
                            "type": "BinaryOperation",
                            "operator": ">>=",
                            "left": {
                             "type": "Identifier",
                             "name": "xSignifier"
                            },
                            "right": {
                             "type": "BinaryOperation",
                             "operator": "-",
                             "left": {
                              "type": "BinaryOperation",
                              "operator": "-",
                              "left": {
                               "type": "Identifier",
                               "name": "yExponent"
                              },
                              "right": {
                               "type": "Identifier",
                               "name": "xExponent"
                              }
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "16_380",
                              "subdenomination": null
                             }
                            }
                           }
                          }
                         ]
                        },
                        "falseBody": null
                       }
                      },
                      {
                       "type": "ExpressionStatement",
                       "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                         "type": "Identifier",
                         "name": "xExponent"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0",
                         "subdenomination": null
                        }
                       }
                      }
                     ]
                    },
                    "falseBody": {
                     "type": "Block",
                     "statements": [
                      {
                       "type": "IfStatement",
                       "condition": {
                        "type": "BinaryOperation",
                        "operator": ">",
                        "left": {
                         "type": "Identifier",
                         "name": "msb"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "112",
                         "subdenomination": null
                        }
                       },
                       "trueBody": {
                        "type": "Block",
                        "statements": [
                         {
                          "type": "ExpressionStatement",
                          "expression": {
                           "type": "BinaryOperation",
                           "operator": ">>=",
                           "left": {
                            "type": "Identifier",
                            "name": "xSignifier"
                           },
                           "right": {
                            "type": "BinaryOperation",
                            "operator": "-",
                            "left": {
                             "type": "Identifier",
                             "name": "msb"
                            },
                            "right": {
                             "type": "NumberLiteral",
                             "number": "112",
                             "subdenomination": null
                            }
                           }
                          }
                         }
                        ]
                       },
                       "falseBody": null
                      },
                      {
                       "type": "ExpressionStatement",
                       "expression": {
                        "type": "BinaryOperation",
                        "operator": "&=",
                        "left": {
                         "type": "Identifier",
                         "name": "xSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
                         "subdenomination": null
                        }
                       }
                      },
                      {
                       "type": "ExpressionStatement",
                       "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                         "type": "Identifier",
                         "name": "xExponent"
                        },
                        "right": {
                         "type": "BinaryOperation",
                         "operator": "-",
                         "left": {
                          "type": "BinaryOperation",
                          "operator": "+",
                          "left": {
                           "type": "BinaryOperation",
                           "operator": "+",
                           "left": {
                            "type": "Identifier",
                            "name": "xExponent"
                           },
                           "right": {
                            "type": "Identifier",
                            "name": "msb"
                           }
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "16_269",
                           "subdenomination": null
                          }
                         },
                         "right": {
                          "type": "Identifier",
                          "name": "yExponent"
                         }
                        }
                       }
                      }
                     ]
                    }
                   }
                  }
                 },
                 {
                  "type": "ReturnStatement",
                  "expression": {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "ElementaryTypeName",
                    "name": "bytes16",
                    "stateMutability": null
                   },
                   "arguments": [
                    {
                     "type": "FunctionCall",
                     "expression": {
                      "type": "ElementaryTypeName",
                      "name": "uint128",
                      "stateMutability": null
                     },
                     "arguments": [
                      {
                       "type": "BinaryOperation",
                       "operator": "|",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "|",
                        "left": {
                         "type": "FunctionCall",
                         "expression": {
                          "type": "ElementaryTypeName",
                          "name": "uint128",
                          "stateMutability": null
                         },
                         "arguments": [
                          {
                           "type": "BinaryOperation",
                           "operator": "&",
                           "left": {
                            "type": "TupleExpression",
                            "components": [
                             {
                              "type": "BinaryOperation",
                              "operator": "^",
                              "left": {
                               "type": "Identifier",
                               "name": "x"
                              },
                              "right": {
                               "type": "Identifier",
                               "name": "y"
                              }
                             }
                            ],
                            "isArray": false
                           },
                           "right": {
                            "type": "NumberLiteral",
                            "number": "0x80000000000000000000000000000000",
                            "subdenomination": null
                           }
                          }
                         ],
                         "names": [],
                         "identifiers": []
                        },
                        "right": {
                         "type": "BinaryOperation",
                         "operator": "<<",
                         "left": {
                          "type": "Identifier",
                          "name": "xExponent"
                         },
                         "right": {
                          "type": "NumberLiteral",
                          "number": "112",
                          "subdenomination": null
                         }
                        }
                       },
                       "right": {
                        "type": "Identifier",
                        "name": "xSignifier"
                       }
                      }
                     ],
                     "names": [],
                     "identifiers": []
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 }
                ]
               }
              }
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "neg",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes16",
          "stateMutability": null
         },
         "name": "x",
         "identifier": {
          "type": "Identifier",
          "name": "x"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes16",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "UncheckedStatement",
          "block": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "^",
              "left": {
               "type": "Identifier",
               "name": "x"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0x80000000000000000000000000000000",
               "subdenomination": null
              }
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "abs",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes16",
          "stateMutability": null
         },
         "name": "x",
         "identifier": {
          "type": "Identifier",
          "name": "x"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes16",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "UncheckedStatement",
          "block": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "&",
              "left": {
               "type": "Identifier",
               "name": "x"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
               "subdenomination": null
              }
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "sqrt",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes16",
          "stateMutability": null
         },
         "name": "x",
         "identifier": {
          "type": "Identifier",
          "name": "x"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes16",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "UncheckedStatement",
          "block": {
           "type": "Block",
           "statements": [
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": ">",
              "left": {
               "type": "FunctionCall",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "uint128",
                "stateMutability": null
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "x"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0x80000000000000000000000000000000",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ReturnStatement",
                "expression": {
                 "type": "Identifier",
                 "name": "NaN"
                }
               }
              ]
             },
             "falseBody": {
              "type": "Block",
              "statements": [
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "ElementaryTypeName",
                   "name": "uint256",
                   "stateMutability": null
                  },
                  "name": "xExponent",
                  "identifier": {
                   "type": "Identifier",
                   "name": "xExponent"
                  },
                  "storageLocation": null,
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "BinaryOperation",
                 "operator": "&",
                 "left": {
                  "type": "BinaryOperation",
                  "operator": ">>",
                  "left": {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "ElementaryTypeName",
                    "name": "uint128",
                    "stateMutability": null
                   },
                   "arguments": [
                    {
                     "type": "Identifier",
                     "name": "x"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  },
                  "right": {
                   "type": "NumberLiteral",
                   "number": "112",
                   "subdenomination": null
                  }
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "0x7FFF",
                  "subdenomination": null
                 }
                }
               },
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "==",
                 "left": {
                  "type": "Identifier",
                  "name": "xExponent"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "0x7FFF",
                  "subdenomination": null
                 }
                },
                "trueBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "ReturnStatement",
                   "expression": {
                    "type": "Identifier",
                    "name": "x"
                   }
                  }
                 ]
                },
                "falseBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "VariableDeclarationStatement",
                   "variables": [
                    {
                     "type": "VariableDeclaration",
                     "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256",
                      "stateMutability": null
                     },
                     "name": "xSignifier",
                     "identifier": {
                      "type": "Identifier",
                      "name": "xSignifier"
                     },
                     "storageLocation": null,
                     "isStateVar": false,
                     "isIndexed": false,
                     "expression": null
                    }
                   ],
                   "initialValue": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "FunctionCall",
                     "expression": {
                      "type": "ElementaryTypeName",
                      "name": "uint128",
                      "stateMutability": null
                     },
                     "arguments": [
                      {
                       "type": "Identifier",
                       "name": "x"
                      }
                     ],
                     "names": [],
                     "identifiers": []
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
                     "subdenomination": null
                    }
                   }
                  },
                  {
                   "type": "IfStatement",
                   "condition": {
                    "type": "BinaryOperation",
                    "operator": "==",
                    "left": {
                     "type": "Identifier",
                     "name": "xExponent"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0",
                     "subdenomination": null
                    }
                   },
                   "trueBody": {
                    "type": "ExpressionStatement",
                    "expression": {
                     "type": "BinaryOperation",
                     "operator": "=",
                     "left": {
                      "type": "Identifier",
                      "name": "xExponent"
                     },
                     "right": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                     }
                    }
                   },
                   "falseBody": {
                    "type": "ExpressionStatement",
                    "expression": {
                     "type": "BinaryOperation",
                     "operator": "|=",
                     "left": {
                      "type": "Identifier",
                      "name": "xSignifier"
                     },
                     "right": {
                      "type": "NumberLiteral",
                      "number": "0x10000000000000000000000000000",
                      "subdenomination": null
                     }
                    }
                   }
                  },
                  {
                   "type": "IfStatement",
                   "condition": {
                    "type": "BinaryOperation",
                    "operator": "==",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0",
                     "subdenomination": null
                    }
                   },
                   "trueBody": {
                    "type": "ReturnStatement",
                    "expression": {
                     "type": "Identifier",
                     "name": "POSITIVE_ZERO"
                    }
                   },
                   "falseBody": null
                  },
                  {
                   "type": "VariableDeclarationStatement",
                   "variables": [
                    {
                     "type": "VariableDeclaration",
                     "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "bool",
                      "stateMutability": null
                     },
                     "name": "oddExponent",
                     "identifier": {
                      "type": "Identifier",
                      "name": "oddExponent"
                     },
                     "storageLocation": null,
                     "isStateVar": false,
                     "isIndexed": false,
                     "expression": null
                    }
                   ],
                   "initialValue": {
                    "type": "BinaryOperation",
                    "operator": "==",
                    "left": {
                     "type": "BinaryOperation",
                     "operator": "&",
                     "left": {
                      "type": "Identifier",
                      "name": "xExponent"
                     },
                     "right": {
                      "type": "NumberLiteral",
                      "number": "0x1",
                      "subdenomination": null
                     }
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0",
                     "subdenomination": null
                    }
                   }
                  },
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                     "type": "Identifier",
                     "name": "xExponent"
                    },
                    "right": {
                     "type": "BinaryOperation",
                     "operator": ">>",
                     "left": {
                      "type": "BinaryOperation",
                      "operator": "+",
                      "left": {
                       "type": "Identifier",
                       "name": "xExponent"
                      },
                      "right": {
                       "type": "NumberLiteral",
                       "number": "16_383",
                       "subdenomination": null
                      }
                     },
                     "right": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                     }
                    }
                   }
                  },
                  {
                   "type": "IfStatement",
                   "condition": {
                    "type": "Identifier",
                    "name": "oddExponent"
                   },
                   "trueBody": {
                    "type": "Block",
                    "statements": [
                     {
                      "type": "IfStatement",
                      "condition": {
                       "type": "BinaryOperation",
                       "operator": ">=",
                       "left": {
                        "type": "Identifier",
                        "name": "xSignifier"
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "0x10000000000000000000000000000",
                        "subdenomination": null
                       }
                      },
                      "trueBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "ExpressionStatement",
                         "expression": {
                          "type": "BinaryOperation",
                          "operator": "<<=",
                          "left": {
                           "type": "Identifier",
                           "name": "xSignifier"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "113",
                           "subdenomination": null
                          }
                         }
                        }
                       ]
                      },
                      "falseBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "VariableDeclarationStatement",
                         "variables": [
                          {
                           "type": "VariableDeclaration",
                           "typeName": {
                            "type": "ElementaryTypeName",
                            "name": "uint256",
                            "stateMutability": null
                           },
                           "name": "msb",
                           "identifier": {
                            "type": "Identifier",
                            "name": "msb"
                           },
                           "storageLocation": null,
                           "isStateVar": false,
                           "isIndexed": false,
                           "expression": null
                          }
                         ],
                         "initialValue": {
                          "type": "FunctionCall",
                          "expression": {
                           "type": "Identifier",
                           "name": "mostSignificantBit"
                          },
                          "arguments": [
                           {
                            "type": "Identifier",
                            "name": "xSignifier"
                           }
                          ],
                          "names": [],
                          "identifiers": []
                         }
                        },
                        {
                         "type": "VariableDeclarationStatement",
                         "variables": [
                          {
                           "type": "VariableDeclaration",
                           "typeName": {
                            "type": "ElementaryTypeName",
                            "name": "uint256",
                            "stateMutability": null
                           },
                           "name": "shift",
                           "identifier": {
                            "type": "Identifier",
                            "name": "shift"
                           },
                           "storageLocation": null,
                           "isStateVar": false,
                           "isIndexed": false,
                           "expression": null
                          }
                         ],
                         "initialValue": {
                          "type": "BinaryOperation",
                          "operator": "&",
                          "left": {
                           "type": "TupleExpression",
                           "components": [
                            {
                             "type": "BinaryOperation",
                             "operator": "-",
                             "left": {
                              "type": "NumberLiteral",
                              "number": "226",
                              "subdenomination": null
                             },
                             "right": {
                              "type": "Identifier",
                              "name": "msb"
                             }
                            }
                           ],
                           "isArray": false
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "0xFE",
                           "subdenomination": null
                          }
                         }
                        },
                        {
                         "type": "ExpressionStatement",
                         "expression": {
                          "type": "BinaryOperation",
                          "operator": "<<=",
                          "left": {
                           "type": "Identifier",
                           "name": "xSignifier"
                          },
                          "right": {
                           "type": "Identifier",
                           "name": "shift"
                          }
                         }
                        },
                        {
                         "type": "ExpressionStatement",
                         "expression": {
                          "type": "BinaryOperation",
                          "operator": "-=",
                          "left": {
                           "type": "Identifier",
                           "name": "xExponent"
                          },
                          "right": {
                           "type": "BinaryOperation",
                           "operator": ">>",
                           "left": {
                            "type": "BinaryOperation",
                            "operator": "-",
                            "left": {
                             "type": "Identifier",
                             "name": "shift"
                            },
                            "right": {
                             "type": "NumberLiteral",
                             "number": "112",
                             "subdenomination": null
                            }
                           },
                           "right": {
                            "type": "NumberLiteral",
                            "number": "1",
                            "subdenomination": null
                           }
                          }
                         }
                        }
                       ]
                      }
                     }
                    ]
                   },
                   "falseBody": {
                    "type": "Block",
                    "statements": [
                     {
                      "type": "IfStatement",
                      "condition": {
                       "type": "BinaryOperation",
                       "operator": ">=",
                       "left": {
                        "type": "Identifier",
                        "name": "xSignifier"
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "0x10000000000000000000000000000",
                        "subdenomination": null
                       }
                      },
                      "trueBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "ExpressionStatement",
                         "expression": {
                          "type": "BinaryOperation",
                          "operator": "<<=",
                          "left": {
                           "type": "Identifier",
                           "name": "xSignifier"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "112",
                           "subdenomination": null
                          }
                         }
                        }
                       ]
                      },
                      "falseBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "VariableDeclarationStatement",
                         "variables": [
                          {
                           "type": "VariableDeclaration",
                           "typeName": {
                            "type": "ElementaryTypeName",
                            "name": "uint256",
                            "stateMutability": null
                           },
                           "name": "msb",
                           "identifier": {
                            "type": "Identifier",
                            "name": "msb"
                           },
                           "storageLocation": null,
                           "isStateVar": false,
                           "isIndexed": false,
                           "expression": null
                          }
                         ],
                         "initialValue": {
                          "type": "FunctionCall",
                          "expression": {
                           "type": "Identifier",
                           "name": "mostSignificantBit"
                          },
                          "arguments": [
                           {
                            "type": "Identifier",
                            "name": "xSignifier"
                           }
                          ],
                          "names": [],
                          "identifiers": []
                         }
                        },
                        {
                         "type": "VariableDeclarationStatement",
                         "variables": [
                          {
                           "type": "VariableDeclaration",
                           "typeName": {
                            "type": "ElementaryTypeName",
                            "name": "uint256",
                            "stateMutability": null
                           },
                           "name": "shift",
                           "identifier": {
                            "type": "Identifier",
                            "name": "shift"
                           },
                           "storageLocation": null,
                           "isStateVar": false,
                           "isIndexed": false,
                           "expression": null
                          }
                         ],
                         "initialValue": {
                          "type": "BinaryOperation",
                          "operator": "&",
                          "left": {
                           "type": "TupleExpression",
                           "components": [
                            {
                             "type": "BinaryOperation",
                             "operator": "-",
                             "left": {
                              "type": "NumberLiteral",
                              "number": "225",
                              "subdenomination": null
                             },
                             "right": {
                              "type": "Identifier",
                              "name": "msb"
                             }
                            }
                           ],
                           "isArray": false
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "0xFE",
                           "subdenomination": null
                          }
                         }
                        },
                        {
                         "type": "ExpressionStatement",
                         "expression": {
                          "type": "BinaryOperation",
                          "operator": "<<=",
                          "left": {
                           "type": "Identifier",
                           "name": "xSignifier"
                          },
                          "right": {
                           "type": "Identifier",
                           "name": "shift"
                          }
                         }
                        },
                        {
                         "type": "ExpressionStatement",
                         "expression": {
                          "type": "BinaryOperation",
                          "operator": "-=",
                          "left": {
                           "type": "Identifier",
                           "name": "xExponent"
                          },
                          "right": {
                           "type": "BinaryOperation",
                           "operator": ">>",
                           "left": {
                            "type": "BinaryOperation",
                            "operator": "-",
                            "left": {
                             "type": "Identifier",
                             "name": "shift"
                            },
                            "right": {
                             "type": "NumberLiteral",
                             "number": "112",
                             "subdenomination": null
                            }
                           },
                           "right": {
                            "type": "NumberLiteral",
                            "number": "1",
                            "subdenomination": null
                           }
                          }
                         }
                        }
                       ]
                      }
                     }
                    ]
                   }
                  },
                  {
                   "type": "VariableDeclarationStatement",
                   "variables": [
                    {
                     "type": "VariableDeclaration",
                     "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256",
                      "stateMutability": null
                     },
                     "name": "r",
                     "identifier": {
                      "type": "Identifier",
                      "name": "r"
                     },
                     "storageLocation": null,
                     "isStateVar": false,
                     "isIndexed": false,
                     "expression": null
                    }
                   ],
                   "initialValue": {
                    "type": "NumberLiteral",
                    "number": "0x10000000000000000000000000000",
                    "subdenomination": null
                   }
                  },
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                     "type": "Identifier",
                     "name": "r"
                    },
                    "right": {
                     "type": "BinaryOperation",
                     "operator": ">>",
                     "left": {
                      "type": "TupleExpression",
                      "components": [
                       {
                        "type": "BinaryOperation",
                        "operator": "+",
                        "left": {
                         "type": "Identifier",
                         "name": "r"
                        },
                        "right": {
                         "type": "BinaryOperation",
                         "operator": "/",
                         "left": {
                          "type": "Identifier",
                          "name": "xSignifier"
                         },
                         "right": {
                          "type": "Identifier",
                          "name": "r"
                         }
                        }
                       }
                      ],
                      "isArray": false
                     },
                     "right": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                     }
                    }
                   }
                  },
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                     "type": "Identifier",
                     "name": "r"
                    },
                    "right": {
                     "type": "BinaryOperation",
                     "operator": ">>",
                     "left": {
                      "type": "TupleExpression",
                      "components": [
                       {
                        "type": "BinaryOperation",
                        "operator": "+",
                        "left": {
                         "type": "Identifier",
                         "name": "r"
                        },
                        "right": {
                         "type": "BinaryOperation",
                         "operator": "/",
                         "left": {
                          "type": "Identifier",
                          "name": "xSignifier"
                         },
                         "right": {
                          "type": "Identifier",
                          "name": "r"
                         }
                        }
                       }
                      ],
                      "isArray": false
                     },
                     "right": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                     }
                    }
                   }
                  },
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                     "type": "Identifier",
                     "name": "r"
                    },
                    "right": {
                     "type": "BinaryOperation",
                     "operator": ">>",
                     "left": {
                      "type": "TupleExpression",
                      "components": [
                       {
                        "type": "BinaryOperation",
                        "operator": "+",
                        "left": {
                         "type": "Identifier",
                         "name": "r"
                        },
                        "right": {
                         "type": "BinaryOperation",
                         "operator": "/",
                         "left": {
                          "type": "Identifier",
                          "name": "xSignifier"
                         },
                         "right": {
                          "type": "Identifier",
                          "name": "r"
                         }
                        }
                       }
                      ],
                      "isArray": false
                     },
                     "right": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                     }
                    }
                   }
                  },
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                     "type": "Identifier",
                     "name": "r"
                    },
                    "right": {
                     "type": "BinaryOperation",
                     "operator": ">>",
                     "left": {
                      "type": "TupleExpression",
                      "components": [
                       {
                        "type": "BinaryOperation",
                        "operator": "+",
                        "left": {
                         "type": "Identifier",
                         "name": "r"
                        },
                        "right": {
                         "type": "BinaryOperation",
                         "operator": "/",
                         "left": {
                          "type": "Identifier",
                          "name": "xSignifier"
                         },
                         "right": {
                          "type": "Identifier",
                          "name": "r"
                         }
                        }
                       }
                      ],
                      "isArray": false
                     },
                     "right": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                     }
                    }
                   }
                  },
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                     "type": "Identifier",
                     "name": "r"
                    },
                    "right": {
                     "type": "BinaryOperation",
                     "operator": ">>",
                     "left": {
                      "type": "TupleExpression",
                      "components": [
                       {
                        "type": "BinaryOperation",
                        "operator": "+",
                        "left": {
                         "type": "Identifier",
                         "name": "r"
                        },
                        "right": {
                         "type": "BinaryOperation",
                         "operator": "/",
                         "left": {
                          "type": "Identifier",
                          "name": "xSignifier"
                         },
                         "right": {
                          "type": "Identifier",
                          "name": "r"
                         }
                        }
                       }
                      ],
                      "isArray": false
                     },
                     "right": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                     }
                    }
                   }
                  },
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                     "type": "Identifier",
                     "name": "r"
                    },
                    "right": {
                     "type": "BinaryOperation",
                     "operator": ">>",
                     "left": {
                      "type": "TupleExpression",
                      "components": [
                       {
                        "type": "BinaryOperation",
                        "operator": "+",
                        "left": {
                         "type": "Identifier",
                         "name": "r"
                        },
                        "right": {
                         "type": "BinaryOperation",
                         "operator": "/",
                         "left": {
                          "type": "Identifier",
                          "name": "xSignifier"
                         },
                         "right": {
                          "type": "Identifier",
                          "name": "r"
                         }
                        }
                       }
                      ],
                      "isArray": false
                     },
                     "right": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                     }
                    }
                   }
                  },
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                     "type": "Identifier",
                     "name": "r"
                    },
                    "right": {
                     "type": "BinaryOperation",
                     "operator": ">>",
                     "left": {
                      "type": "TupleExpression",
                      "components": [
                       {
                        "type": "BinaryOperation",
                        "operator": "+",
                        "left": {
                         "type": "Identifier",
                         "name": "r"
                        },
                        "right": {
                         "type": "BinaryOperation",
                         "operator": "/",
                         "left": {
                          "type": "Identifier",
                          "name": "xSignifier"
                         },
                         "right": {
                          "type": "Identifier",
                          "name": "r"
                         }
                        }
                       }
                      ],
                      "isArray": false
                     },
                     "right": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                     }
                    }
                   }
                  },
                  {
                   "type": "VariableDeclarationStatement",
                   "variables": [
                    {
                     "type": "VariableDeclaration",
                     "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256",
                      "stateMutability": null
                     },
                     "name": "r1",
                     "identifier": {
                      "type": "Identifier",
                      "name": "r1"
                     },
                     "storageLocation": null,
                     "isStateVar": false,
                     "isIndexed": false,
                     "expression": null
                    }
                   ],
                   "initialValue": {
                    "type": "BinaryOperation",
                    "operator": "/",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "Identifier",
                     "name": "r"
                    }
                   }
                  },
                  {
                   "type": "IfStatement",
                   "condition": {
                    "type": "BinaryOperation",
                    "operator": "<",
                    "left": {
                     "type": "Identifier",
                     "name": "r1"
                    },
                    "right": {
                     "type": "Identifier",
                     "name": "r"
                    }
                   },
                   "trueBody": {
                    "type": "ExpressionStatement",
                    "expression": {
                     "type": "BinaryOperation",
                     "operator": "=",
                     "left": {
                      "type": "Identifier",
                      "name": "r"
                     },
                     "right": {
                      "type": "Identifier",
                      "name": "r1"
                     }
                    }
                   },
                   "falseBody": null
                  },
                  {
                   "type": "ReturnStatement",
                   "expression": {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "ElementaryTypeName",
                     "name": "bytes16",
                     "stateMutability": null
                    },
                    "arguments": [
                     {
                      "type": "FunctionCall",
                      "expression": {
                       "type": "ElementaryTypeName",
                       "name": "uint128",
                       "stateMutability": null
                      },
                      "arguments": [
                       {
                        "type": "BinaryOperation",
                        "operator": "|",
                        "left": {
                         "type": "BinaryOperation",
                         "operator": "<<",
                         "left": {
                          "type": "Identifier",
                          "name": "xExponent"
                         },
                         "right": {
                          "type": "NumberLiteral",
                          "number": "112",
                          "subdenomination": null
                         }
                        },
                        "right": {
                         "type": "BinaryOperation",
                         "operator": "&",
                         "left": {
                          "type": "Identifier",
                          "name": "r"
                         },
                         "right": {
                          "type": "NumberLiteral",
                          "number": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
                          "subdenomination": null
                         }
                        }
                       }
                      ],
                      "names": [],
                      "identifiers": []
                     }
                    ],
                    "names": [],
                    "identifiers": []
                   }
                  }
                 ]
                }
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "log_2",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes16",
          "stateMutability": null
         },
         "name": "x",
         "identifier": {
          "type": "Identifier",
          "name": "x"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes16",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "UncheckedStatement",
          "block": {
           "type": "Block",
           "statements": [
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": ">",
              "left": {
               "type": "FunctionCall",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "uint128",
                "stateMutability": null
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "x"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0x80000000000000000000000000000000",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ReturnStatement",
                "expression": {
                 "type": "Identifier",
                 "name": "NaN"
                }
               }
              ]
             },
             "falseBody": {
              "type": "IfStatement",
              "condition": {
               "type": "BinaryOperation",
               "operator": "==",
               "left": {
                "type": "Identifier",
                "name": "x"
               },
               "right": {
                "type": "NumberLiteral",
                "number": "0x3FFF0000000000000000000000000000",
                "subdenomination": null
               }
              },
              "trueBody": {
               "type": "Block",
               "statements": [
                {
                 "type": "ReturnStatement",
                 "expression": {
                  "type": "Identifier",
                  "name": "POSITIVE_ZERO"
                 }
                }
               ]
              },
              "falseBody": {
               "type": "Block",
               "statements": [
                {
                 "type": "VariableDeclarationStatement",
                 "variables": [
                  {
                   "type": "VariableDeclaration",
                   "typeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256",
                    "stateMutability": null
                   },
                   "name": "xExponent",
                   "identifier": {
                    "type": "Identifier",
                    "name": "xExponent"
                   },
                   "storageLocation": null,
                   "isStateVar": false,
                   "isIndexed": false,
                   "expression": null
                  }
                 ],
                 "initialValue": {
                  "type": "BinaryOperation",
                  "operator": "&",
                  "left": {
                   "type": "BinaryOperation",
                   "operator": ">>",
                   "left": {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "ElementaryTypeName",
                     "name": "uint128",
                     "stateMutability": null
                    },
                    "arguments": [
                     {
                      "type": "Identifier",
                      "name": "x"
                     }
                    ],
                    "names": [],
                    "identifiers": []
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "112",
                    "subdenomination": null
                   }
                  },
                  "right": {
                   "type": "NumberLiteral",
                   "number": "0x7FFF",
                   "subdenomination": null
                  }
                 }
                },
                {
                 "type": "IfStatement",
                 "condition": {
                  "type": "BinaryOperation",
                  "operator": "==",
                  "left": {
                   "type": "Identifier",
                   "name": "xExponent"
                  },
                  "right": {
                   "type": "NumberLiteral",
                   "number": "0x7FFF",
                   "subdenomination": null
                  }
                 },
                 "trueBody": {
                  "type": "Block",
                  "statements": [
                   {
                    "type": "ReturnStatement",
                    "expression": {
                     "type": "Identifier",
                     "name": "x"
                    }
                   }
                  ]
                 },
                 "falseBody": {
                  "type": "Block",
                  "statements": [
                   {
                    "type": "VariableDeclarationStatement",
                    "variables": [
                     {
                      "type": "VariableDeclaration",
                      "typeName": {
                       "type": "ElementaryTypeName",
                       "name": "uint256",
                       "stateMutability": null
                      },
                      "name": "xSignifier",
                      "identifier": {
                       "type": "Identifier",
                       "name": "xSignifier"
                      },
                      "storageLocation": null,
                      "isStateVar": false,
                      "isIndexed": false,
                      "expression": null
                     }
                    ],
                    "initialValue": {
                     "type": "BinaryOperation",
                     "operator": "&",
                     "left": {
                      "type": "FunctionCall",
                      "expression": {
                       "type": "ElementaryTypeName",
                       "name": "uint128",
                       "stateMutability": null
                      },
                      "arguments": [
                       {
                        "type": "Identifier",
                        "name": "x"
                       }
                      ],
                      "names": [],
                      "identifiers": []
                     },
                     "right": {
                      "type": "NumberLiteral",
                      "number": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
                      "subdenomination": null
                     }
                    }
                   },
                   {
                    "type": "IfStatement",
                    "condition": {
                     "type": "BinaryOperation",
                     "operator": "==",
                     "left": {
                      "type": "Identifier",
                      "name": "xExponent"
                     },
                     "right": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                     }
                    },
                    "trueBody": {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "xExponent"
                      },
                      "right": {
                       "type": "NumberLiteral",
                       "number": "1",
                       "subdenomination": null
                      }
                     }
                    },
                    "falseBody": {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "|=",
                      "left": {
                       "type": "Identifier",
                       "name": "xSignifier"
                      },
                      "right": {
                       "type": "NumberLiteral",
                       "number": "0x10000000000000000000000000000",
                       "subdenomination": null
                      }
                     }
                    }
                   },
                   {
                    "type": "IfStatement",
                    "condition": {
                     "type": "BinaryOperation",
                     "operator": "==",
                     "left": {
                      "type": "Identifier",
                      "name": "xSignifier"
                     },
                     "right": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                     }
                    },
                    "trueBody": {
                     "type": "ReturnStatement",
                     "expression": {
                      "type": "Identifier",
                      "name": "NEGATIVE_INFINITY"
                     }
                    },
                    "falseBody": null
                   },
                   {
                    "type": "VariableDeclarationStatement",
                    "variables": [
                     {
                      "type": "VariableDeclaration",
                      "typeName": {
                       "type": "ElementaryTypeName",
                       "name": "bool",
                       "stateMutability": null
                      },
                      "name": "resultNegative",
                      "identifier": {
                       "type": "Identifier",
                       "name": "resultNegative"
                      },
                      "storageLocation": null,
                      "isStateVar": false,
                      "isIndexed": false,
                      "expression": null
                     }
                    ],
                    "initialValue": null
                   },
                   {
                    "type": "VariableDeclarationStatement",
                    "variables": [
                     {
                      "type": "VariableDeclaration",
                      "typeName": {
                       "type": "ElementaryTypeName",
                       "name": "uint256",
                       "stateMutability": null
                      },
                      "name": "resultExponent",
                      "identifier": {
                       "type": "Identifier",
                       "name": "resultExponent"
                      },
                      "storageLocation": null,
                      "isStateVar": false,
                      "isIndexed": false,
                      "expression": null
                     }
                    ],
                    "initialValue": {
                     "type": "NumberLiteral",
                     "number": "16_495",
                     "subdenomination": null
                    }
                   },
                   {
                    "type": "VariableDeclarationStatement",
                    "variables": [
                     {
                      "type": "VariableDeclaration",
                      "typeName": {
                       "type": "ElementaryTypeName",
                       "name": "uint256",
                       "stateMutability": null
                      },
                      "name": "resultSignifier",
                      "identifier": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "storageLocation": null,
                      "isStateVar": false,
                      "isIndexed": false,
                      "expression": null
                     }
                    ],
                    "initialValue": null
                   },
                   {
                    "type": "IfStatement",
                    "condition": {
                     "type": "BinaryOperation",
                     "operator": ">=",
                     "left": {
                      "type": "Identifier",
                      "name": "xExponent"
                     },
                     "right": {
                      "type": "NumberLiteral",
                      "number": "0x3FFF",
                      "subdenomination": null
                     }
                    },
                    "trueBody": {
                     "type": "Block",
                     "statements": [
                      {
                       "type": "ExpressionStatement",
                       "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                         "type": "Identifier",
                         "name": "resultNegative"
                        },
                        "right": {
                         "type": "BooleanLiteral",
                         "value": false
                        }
                       }
                      },
                      {
                       "type": "ExpressionStatement",
                       "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "BinaryOperation",
                         "operator": "-",
                         "left": {
                          "type": "Identifier",
                          "name": "xExponent"
                         },
                         "right": {
                          "type": "NumberLiteral",
                          "number": "0x3FFF",
                          "subdenomination": null
                         }
                        }
                       }
                      },
                      {
                       "type": "ExpressionStatement",
                       "expression": {
                        "type": "BinaryOperation",
                        "operator": "<<=",
                        "left": {
                         "type": "Identifier",
                         "name": "xSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "15",
                         "subdenomination": null
                        }
                       }
                      }
                     ]
                    },
                    "falseBody": {
                     "type": "Block",
                     "statements": [
                      {
                       "type": "ExpressionStatement",
                       "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                         "type": "Identifier",
                         "name": "resultNegative"
                        },
                        "right": {
                         "type": "BooleanLiteral",
                         "value": true
                        }
                       }
                      },
                      {
                       "type": "IfStatement",
                       "condition": {
                        "type": "BinaryOperation",
                        "operator": ">=",
                        "left": {
                         "type": "Identifier",
                         "name": "xSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000000000000000000000000",
                         "subdenomination": null
                        }
                       },
                       "trueBody": {
                        "type": "Block",
                        "statements": [
                         {
                          "type": "ExpressionStatement",
                          "expression": {
                           "type": "BinaryOperation",
                           "operator": "=",
                           "left": {
                            "type": "Identifier",
                            "name": "resultSignifier"
                           },
                           "right": {
                            "type": "BinaryOperation",
                            "operator": "-",
                            "left": {
                             "type": "NumberLiteral",
                             "number": "0x3FFE",
                             "subdenomination": null
                            },
                            "right": {
                             "type": "Identifier",
                             "name": "xExponent"
                            }
                           }
                          }
                         },
                         {
                          "type": "ExpressionStatement",
                          "expression": {
                           "type": "BinaryOperation",
                           "operator": "<<=",
                           "left": {
                            "type": "Identifier",
                            "name": "xSignifier"
                           },
                           "right": {
                            "type": "NumberLiteral",
                            "number": "15",
                            "subdenomination": null
                           }
                          }
                         }
                        ]
                       },
                       "falseBody": {
                        "type": "Block",
                        "statements": [
                         {
                          "type": "VariableDeclarationStatement",
                          "variables": [
                           {
                            "type": "VariableDeclaration",
                            "typeName": {
                             "type": "ElementaryTypeName",
                             "name": "uint256",
                             "stateMutability": null
                            },
                            "name": "msb",
                            "identifier": {
                             "type": "Identifier",
                             "name": "msb"
                            },
                            "storageLocation": null,
                            "isStateVar": false,
                            "isIndexed": false,
                            "expression": null
                           }
                          ],
                          "initialValue": {
                           "type": "FunctionCall",
                           "expression": {
                            "type": "Identifier",
                            "name": "mostSignificantBit"
                           },
                           "arguments": [
                            {
                             "type": "Identifier",
                             "name": "xSignifier"
                            }
                           ],
                           "names": [],
                           "identifiers": []
                          }
                         },
                         {
                          "type": "ExpressionStatement",
                          "expression": {
                           "type": "BinaryOperation",
                           "operator": "=",
                           "left": {
                            "type": "Identifier",
                            "name": "resultSignifier"
                           },
                           "right": {
                            "type": "BinaryOperation",
                            "operator": "-",
                            "left": {
                             "type": "NumberLiteral",
                             "number": "16_493",
                             "subdenomination": null
                            },
                            "right": {
                             "type": "Identifier",
                             "name": "msb"
                            }
                           }
                          }
                         },
                         {
                          "type": "ExpressionStatement",
                          "expression": {
                           "type": "BinaryOperation",
                           "operator": "<<=",
                           "left": {
                            "type": "Identifier",
                            "name": "xSignifier"
                           },
                           "right": {
                            "type": "BinaryOperation",
                            "operator": "-",
                            "left": {
                             "type": "NumberLiteral",
                             "number": "127",
                             "subdenomination": null
                            },
                            "right": {
                             "type": "Identifier",
                             "name": "msb"
                            }
                           }
                          }
                         }
                        ]
                       }
                      }
                     ]
                    }
                   },
                   {
                    "type": "IfStatement",
                    "condition": {
                     "type": "BinaryOperation",
                     "operator": "==",
                     "left": {
                      "type": "Identifier",
                      "name": "xSignifier"
                     },
                     "right": {
                      "type": "NumberLiteral",
                      "number": "0x80000000000000000000000000000000",
                      "subdenomination": null
                     }
                    },
                    "trueBody": {
                     "type": "Block",
                     "statements": [
                      {
                       "type": "IfStatement",
                       "condition": {
                        "type": "Identifier",
                        "name": "resultNegative"
                       },
                       "trueBody": {
                        "type": "ExpressionStatement",
                        "expression": {
                         "type": "BinaryOperation",
                         "operator": "+=",
                         "left": {
                          "type": "Identifier",
                          "name": "resultSignifier"
                         },
                         "right": {
                          "type": "NumberLiteral",
                          "number": "1",
                          "subdenomination": null
                         }
                        }
                       },
                       "falseBody": null
                      },
                      {
                       "type": "VariableDeclarationStatement",
                       "variables": [
                        {
                         "type": "VariableDeclaration",
                         "typeName": {
                          "type": "ElementaryTypeName",
                          "name": "uint256",
                          "stateMutability": null
                         },
                         "name": "shift",
                         "identifier": {
                          "type": "Identifier",
                          "name": "shift"
                         },
                         "storageLocation": null,
                         "isStateVar": false,
                         "isIndexed": false,
                         "expression": null
                        }
                       ],
                       "initialValue": {
                        "type": "BinaryOperation",
                        "operator": "-",
                        "left": {
                         "type": "NumberLiteral",
                         "number": "112",
                         "subdenomination": null
                        },
                        "right": {
                         "type": "FunctionCall",
                         "expression": {
                          "type": "Identifier",
                          "name": "mostSignificantBit"
                         },
                         "arguments": [
                          {
                           "type": "Identifier",
                           "name": "resultSignifier"
                          }
                         ],
                         "names": [],
                         "identifiers": []
                        }
                       }
                      },
                      {
                       "type": "ExpressionStatement",
                       "expression": {
                        "type": "BinaryOperation",
                        "operator": "<<=",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "Identifier",
                         "name": "shift"
                        }
                       }
                      },
                      {
                       "type": "ExpressionStatement",
                       "expression": {
                        "type": "BinaryOperation",
                        "operator": "-=",
                        "left": {
                         "type": "Identifier",
                         "name": "resultExponent"
                        },
                        "right": {
                         "type": "Identifier",
                         "name": "shift"
                        }
                       }
                      }
                     ]
                    },
                    "falseBody": {
                     "type": "Block",
                     "statements": [
                      {
                       "type": "VariableDeclarationStatement",
                       "variables": [
                        {
                         "type": "VariableDeclaration",
                         "typeName": {
                          "type": "ElementaryTypeName",
                          "name": "uint256",
                          "stateMutability": null
                         },
                         "name": "bb",
                         "identifier": {
                          "type": "Identifier",
                          "name": "bb"
                         },
                         "storageLocation": null,
                         "isStateVar": false,
                         "isIndexed": false,
                         "expression": null
                        }
                       ],
                       "initialValue": {
                        "type": "Conditional",
                        "condition": {
                         "type": "Identifier",
                         "name": "resultNegative"
                        },
                        "trueExpression": {
                         "type": "NumberLiteral",
                         "number": "1",
                         "subdenomination": null
                        },
                        "falseExpression": {
                         "type": "NumberLiteral",
                         "number": "0",
                         "subdenomination": null
                        }
                       }
                      },
                      {
                       "type": "WhileStatement",
                       "condition": {
                        "type": "BinaryOperation",
                        "operator": "<",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000000000000000000000000",
                         "subdenomination": null
                        }
                       },
                       "body": {
                        "type": "Block",
                        "statements": [
                         {
                          "type": "ExpressionStatement",
                          "expression": {
                           "type": "BinaryOperation",
                           "operator": "<<=",
                           "left": {
                            "type": "Identifier",
                            "name": "resultSignifier"
                           },
                           "right": {
                            "type": "NumberLiteral",
                            "number": "1",
                            "subdenomination": null
                           }
                          }
                         },
                         {
                          "type": "ExpressionStatement",
                          "expression": {
                           "type": "BinaryOperation",
                           "operator": "-=",
                           "left": {
                            "type": "Identifier",
                            "name": "resultExponent"
                           },
                           "right": {
                            "type": "NumberLiteral",
                            "number": "1",
                            "subdenomination": null
                           }
                          }
                         },
                         {
                          "type": "ExpressionStatement",
                          "expression": {
                           "type": "BinaryOperation",
                           "operator": "*=",
                           "left": {
                            "type": "Identifier",
                            "name": "xSignifier"
                           },
                           "right": {
                            "type": "Identifier",
                            "name": "xSignifier"
                           }
                          }
                         },
                         {
                          "type": "VariableDeclarationStatement",
                          "variables": [
                           {
                            "type": "VariableDeclaration",
                            "typeName": {
                             "type": "ElementaryTypeName",
                             "name": "uint256",
                             "stateMutability": null
                            },
                            "name": "b",
                            "identifier": {
                             "type": "Identifier",
                             "name": "b"
                            },
                            "storageLocation": null,
                            "isStateVar": false,
                            "isIndexed": false,
                            "expression": null
                           }
                          ],
                          "initialValue": {
                           "type": "BinaryOperation",
                           "operator": ">>",
                           "left": {
                            "type": "Identifier",
                            "name": "xSignifier"
                           },
                           "right": {
                            "type": "NumberLiteral",
                            "number": "255",
                            "subdenomination": null
                           }
                          }
                         },
                         {
                          "type": "ExpressionStatement",
                          "expression": {
                           "type": "BinaryOperation",
                           "operator": "+=",
                           "left": {
                            "type": "Identifier",
                            "name": "resultSignifier"
                           },
                           "right": {
                            "type": "BinaryOperation",
                            "operator": "^",
                            "left": {
                             "type": "Identifier",
                             "name": "b"
                            },
                            "right": {
                             "type": "Identifier",
                             "name": "bb"
                            }
                           }
                          }
                         },
                         {
                          "type": "ExpressionStatement",
                          "expression": {
                           "type": "BinaryOperation",
                           "operator": ">>=",
                           "left": {
                            "type": "Identifier",
                            "name": "xSignifier"
                           },
                           "right": {
                            "type": "BinaryOperation",
                            "operator": "+",
                            "left": {
                             "type": "NumberLiteral",
                             "number": "127",
                             "subdenomination": null
                            },
                            "right": {
                             "type": "Identifier",
                             "name": "b"
                            }
                           }
                          }
                         }
                        ]
                       }
                      }
                     ]
                    }
                   },
                   {
                    "type": "ReturnStatement",
                    "expression": {
                     "type": "FunctionCall",
                     "expression": {
                      "type": "ElementaryTypeName",
                      "name": "bytes16",
                      "stateMutability": null
                     },
                     "arguments": [
                      {
                       "type": "FunctionCall",
                       "expression": {
                        "type": "ElementaryTypeName",
                        "name": "uint128",
                        "stateMutability": null
                       },
                       "arguments": [
                        {
                         "type": "BinaryOperation",
                         "operator": "|",
                         "left": {
                          "type": "BinaryOperation",
                          "operator": "|",
                          "left": {
                           "type": "TupleExpression",
                           "components": [
                            {
                             "type": "Conditional",
                             "condition": {
                              "type": "Identifier",
                              "name": "resultNegative"
                             },
                             "trueExpression": {
                              "type": "NumberLiteral",
                              "number": "0x80000000000000000000000000000000",
                              "subdenomination": null
                             },
                             "falseExpression": {
                              "type": "NumberLiteral",
                              "number": "0",
                              "subdenomination": null
                             }
                            }
                           ],
                           "isArray": false
                          },
                          "right": {
                           "type": "BinaryOperation",
                           "operator": "<<",
                           "left": {
                            "type": "Identifier",
                            "name": "resultExponent"
                           },
                           "right": {
                            "type": "NumberLiteral",
                            "number": "112",
                            "subdenomination": null
                           }
                          }
                         },
                         "right": {
                          "type": "BinaryOperation",
                          "operator": "&",
                          "left": {
                           "type": "Identifier",
                           "name": "resultSignifier"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
                           "subdenomination": null
                          }
                         }
                        }
                       ],
                       "names": [],
                       "identifiers": []
                      }
                     ],
                     "names": [],
                     "identifiers": []
                    }
                   }
                  ]
                 }
                }
               ]
              }
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "ln",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes16",
          "stateMutability": null
         },
         "name": "x",
         "identifier": {
          "type": "Identifier",
          "name": "x"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes16",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "UncheckedStatement",
          "block": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "mul"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "log_2"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "x"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "NumberLiteral",
                "number": "0x3FFE62E42FEFA39EF35793C7673007E5",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "pow_2",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes16",
          "stateMutability": null
         },
         "name": "x",
         "identifier": {
          "type": "Identifier",
          "name": "x"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes16",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "UncheckedStatement",
          "block": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "bool",
                "stateMutability": null
               },
               "name": "xNegative",
               "identifier": {
                "type": "Identifier",
                "name": "xNegative"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "BinaryOperation",
              "operator": ">",
              "left": {
               "type": "FunctionCall",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "uint128",
                "stateMutability": null
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "x"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0x80000000000000000000000000000000",
               "subdenomination": null
              }
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "xExponent",
               "identifier": {
                "type": "Identifier",
                "name": "xExponent"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "BinaryOperation",
              "operator": "&",
              "left": {
               "type": "BinaryOperation",
               "operator": ">>",
               "left": {
                "type": "FunctionCall",
                "expression": {
                 "type": "ElementaryTypeName",
                 "name": "uint128",
                 "stateMutability": null
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "x"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "right": {
                "type": "NumberLiteral",
                "number": "112",
                "subdenomination": null
               }
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0x7FFF",
               "subdenomination": null
              }
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "xSignifier",
               "identifier": {
                "type": "Identifier",
                "name": "xSignifier"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "BinaryOperation",
              "operator": "&",
              "left": {
               "type": "FunctionCall",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "uint128",
                "stateMutability": null
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "x"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
               "subdenomination": null
              }
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "&&",
              "left": {
               "type": "BinaryOperation",
               "operator": "==",
               "left": {
                "type": "Identifier",
                "name": "xExponent"
               },
               "right": {
                "type": "NumberLiteral",
                "number": "0x7FFF",
                "subdenomination": null
               }
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "!=",
               "left": {
                "type": "Identifier",
                "name": "xSignifier"
               },
               "right": {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ReturnStatement",
                "expression": {
                 "type": "Identifier",
                 "name": "NaN"
                }
               }
              ]
             },
             "falseBody": {
              "type": "IfStatement",
              "condition": {
               "type": "BinaryOperation",
               "operator": ">",
               "left": {
                "type": "Identifier",
                "name": "xExponent"
               },
               "right": {
                "type": "NumberLiteral",
                "number": "16_397",
                "subdenomination": null
               }
              },
              "trueBody": {
               "type": "Block",
               "statements": [
                {
                 "type": "ReturnStatement",
                 "expression": {
                  "type": "Conditional",
                  "condition": {
                   "type": "Identifier",
                   "name": "xNegative"
                  },
                  "trueExpression": {
                   "type": "Identifier",
                   "name": "POSITIVE_ZERO"
                  },
                  "falseExpression": {
                   "type": "Identifier",
                   "name": "POSITIVE_INFINITY"
                  }
                 }
                }
               ]
              },
              "falseBody": {
               "type": "IfStatement",
               "condition": {
                "type": "BinaryOperation",
                "operator": "<",
                "left": {
                 "type": "Identifier",
                 "name": "xExponent"
                },
                "right": {
                 "type": "NumberLiteral",
                 "number": "16_255",
                 "subdenomination": null
                }
               },
               "trueBody": {
                "type": "Block",
                "statements": [
                 {
                  "type": "ReturnStatement",
                  "expression": {
                   "type": "NumberLiteral",
                   "number": "0x3FFF0000000000000000000000000000",
                   "subdenomination": null
                  }
                 }
                ]
               },
               "falseBody": {
                "type": "Block",
                "statements": [
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": "==",
                   "left": {
                    "type": "Identifier",
                    "name": "xExponent"
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                     "type": "Identifier",
                     "name": "xExponent"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "1",
                     "subdenomination": null
                    }
                   }
                  },
                  "falseBody": {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "|=",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x10000000000000000000000000000",
                     "subdenomination": null
                    }
                   }
                  }
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "Identifier",
                    "name": "xExponent"
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "16_367",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "<<=",
                      "left": {
                       "type": "Identifier",
                       "name": "xSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": "-",
                       "left": {
                        "type": "Identifier",
                        "name": "xExponent"
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "16_367",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": {
                   "type": "IfStatement",
                   "condition": {
                    "type": "BinaryOperation",
                    "operator": "<",
                    "left": {
                     "type": "Identifier",
                     "name": "xExponent"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "16_367",
                     "subdenomination": null
                    }
                   },
                   "trueBody": {
                    "type": "Block",
                    "statements": [
                     {
                      "type": "ExpressionStatement",
                      "expression": {
                       "type": "BinaryOperation",
                       "operator": ">>=",
                       "left": {
                        "type": "Identifier",
                        "name": "xSignifier"
                       },
                       "right": {
                        "type": "BinaryOperation",
                        "operator": "-",
                        "left": {
                         "type": "NumberLiteral",
                         "number": "16_367",
                         "subdenomination": null
                        },
                        "right": {
                         "type": "Identifier",
                         "name": "xExponent"
                        }
                       }
                      }
                     }
                    ]
                   },
                   "falseBody": null
                  }
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": "&&",
                   "left": {
                    "type": "Identifier",
                    "name": "xNegative"
                   },
                   "right": {
                    "type": "BinaryOperation",
                    "operator": ">",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x406E00000000000000000000000000000000",
                     "subdenomination": null
                    }
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ReturnStatement",
                     "expression": {
                      "type": "Identifier",
                      "name": "POSITIVE_ZERO"
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": "&&",
                   "left": {
                    "type": "UnaryOperation",
                    "operator": "!",
                    "subExpression": {
                     "type": "Identifier",
                     "name": "xNegative"
                    },
                    "isPrefix": true
                   },
                   "right": {
                    "type": "BinaryOperation",
                    "operator": ">",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
                     "subdenomination": null
                    }
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ReturnStatement",
                     "expression": {
                      "type": "Identifier",
                      "name": "POSITIVE_INFINITY"
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "VariableDeclarationStatement",
                  "variables": [
                   {
                    "type": "VariableDeclaration",
                    "typeName": {
                     "type": "ElementaryTypeName",
                     "name": "uint256",
                     "stateMutability": null
                    },
                    "name": "resultExponent",
                    "identifier": {
                     "type": "Identifier",
                     "name": "resultExponent"
                    },
                    "storageLocation": null,
                    "isStateVar": false,
                    "isIndexed": false,
                    "expression": null
                   }
                  ],
                  "initialValue": {
                   "type": "BinaryOperation",
                   "operator": ">>",
                   "left": {
                    "type": "Identifier",
                    "name": "xSignifier"
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "128",
                    "subdenomination": null
                   }
                  }
                 },
                 {
                  "type": "ExpressionStatement",
                  "expression": {
                   "type": "BinaryOperation",
                   "operator": "&=",
                   "left": {
                    "type": "Identifier",
                    "name": "xSignifier"
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
                    "subdenomination": null
                   }
                  }
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": "&&",
                   "left": {
                    "type": "Identifier",
                    "name": "xNegative"
                   },
                   "right": {
                    "type": "BinaryOperation",
                    "operator": "!=",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0",
                     "subdenomination": null
                    }
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "xSignifier"
                      },
                      "right": {
                       "type": "UnaryOperation",
                       "operator": "~",
                       "subExpression": {
                        "type": "Identifier",
                        "name": "xSignifier"
                       },
                       "isPrefix": true
                      }
                     }
                    },
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "+=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultExponent"
                      },
                      "right": {
                       "type": "NumberLiteral",
                       "number": "1",
                       "subdenomination": null
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "VariableDeclarationStatement",
                  "variables": [
                   {
                    "type": "VariableDeclaration",
                    "typeName": {
                     "type": "ElementaryTypeName",
                     "name": "uint256",
                     "stateMutability": null
                    },
                    "name": "resultSignifier",
                    "identifier": {
                     "type": "Identifier",
                     "name": "resultSignifier"
                    },
                    "storageLocation": null,
                    "isStateVar": false,
                    "isIndexed": false,
                    "expression": null
                   }
                  ],
                  "initialValue": {
                   "type": "NumberLiteral",
                   "number": "0x80000000000000000000000000000000",
                   "subdenomination": null
                  }
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x80000000000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x16A09E667F3BCC908B2FB1366EA957D3E",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x40000000000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1306FE0A31B7152DE8D5A46305C85EDEC",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x20000000000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1172B83C7D517ADCDF7C8C50EB14A791F",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x10000000000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10B5586CF9890F6298B92B71842A98363",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x8000000000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1059B0D31585743AE7C548EB68CA417FD",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x4000000000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x102C9A3E778060EE6F7CACA4F7A29BDE8",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x2000000000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10163DA9FB33356D84A66AE336DCDFA3F",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x1000000000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100B1AFA5ABCBED6129AB13EC11DC9543",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x800000000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10058C86DA1C09EA1FF19D294CF2F679B",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x400000000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1002C605E2E8CEC506D21BFC89A23A00F",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x200000000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100162F3904051FA128BCA9C55C31E5DF",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x100000000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000B175EFFDC76BA38E31671CA939725",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x80000000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100058BA01FB9F96D6CACD4B180917C3D",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x40000000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10002C5CC37DA9491D0985C348C68E7B3",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x20000000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000162E525EE054754457D5995292026",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x10000000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000B17255775C040618BF4A4ADE83FC",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x8000000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000058B91B5BC9AE2EED81E9B7D4CFAB",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x4000000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100002C5C89D5EC6CA4D7C8ACC017B7C9",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x2000000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000162E43F4F831060E02D839A9D16D",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x1000000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000B1721BCFC99D9F890EA06911763",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x800000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000058B90CF1E6D97F9CA14DBCC1628",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x400000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000002C5C863B73F016468F6BAC5CA2B",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x200000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000162E430E5A18F6119E3C02282A5",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x100000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000B1721835514B86E6D96EFD1BFE",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x80000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000058B90C0B48C6BE5DF846C5B2EF",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x40000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000002C5C8601CC6B9E94213C72737A",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x20000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000162E42FFF037DF38AA2B219F06",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x10000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000B17217FBA9C739AA5819F44F9",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x8000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000058B90BFCDEE5ACD3C1CEDC823",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x4000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000002C5C85FE31F35A6A30DA1BE50",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x2000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000162E42FF0999CE3541B9FFFCF",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x1000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000B17217F80F4EF5AADDA45554",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x800000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000058B90BFBF8479BD5A81B51AD",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x400000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000002C5C85FDF84BD62AE30A74CC",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x200000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000162E42FEFB2FED257559BDAA",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x100000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000000B17217F7D5A7716BBA4A9AE",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x80000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000058B90BFBE9DDBAC5E109CCE",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x40000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000002C5C85FDF4B15DE6F17EB0D",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x20000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000000162E42FEFA494F1478FDE05",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x10000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000000B17217F7D20CF927C8E94C",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x8000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000000058B90BFBE8F71CB4E4B33D",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x4000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000002C5C85FDF477B662B26945",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x2000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000000162E42FEFA3AE53369388C",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x1000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000000B17217F7D1D351A389D40",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x800000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000000058B90BFBE8E8B2D3D4EDE",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x400000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000000002C5C85FDF4741BEA6E77E",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x200000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000000162E42FEFA39FE95583C2",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x100000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000000000B17217F7D1CFB72B45E1",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x80000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000000058B90BFBE8E7CC35C3F0",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x40000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000000002C5C85FDF473E242EA38",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x20000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000000000162E42FEFA39F02B772C",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x10000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000000000B17217F7D1CF7D83C1A",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x8000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000000000058B90BFBE8E7BDCBE2E",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x4000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000000002C5C85FDF473DEA871F",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x2000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000000000162E42FEFA39EF44D91",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x1000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000000000B17217F7D1CF79E949",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x800000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000000000058B90BFBE8E7BCE544",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x400000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000000000002C5C85FDF473DE6ECA",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x200000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000000000162E42FEFA39EF366F",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x100000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000000000000B17217F7D1CF79AFA",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x80000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000000000058B90BFBE8E7BCD6D",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x40000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000000000002C5C85FDF473DE6B2",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x20000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000000000000162E42FEFA39EF358",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x10000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000000000000B17217F7D1CF79AB",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x8000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000000000000058B90BFBE8E7BCD5",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x4000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000000000002C5C85FDF473DE6A",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x2000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000000000000162E42FEFA39EF34",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x1000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000000000000B17217F7D1CF799",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x800000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000000000000058B90BFBE8E7BCC",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x400000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000000000000002C5C85FDF473DE5",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x200000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000000000000162E42FEFA39EF2",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x100000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000000000000000B17217F7D1CF78",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x80000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000000000000058B90BFBE8E7BB",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x40000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000000000000002C5C85FDF473DD",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x20000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000000000000000162E42FEFA39EE",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x10000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000000000000000B17217F7D1CF6",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x8000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000000000000000058B90BFBE8E7A",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x4000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000000000000002C5C85FDF473C",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x2000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000000000000000162E42FEFA39D",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x1000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000000000000000B17217F7D1CE",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x800000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000000000000000058B90BFBE8E6",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x400000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000000000000000002C5C85FDF472",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x200000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000000000000000162E42FEFA38",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x100000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000000000000000000B17217F7D1B",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x80000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000000000000000058B90BFBE8D",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x40000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000000000000000002C5C85FDF46",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x20000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000000000000000000162E42FEFA2",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x10000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000000000000000000B17217F7D0",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x8000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000000000000000000058B90BFBE7",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x4000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000000000000000002C5C85FDF3",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x2000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000000000000000000162E42FEF9",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x1000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000000000000000000B17217F7C",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x800000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000000000000000000058B90BFBD",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x400000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000000000000000000002C5C85FDE",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x200000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000000000000000000162E42FEE",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x100000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000000000000000000000B17217F6",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x80000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000000000000000000058B90BFA",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x40000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000000000000000000002C5C85FC",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x20000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000000000000000000000162E42FD",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x10000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000000000000000000000B17217E",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x8000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000000000000000000000058B90BE",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x4000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000000000000000000002C5C85E",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x2000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000000000000000000000162E42E",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x1000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000000000000000000000B17216",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x800000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000000000000000000000058B90A",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x400000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000000000000000000000002C5C84",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x200000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000000000000000000000162E41",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x100000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000000000000000000000000B1720",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x80000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000000000000000000000058B8F",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x40000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000000000000000000000002C5C7",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x20000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000000000000000000000000162E3",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x10000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000000000000000000000000B171",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x8000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000000000000000000000000058B8",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x4000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000000000000000000000002C5B",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x2000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000000000000000000000000162D",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x1000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000000000000000000000000B16",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x800",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000000000000000000000000058A",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x400",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000000000000000000000000002C4",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x200",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000000000000000000000000161",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x100",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000000000000000000000000000B0",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x80",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000000000000000000000000057",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x40",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000000000000000000000000002B",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x20",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000000000000000000000000015",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x10",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000000000000000000000000000A",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x8",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000000000000000000000000004",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x4",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000000000000000000000000001",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "UnaryOperation",
                   "operator": "!",
                   "subExpression": {
                    "type": "Identifier",
                    "name": "xNegative"
                   },
                   "isPrefix": true
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": "&",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": ">>",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "15",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
                        "subdenomination": null
                       }
                      }
                     }
                    },
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "+=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultExponent"
                      },
                      "right": {
                       "type": "NumberLiteral",
                       "number": "0x3FFF",
                       "subdenomination": null
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": {
                   "type": "IfStatement",
                   "condition": {
                    "type": "BinaryOperation",
                    "operator": "<=",
                    "left": {
                     "type": "Identifier",
                     "name": "resultExponent"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x3FFE",
                     "subdenomination": null
                    }
                   },
                   "trueBody": {
                    "type": "Block",
                    "statements": [
                     {
                      "type": "ExpressionStatement",
                      "expression": {
                       "type": "BinaryOperation",
                       "operator": "=",
                       "left": {
                        "type": "Identifier",
                        "name": "resultSignifier"
                       },
                       "right": {
                        "type": "BinaryOperation",
                        "operator": "&",
                        "left": {
                         "type": "BinaryOperation",
                         "operator": ">>",
                         "left": {
                          "type": "Identifier",
                          "name": "resultSignifier"
                         },
                         "right": {
                          "type": "NumberLiteral",
                          "number": "15",
                          "subdenomination": null
                         }
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
                         "subdenomination": null
                        }
                       }
                      }
                     },
                     {
                      "type": "ExpressionStatement",
                      "expression": {
                       "type": "BinaryOperation",
                       "operator": "=",
                       "left": {
                        "type": "Identifier",
                        "name": "resultExponent"
                       },
                       "right": {
                        "type": "BinaryOperation",
                        "operator": "-",
                        "left": {
                         "type": "NumberLiteral",
                         "number": "0x3FFF",
                         "subdenomination": null
                        },
                        "right": {
                         "type": "Identifier",
                         "name": "resultExponent"
                        }
                       }
                      }
                     }
                    ]
                   },
                   "falseBody": {
                    "type": "Block",
                    "statements": [
                     {
                      "type": "ExpressionStatement",
                      "expression": {
                       "type": "BinaryOperation",
                       "operator": "=",
                       "left": {
                        "type": "Identifier",
                        "name": "resultSignifier"
                       },
                       "right": {
                        "type": "BinaryOperation",
                        "operator": ">>",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "BinaryOperation",
                         "operator": "-",
                         "left": {
                          "type": "Identifier",
                          "name": "resultExponent"
                         },
                         "right": {
                          "type": "NumberLiteral",
                          "number": "16_367",
                          "subdenomination": null
                         }
                        }
                       }
                      }
                     },
                     {
                      "type": "ExpressionStatement",
                      "expression": {
                       "type": "BinaryOperation",
                       "operator": "=",
                       "left": {
                        "type": "Identifier",
                        "name": "resultExponent"
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "0",
                        "subdenomination": null
                       }
                      }
                     }
                    ]
                   }
                  }
                 },
                 {
                  "type": "ReturnStatement",
                  "expression": {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "ElementaryTypeName",
                    "name": "bytes16",
                    "stateMutability": null
                   },
                   "arguments": [
                    {
                     "type": "FunctionCall",
                     "expression": {
                      "type": "ElementaryTypeName",
                      "name": "uint128",
                      "stateMutability": null
                     },
                     "arguments": [
                      {
                       "type": "BinaryOperation",
                       "operator": "|",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "<<",
                        "left": {
                         "type": "Identifier",
                         "name": "resultExponent"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "112",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "Identifier",
                        "name": "resultSignifier"
                       }
                      }
                     ],
                     "names": [],
                     "identifiers": []
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 }
                ]
               }
              }
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "pow_2ToUInt",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes16",
          "stateMutability": null
         },
         "name": "x",
         "identifier": {
          "type": "Identifier",
          "name": "x"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "UncheckedStatement",
          "block": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "bool",
                "stateMutability": null
               },
               "name": "xNegative",
               "identifier": {
                "type": "Identifier",
                "name": "xNegative"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "BinaryOperation",
              "operator": ">",
              "left": {
               "type": "FunctionCall",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "uint128",
                "stateMutability": null
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "x"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0x80000000000000000000000000000000",
               "subdenomination": null
              }
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "xExponent",
               "identifier": {
                "type": "Identifier",
                "name": "xExponent"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "BinaryOperation",
              "operator": "&",
              "left": {
               "type": "BinaryOperation",
               "operator": ">>",
               "left": {
                "type": "FunctionCall",
                "expression": {
                 "type": "ElementaryTypeName",
                 "name": "uint128",
                 "stateMutability": null
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "x"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "right": {
                "type": "NumberLiteral",
                "number": "112",
                "subdenomination": null
               }
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0x7FFF",
               "subdenomination": null
              }
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "xSignifier",
               "identifier": {
                "type": "Identifier",
                "name": "xSignifier"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "BinaryOperation",
              "operator": "&",
              "left": {
               "type": "FunctionCall",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "uint128",
                "stateMutability": null
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "x"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
               "subdenomination": null
              }
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint128",
                "stateMutability": null
               },
               "name": "y",
               "identifier": {
                "type": "Identifier",
                "name": "y"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": null
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "&&",
              "left": {
               "type": "BinaryOperation",
               "operator": "==",
               "left": {
                "type": "Identifier",
                "name": "xExponent"
               },
               "right": {
                "type": "NumberLiteral",
                "number": "0x7FFF",
                "subdenomination": null
               }
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "!=",
               "left": {
                "type": "Identifier",
                "name": "xSignifier"
               },
               "right": {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ReturnStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "toUInt"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "NaN"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": {
              "type": "IfStatement",
              "condition": {
               "type": "BinaryOperation",
               "operator": ">",
               "left": {
                "type": "Identifier",
                "name": "xExponent"
               },
               "right": {
                "type": "NumberLiteral",
                "number": "16_397",
                "subdenomination": null
               }
              },
              "trueBody": {
               "type": "Block",
               "statements": [
                {
                 "type": "ReturnStatement",
                 "expression": {
                  "type": "Conditional",
                  "condition": {
                   "type": "Identifier",
                   "name": "xNegative"
                  },
                  "trueExpression": {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "Identifier",
                    "name": "toUInt"
                   },
                   "arguments": [
                    {
                     "type": "Identifier",
                     "name": "POSITIVE_ZERO"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  },
                  "falseExpression": {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "Identifier",
                    "name": "toUInt"
                   },
                   "arguments": [
                    {
                     "type": "Identifier",
                     "name": "POSITIVE_INFINITY"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 }
                }
               ]
              },
              "falseBody": {
               "type": "IfStatement",
               "condition": {
                "type": "BinaryOperation",
                "operator": "<",
                "left": {
                 "type": "Identifier",
                 "name": "xExponent"
                },
                "right": {
                 "type": "NumberLiteral",
                 "number": "16_255",
                 "subdenomination": null
                }
               },
               "trueBody": {
                "type": "Block",
                "statements": [
                 {
                  "type": "ReturnStatement",
                  "expression": {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "Identifier",
                    "name": "toUInt"
                   },
                   "arguments": [
                    {
                     "type": "NumberLiteral",
                     "number": "0x3FFF0000000000000000000000000000",
                     "subdenomination": null
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 }
                ]
               },
               "falseBody": {
                "type": "Block",
                "statements": [
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": "==",
                   "left": {
                    "type": "Identifier",
                    "name": "xExponent"
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                     "type": "Identifier",
                     "name": "xExponent"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "1",
                     "subdenomination": null
                    }
                   }
                  },
                  "falseBody": {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "|=",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x10000000000000000000000000000",
                     "subdenomination": null
                    }
                   }
                  }
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "Identifier",
                    "name": "xExponent"
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "16_367",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "<<=",
                      "left": {
                       "type": "Identifier",
                       "name": "xSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": "-",
                       "left": {
                        "type": "Identifier",
                        "name": "xExponent"
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "16_367",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": {
                   "type": "IfStatement",
                   "condition": {
                    "type": "BinaryOperation",
                    "operator": "<",
                    "left": {
                     "type": "Identifier",
                     "name": "xExponent"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "16_367",
                     "subdenomination": null
                    }
                   },
                   "trueBody": {
                    "type": "Block",
                    "statements": [
                     {
                      "type": "ExpressionStatement",
                      "expression": {
                       "type": "BinaryOperation",
                       "operator": ">>=",
                       "left": {
                        "type": "Identifier",
                        "name": "xSignifier"
                       },
                       "right": {
                        "type": "BinaryOperation",
                        "operator": "-",
                        "left": {
                         "type": "NumberLiteral",
                         "number": "16_367",
                         "subdenomination": null
                        },
                        "right": {
                         "type": "Identifier",
                         "name": "xExponent"
                        }
                       }
                      }
                     }
                    ]
                   },
                   "falseBody": null
                  }
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": "&&",
                   "left": {
                    "type": "Identifier",
                    "name": "xNegative"
                   },
                   "right": {
                    "type": "BinaryOperation",
                    "operator": ">",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x406E00000000000000000000000000000000",
                     "subdenomination": null
                    }
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ReturnStatement",
                     "expression": {
                      "type": "FunctionCall",
                      "expression": {
                       "type": "Identifier",
                       "name": "toUInt"
                      },
                      "arguments": [
                       {
                        "type": "Identifier",
                        "name": "POSITIVE_ZERO"
                       }
                      ],
                      "names": [],
                      "identifiers": []
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": "&&",
                   "left": {
                    "type": "UnaryOperation",
                    "operator": "!",
                    "subExpression": {
                     "type": "Identifier",
                     "name": "xNegative"
                    },
                    "isPrefix": true
                   },
                   "right": {
                    "type": "BinaryOperation",
                    "operator": ">",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
                     "subdenomination": null
                    }
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ReturnStatement",
                     "expression": {
                      "type": "FunctionCall",
                      "expression": {
                       "type": "Identifier",
                       "name": "toUInt"
                      },
                      "arguments": [
                       {
                        "type": "Identifier",
                        "name": "POSITIVE_INFINITY"
                       }
                      ],
                      "names": [],
                      "identifiers": []
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "VariableDeclarationStatement",
                  "variables": [
                   {
                    "type": "VariableDeclaration",
                    "typeName": {
                     "type": "ElementaryTypeName",
                     "name": "uint256",
                     "stateMutability": null
                    },
                    "name": "resultExponent",
                    "identifier": {
                     "type": "Identifier",
                     "name": "resultExponent"
                    },
                    "storageLocation": null,
                    "isStateVar": false,
                    "isIndexed": false,
                    "expression": null
                   }
                  ],
                  "initialValue": {
                   "type": "BinaryOperation",
                   "operator": ">>",
                   "left": {
                    "type": "Identifier",
                    "name": "xSignifier"
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "128",
                    "subdenomination": null
                   }
                  }
                 },
                 {
                  "type": "ExpressionStatement",
                  "expression": {
                   "type": "BinaryOperation",
                   "operator": "&=",
                   "left": {
                    "type": "Identifier",
                    "name": "xSignifier"
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
                    "subdenomination": null
                   }
                  }
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": "&&",
                   "left": {
                    "type": "Identifier",
                    "name": "xNegative"
                   },
                   "right": {
                    "type": "BinaryOperation",
                    "operator": "!=",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0",
                     "subdenomination": null
                    }
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "xSignifier"
                      },
                      "right": {
                       "type": "UnaryOperation",
                       "operator": "~",
                       "subExpression": {
                        "type": "Identifier",
                        "name": "xSignifier"
                       },
                       "isPrefix": true
                      }
                     }
                    },
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "+=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultExponent"
                      },
                      "right": {
                       "type": "NumberLiteral",
                       "number": "1",
                       "subdenomination": null
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "VariableDeclarationStatement",
                  "variables": [
                   {
                    "type": "VariableDeclaration",
                    "typeName": {
                     "type": "ElementaryTypeName",
                     "name": "uint256",
                     "stateMutability": null
                    },
                    "name": "resultSignifier",
                    "identifier": {
                     "type": "Identifier",
                     "name": "resultSignifier"
                    },
                    "storageLocation": null,
                    "isStateVar": false,
                    "isIndexed": false,
                    "expression": null
                   }
                  ],
                  "initialValue": {
                   "type": "NumberLiteral",
                   "number": "0x80000000000000000000000000000000",
                   "subdenomination": null
                  }
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x80000000000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x16A09E667F3BCC908B2FB1366EA957D3E",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x40000000000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1306FE0A31B7152DE8D5A46305C85EDEC",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x20000000000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1172B83C7D517ADCDF7C8C50EB14A791F",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x10000000000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10B5586CF9890F6298B92B71842A98363",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x8000000000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1059B0D31585743AE7C548EB68CA417FD",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x4000000000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x102C9A3E778060EE6F7CACA4F7A29BDE8",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x2000000000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10163DA9FB33356D84A66AE336DCDFA3F",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x1000000000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100B1AFA5ABCBED6129AB13EC11DC9543",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x800000000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10058C86DA1C09EA1FF19D294CF2F679B",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x400000000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1002C605E2E8CEC506D21BFC89A23A00F",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x200000000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100162F3904051FA128BCA9C55C31E5DF",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x100000000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000B175EFFDC76BA38E31671CA939725",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x80000000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100058BA01FB9F96D6CACD4B180917C3D",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x40000000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10002C5CC37DA9491D0985C348C68E7B3",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x20000000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000162E525EE054754457D5995292026",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x10000000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000B17255775C040618BF4A4ADE83FC",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x8000000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000058B91B5BC9AE2EED81E9B7D4CFAB",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x4000000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100002C5C89D5EC6CA4D7C8ACC017B7C9",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x2000000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000162E43F4F831060E02D839A9D16D",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x1000000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000B1721BCFC99D9F890EA06911763",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x800000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000058B90CF1E6D97F9CA14DBCC1628",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x400000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000002C5C863B73F016468F6BAC5CA2B",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x200000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000162E430E5A18F6119E3C02282A5",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x100000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000B1721835514B86E6D96EFD1BFE",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x80000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000058B90C0B48C6BE5DF846C5B2EF",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x40000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000002C5C8601CC6B9E94213C72737A",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x20000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000162E42FFF037DF38AA2B219F06",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x10000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000B17217FBA9C739AA5819F44F9",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x8000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000058B90BFCDEE5ACD3C1CEDC823",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x4000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000002C5C85FE31F35A6A30DA1BE50",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x2000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000162E42FF0999CE3541B9FFFCF",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x1000000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000B17217F80F4EF5AADDA45554",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x800000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000058B90BFBF8479BD5A81B51AD",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x400000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000002C5C85FDF84BD62AE30A74CC",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x200000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000162E42FEFB2FED257559BDAA",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x100000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000000B17217F7D5A7716BBA4A9AE",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x80000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000058B90BFBE9DDBAC5E109CCE",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x40000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000002C5C85FDF4B15DE6F17EB0D",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x20000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000000162E42FEFA494F1478FDE05",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x10000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000000B17217F7D20CF927C8E94C",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x8000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000000058B90BFBE8F71CB4E4B33D",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x4000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000002C5C85FDF477B662B26945",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x2000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000000162E42FEFA3AE53369388C",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x1000000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000000B17217F7D1D351A389D40",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x800000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000000058B90BFBE8E8B2D3D4EDE",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x400000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000000002C5C85FDF4741BEA6E77E",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x200000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000000162E42FEFA39FE95583C2",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x100000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000000000B17217F7D1CFB72B45E1",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x80000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000000058B90BFBE8E7CC35C3F0",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x40000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000000002C5C85FDF473E242EA38",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x20000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000000000162E42FEFA39F02B772C",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x10000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000000000B17217F7D1CF7D83C1A",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x8000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000000000058B90BFBE8E7BDCBE2E",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x4000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000000002C5C85FDF473DEA871F",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x2000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000000000162E42FEFA39EF44D91",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x1000000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000000000B17217F7D1CF79E949",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x800000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000000000058B90BFBE8E7BCE544",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x400000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000000000002C5C85FDF473DE6ECA",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x200000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000000000162E42FEFA39EF366F",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x100000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000000000000B17217F7D1CF79AFA",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x80000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000000000058B90BFBE8E7BCD6D",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x40000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000000000002C5C85FDF473DE6B2",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x20000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000000000000162E42FEFA39EF358",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x10000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000000000000B17217F7D1CF79AB",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x8000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000000000000058B90BFBE8E7BCD5",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x4000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000000000002C5C85FDF473DE6A",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x2000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000000000000162E42FEFA39EF34",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x1000000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000000000000B17217F7D1CF799",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x800000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000000000000058B90BFBE8E7BCC",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x400000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000000000000002C5C85FDF473DE5",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x200000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000000000000162E42FEFA39EF2",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x100000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000000000000000B17217F7D1CF78",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x80000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000000000000058B90BFBE8E7BB",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x40000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000000000000002C5C85FDF473DD",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x20000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000000000000000162E42FEFA39EE",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x10000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000000000000000B17217F7D1CF6",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x8000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000000000000000058B90BFBE8E7A",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x4000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000000000000002C5C85FDF473C",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x2000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000000000000000162E42FEFA39D",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x1000000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000000000000000B17217F7D1CE",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x800000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000000000000000058B90BFBE8E6",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x400000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000000000000000002C5C85FDF472",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x200000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000000000000000162E42FEFA38",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x100000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000000000000000000B17217F7D1B",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x80000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000000000000000058B90BFBE8D",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x40000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000000000000000002C5C85FDF46",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x20000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000000000000000000162E42FEFA2",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x10000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000000000000000000B17217F7D0",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x8000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000000000000000000058B90BFBE7",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x4000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000000000000000002C5C85FDF3",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x2000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000000000000000000162E42FEF9",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x1000000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000000000000000000B17217F7C",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x800000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000000000000000000058B90BFBD",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x400000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000000000000000000002C5C85FDE",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x200000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000000000000000000162E42FEE",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x100000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000000000000000000000B17217F6",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x80000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000000000000000000058B90BFA",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x40000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000000000000000000002C5C85FC",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x20000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000000000000000000000162E42FD",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x10000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000000000000000000000B17217E",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x8000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000000000000000000000058B90BE",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x4000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000000000000000000002C5C85E",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x2000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000000000000000000000162E42E",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x1000000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000000000000000000000B17216",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x800000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000000000000000000000058B90A",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x400000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000000000000000000000002C5C84",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x200000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000000000000000000000162E41",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x100000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000000000000000000000000B1720",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x80000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000000000000000000000058B8F",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x40000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000000000000000000000002C5C7",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x20000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000000000000000000000000162E3",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x10000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000000000000000000000000B171",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x8000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000000000000000000000000058B8",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x4000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000000000000000000000002C5B",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x2000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000000000000000000000000162D",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x1000",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000000000000000000000000B16",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x800",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000000000000000000000000058A",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x400",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000000000000000000000000002C4",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x200",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000000000000000000000000161",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x100",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x1000000000000000000000000000000B0",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x80",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000000000000000000000000057",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x40",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000000000000000000000000002B",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x20",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000000000000000000000000015",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x10",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x10000000000000000000000000000000A",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x8",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000000000000000000000000004",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "Identifier",
                     "name": "xSignifier"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x4",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": ">>",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": "*",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0x100000000000000000000000000000001",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "128",
                        "subdenomination": null
                       }
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "UnaryOperation",
                   "operator": "!",
                   "subExpression": {
                    "type": "Identifier",
                    "name": "xNegative"
                   },
                   "isPrefix": true
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      },
                      "right": {
                       "type": "BinaryOperation",
                       "operator": "&",
                       "left": {
                        "type": "BinaryOperation",
                        "operator": ">>",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "15",
                         "subdenomination": null
                        }
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
                        "subdenomination": null
                       }
                      }
                     }
                    },
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "+=",
                      "left": {
                       "type": "Identifier",
                       "name": "resultExponent"
                      },
                      "right": {
                       "type": "NumberLiteral",
                       "number": "0x3FFF",
                       "subdenomination": null
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": {
                   "type": "IfStatement",
                   "condition": {
                    "type": "BinaryOperation",
                    "operator": "<=",
                    "left": {
                     "type": "Identifier",
                     "name": "resultExponent"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0x3FFE",
                     "subdenomination": null
                    }
                   },
                   "trueBody": {
                    "type": "Block",
                    "statements": [
                     {
                      "type": "ExpressionStatement",
                      "expression": {
                       "type": "BinaryOperation",
                       "operator": "=",
                       "left": {
                        "type": "Identifier",
                        "name": "resultSignifier"
                       },
                       "right": {
                        "type": "BinaryOperation",
                        "operator": "&",
                        "left": {
                         "type": "BinaryOperation",
                         "operator": ">>",
                         "left": {
                          "type": "Identifier",
                          "name": "resultSignifier"
                         },
                         "right": {
                          "type": "NumberLiteral",
                          "number": "15",
                          "subdenomination": null
                         }
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
                         "subdenomination": null
                        }
                       }
                      }
                     },
                     {
                      "type": "ExpressionStatement",
                      "expression": {
                       "type": "BinaryOperation",
                       "operator": "=",
                       "left": {
                        "type": "Identifier",
                        "name": "resultExponent"
                       },
                       "right": {
                        "type": "BinaryOperation",
                        "operator": "-",
                        "left": {
                         "type": "NumberLiteral",
                         "number": "0x3FFF",
                         "subdenomination": null
                        },
                        "right": {
                         "type": "Identifier",
                         "name": "resultExponent"
                        }
                       }
                      }
                     }
                    ]
                   },
                   "falseBody": {
                    "type": "Block",
                    "statements": [
                     {
                      "type": "ExpressionStatement",
                      "expression": {
                       "type": "BinaryOperation",
                       "operator": "=",
                       "left": {
                        "type": "Identifier",
                        "name": "resultSignifier"
                       },
                       "right": {
                        "type": "BinaryOperation",
                        "operator": ">>",
                        "left": {
                         "type": "Identifier",
                         "name": "resultSignifier"
                        },
                        "right": {
                         "type": "BinaryOperation",
                         "operator": "-",
                         "left": {
                          "type": "Identifier",
                          "name": "resultExponent"
                         },
                         "right": {
                          "type": "NumberLiteral",
                          "number": "16_367",
                          "subdenomination": null
                         }
                        }
                       }
                      }
                     },
                     {
                      "type": "ExpressionStatement",
                      "expression": {
                       "type": "BinaryOperation",
                       "operator": "=",
                       "left": {
                        "type": "Identifier",
                        "name": "resultExponent"
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "0",
                        "subdenomination": null
                       }
                      }
                     }
                    ]
                   }
                  }
                 },
                 {
                  "type": "ExpressionStatement",
                  "expression": {
                   "type": "BinaryOperation",
                   "operator": "=",
                   "left": {
                    "type": "Identifier",
                    "name": "y"
                   },
                   "right": {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "ElementaryTypeName",
                     "name": "uint128",
                     "stateMutability": null
                    },
                    "arguments": [
                     {
                      "type": "BinaryOperation",
                      "operator": "|",
                      "left": {
                       "type": "BinaryOperation",
                       "operator": "<<",
                       "left": {
                        "type": "Identifier",
                        "name": "resultExponent"
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "112",
                        "subdenomination": null
                       }
                      },
                      "right": {
                       "type": "Identifier",
                       "name": "resultSignifier"
                      }
                     }
                    ],
                    "names": [],
                    "identifiers": []
                   }
                  }
                 },
                 {
                  "type": "VariableDeclarationStatement",
                  "variables": [
                   {
                    "type": "VariableDeclaration",
                    "typeName": {
                     "type": "ElementaryTypeName",
                     "name": "uint256",
                     "stateMutability": null
                    },
                    "name": "exponent",
                    "identifier": {
                     "type": "Identifier",
                     "name": "exponent"
                    },
                    "storageLocation": null,
                    "isStateVar": false,
                    "isIndexed": false,
                    "expression": null
                   }
                  ],
                  "initialValue": {
                   "type": "BinaryOperation",
                   "operator": "&",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": ">>",
                    "left": {
                     "type": "Identifier",
                     "name": "y"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "112",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0x7FFF",
                    "subdenomination": null
                   }
                  }
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": "<",
                   "left": {
                    "type": "Identifier",
                    "name": "exponent"
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "16_383",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "ReturnStatement",
                   "expression": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "falseBody": null
                 },
                 {
                  "type": "ExpressionStatement",
                  "expression": {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "Identifier",
                    "name": "require"
                   },
                   "arguments": [
                    {
                     "type": "BinaryOperation",
                     "operator": "<",
                     "left": {
                      "type": "Identifier",
                      "name": "y"
                     },
                     "right": {
                      "type": "NumberLiteral",
                      "number": "0x80000000000000000000000000000000",
                      "subdenomination": null
                     }
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 },
                 {
                  "type": "ExpressionStatement",
                  "expression": {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "Identifier",
                    "name": "require"
                   },
                   "arguments": [
                    {
                     "type": "BinaryOperation",
                     "operator": "<=",
                     "left": {
                      "type": "Identifier",
                      "name": "exponent"
                     },
                     "right": {
                      "type": "NumberLiteral",
                      "number": "16_638",
                      "subdenomination": null
                     }
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 },
                 {
                  "type": "VariableDeclarationStatement",
                  "variables": [
                   {
                    "type": "VariableDeclaration",
                    "typeName": {
                     "type": "ElementaryTypeName",
                     "name": "uint256",
                     "stateMutability": null
                    },
                    "name": "result",
                    "identifier": {
                     "type": "Identifier",
                     "name": "result"
                    },
                    "storageLocation": null,
                    "isStateVar": false,
                    "isIndexed": false,
                    "expression": null
                   }
                  ],
                  "initialValue": {
                   "type": "BinaryOperation",
                   "operator": "|",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "&",
                    "left": {
                     "type": "FunctionCall",
                     "expression": {
                      "type": "ElementaryTypeName",
                      "name": "uint256",
                      "stateMutability": null
                     },
                     "arguments": [
                      {
                       "type": "Identifier",
                       "name": "y"
                      }
                     ],
                     "names": [],
                     "identifiers": []
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0x10000000000000000000000000000",
                    "subdenomination": null
                   }
                  }
                 },
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": "<",
                   "left": {
                    "type": "Identifier",
                    "name": "exponent"
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "16_495",
                    "subdenomination": null
                   }
                  },
                  "trueBody": {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": ">>=",
                    "left": {
                     "type": "Identifier",
                     "name": "result"
                    },
                    "right": {
                     "type": "BinaryOperation",
                     "operator": "-",
                     "left": {
                      "type": "NumberLiteral",
                      "number": "16_495",
                      "subdenomination": null
                     },
                     "right": {
                      "type": "Identifier",
                      "name": "exponent"
                     }
                    }
                   }
                  },
                  "falseBody": {
                   "type": "IfStatement",
                   "condition": {
                    "type": "BinaryOperation",
                    "operator": ">",
                    "left": {
                     "type": "Identifier",
                     "name": "exponent"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "16_495",
                     "subdenomination": null
                    }
                   },
                   "trueBody": {
                    "type": "ExpressionStatement",
                    "expression": {
                     "type": "BinaryOperation",
                     "operator": "<<=",
                     "left": {
                      "type": "Identifier",
                      "name": "result"
                     },
                     "right": {
                      "type": "BinaryOperation",
                      "operator": "-",
                      "left": {
                       "type": "Identifier",
                       "name": "exponent"
                      },
                      "right": {
                       "type": "NumberLiteral",
                       "number": "16_495",
                       "subdenomination": null
                      }
                     }
                    }
                   },
                   "falseBody": null
                  }
                 },
                 {
                  "type": "ReturnStatement",
                  "expression": {
                   "type": "Identifier",
                   "name": "result"
                  }
                 }
                ]
               }
              }
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "exp",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes16",
          "stateMutability": null
         },
         "name": "x",
         "identifier": {
          "type": "Identifier",
          "name": "x"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes16",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "UncheckedStatement",
          "block": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "pow_2"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "mul"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "x"
                 },
                 {
                  "type": "NumberLiteral",
                  "number": "0x3FFF71547652B82FE1777D0FFDA0D23A",
                  "subdenomination": null
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "mostSignificantBit",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "x",
         "identifier": {
          "type": "Identifier",
          "name": "x"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "UncheckedStatement",
          "block": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": ">",
                "left": {
                 "type": "Identifier",
                 "name": "x"
                },
                "right": {
                 "type": "NumberLiteral",
                 "number": "0",
                 "subdenomination": null
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "result",
               "identifier": {
                "type": "Identifier",
                "name": "result"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": ">=",
              "left": {
               "type": "Identifier",
               "name": "x"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0x100000000000000000000000000000000",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": ">>=",
                 "left": {
                  "type": "Identifier",
                  "name": "x"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "128",
                  "subdenomination": null
                 }
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "+=",
                 "left": {
                  "type": "Identifier",
                  "name": "result"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "128",
                  "subdenomination": null
                 }
                }
               }
              ]
             },
             "falseBody": null
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": ">=",
              "left": {
               "type": "Identifier",
               "name": "x"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0x10000000000000000",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": ">>=",
                 "left": {
                  "type": "Identifier",
                  "name": "x"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "64",
                  "subdenomination": null
                 }
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "+=",
                 "left": {
                  "type": "Identifier",
                  "name": "result"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "64",
                  "subdenomination": null
                 }
                }
               }
              ]
             },
             "falseBody": null
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": ">=",
              "left": {
               "type": "Identifier",
               "name": "x"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0x100000000",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": ">>=",
                 "left": {
                  "type": "Identifier",
                  "name": "x"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "32",
                  "subdenomination": null
                 }
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "+=",
                 "left": {
                  "type": "Identifier",
                  "name": "result"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "32",
                  "subdenomination": null
                 }
                }
               }
              ]
             },
             "falseBody": null
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": ">=",
              "left": {
               "type": "Identifier",
               "name": "x"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0x10000",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": ">>=",
                 "left": {
                  "type": "Identifier",
                  "name": "x"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "16",
                  "subdenomination": null
                 }
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "+=",
                 "left": {
                  "type": "Identifier",
                  "name": "result"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "16",
                  "subdenomination": null
                 }
                }
               }
              ]
             },
             "falseBody": null
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": ">=",
              "left": {
               "type": "Identifier",
               "name": "x"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0x100",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": ">>=",
                 "left": {
                  "type": "Identifier",
                  "name": "x"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "8",
                  "subdenomination": null
                 }
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "+=",
                 "left": {
                  "type": "Identifier",
                  "name": "result"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "8",
                  "subdenomination": null
                 }
                }
               }
              ]
             },
             "falseBody": null
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": ">=",
              "left": {
               "type": "Identifier",
               "name": "x"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0x10",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": ">>=",
                 "left": {
                  "type": "Identifier",
                  "name": "x"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "4",
                  "subdenomination": null
                 }
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "+=",
                 "left": {
                  "type": "Identifier",
                  "name": "result"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "4",
                  "subdenomination": null
                 }
                }
               }
              ]
             },
             "falseBody": null
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": ">=",
              "left": {
               "type": "Identifier",
               "name": "x"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0x4",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": ">>=",
                 "left": {
                  "type": "Identifier",
                  "name": "x"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "2",
                  "subdenomination": null
                 }
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "+=",
                 "left": {
                  "type": "Identifier",
                  "name": "result"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "2",
                  "subdenomination": null
                 }
                }
               }
              ]
             },
             "falseBody": null
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": ">=",
              "left": {
               "type": "Identifier",
               "name": "x"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0x2",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "ExpressionStatement",
              "expression": {
               "type": "BinaryOperation",
               "operator": "+=",
               "left": {
                "type": "Identifier",
                "name": "result"
               },
               "right": {
                "type": "NumberLiteral",
                "number": "1",
                "subdenomination": null
               }
              }
             },
             "falseBody": null
            },
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "Identifier",
              "name": "result"
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "powu",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes16",
          "stateMutability": null
         },
         "name": "x",
         "identifier": {
          "type": "Identifier",
          "name": "x"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "y",
         "identifier": {
          "type": "Identifier",
          "name": "y"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes16",
          "stateMutability": null
         },
         "name": "result",
         "identifier": {
          "type": "Identifier",
          "name": "result"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes16",
             "stateMutability": null
            },
            "name": "uUint",
            "identifier": {
             "type": "Identifier",
             "name": "uUint"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "fromUInt"
           },
           "arguments": [
            {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "result"
           },
           "right": {
            "type": "Conditional",
            "condition": {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "BinaryOperation",
              "operator": "&",
              "left": {
               "type": "Identifier",
               "name": "y"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              }
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            "trueExpression": {
             "type": "Identifier",
             "name": "x"
            },
            "falseExpression": {
             "type": "Identifier",
             "name": "uUint"
            }
           }
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "BinaryOperation",
            "operator": ">>=",
            "left": {
             "type": "Identifier",
             "name": "y"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "y"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "BinaryOperation",
            "operator": ">>=",
            "left": {
             "type": "Identifier",
             "name": "y"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "x"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "mul"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "x"
                },
                {
                 "type": "Identifier",
                 "name": "x"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": ">",
              "left": {
               "type": "BinaryOperation",
               "operator": "&",
               "left": {
                "type": "Identifier",
                "name": "y"
               },
               "right": {
                "type": "NumberLiteral",
                "number": "1",
                "subdenomination": null
               }
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "result"
                 },
                 "right": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "Identifier",
                   "name": "mul"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "result"
                   },
                   {
                    "type": "Identifier",
                    "name": "x"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                }
               }
              ]
             },
             "falseBody": null
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      }
     ],
     "kind": "library"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-08-basin/src/interfaces/IWellFunction.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.8.20"
    },
    {
     "type": "ContractDefinition",
     "name": "IWellFunction",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "CustomErrorDefinition",
       "name": "InvalidJArgument",
       "parameters": []
      },
      {
       "type": "FunctionDefinition",
       "name": "calcReserve",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "reserves",
         "identifier": {
          "type": "Identifier",
          "name": "reserves"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "j",
         "identifier": {
          "type": "Identifier",
          "name": "j"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpTokenSupply",
         "identifier": {
          "type": "Identifier",
          "name": "lpTokenSupply"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "reserve",
         "identifier": {
          "type": "Identifier",
          "name": "reserve"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "calcLpTokenSupply",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "reserves",
         "identifier": {
          "type": "Identifier",
          "name": "reserves"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpTokenSupply",
         "identifier": {
          "type": "Identifier",
          "name": "lpTokenSupply"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "calcLPTokenUnderlying",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpTokenAmount",
         "identifier": {
          "type": "Identifier",
          "name": "lpTokenAmount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "reserves",
         "identifier": {
          "type": "Identifier",
          "name": "reserves"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpTokenSupply",
         "identifier": {
          "type": "Identifier",
          "name": "lpTokenSupply"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "underlyingAmounts",
         "identifier": {
          "type": "Identifier",
          "name": "underlyingAmounts"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "name",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "symbol",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-08-basin/src/interfaces/IWellErrors.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.8.20"
    },
    {
     "type": "ImportDirective",
     "path": "oz/token/ERC20/IERC20.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "oz/token/ERC20/IERC20.sol",
      "parts": [
       "oz/token/ERC20/IERC20.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IERC20",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IERC20"
       },
       null
      ]
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "IWellErrors",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "CustomErrorDefinition",
       "name": "SlippageOut",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountOut",
         "identifier": {
          "type": "Identifier",
          "name": "amountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "minAmountOut",
         "identifier": {
          "type": "Identifier",
          "name": "minAmountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "SlippageIn",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountIn",
         "identifier": {
          "type": "Identifier",
          "name": "amountIn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "maxAmountIn",
         "identifier": {
          "type": "Identifier",
          "name": "maxAmountIn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "InvalidTokens",
       "parameters": []
      },
      {
       "type": "CustomErrorDefinition",
       "name": "InvalidReserves",
       "parameters": []
      },
      {
       "type": "CustomErrorDefinition",
       "name": "DuplicateTokens",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "token",
         "identifier": {
          "type": "Identifier",
          "name": "token"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "Expired",
       "parameters": []
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-08-basin/src/interfaces/IWell.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.8.20"
    },
    {
     "type": "ImportDirective",
     "path": "oz/token/ERC20/IERC20.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "oz/token/ERC20/IERC20.sol",
      "parts": [
       "oz/token/ERC20/IERC20.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IERC20",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IERC20"
       },
       null
      ]
     ]
    },
    {
     "type": "StructDefinition",
     "name": "Call",
     "members": [
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "address",
        "stateMutability": null
       },
       "name": "target",
       "identifier": {
        "type": "Identifier",
        "name": "target"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "bytes",
        "stateMutability": null
       },
       "name": "data",
       "identifier": {
        "type": "Identifier",
        "name": "data"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      }
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "IWell",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "EventDefinition",
       "name": "Swap",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "fromToken",
         "identifier": {
          "type": "Identifier",
          "name": "fromToken"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "toToken",
         "identifier": {
          "type": "Identifier",
          "name": "toToken"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountIn",
         "identifier": {
          "type": "Identifier",
          "name": "amountIn"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountOut",
         "identifier": {
          "type": "Identifier",
          "name": "amountOut"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "recipient",
         "identifier": {
          "type": "Identifier",
          "name": "recipient"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "AddLiquidity",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "tokenAmountsIn",
         "identifier": {
          "type": "Identifier",
          "name": "tokenAmountsIn"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpAmountOut",
         "identifier": {
          "type": "Identifier",
          "name": "lpAmountOut"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "recipient",
         "identifier": {
          "type": "Identifier",
          "name": "recipient"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "RemoveLiquidity",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpAmountIn",
         "identifier": {
          "type": "Identifier",
          "name": "lpAmountIn"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "tokenAmountsOut",
         "identifier": {
          "type": "Identifier",
          "name": "tokenAmountsOut"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "recipient",
         "identifier": {
          "type": "Identifier",
          "name": "recipient"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "RemoveLiquidityOneToken",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpAmountIn",
         "identifier": {
          "type": "Identifier",
          "name": "lpAmountIn"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "tokenOut",
         "identifier": {
          "type": "Identifier",
          "name": "tokenOut"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "tokenAmountOut",
         "identifier": {
          "type": "Identifier",
          "name": "tokenAmountOut"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "recipient",
         "identifier": {
          "type": "Identifier",
          "name": "recipient"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "Shift",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "reserves",
         "identifier": {
          "type": "Identifier",
          "name": "reserves"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "toToken",
         "identifier": {
          "type": "Identifier",
          "name": "toToken"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountOut",
         "identifier": {
          "type": "Identifier",
          "name": "amountOut"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "recipient",
         "identifier": {
          "type": "Identifier",
          "name": "recipient"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "Sync",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "reserves",
         "identifier": {
          "type": "Identifier",
          "name": "reserves"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpAmountOut",
         "identifier": {
          "type": "Identifier",
          "name": "lpAmountOut"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "recipient",
         "identifier": {
          "type": "Identifier",
          "name": "recipient"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "FunctionDefinition",
       "name": "tokens",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "IERC20"
          },
          "length": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "wellFunction",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Call"
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "pumps",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "Call"
          },
          "length": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "wellData",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "aquifer",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "well",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "IERC20"
          },
          "length": null
         },
         "name": "_tokens",
         "identifier": {
          "type": "Identifier",
          "name": "_tokens"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Call"
         },
         "name": "_wellFunction",
         "identifier": {
          "type": "Identifier",
          "name": "_wellFunction"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "Call"
          },
          "length": null
         },
         "name": "_pumps",
         "identifier": {
          "type": "Identifier",
          "name": "_pumps"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_wellData",
         "identifier": {
          "type": "Identifier",
          "name": "_wellData"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_aquifer",
         "identifier": {
          "type": "Identifier",
          "name": "_aquifer"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "swapFrom",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "fromToken",
         "identifier": {
          "type": "Identifier",
          "name": "fromToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "toToken",
         "identifier": {
          "type": "Identifier",
          "name": "toToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountIn",
         "identifier": {
          "type": "Identifier",
          "name": "amountIn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "minAmountOut",
         "identifier": {
          "type": "Identifier",
          "name": "minAmountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "recipient",
         "identifier": {
          "type": "Identifier",
          "name": "recipient"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "deadline",
         "identifier": {
          "type": "Identifier",
          "name": "deadline"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountOut",
         "identifier": {
          "type": "Identifier",
          "name": "amountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "swapFromFeeOnTransfer",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "fromToken",
         "identifier": {
          "type": "Identifier",
          "name": "fromToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "toToken",
         "identifier": {
          "type": "Identifier",
          "name": "toToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountIn",
         "identifier": {
          "type": "Identifier",
          "name": "amountIn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "minAmountOut",
         "identifier": {
          "type": "Identifier",
          "name": "minAmountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "recipient",
         "identifier": {
          "type": "Identifier",
          "name": "recipient"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "deadline",
         "identifier": {
          "type": "Identifier",
          "name": "deadline"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountOut",
         "identifier": {
          "type": "Identifier",
          "name": "amountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getSwapOut",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "fromToken",
         "identifier": {
          "type": "Identifier",
          "name": "fromToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "toToken",
         "identifier": {
          "type": "Identifier",
          "name": "toToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountIn",
         "identifier": {
          "type": "Identifier",
          "name": "amountIn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountOut",
         "identifier": {
          "type": "Identifier",
          "name": "amountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "swapTo",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "fromToken",
         "identifier": {
          "type": "Identifier",
          "name": "fromToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "toToken",
         "identifier": {
          "type": "Identifier",
          "name": "toToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "maxAmountIn",
         "identifier": {
          "type": "Identifier",
          "name": "maxAmountIn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountOut",
         "identifier": {
          "type": "Identifier",
          "name": "amountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "recipient",
         "identifier": {
          "type": "Identifier",
          "name": "recipient"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "deadline",
         "identifier": {
          "type": "Identifier",
          "name": "deadline"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountIn",
         "identifier": {
          "type": "Identifier",
          "name": "amountIn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getSwapIn",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "fromToken",
         "identifier": {
          "type": "Identifier",
          "name": "fromToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "toToken",
         "identifier": {
          "type": "Identifier",
          "name": "toToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountOut",
         "identifier": {
          "type": "Identifier",
          "name": "amountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountIn",
         "identifier": {
          "type": "Identifier",
          "name": "amountIn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "shift",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "tokenOut",
         "identifier": {
          "type": "Identifier",
          "name": "tokenOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "minAmountOut",
         "identifier": {
          "type": "Identifier",
          "name": "minAmountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "recipient",
         "identifier": {
          "type": "Identifier",
          "name": "recipient"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountOut",
         "identifier": {
          "type": "Identifier",
          "name": "amountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getShiftOut",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "tokenOut",
         "identifier": {
          "type": "Identifier",
          "name": "tokenOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountOut",
         "identifier": {
          "type": "Identifier",
          "name": "amountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "addLiquidity",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "tokenAmountsIn",
         "identifier": {
          "type": "Identifier",
          "name": "tokenAmountsIn"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "minLpAmountOut",
         "identifier": {
          "type": "Identifier",
          "name": "minLpAmountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "recipient",
         "identifier": {
          "type": "Identifier",
          "name": "recipient"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "deadline",
         "identifier": {
          "type": "Identifier",
          "name": "deadline"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpAmountOut",
         "identifier": {
          "type": "Identifier",
          "name": "lpAmountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "addLiquidityFeeOnTransfer",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "tokenAmountsIn",
         "identifier": {
          "type": "Identifier",
          "name": "tokenAmountsIn"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "minLpAmountOut",
         "identifier": {
          "type": "Identifier",
          "name": "minLpAmountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "recipient",
         "identifier": {
          "type": "Identifier",
          "name": "recipient"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "deadline",
         "identifier": {
          "type": "Identifier",
          "name": "deadline"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpAmountOut",
         "identifier": {
          "type": "Identifier",
          "name": "lpAmountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getAddLiquidityOut",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "tokenAmountsIn",
         "identifier": {
          "type": "Identifier",
          "name": "tokenAmountsIn"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpAmountOut",
         "identifier": {
          "type": "Identifier",
          "name": "lpAmountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "removeLiquidity",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpAmountIn",
         "identifier": {
          "type": "Identifier",
          "name": "lpAmountIn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "minTokenAmountsOut",
         "identifier": {
          "type": "Identifier",
          "name": "minTokenAmountsOut"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "recipient",
         "identifier": {
          "type": "Identifier",
          "name": "recipient"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "deadline",
         "identifier": {
          "type": "Identifier",
          "name": "deadline"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "tokenAmountsOut",
         "identifier": {
          "type": "Identifier",
          "name": "tokenAmountsOut"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getRemoveLiquidityOut",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpAmountIn",
         "identifier": {
          "type": "Identifier",
          "name": "lpAmountIn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "tokenAmountsOut",
         "identifier": {
          "type": "Identifier",
          "name": "tokenAmountsOut"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "removeLiquidityOneToken",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpAmountIn",
         "identifier": {
          "type": "Identifier",
          "name": "lpAmountIn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "tokenOut",
         "identifier": {
          "type": "Identifier",
          "name": "tokenOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "minTokenAmountOut",
         "identifier": {
          "type": "Identifier",
          "name": "minTokenAmountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "recipient",
         "identifier": {
          "type": "Identifier",
          "name": "recipient"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "deadline",
         "identifier": {
          "type": "Identifier",
          "name": "deadline"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "tokenAmountOut",
         "identifier": {
          "type": "Identifier",
          "name": "tokenAmountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getRemoveLiquidityOneTokenOut",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpAmountIn",
         "identifier": {
          "type": "Identifier",
          "name": "lpAmountIn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "tokenOut",
         "identifier": {
          "type": "Identifier",
          "name": "tokenOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "tokenAmountOut",
         "identifier": {
          "type": "Identifier",
          "name": "tokenAmountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "removeLiquidityImbalanced",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "maxLpAmountIn",
         "identifier": {
          "type": "Identifier",
          "name": "maxLpAmountIn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "tokenAmountsOut",
         "identifier": {
          "type": "Identifier",
          "name": "tokenAmountsOut"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "recipient",
         "identifier": {
          "type": "Identifier",
          "name": "recipient"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "deadline",
         "identifier": {
          "type": "Identifier",
          "name": "deadline"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpAmountIn",
         "identifier": {
          "type": "Identifier",
          "name": "lpAmountIn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getRemoveLiquidityImbalancedIn",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "tokenAmountsOut",
         "identifier": {
          "type": "Identifier",
          "name": "tokenAmountsOut"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpAmountIn",
         "identifier": {
          "type": "Identifier",
          "name": "lpAmountIn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "sync",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "recipient",
         "identifier": {
          "type": "Identifier",
          "name": "recipient"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "minLpAmountOut",
         "identifier": {
          "type": "Identifier",
          "name": "minLpAmountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpAmountOut",
         "identifier": {
          "type": "Identifier",
          "name": "lpAmountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getSyncOut",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpAmountOut",
         "identifier": {
          "type": "Identifier",
          "name": "lpAmountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "skim",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "recipient",
         "identifier": {
          "type": "Identifier",
          "name": "recipient"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "skimAmounts",
         "identifier": {
          "type": "Identifier",
          "name": "skimAmounts"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getReserves",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "reserves",
         "identifier": {
          "type": "Identifier",
          "name": "reserves"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "isInitialized",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-08-basin/src/interfaces/IMultiFlowPumpWellFunction.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.8.20"
    },
    {
     "type": "ImportDirective",
     "path": "src/interfaces/IWellFunction.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "src/interfaces/IWellFunction.sol",
      "parts": [
       "src/interfaces/IWellFunction.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IWellFunction",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IWellFunction"
       },
       null
      ]
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "IMultiFlowPumpWellFunction",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "IWellFunction"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "calcReserveAtRatioSwap",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "reserves",
         "identifier": {
          "type": "Identifier",
          "name": "reserves"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "j",
         "identifier": {
          "type": "Identifier",
          "name": "j"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "ratios",
         "identifier": {
          "type": "Identifier",
          "name": "ratios"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "reserve",
         "identifier": {
          "type": "Identifier",
          "name": "reserve"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "calcRate",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "reserves",
         "identifier": {
          "type": "Identifier",
          "name": "reserves"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "i",
         "identifier": {
          "type": "Identifier",
          "name": "i"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "j",
         "identifier": {
          "type": "Identifier",
          "name": "j"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "rate",
         "identifier": {
          "type": "Identifier",
          "name": "rate"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-08-basin/src/interfaces/ILookupTable.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.8.17"
    },
    {
     "type": "ContractDefinition",
     "name": "ILookupTable",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "StructDefinition",
       "name": "PriceData",
       "members": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "highPrice",
         "identifier": {
          "type": "Identifier",
          "name": "highPrice"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "highPriceI",
         "identifier": {
          "type": "Identifier",
          "name": "highPriceI"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "highPriceJ",
         "identifier": {
          "type": "Identifier",
          "name": "highPriceJ"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lowPrice",
         "identifier": {
          "type": "Identifier",
          "name": "lowPrice"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lowPriceI",
         "identifier": {
          "type": "Identifier",
          "name": "lowPriceI"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lowPriceJ",
         "identifier": {
          "type": "Identifier",
          "name": "lowPriceJ"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "precision",
         "identifier": {
          "type": "Identifier",
          "name": "precision"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "FunctionDefinition",
       "name": "getRatiosFromPriceLiquidity",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "PriceData"
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getRatiosFromPriceSwap",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "PriceData"
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getAParameter",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-08-basin/src/interfaces/IBeanstalkWellFunction.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.8.20"
    },
    {
     "type": "ImportDirective",
     "path": "src/interfaces/IMultiFlowPumpWellFunction.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "src/interfaces/IMultiFlowPumpWellFunction.sol",
      "parts": [
       "src/interfaces/IMultiFlowPumpWellFunction.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IMultiFlowPumpWellFunction",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IMultiFlowPumpWellFunction"
       },
       null
      ]
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "IBeanstalkWellFunction",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "IMultiFlowPumpWellFunction"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "calcReserveAtRatioLiquidity",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "reserves",
         "identifier": {
          "type": "Identifier",
          "name": "reserves"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "j",
         "identifier": {
          "type": "Identifier",
          "name": "j"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "ratios",
         "identifier": {
          "type": "Identifier",
          "name": "ratios"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "reserve",
         "identifier": {
          "type": "Identifier",
          "name": "reserve"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-08-basin/src/interfaces/IAquifer.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.8.20"
    },
    {
     "type": "ImportDirective",
     "path": "oz/token/ERC20/utils/SafeERC20.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "oz/token/ERC20/utils/SafeERC20.sol",
      "parts": [
       "oz/token/ERC20/utils/SafeERC20.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IERC20",
       null
      ],
      [
       "SafeERC20",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IERC20"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "SafeERC20"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "src/interfaces/IWell.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "src/interfaces/IWell.sol",
      "parts": [
       "src/interfaces/IWell.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IWell",
       null
      ],
      [
       "Call",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IWell"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "Call"
       },
       null
      ]
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "IAquifer",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "CustomErrorDefinition",
       "name": "InitFailed",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "reason",
         "identifier": {
          "type": "Identifier",
          "name": "reason"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "InvalidConfig",
       "parameters": []
      },
      {
       "type": "CustomErrorDefinition",
       "name": "WellNotInitialized",
       "parameters": []
      },
      {
       "type": "CustomErrorDefinition",
       "name": "InvalidSalt",
       "parameters": []
      },
      {
       "type": "EventDefinition",
       "name": "BoreWell",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "well",
         "identifier": {
          "type": "Identifier",
          "name": "well"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "implementation",
         "identifier": {
          "type": "Identifier",
          "name": "implementation"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "IERC20"
          },
          "length": null
         },
         "name": "tokens",
         "identifier": {
          "type": "Identifier",
          "name": "tokens"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Call"
         },
         "name": "wellFunction",
         "identifier": {
          "type": "Identifier",
          "name": "wellFunction"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "Call"
          },
          "length": null
         },
         "name": "pumps",
         "identifier": {
          "type": "Identifier",
          "name": "pumps"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "wellData",
         "identifier": {
          "type": "Identifier",
          "name": "wellData"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "FunctionDefinition",
       "name": "boreWell",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "implementation",
         "identifier": {
          "type": "Identifier",
          "name": "implementation"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "immutableData",
         "identifier": {
          "type": "Identifier",
          "name": "immutableData"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "initFunctionCall",
         "identifier": {
          "type": "Identifier",
          "name": "initFunctionCall"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "salt",
         "identifier": {
          "type": "Identifier",
          "name": "salt"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "wellAddress",
         "identifier": {
          "type": "Identifier",
          "name": "wellAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "wellImplementation",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "well",
         "identifier": {
          "type": "Identifier",
          "name": "well"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "implementation",
         "identifier": {
          "type": "Identifier",
          "name": "implementation"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-08-basin/src/interfaces/pumps/IPump.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.8.20"
    },
    {
     "type": "ContractDefinition",
     "name": "IPump",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "update",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "reserves",
         "identifier": {
          "type": "Identifier",
          "name": "reserves"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-08-basin/src/interfaces/pumps/IMultiFlowPumpErrors.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.8.20"
    },
    {
     "type": "ContractDefinition",
     "name": "IMultiFlowPumpErrors",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "CustomErrorDefinition",
       "name": "NotInitialized",
       "parameters": []
      },
      {
       "type": "CustomErrorDefinition",
       "name": "NoTimePassed",
       "parameters": []
      },
      {
       "type": "CustomErrorDefinition",
       "name": "TooManyTokens",
       "parameters": []
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-08-basin/src/interfaces/pumps/IInstantaneousPump.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.8.20"
    },
    {
     "type": "ContractDefinition",
     "name": "IInstantaneousPump",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "readInstantaneousReserves",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "well",
         "identifier": {
          "type": "Identifier",
          "name": "well"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "reserves",
         "identifier": {
          "type": "Identifier",
          "name": "reserves"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-08-basin/src/interfaces/pumps/ICumulativePump.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.8.20"
    },
    {
     "type": "ContractDefinition",
     "name": "ICumulativePump",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "readCumulativeReserves",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "well",
         "identifier": {
          "type": "Identifier",
          "name": "well"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "cumulativeReserves",
         "identifier": {
          "type": "Identifier",
          "name": "cumulativeReserves"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "readTwaReserves",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "well",
         "identifier": {
          "type": "Identifier",
          "name": "well"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "startCumulativeReserves",
         "identifier": {
          "type": "Identifier",
          "name": "startCumulativeReserves"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "startTimestamp",
         "identifier": {
          "type": "Identifier",
          "name": "startTimestamp"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "twaReserves",
         "identifier": {
          "type": "Identifier",
          "name": "twaReserves"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "cumulativeReserves",
         "identifier": {
          "type": "Identifier",
          "name": "cumulativeReserves"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-08-basin/src/functions/Stable2.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.8.20"
    },
    {
     "type": "ImportDirective",
     "path": "src/interfaces/IBeanstalkWellFunction.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "src/interfaces/IBeanstalkWellFunction.sol",
      "parts": [
       "src/interfaces/IBeanstalkWellFunction.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IBeanstalkWellFunction",
       null
      ],
      [
       "IMultiFlowPumpWellFunction",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IBeanstalkWellFunction"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "IMultiFlowPumpWellFunction"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "src/interfaces/ILookupTable.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "src/interfaces/ILookupTable.sol",
      "parts": [
       "src/interfaces/ILookupTable.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "ILookupTable",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "ILookupTable"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "src/functions/ProportionalLPToken2.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "src/functions/ProportionalLPToken2.sol",
      "parts": [
       "src/functions/ProportionalLPToken2.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "ProportionalLPToken2",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "ProportionalLPToken2"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "forge-std/interfaces/IERC20.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "forge-std/interfaces/IERC20.sol",
      "parts": [
       "forge-std/interfaces/IERC20.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IERC20",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IERC20"
       },
       null
      ]
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "Stable2",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ProportionalLPToken2"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "IBeanstalkWellFunction"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "StructDefinition",
       "name": "PriceData",
       "members": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "targetPrice",
         "identifier": {
          "type": "Identifier",
          "name": "targetPrice"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "currentPrice",
         "identifier": {
          "type": "Identifier",
          "name": "currentPrice"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "newPrice",
         "identifier": {
          "type": "Identifier",
          "name": "newPrice"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "maxStepSize",
         "identifier": {
          "type": "Identifier",
          "name": "maxStepSize"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "ILookupTable.PriceData"
         },
         "name": "lutData",
         "identifier": {
          "type": "Identifier",
          "name": "lutData"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "N",
         "identifier": {
          "type": "Identifier",
          "name": "N"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "2",
          "subdenomination": null
         },
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "2",
        "subdenomination": null
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "A_PRECISION",
         "identifier": {
          "type": "Identifier",
          "name": "A_PRECISION"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "100",
          "subdenomination": null
         },
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "100",
        "subdenomination": null
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "PRICE_PRECISION",
         "identifier": {
          "type": "Identifier",
          "name": "PRICE_PRECISION"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "1e6",
          "subdenomination": null
         },
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "1e6",
        "subdenomination": null
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "PRICE_THRESHOLD",
         "identifier": {
          "type": "Identifier",
          "name": "PRICE_THRESHOLD"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "100",
          "subdenomination": null
         },
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "100",
        "subdenomination": null
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "lookupTable",
         "identifier": {
          "type": "Identifier",
          "name": "lookupTable"
         },
         "expression": null,
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": true,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "a",
         "identifier": {
          "type": "Identifier",
          "name": "a"
         },
         "expression": null,
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": true,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "CustomErrorDefinition",
       "name": "InvalidTokenDecimals",
       "parameters": []
      },
      {
       "type": "CustomErrorDefinition",
       "name": "InvalidLUT",
       "parameters": []
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "lut",
         "identifier": {
          "type": "Identifier",
          "name": "lut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "lut"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "address"
            },
            "arguments": [
             {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "RevertStatement",
           "revertCall": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "InvalidLUT"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           }
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "lookupTable"
           },
           "right": {
            "type": "Identifier",
            "name": "lut"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "a"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "ILookupTable"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "lut"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "memberName": "getAParameter"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "default",
       "modifiers": [],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "calcLpTokenSupply",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "reserves",
         "identifier": {
          "type": "Identifier",
          "name": "reserves"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpTokenSupply",
         "identifier": {
          "type": "Identifier",
          "name": "lpTokenSupply"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "&&",
           "left": {
            "type": "BinaryOperation",
            "operator": "==",
            "left": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "reserves"
             },
             "index": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            "right": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "==",
            "left": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "reserves"
             },
             "index": {
              "type": "NumberLiteral",
              "number": "1",
              "subdenomination": null
             }
            },
            "right": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           }
          },
          "trueBody": {
           "type": "ReturnStatement",
           "expression": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "decimals",
            "identifier": {
             "type": "Identifier",
             "name": "decimals"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "decodeWellData"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "data"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "scaledReserves",
            "identifier": {
             "type": "Identifier",
             "name": "scaledReserves"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getScaledReserves"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "reserves"
            },
            {
             "type": "Identifier",
             "name": "decimals"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "Ann",
            "identifier": {
             "type": "Identifier",
             "name": "Ann"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "BinaryOperation",
           "operator": "*",
           "left": {
            "type": "BinaryOperation",
            "operator": "*",
            "left": {
             "type": "Identifier",
             "name": "a"
            },
            "right": {
             "type": "Identifier",
             "name": "N"
            }
           },
           "right": {
            "type": "Identifier",
            "name": "N"
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "sumReserves",
            "identifier": {
             "type": "Identifier",
             "name": "sumReserves"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "BinaryOperation",
           "operator": "+",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "scaledReserves"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           },
           "right": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "scaledReserves"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "lpTokenSupply"
           },
           "right": {
            "type": "Identifier",
            "name": "sumReserves"
           }
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "255",
            "subdenomination": null
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "dP",
               "identifier": {
                "type": "Identifier",
                "name": "dP"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "Identifier",
              "name": "lpTokenSupply"
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "dP"
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "/",
               "left": {
                "type": "BinaryOperation",
                "operator": "*",
                "left": {
                 "type": "Identifier",
                 "name": "dP"
                },
                "right": {
                 "type": "Identifier",
                 "name": "lpTokenSupply"
                }
               },
               "right": {
                "type": "TupleExpression",
                "components": [
                 {
                  "type": "BinaryOperation",
                  "operator": "*",
                  "left": {
                   "type": "IndexAccess",
                   "base": {
                    "type": "Identifier",
                    "name": "scaledReserves"
                   },
                   "index": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "right": {
                   "type": "Identifier",
                   "name": "N"
                  }
                 }
                ],
                "isArray": false
               }
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "dP"
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "/",
               "left": {
                "type": "BinaryOperation",
                "operator": "*",
                "left": {
                 "type": "Identifier",
                 "name": "dP"
                },
                "right": {
                 "type": "Identifier",
                 "name": "lpTokenSupply"
                }
               },
               "right": {
                "type": "TupleExpression",
                "components": [
                 {
                  "type": "BinaryOperation",
                  "operator": "*",
                  "left": {
                   "type": "IndexAccess",
                   "base": {
                    "type": "Identifier",
                    "name": "scaledReserves"
                   },
                   "index": {
                    "type": "NumberLiteral",
                    "number": "1",
                    "subdenomination": null
                   }
                  },
                  "right": {
                   "type": "Identifier",
                   "name": "N"
                  }
                 }
                ],
                "isArray": false
               }
              }
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "prevReserves",
               "identifier": {
                "type": "Identifier",
                "name": "prevReserves"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "Identifier",
              "name": "lpTokenSupply"
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "lpTokenSupply"
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "/",
               "left": {
                "type": "BinaryOperation",
                "operator": "*",
                "left": {
                 "type": "TupleExpression",
                 "components": [
                  {
                   "type": "BinaryOperation",
                   "operator": "+",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "/",
                    "left": {
                     "type": "BinaryOperation",
                     "operator": "*",
                     "left": {
                      "type": "Identifier",
                      "name": "Ann"
                     },
                     "right": {
                      "type": "Identifier",
                      "name": "sumReserves"
                     }
                    },
                    "right": {
                     "type": "Identifier",
                     "name": "A_PRECISION"
                    }
                   },
                   "right": {
                    "type": "TupleExpression",
                    "components": [
                     {
                      "type": "BinaryOperation",
                      "operator": "*",
                      "left": {
                       "type": "Identifier",
                       "name": "dP"
                      },
                      "right": {
                       "type": "Identifier",
                       "name": "N"
                      }
                     }
                    ],
                    "isArray": false
                   }
                  }
                 ],
                 "isArray": false
                },
                "right": {
                 "type": "Identifier",
                 "name": "lpTokenSupply"
                }
               },
               "right": {
                "type": "TupleExpression",
                "components": [
                 {
                  "type": "BinaryOperation",
                  "operator": "+",
                  "left": {
                   "type": "TupleExpression",
                   "components": [
                    {
                     "type": "BinaryOperation",
                     "operator": "/",
                     "left": {
                      "type": "BinaryOperation",
                      "operator": "*",
                      "left": {
                       "type": "TupleExpression",
                       "components": [
                        {
                         "type": "BinaryOperation",
                         "operator": "-",
                         "left": {
                          "type": "Identifier",
                          "name": "Ann"
                         },
                         "right": {
                          "type": "Identifier",
                          "name": "A_PRECISION"
                         }
                        }
                       ],
                       "isArray": false
                      },
                      "right": {
                       "type": "Identifier",
                       "name": "lpTokenSupply"
                      }
                     },
                     "right": {
                      "type": "Identifier",
                      "name": "A_PRECISION"
                     }
                    }
                   ],
                   "isArray": false
                  },
                  "right": {
                   "type": "TupleExpression",
                   "components": [
                    {
                     "type": "BinaryOperation",
                     "operator": "*",
                     "left": {
                      "type": "TupleExpression",
                      "components": [
                       {
                        "type": "BinaryOperation",
                        "operator": "+",
                        "left": {
                         "type": "Identifier",
                         "name": "N"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "1",
                         "subdenomination": null
                        }
                       }
                      ],
                      "isArray": false
                     },
                     "right": {
                      "type": "Identifier",
                      "name": "dP"
                     }
                    }
                   ],
                   "isArray": false
                  }
                 }
                ],
                "isArray": false
               }
              }
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": ">",
              "left": {
               "type": "Identifier",
               "name": "lpTokenSupply"
              },
              "right": {
               "type": "Identifier",
               "name": "prevReserves"
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "<=",
                 "left": {
                  "type": "BinaryOperation",
                  "operator": "-",
                  "left": {
                   "type": "Identifier",
                   "name": "lpTokenSupply"
                  },
                  "right": {
                   "type": "Identifier",
                   "name": "prevReserves"
                  }
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "1",
                  "subdenomination": null
                 }
                },
                "trueBody": {
                 "type": "ReturnStatement",
                 "expression": {
                  "type": "Identifier",
                  "name": "lpTokenSupply"
                 }
                },
                "falseBody": null
               }
              ]
             },
             "falseBody": {
              "type": "Block",
              "statements": [
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "<=",
                 "left": {
                  "type": "BinaryOperation",
                  "operator": "-",
                  "left": {
                   "type": "Identifier",
                   "name": "prevReserves"
                  },
                  "right": {
                   "type": "Identifier",
                   "name": "lpTokenSupply"
                  }
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "1",
                  "subdenomination": null
                 }
                },
                "trueBody": {
                 "type": "ReturnStatement",
                 "expression": {
                  "type": "Identifier",
                  "name": "lpTokenSupply"
                 }
                },
                "falseBody": null
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "revert"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "Non convergence: calcLpTokenSupply",
             "parts": [
              "Non convergence: calcLpTokenSupply"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "calcReserve",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "reserves",
         "identifier": {
          "type": "Identifier",
          "name": "reserves"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "j",
         "identifier": {
          "type": "Identifier",
          "name": "j"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpTokenSupply",
         "identifier": {
          "type": "Identifier",
          "name": "lpTokenSupply"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "reserve",
         "identifier": {
          "type": "Identifier",
          "name": "reserve"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "decimals",
            "identifier": {
             "type": "Identifier",
             "name": "decimals"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "decodeWellData"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "data"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "scaledReserves",
            "identifier": {
             "type": "Identifier",
             "name": "scaledReserves"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getScaledReserves"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "reserves"
            },
            {
             "type": "Identifier",
             "name": "decimals"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "name": "c",
            "identifier": {
             "type": "Identifier",
             "name": "c"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "b",
            "identifier": {
             "type": "Identifier",
             "name": "b"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getBandC"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "*",
             "left": {
              "type": "BinaryOperation",
              "operator": "*",
              "left": {
               "type": "Identifier",
               "name": "a"
              },
              "right": {
               "type": "Identifier",
               "name": "N"
              }
             },
             "right": {
              "type": "Identifier",
              "name": "N"
             }
            },
            {
             "type": "Identifier",
             "name": "lpTokenSupply"
            },
            {
             "type": "Conditional",
             "condition": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "Identifier",
               "name": "j"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "trueExpression": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "scaledReserves"
              },
              "index": {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              }
             },
             "falseExpression": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "scaledReserves"
              },
              "index": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "reserve"
           },
           "right": {
            "type": "Identifier",
            "name": "lpTokenSupply"
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "prevReserve",
            "identifier": {
             "type": "Identifier",
             "name": "prevReserve"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": null
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "255",
            "subdenomination": null
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": true
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "prevReserve"
              },
              "right": {
               "type": "Identifier",
               "name": "reserve"
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "reserve"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "_calcReserve"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "reserve"
                },
                {
                 "type": "Identifier",
                 "name": "b"
                },
                {
                 "type": "Identifier",
                 "name": "c"
                },
                {
                 "type": "Identifier",
                 "name": "lpTokenSupply"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": ">",
              "left": {
               "type": "Identifier",
               "name": "reserve"
              },
              "right": {
               "type": "Identifier",
               "name": "prevReserve"
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "<=",
                 "left": {
                  "type": "BinaryOperation",
                  "operator": "-",
                  "left": {
                   "type": "Identifier",
                   "name": "reserve"
                  },
                  "right": {
                   "type": "Identifier",
                   "name": "prevReserve"
                  }
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "1",
                  "subdenomination": null
                 }
                },
                "trueBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "ReturnStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "/",
                    "left": {
                     "type": "Identifier",
                     "name": "reserve"
                    },
                    "right": {
                     "type": "TupleExpression",
                     "components": [
                      {
                       "type": "BinaryOperation",
                       "operator": "**",
                       "left": {
                        "type": "NumberLiteral",
                        "number": "10",
                        "subdenomination": null
                       },
                       "right": {
                        "type": "TupleExpression",
                        "components": [
                         {
                          "type": "BinaryOperation",
                          "operator": "-",
                          "left": {
                           "type": "NumberLiteral",
                           "number": "18",
                           "subdenomination": null
                          },
                          "right": {
                           "type": "IndexAccess",
                           "base": {
                            "type": "Identifier",
                            "name": "decimals"
                           },
                           "index": {
                            "type": "Identifier",
                            "name": "j"
                           }
                          }
                         }
                        ],
                        "isArray": false
                       }
                      }
                     ],
                     "isArray": false
                    }
                   }
                  }
                 ]
                },
                "falseBody": null
               }
              ]
             },
             "falseBody": {
              "type": "Block",
              "statements": [
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "<=",
                 "left": {
                  "type": "BinaryOperation",
                  "operator": "-",
                  "left": {
                   "type": "Identifier",
                   "name": "prevReserve"
                  },
                  "right": {
                   "type": "Identifier",
                   "name": "reserve"
                  }
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "1",
                  "subdenomination": null
                 }
                },
                "trueBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "ReturnStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "/",
                    "left": {
                     "type": "Identifier",
                     "name": "reserve"
                    },
                    "right": {
                     "type": "TupleExpression",
                     "components": [
                      {
                       "type": "BinaryOperation",
                       "operator": "**",
                       "left": {
                        "type": "NumberLiteral",
                        "number": "10",
                        "subdenomination": null
                       },
                       "right": {
                        "type": "TupleExpression",
                        "components": [
                         {
                          "type": "BinaryOperation",
                          "operator": "-",
                          "left": {
                           "type": "NumberLiteral",
                           "number": "18",
                           "subdenomination": null
                          },
                          "right": {
                           "type": "IndexAccess",
                           "base": {
                            "type": "Identifier",
                            "name": "decimals"
                           },
                           "index": {
                            "type": "Identifier",
                            "name": "j"
                           }
                          }
                         }
                        ],
                        "isArray": false
                       }
                      }
                     ],
                     "isArray": false
                    }
                   }
                  }
                 ]
                },
                "falseBody": null
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "revert"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "Non convergence: calcReserve",
             "parts": [
              "Non convergence: calcReserve"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "calcRate",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "reserves",
         "identifier": {
          "type": "Identifier",
          "name": "reserves"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "i",
         "identifier": {
          "type": "Identifier",
          "name": "i"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "j",
         "identifier": {
          "type": "Identifier",
          "name": "j"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "rate",
         "identifier": {
          "type": "Identifier",
          "name": "rate"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "decimals",
            "identifier": {
             "type": "Identifier",
             "name": "decimals"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "decodeWellData"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "data"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "scaledReserves",
            "identifier": {
             "type": "Identifier",
             "name": "scaledReserves"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getScaledReserves"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "reserves"
            },
            {
             "type": "Identifier",
             "name": "decimals"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "lpTokenSupply",
            "identifier": {
             "type": "Identifier",
             "name": "lpTokenSupply"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "calcLpTokenSupply"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "scaledReserves"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "abi"
              },
              "memberName": "encode"
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "18",
               "subdenomination": null
              },
              {
               "type": "NumberLiteral",
               "number": "18",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "rate"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_calcRate"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "scaledReserves"
             },
             {
              "type": "Identifier",
              "name": "i"
             },
             {
              "type": "Identifier",
              "name": "j"
             },
             {
              "type": "Identifier",
              "name": "lpTokenSupply"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "calcReserveAtRatioSwap",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "reserves",
         "identifier": {
          "type": "Identifier",
          "name": "reserves"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "j",
         "identifier": {
          "type": "Identifier",
          "name": "j"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "ratios",
         "identifier": {
          "type": "Identifier",
          "name": "ratios"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "reserve",
         "identifier": {
          "type": "Identifier",
          "name": "reserve"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "i",
            "identifier": {
             "type": "Identifier",
             "name": "i"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "Conditional",
           "condition": {
            "type": "BinaryOperation",
            "operator": "==",
            "left": {
             "type": "Identifier",
             "name": "j"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           },
           "trueExpression": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           },
           "falseExpression": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "decimals",
            "identifier": {
             "type": "Identifier",
             "name": "decimals"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "decodeWellData"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "data"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "scaledReserves",
            "identifier": {
             "type": "Identifier",
             "name": "scaledReserves"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getScaledReserves"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "reserves"
            },
            {
             "type": "Identifier",
             "name": "decimals"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "PriceData"
            },
            "name": "pd",
            "identifier": {
             "type": "Identifier",
             "name": "pd"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "scaledRatios",
            "identifier": {
             "type": "Identifier",
             "name": "scaledRatios"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getScaledReserves"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "ratios"
            },
            {
             "type": "Identifier",
             "name": "decimals"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "pd"
            },
            "memberName": "targetPrice"
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "/",
            "left": {
             "type": "BinaryOperation",
             "operator": "*",
             "left": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "scaledRatios"
              },
              "index": {
               "type": "Identifier",
               "name": "i"
              }
             },
             "right": {
              "type": "Identifier",
              "name": "PRICE_PRECISION"
             }
            },
            "right": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "scaledRatios"
             },
             "index": {
              "type": "Identifier",
              "name": "j"
             }
            }
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "pd"
            },
            "memberName": "lutData"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "ILookupTable"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "lookupTable"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "memberName": "getRatiosFromPriceSwap"
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "pd"
              },
              "memberName": "targetPrice"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "lpTokenSupply",
            "identifier": {
             "type": "Identifier",
             "name": "lpTokenSupply"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "calcLpTokenSupply"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "scaledReserves"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "abi"
              },
              "memberName": "encode"
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "18",
               "subdenomination": null
              },
              {
               "type": "NumberLiteral",
               "number": "18",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "parityReserve",
            "identifier": {
             "type": "Identifier",
             "name": "parityReserve"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "BinaryOperation",
           "operator": "/",
           "left": {
            "type": "Identifier",
            "name": "lpTokenSupply"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "2",
            "subdenomination": null
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "BinaryOperation",
            "operator": "-",
            "left": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "pd"
              },
              "memberName": "lutData"
             },
             "memberName": "highPrice"
            },
            "right": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "pd"
             },
             "memberName": "targetPrice"
            }
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "-",
            "left": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "pd"
             },
             "memberName": "targetPrice"
            },
            "right": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "pd"
              },
              "memberName": "lutData"
             },
             "memberName": "lowPrice"
            }
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "scaledReserves"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "/",
               "left": {
                "type": "BinaryOperation",
                "operator": "*",
                "left": {
                 "type": "Identifier",
                 "name": "parityReserve"
                },
                "right": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "pd"
                  },
                  "memberName": "lutData"
                 },
                 "memberName": "lowPriceI"
                }
               },
               "right": {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "pd"
                 },
                 "memberName": "lutData"
                },
                "memberName": "precision"
               }
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "scaledReserves"
               },
               "index": {
                "type": "Identifier",
                "name": "j"
               }
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "/",
               "left": {
                "type": "BinaryOperation",
                "operator": "*",
                "left": {
                 "type": "Identifier",
                 "name": "parityReserve"
                },
                "right": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "pd"
                  },
                  "memberName": "lutData"
                 },
                 "memberName": "lowPriceJ"
                }
               },
               "right": {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "pd"
                 },
                 "memberName": "lutData"
                },
                "memberName": "precision"
               }
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "pd"
               },
               "memberName": "currentPrice"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "pd"
                },
                "memberName": "lutData"
               },
               "memberName": "lowPrice"
              }
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "scaledReserves"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "/",
               "left": {
                "type": "BinaryOperation",
                "operator": "*",
                "left": {
                 "type": "Identifier",
                 "name": "parityReserve"
                },
                "right": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "pd"
                  },
                  "memberName": "lutData"
                 },
                 "memberName": "highPriceI"
                }
               },
               "right": {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "pd"
                 },
                 "memberName": "lutData"
                },
                "memberName": "precision"
               }
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "scaledReserves"
               },
               "index": {
                "type": "Identifier",
                "name": "j"
               }
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "/",
               "left": {
                "type": "BinaryOperation",
                "operator": "*",
                "left": {
                 "type": "Identifier",
                 "name": "parityReserve"
                },
                "right": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "pd"
                  },
                  "memberName": "lutData"
                 },
                 "memberName": "highPriceJ"
                }
               },
               "right": {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "pd"
                 },
                 "memberName": "lutData"
                },
                "memberName": "precision"
               }
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "pd"
               },
               "memberName": "currentPrice"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "pd"
                },
                "memberName": "lutData"
               },
               "memberName": "highPrice"
              }
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "pd"
            },
            "memberName": "maxStepSize"
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "/",
            "left": {
             "type": "BinaryOperation",
             "operator": "*",
             "left": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "scaledReserves"
              },
              "index": {
               "type": "Identifier",
               "name": "j"
              }
             },
             "right": {
              "type": "TupleExpression",
              "components": [
               {
                "type": "BinaryOperation",
                "operator": "-",
                "left": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "pd"
                  },
                  "memberName": "lutData"
                 },
                 "memberName": "lowPriceJ"
                },
                "right": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "pd"
                  },
                  "memberName": "lutData"
                 },
                 "memberName": "highPriceJ"
                }
               }
              ],
              "isArray": false
             }
            },
            "right": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "pd"
              },
              "memberName": "lutData"
             },
             "memberName": "lowPriceJ"
            }
           }
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "k",
             "identifier": {
              "type": "Identifier",
              "name": "k"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": null
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "k"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "255",
            "subdenomination": null
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "k"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "scaledReserves"
               },
               "index": {
                "type": "Identifier",
                "name": "j"
               }
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "updateReserve"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "pd"
                },
                {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "scaledReserves"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "j"
                 }
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "scaledReserves"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "calcReserve"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "scaledReserves"
                },
                {
                 "type": "Identifier",
                 "name": "i"
                },
                {
                 "type": "Identifier",
                 "name": "lpTokenSupply"
                },
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "abi"
                  },
                  "memberName": "encode"
                 },
                 "arguments": [
                  {
                   "type": "NumberLiteral",
                   "number": "18",
                   "subdenomination": null
                  },
                  {
                   "type": "NumberLiteral",
                   "number": "18",
                   "subdenomination": null
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "pd"
               },
               "memberName": "newPrice"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "_calcRate"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "scaledReserves"
                },
                {
                 "type": "Identifier",
                 "name": "i"
                },
                {
                 "type": "Identifier",
                 "name": "j"
                },
                {
                 "type": "Identifier",
                 "name": "lpTokenSupply"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "&&",
              "left": {
               "type": "BinaryOperation",
               "operator": ">",
               "left": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "pd"
                },
                "memberName": "newPrice"
               },
               "right": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "pd"
                },
                "memberName": "currentPrice"
               }
              },
              "right": {
               "type": "BinaryOperation",
               "operator": ">",
               "left": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "pd"
                },
                "memberName": "newPrice"
               },
               "right": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "pd"
                },
                "memberName": "targetPrice"
               }
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "pd"
                   },
                   "memberName": "lutData"
                  },
                  "memberName": "highPriceJ"
                 },
                 "right": {
                  "type": "BinaryOperation",
                  "operator": "/",
                  "left": {
                   "type": "BinaryOperation",
                   "operator": "*",
                   "left": {
                    "type": "IndexAccess",
                    "base": {
                     "type": "Identifier",
                     "name": "scaledReserves"
                    },
                    "index": {
                     "type": "Identifier",
                     "name": "j"
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "1e18",
                    "subdenomination": null
                   }
                  },
                  "right": {
                   "type": "Identifier",
                   "name": "parityReserve"
                  }
                 }
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "pd"
                   },
                   "memberName": "lutData"
                  },
                  "memberName": "highPriceI"
                 },
                 "right": {
                  "type": "BinaryOperation",
                  "operator": "/",
                  "left": {
                   "type": "BinaryOperation",
                   "operator": "*",
                   "left": {
                    "type": "IndexAccess",
                    "base": {
                     "type": "Identifier",
                     "name": "scaledReserves"
                    },
                    "index": {
                     "type": "Identifier",
                     "name": "i"
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "1e18",
                    "subdenomination": null
                   }
                  },
                  "right": {
                   "type": "Identifier",
                   "name": "parityReserve"
                  }
                 }
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "pd"
                   },
                   "memberName": "lutData"
                  },
                  "memberName": "highPrice"
                 },
                 "right": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "pd"
                  },
                  "memberName": "newPrice"
                 }
                }
               }
              ]
             },
             "falseBody": {
              "type": "IfStatement",
              "condition": {
               "type": "BinaryOperation",
               "operator": "&&",
               "left": {
                "type": "BinaryOperation",
                "operator": "<",
                "left": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "pd"
                 },
                 "memberName": "newPrice"
                },
                "right": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "pd"
                 },
                 "memberName": "currentPrice"
                }
               },
               "right": {
                "type": "BinaryOperation",
                "operator": "<",
                "left": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "pd"
                 },
                 "memberName": "newPrice"
                },
                "right": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "pd"
                 },
                 "memberName": "targetPrice"
                }
               }
              },
              "trueBody": {
               "type": "Block",
               "statements": [
                {
                 "type": "ExpressionStatement",
                 "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "pd"
                    },
                    "memberName": "lutData"
                   },
                   "memberName": "lowPriceJ"
                  },
                  "right": {
                   "type": "BinaryOperation",
                   "operator": "/",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "*",
                    "left": {
                     "type": "IndexAccess",
                     "base": {
                      "type": "Identifier",
                      "name": "scaledReserves"
                     },
                     "index": {
                      "type": "Identifier",
                      "name": "j"
                     }
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "1e18",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "Identifier",
                    "name": "parityReserve"
                   }
                  }
                 }
                },
                {
                 "type": "ExpressionStatement",
                 "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "pd"
                    },
                    "memberName": "lutData"
                   },
                   "memberName": "lowPriceI"
                  },
                  "right": {
                   "type": "BinaryOperation",
                   "operator": "/",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "*",
                    "left": {
                     "type": "IndexAccess",
                     "base": {
                      "type": "Identifier",
                      "name": "scaledReserves"
                     },
                     "index": {
                      "type": "Identifier",
                      "name": "i"
                     }
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "1e18",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "Identifier",
                    "name": "parityReserve"
                   }
                  }
                 }
                },
                {
                 "type": "ExpressionStatement",
                 "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "pd"
                    },
                    "memberName": "lutData"
                   },
                   "memberName": "lowPrice"
                  },
                  "right": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "pd"
                   },
                   "memberName": "newPrice"
                  }
                 }
                }
               ]
              },
              "falseBody": null
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "pd"
               },
               "memberName": "maxStepSize"
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "/",
               "left": {
                "type": "BinaryOperation",
                "operator": "*",
                "left": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "scaledReserves"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "j"
                 }
                },
                "right": {
                 "type": "TupleExpression",
                 "components": [
                  {
                   "type": "BinaryOperation",
                   "operator": "-",
                   "left": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "pd"
                     },
                     "memberName": "lutData"
                    },
                    "memberName": "lowPriceJ"
                   },
                   "right": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "pd"
                     },
                     "memberName": "lutData"
                    },
                    "memberName": "highPriceJ"
                   }
                  }
                 ],
                 "isArray": false
                }
               },
               "right": {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "pd"
                 },
                 "memberName": "lutData"
                },
                "memberName": "lowPriceJ"
               }
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "pd"
               },
               "memberName": "currentPrice"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "pd"
               },
               "memberName": "newPrice"
              }
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": ">",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "pd"
               },
               "memberName": "currentPrice"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "pd"
               },
               "memberName": "targetPrice"
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "<=",
                 "left": {
                  "type": "BinaryOperation",
                  "operator": "-",
                  "left": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "pd"
                   },
                   "memberName": "currentPrice"
                  },
                  "right": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "pd"
                   },
                   "memberName": "targetPrice"
                  }
                 },
                 "right": {
                  "type": "Identifier",
                  "name": "PRICE_THRESHOLD"
                 }
                },
                "trueBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "ReturnStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "/",
                    "left": {
                     "type": "IndexAccess",
                     "base": {
                      "type": "Identifier",
                      "name": "scaledReserves"
                     },
                     "index": {
                      "type": "Identifier",
                      "name": "j"
                     }
                    },
                    "right": {
                     "type": "TupleExpression",
                     "components": [
                      {
                       "type": "BinaryOperation",
                       "operator": "**",
                       "left": {
                        "type": "NumberLiteral",
                        "number": "10",
                        "subdenomination": null
                       },
                       "right": {
                        "type": "TupleExpression",
                        "components": [
                         {
                          "type": "BinaryOperation",
                          "operator": "-",
                          "left": {
                           "type": "NumberLiteral",
                           "number": "18",
                           "subdenomination": null
                          },
                          "right": {
                           "type": "IndexAccess",
                           "base": {
                            "type": "Identifier",
                            "name": "decimals"
                           },
                           "index": {
                            "type": "Identifier",
                            "name": "j"
                           }
                          }
                         }
                        ],
                        "isArray": false
                       }
                      }
                     ],
                     "isArray": false
                    }
                   }
                  }
                 ]
                },
                "falseBody": null
               }
              ]
             },
             "falseBody": {
              "type": "Block",
              "statements": [
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "<=",
                 "left": {
                  "type": "BinaryOperation",
                  "operator": "-",
                  "left": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "pd"
                   },
                   "memberName": "targetPrice"
                  },
                  "right": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "pd"
                   },
                   "memberName": "currentPrice"
                  }
                 },
                 "right": {
                  "type": "Identifier",
                  "name": "PRICE_THRESHOLD"
                 }
                },
                "trueBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "ReturnStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "/",
                    "left": {
                     "type": "IndexAccess",
                     "base": {
                      "type": "Identifier",
                      "name": "scaledReserves"
                     },
                     "index": {
                      "type": "Identifier",
                      "name": "j"
                     }
                    },
                    "right": {
                     "type": "TupleExpression",
                     "components": [
                      {
                       "type": "BinaryOperation",
                       "operator": "**",
                       "left": {
                        "type": "NumberLiteral",
                        "number": "10",
                        "subdenomination": null
                       },
                       "right": {
                        "type": "TupleExpression",
                        "components": [
                         {
                          "type": "BinaryOperation",
                          "operator": "-",
                          "left": {
                           "type": "NumberLiteral",
                           "number": "18",
                           "subdenomination": null
                          },
                          "right": {
                           "type": "IndexAccess",
                           "base": {
                            "type": "Identifier",
                            "name": "decimals"
                           },
                           "index": {
                            "type": "Identifier",
                            "name": "j"
                           }
                          }
                         }
                        ],
                        "isArray": false
                       }
                      }
                     ],
                     "isArray": false
                    }
                   }
                  }
                 ]
                },
                "falseBody": null
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "revert"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "Non convergence: calcReserveAtRatioSwap",
             "parts": [
              "Non convergence: calcReserveAtRatioSwap"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "calcReserveAtRatioLiquidity",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "reserves",
         "identifier": {
          "type": "Identifier",
          "name": "reserves"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "j",
         "identifier": {
          "type": "Identifier",
          "name": "j"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "ratios",
         "identifier": {
          "type": "Identifier",
          "name": "ratios"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "reserve",
         "identifier": {
          "type": "Identifier",
          "name": "reserve"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "i",
            "identifier": {
             "type": "Identifier",
             "name": "i"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "Conditional",
           "condition": {
            "type": "BinaryOperation",
            "operator": "==",
            "left": {
             "type": "Identifier",
             "name": "j"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           },
           "trueExpression": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           },
           "falseExpression": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "decimals",
            "identifier": {
             "type": "Identifier",
             "name": "decimals"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "decodeWellData"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "data"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "scaledReserves",
            "identifier": {
             "type": "Identifier",
             "name": "scaledReserves"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getScaledReserves"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "reserves"
            },
            {
             "type": "Identifier",
             "name": "decimals"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "PriceData"
            },
            "name": "pd",
            "identifier": {
             "type": "Identifier",
             "name": "pd"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "scaledRatios",
            "identifier": {
             "type": "Identifier",
             "name": "scaledRatios"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getScaledReserves"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "ratios"
            },
            {
             "type": "Identifier",
             "name": "decimals"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "pd"
            },
            "memberName": "targetPrice"
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "/",
            "left": {
             "type": "BinaryOperation",
             "operator": "*",
             "left": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "scaledRatios"
              },
              "index": {
               "type": "Identifier",
               "name": "i"
              }
             },
             "right": {
              "type": "Identifier",
              "name": "PRICE_PRECISION"
             }
            },
            "right": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "scaledRatios"
             },
             "index": {
              "type": "Identifier",
              "name": "j"
             }
            }
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "pd"
            },
            "memberName": "lutData"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "ILookupTable"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "lookupTable"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "memberName": "getRatiosFromPriceLiquidity"
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "pd"
              },
              "memberName": "targetPrice"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "BinaryOperation",
            "operator": "-",
            "left": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "pd"
              },
              "memberName": "lutData"
             },
             "memberName": "highPrice"
            },
            "right": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "pd"
             },
             "memberName": "targetPrice"
            }
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "-",
            "left": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "pd"
             },
             "memberName": "targetPrice"
            },
            "right": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "pd"
              },
              "memberName": "lutData"
             },
             "memberName": "lowPrice"
            }
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "scaledReserves"
               },
               "index": {
                "type": "Identifier",
                "name": "j"
               }
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "/",
               "left": {
                "type": "BinaryOperation",
                "operator": "*",
                "left": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "scaledReserves"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "i"
                 }
                },
                "right": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "pd"
                  },
                  "memberName": "lutData"
                 },
                 "memberName": "lowPriceJ"
                }
               },
               "right": {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "pd"
                 },
                 "memberName": "lutData"
                },
                "memberName": "precision"
               }
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "pd"
               },
               "memberName": "currentPrice"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "pd"
                },
                "memberName": "lutData"
               },
               "memberName": "lowPrice"
              }
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "scaledReserves"
               },
               "index": {
                "type": "Identifier",
                "name": "j"
               }
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "/",
               "left": {
                "type": "BinaryOperation",
                "operator": "*",
                "left": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "scaledReserves"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "i"
                 }
                },
                "right": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "pd"
                  },
                  "memberName": "lutData"
                 },
                 "memberName": "highPriceJ"
                }
               },
               "right": {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "pd"
                 },
                 "memberName": "lutData"
                },
                "memberName": "precision"
               }
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "pd"
               },
               "memberName": "currentPrice"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "pd"
                },
                "memberName": "lutData"
               },
               "memberName": "highPrice"
              }
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "pd"
            },
            "memberName": "maxStepSize"
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "/",
            "left": {
             "type": "BinaryOperation",
             "operator": "*",
             "left": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "scaledReserves"
              },
              "index": {
               "type": "Identifier",
               "name": "j"
              }
             },
             "right": {
              "type": "TupleExpression",
              "components": [
               {
                "type": "BinaryOperation",
                "operator": "-",
                "left": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "pd"
                  },
                  "memberName": "lutData"
                 },
                 "memberName": "lowPriceJ"
                },
                "right": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "pd"
                  },
                  "memberName": "lutData"
                 },
                 "memberName": "highPriceJ"
                }
               }
              ],
              "isArray": false
             }
            },
            "right": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "pd"
              },
              "memberName": "lutData"
             },
             "memberName": "lowPriceJ"
            }
           }
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "k",
             "identifier": {
              "type": "Identifier",
              "name": "k"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": null
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "k"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "255",
            "subdenomination": null
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "k"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "scaledReserves"
               },
               "index": {
                "type": "Identifier",
                "name": "j"
               }
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "updateReserve"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "pd"
                },
                {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "scaledReserves"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "j"
                 }
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "pd"
               },
               "memberName": "newPrice"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "calcRate"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "scaledReserves"
                },
                {
                 "type": "Identifier",
                 "name": "i"
                },
                {
                 "type": "Identifier",
                 "name": "j"
                },
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "abi"
                  },
                  "memberName": "encode"
                 },
                 "arguments": [
                  {
                   "type": "NumberLiteral",
                   "number": "18",
                   "subdenomination": null
                  },
                  {
                   "type": "NumberLiteral",
                   "number": "18",
                   "subdenomination": null
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "&&",
              "left": {
               "type": "BinaryOperation",
               "operator": ">",
               "left": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "pd"
                },
                "memberName": "newPrice"
               },
               "right": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "pd"
                },
                "memberName": "targetPrice"
               }
              },
              "right": {
               "type": "BinaryOperation",
               "operator": ">",
               "left": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "pd"
                },
                "memberName": "targetPrice"
               },
               "right": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "pd"
                },
                "memberName": "currentPrice"
               }
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "pd"
                   },
                   "memberName": "lutData"
                  },
                  "memberName": "highPriceJ"
                 },
                 "right": {
                  "type": "BinaryOperation",
                  "operator": "/",
                  "left": {
                   "type": "BinaryOperation",
                   "operator": "*",
                   "left": {
                    "type": "IndexAccess",
                    "base": {
                     "type": "Identifier",
                     "name": "scaledReserves"
                    },
                    "index": {
                     "type": "Identifier",
                     "name": "j"
                    }
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "1e18",
                    "subdenomination": null
                   }
                  },
                  "right": {
                   "type": "IndexAccess",
                   "base": {
                    "type": "Identifier",
                    "name": "scaledReserves"
                   },
                   "index": {
                    "type": "Identifier",
                    "name": "i"
                   }
                  }
                 }
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "pd"
                   },
                   "memberName": "lutData"
                  },
                  "memberName": "highPrice"
                 },
                 "right": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "pd"
                  },
                  "memberName": "newPrice"
                 }
                }
               }
              ]
             },
             "falseBody": {
              "type": "IfStatement",
              "condition": {
               "type": "BinaryOperation",
               "operator": "&&",
               "left": {
                "type": "BinaryOperation",
                "operator": "<",
                "left": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "pd"
                 },
                 "memberName": "newPrice"
                },
                "right": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "pd"
                 },
                 "memberName": "targetPrice"
                }
               },
               "right": {
                "type": "BinaryOperation",
                "operator": "<",
                "left": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "pd"
                 },
                 "memberName": "targetPrice"
                },
                "right": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "pd"
                 },
                 "memberName": "currentPrice"
                }
               }
              },
              "trueBody": {
               "type": "Block",
               "statements": [
                {
                 "type": "ExpressionStatement",
                 "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "pd"
                    },
                    "memberName": "lutData"
                   },
                   "memberName": "lowPriceJ"
                  },
                  "right": {
                   "type": "BinaryOperation",
                   "operator": "/",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "*",
                    "left": {
                     "type": "IndexAccess",
                     "base": {
                      "type": "Identifier",
                      "name": "scaledReserves"
                     },
                     "index": {
                      "type": "Identifier",
                      "name": "j"
                     }
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "1e18",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "IndexAccess",
                    "base": {
                     "type": "Identifier",
                     "name": "scaledReserves"
                    },
                    "index": {
                     "type": "Identifier",
                     "name": "i"
                    }
                   }
                  }
                 }
                },
                {
                 "type": "ExpressionStatement",
                 "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "pd"
                    },
                    "memberName": "lutData"
                   },
                   "memberName": "lowPrice"
                  },
                  "right": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "pd"
                   },
                   "memberName": "newPrice"
                  }
                 }
                }
               ]
              },
              "falseBody": null
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "pd"
               },
               "memberName": "maxStepSize"
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "/",
               "left": {
                "type": "BinaryOperation",
                "operator": "*",
                "left": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "scaledReserves"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "j"
                 }
                },
                "right": {
                 "type": "TupleExpression",
                 "components": [
                  {
                   "type": "BinaryOperation",
                   "operator": "-",
                   "left": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "pd"
                     },
                     "memberName": "lutData"
                    },
                    "memberName": "lowPriceJ"
                   },
                   "right": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "pd"
                     },
                     "memberName": "lutData"
                    },
                    "memberName": "highPriceJ"
                   }
                  }
                 ],
                 "isArray": false
                }
               },
               "right": {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "pd"
                 },
                 "memberName": "lutData"
                },
                "memberName": "lowPriceJ"
               }
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "pd"
               },
               "memberName": "currentPrice"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "pd"
               },
               "memberName": "newPrice"
              }
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": ">",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "pd"
               },
               "memberName": "currentPrice"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "pd"
               },
               "memberName": "targetPrice"
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "<=",
                 "left": {
                  "type": "BinaryOperation",
                  "operator": "-",
                  "left": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "pd"
                   },
                   "memberName": "currentPrice"
                  },
                  "right": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "pd"
                   },
                   "memberName": "targetPrice"
                  }
                 },
                 "right": {
                  "type": "Identifier",
                  "name": "PRICE_THRESHOLD"
                 }
                },
                "trueBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "ReturnStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "/",
                    "left": {
                     "type": "IndexAccess",
                     "base": {
                      "type": "Identifier",
                      "name": "scaledReserves"
                     },
                     "index": {
                      "type": "Identifier",
                      "name": "j"
                     }
                    },
                    "right": {
                     "type": "TupleExpression",
                     "components": [
                      {
                       "type": "BinaryOperation",
                       "operator": "**",
                       "left": {
                        "type": "NumberLiteral",
                        "number": "10",
                        "subdenomination": null
                       },
                       "right": {
                        "type": "TupleExpression",
                        "components": [
                         {
                          "type": "BinaryOperation",
                          "operator": "-",
                          "left": {
                           "type": "NumberLiteral",
                           "number": "18",
                           "subdenomination": null
                          },
                          "right": {
                           "type": "IndexAccess",
                           "base": {
                            "type": "Identifier",
                            "name": "decimals"
                           },
                           "index": {
                            "type": "Identifier",
                            "name": "j"
                           }
                          }
                         }
                        ],
                        "isArray": false
                       }
                      }
                     ],
                     "isArray": false
                    }
                   }
                  }
                 ]
                },
                "falseBody": null
               }
              ]
             },
             "falseBody": {
              "type": "Block",
              "statements": [
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "<=",
                 "left": {
                  "type": "BinaryOperation",
                  "operator": "-",
                  "left": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "pd"
                   },
                   "memberName": "targetPrice"
                  },
                  "right": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "pd"
                   },
                   "memberName": "currentPrice"
                  }
                 },
                 "right": {
                  "type": "Identifier",
                  "name": "PRICE_THRESHOLD"
                 }
                },
                "trueBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "ReturnStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "/",
                    "left": {
                     "type": "IndexAccess",
                     "base": {
                      "type": "Identifier",
                      "name": "scaledReserves"
                     },
                     "index": {
                      "type": "Identifier",
                      "name": "j"
                     }
                    },
                    "right": {
                     "type": "TupleExpression",
                     "components": [
                      {
                       "type": "BinaryOperation",
                       "operator": "**",
                       "left": {
                        "type": "NumberLiteral",
                        "number": "10",
                        "subdenomination": null
                       },
                       "right": {
                        "type": "TupleExpression",
                        "components": [
                         {
                          "type": "BinaryOperation",
                          "operator": "-",
                          "left": {
                           "type": "NumberLiteral",
                           "number": "18",
                           "subdenomination": null
                          },
                          "right": {
                           "type": "IndexAccess",
                           "base": {
                            "type": "Identifier",
                            "name": "decimals"
                           },
                           "index": {
                            "type": "Identifier",
                            "name": "j"
                           }
                          }
                         }
                        ],
                        "isArray": false
                       }
                      }
                     ],
                     "isArray": false
                    }
                   }
                  }
                 ]
                },
                "falseBody": null
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "revert"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "Non convergence: calcReserveAtRatioLiquidity",
             "parts": [
              "Non convergence: calcReserveAtRatioLiquidity"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "decodeWellData",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "decimals",
         "identifier": {
          "type": "Identifier",
          "name": "decimals"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "name": "decimal0",
            "identifier": {
             "type": "Identifier",
             "name": "decimal0"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "decimal1",
            "identifier": {
             "type": "Identifier",
             "name": "decimal1"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "abi"
            },
            "memberName": "decode"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "data"
            },
            {
             "type": "TupleExpression",
             "components": [
              {
               "type": "ElementaryTypeName",
               "name": "uint256",
               "stateMutability": null
              },
              {
               "type": "ElementaryTypeName",
               "name": "uint256",
               "stateMutability": null
              }
             ],
             "isArray": false
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "decimal0"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "decimal0"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "18",
               "subdenomination": null
              }
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "decimal1"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "decimal1"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "18",
               "subdenomination": null
              }
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "||",
           "left": {
            "type": "BinaryOperation",
            "operator": ">",
            "left": {
             "type": "Identifier",
             "name": "decimal0"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "18",
             "subdenomination": null
            }
           },
           "right": {
            "type": "BinaryOperation",
            "operator": ">",
            "left": {
             "type": "Identifier",
             "name": "decimal1"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "18",
             "subdenomination": null
            }
           }
          },
          "trueBody": {
           "type": "RevertStatement",
           "revertCall": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "InvalidTokenDecimals"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           }
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "decimals"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "NewExpression",
             "typeName": {
              "type": "ArrayTypeName",
              "baseTypeName": {
               "type": "ElementaryTypeName",
               "name": "uint256",
               "stateMutability": null
              },
              "length": null
             }
            },
            "arguments": [
             {
              "type": "NumberLiteral",
              "number": "2",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "decimals"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           },
           "right": {
            "type": "Identifier",
            "name": "decimal0"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "decimals"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           },
           "right": {
            "type": "Identifier",
            "name": "decimal1"
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "name",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "StringLiteral",
           "value": "Stable2",
           "parts": [
            "Stable2"
           ],
           "isUnicode": [
            false
           ]
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "symbol",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "StringLiteral",
           "value": "S2",
           "parts": [
            "S2"
           ],
           "isUnicode": [
            false
           ]
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "_calcRate",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "reserves",
         "identifier": {
          "type": "Identifier",
          "name": "reserves"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "i",
         "identifier": {
          "type": "Identifier",
          "name": "i"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "j",
         "identifier": {
          "type": "Identifier",
          "name": "j"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpTokenSupply",
         "identifier": {
          "type": "Identifier",
          "name": "lpTokenSupply"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "rate",
         "identifier": {
          "type": "Identifier",
          "name": "rate"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "_reserves",
            "identifier": {
             "type": "Identifier",
             "name": "_reserves"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "NewExpression",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            }
           },
           "arguments": [
            {
             "type": "NumberLiteral",
             "number": "2",
             "subdenomination": null
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "_reserves"
            },
            "index": {
             "type": "Identifier",
             "name": "i"
            }
           },
           "right": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "reserves"
            },
            "index": {
             "type": "Identifier",
             "name": "i"
            }
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "_reserves"
            },
            "index": {
             "type": "Identifier",
             "name": "j"
            }
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "+",
            "left": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "reserves"
             },
             "index": {
              "type": "Identifier",
              "name": "j"
             }
            },
            "right": {
             "type": "Identifier",
             "name": "PRICE_PRECISION"
            }
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "rate"
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "-",
            "left": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "_reserves"
             },
             "index": {
              "type": "Identifier",
              "name": "i"
             }
            },
            "right": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "calcReserve"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "_reserves"
              },
              {
               "type": "Identifier",
               "name": "i"
              },
              {
               "type": "Identifier",
               "name": "lpTokenSupply"
              },
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encode"
               },
               "arguments": [
                {
                 "type": "NumberLiteral",
                 "number": "18",
                 "subdenomination": null
                },
                {
                 "type": "NumberLiteral",
                 "number": "18",
                 "subdenomination": null
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getScaledReserves",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "reserves",
         "identifier": {
          "type": "Identifier",
          "name": "reserves"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "decimals",
         "identifier": {
          "type": "Identifier",
          "name": "decimals"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "scaledReserves",
         "identifier": {
          "type": "Identifier",
          "name": "scaledReserves"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "scaledReserves"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "NewExpression",
             "typeName": {
              "type": "ArrayTypeName",
              "baseTypeName": {
               "type": "ElementaryTypeName",
               "name": "uint256",
               "stateMutability": null
              },
              "length": null
             }
            },
            "arguments": [
             {
              "type": "NumberLiteral",
              "number": "2",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "scaledReserves"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "*",
            "left": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "reserves"
             },
             "index": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            "right": {
             "type": "BinaryOperation",
             "operator": "**",
             "left": {
              "type": "NumberLiteral",
              "number": "10",
              "subdenomination": null
             },
             "right": {
              "type": "TupleExpression",
              "components": [
               {
                "type": "BinaryOperation",
                "operator": "-",
                "left": {
                 "type": "NumberLiteral",
                 "number": "18",
                 "subdenomination": null
                },
                "right": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "decimals"
                 },
                 "index": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                 }
                }
               }
              ],
              "isArray": false
             }
            }
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "scaledReserves"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "*",
            "left": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "reserves"
             },
             "index": {
              "type": "NumberLiteral",
              "number": "1",
              "subdenomination": null
             }
            },
            "right": {
             "type": "BinaryOperation",
             "operator": "**",
             "left": {
              "type": "NumberLiteral",
              "number": "10",
              "subdenomination": null
             },
             "right": {
              "type": "TupleExpression",
              "components": [
               {
                "type": "BinaryOperation",
                "operator": "-",
                "left": {
                 "type": "NumberLiteral",
                 "number": "18",
                 "subdenomination": null
                },
                "right": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "decimals"
                 },
                 "index": {
                  "type": "NumberLiteral",
                  "number": "1",
                  "subdenomination": null
                 }
                }
               }
              ],
              "isArray": false
             }
            }
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "_calcReserve",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "reserve",
         "identifier": {
          "type": "Identifier",
          "name": "reserve"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "b",
         "identifier": {
          "type": "Identifier",
          "name": "b"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "c",
         "identifier": {
          "type": "Identifier",
          "name": "c"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpTokenSupply",
         "identifier": {
          "type": "Identifier",
          "name": "lpTokenSupply"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "/",
           "left": {
            "type": "TupleExpression",
            "components": [
             {
              "type": "BinaryOperation",
              "operator": "+",
              "left": {
               "type": "BinaryOperation",
               "operator": "*",
               "left": {
                "type": "Identifier",
                "name": "reserve"
               },
               "right": {
                "type": "Identifier",
                "name": "reserve"
               }
              },
              "right": {
               "type": "Identifier",
               "name": "c"
              }
             }
            ],
            "isArray": false
           },
           "right": {
            "type": "TupleExpression",
            "components": [
             {
              "type": "BinaryOperation",
              "operator": "-",
              "left": {
               "type": "BinaryOperation",
               "operator": "+",
               "left": {
                "type": "BinaryOperation",
                "operator": "*",
                "left": {
                 "type": "Identifier",
                 "name": "reserve"
                },
                "right": {
                 "type": "NumberLiteral",
                 "number": "2",
                 "subdenomination": null
                }
               },
               "right": {
                "type": "Identifier",
                "name": "b"
               }
              },
              "right": {
               "type": "Identifier",
               "name": "lpTokenSupply"
              }
             }
            ],
            "isArray": false
           }
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "getBandC",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "Ann",
         "identifier": {
          "type": "Identifier",
          "name": "Ann"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpTokenSupply",
         "identifier": {
          "type": "Identifier",
          "name": "lpTokenSupply"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "reserves",
         "identifier": {
          "type": "Identifier",
          "name": "reserves"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "c",
         "identifier": {
          "type": "Identifier",
          "name": "c"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "b",
         "identifier": {
          "type": "Identifier",
          "name": "b"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "c"
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "/",
            "left": {
             "type": "BinaryOperation",
             "operator": "*",
             "left": {
              "type": "BinaryOperation",
              "operator": "*",
              "left": {
               "type": "BinaryOperation",
               "operator": "/",
               "left": {
                "type": "BinaryOperation",
                "operator": "*",
                "left": {
                 "type": "Identifier",
                 "name": "lpTokenSupply"
                },
                "right": {
                 "type": "Identifier",
                 "name": "lpTokenSupply"
                }
               },
               "right": {
                "type": "TupleExpression",
                "components": [
                 {
                  "type": "BinaryOperation",
                  "operator": "*",
                  "left": {
                   "type": "Identifier",
                   "name": "reserves"
                  },
                  "right": {
                   "type": "Identifier",
                   "name": "N"
                  }
                 }
                ],
                "isArray": false
               }
              },
              "right": {
               "type": "Identifier",
               "name": "lpTokenSupply"
              }
             },
             "right": {
              "type": "Identifier",
              "name": "A_PRECISION"
             }
            },
            "right": {
             "type": "TupleExpression",
             "components": [
              {
               "type": "BinaryOperation",
               "operator": "*",
               "left": {
                "type": "Identifier",
                "name": "Ann"
               },
               "right": {
                "type": "Identifier",
                "name": "N"
               }
              }
             ],
             "isArray": false
            }
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "b"
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "+",
            "left": {
             "type": "Identifier",
             "name": "reserves"
            },
            "right": {
             "type": "TupleExpression",
             "components": [
              {
               "type": "BinaryOperation",
               "operator": "/",
               "left": {
                "type": "BinaryOperation",
                "operator": "*",
                "left": {
                 "type": "Identifier",
                 "name": "lpTokenSupply"
                },
                "right": {
                 "type": "Identifier",
                 "name": "A_PRECISION"
                }
               },
               "right": {
                "type": "Identifier",
                "name": "Ann"
               }
              }
             ],
             "isArray": false
            }
           }
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "updateReserve",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "PriceData"
         },
         "name": "pd",
         "identifier": {
          "type": "Identifier",
          "name": "pd"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "reserve",
         "identifier": {
          "type": "Identifier",
          "name": "reserve"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "pd"
            },
            "memberName": "targetPrice"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "pd"
            },
            "memberName": "currentPrice"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "-",
              "left": {
               "type": "Identifier",
               "name": "reserve"
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "/",
               "left": {
                "type": "BinaryOperation",
                "operator": "*",
                "left": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "pd"
                 },
                 "memberName": "maxStepSize"
                },
                "right": {
                 "type": "TupleExpression",
                 "components": [
                  {
                   "type": "BinaryOperation",
                   "operator": "-",
                   "left": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "pd"
                    },
                    "memberName": "targetPrice"
                   },
                   "right": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "pd"
                    },
                    "memberName": "currentPrice"
                   }
                  }
                 ],
                 "isArray": false
                }
               },
               "right": {
                "type": "TupleExpression",
                "components": [
                 {
                  "type": "BinaryOperation",
                  "operator": "-",
                  "left": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "pd"
                    },
                    "memberName": "lutData"
                   },
                   "memberName": "highPrice"
                  },
                  "right": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "pd"
                    },
                    "memberName": "lutData"
                   },
                   "memberName": "lowPrice"
                  }
                 }
                ],
                "isArray": false
               }
              }
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "+",
              "left": {
               "type": "Identifier",
               "name": "reserve"
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "/",
               "left": {
                "type": "BinaryOperation",
                "operator": "*",
                "left": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "pd"
                 },
                 "memberName": "maxStepSize"
                },
                "right": {
                 "type": "TupleExpression",
                 "components": [
                  {
                   "type": "BinaryOperation",
                   "operator": "-",
                   "left": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "pd"
                    },
                    "memberName": "currentPrice"
                   },
                   "right": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "pd"
                    },
                    "memberName": "targetPrice"
                   }
                  }
                 ],
                 "isArray": false
                }
               },
               "right": {
                "type": "TupleExpression",
                "components": [
                 {
                  "type": "BinaryOperation",
                  "operator": "-",
                  "left": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "pd"
                    },
                    "memberName": "lutData"
                   },
                   "memberName": "highPrice"
                  },
                  "right": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "pd"
                    },
                    "memberName": "lutData"
                   },
                   "memberName": "lowPrice"
                  }
                 }
                ],
                "isArray": false
               }
              }
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-08-basin/src/functions/ProportionalLPToken2.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.8.20"
    },
    {
     "type": "ImportDirective",
     "path": "src/interfaces/IWellFunction.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "src/interfaces/IWellFunction.sol",
      "parts": [
       "src/interfaces/IWellFunction.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IWellFunction",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IWellFunction"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "oz/utils/math/Math.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "oz/utils/math/Math.sol",
      "parts": [
       "oz/utils/math/Math.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Math",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Math"
       },
       null
      ]
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "ProportionalLPToken2",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "IWellFunction"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "libraryName": "Math",
       "functions": [],
       "operators": []
      },
      {
       "type": "FunctionDefinition",
       "name": "calcLPTokenUnderlying",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpTokenAmount",
         "identifier": {
          "type": "Identifier",
          "name": "lpTokenAmount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "reserves",
         "identifier": {
          "type": "Identifier",
          "name": "reserves"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpTokenSupply",
         "identifier": {
          "type": "Identifier",
          "name": "lpTokenSupply"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "underlyingAmounts",
         "identifier": {
          "type": "Identifier",
          "name": "underlyingAmounts"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "underlyingAmounts"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "NewExpression",
             "typeName": {
              "type": "ArrayTypeName",
              "baseTypeName": {
               "type": "ElementaryTypeName",
               "name": "uint256",
               "stateMutability": null
              },
              "length": null
             }
            },
            "arguments": [
             {
              "type": "NumberLiteral",
              "number": "2",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "underlyingAmounts"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "lpTokenAmount"
             },
             "memberName": "mulDiv"
            },
            "arguments": [
             {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "reserves"
              },
              "index": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             {
              "type": "Identifier",
              "name": "lpTokenSupply"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "underlyingAmounts"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "lpTokenAmount"
             },
             "memberName": "mulDiv"
            },
            "arguments": [
             {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "reserves"
              },
              "index": {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              }
             },
             {
              "type": "Identifier",
              "name": "lpTokenSupply"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      }
     ],
     "kind": "abstract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-08-basin/src/functions/ProportionalLPToken.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.8.20"
    },
    {
     "type": "ImportDirective",
     "path": "src/interfaces/IWellFunction.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "src/interfaces/IWellFunction.sol",
      "parts": [
       "src/interfaces/IWellFunction.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IWellFunction",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IWellFunction"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "oz/utils/math/Math.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "oz/utils/math/Math.sol",
      "parts": [
       "oz/utils/math/Math.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Math",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Math"
       },
       null
      ]
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "ProportionalLPToken",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "IWellFunction"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "libraryName": "Math",
       "functions": [],
       "operators": []
      },
      {
       "type": "FunctionDefinition",
       "name": "calcLPTokenUnderlying",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpTokenAmount",
         "identifier": {
          "type": "Identifier",
          "name": "lpTokenAmount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "reserves",
         "identifier": {
          "type": "Identifier",
          "name": "reserves"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpTokenSupply",
         "identifier": {
          "type": "Identifier",
          "name": "lpTokenSupply"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "underlyingAmounts",
         "identifier": {
          "type": "Identifier",
          "name": "underlyingAmounts"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "underlyingAmounts"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "NewExpression",
             "typeName": {
              "type": "ArrayTypeName",
              "baseTypeName": {
               "type": "ElementaryTypeName",
               "name": "uint256",
               "stateMutability": null
              },
              "length": null
             }
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "reserves"
              },
              "memberName": "length"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": null
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "reserves"
            },
            "memberName": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": true
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "underlyingAmounts"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "lpTokenAmount"
                },
                "memberName": "mulDiv"
               },
               "arguments": [
                {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "reserves"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "i"
                 }
                },
                {
                 "type": "Identifier",
                 "name": "lpTokenSupply"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      }
     ],
     "kind": "abstract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-08-basin/src/functions/ConstantProduct2.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.8.20"
    },
    {
     "type": "ImportDirective",
     "path": "src/interfaces/IBeanstalkWellFunction.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "src/interfaces/IBeanstalkWellFunction.sol",
      "parts": [
       "src/interfaces/IBeanstalkWellFunction.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IBeanstalkWellFunction",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IBeanstalkWellFunction"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "src/functions/ProportionalLPToken2.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "src/functions/ProportionalLPToken2.sol",
      "parts": [
       "src/functions/ProportionalLPToken2.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "ProportionalLPToken2",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "ProportionalLPToken2"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "src/libraries/LibMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "src/libraries/LibMath.sol",
      "parts": [
       "src/libraries/LibMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "LibMath",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "LibMath"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "oz/utils/math/Math.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "oz/utils/math/Math.sol",
      "parts": [
       "oz/utils/math/Math.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Math",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Math"
       },
       null
      ]
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "ConstantProduct2",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ProportionalLPToken2"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "IBeanstalkWellFunction"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "libraryName": "Math",
       "functions": [],
       "operators": []
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "EXP_PRECISION",
         "identifier": {
          "type": "Identifier",
          "name": "EXP_PRECISION"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "1e12",
          "subdenomination": null
         },
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "1e12",
        "subdenomination": null
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "CALC_RATE_PRECISION",
         "identifier": {
          "type": "Identifier",
          "name": "CALC_RATE_PRECISION"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "1e18",
          "subdenomination": null
         },
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "1e18",
        "subdenomination": null
       }
      },
      {
       "type": "FunctionDefinition",
       "name": "calcLpTokenSupply",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "reserves",
         "identifier": {
          "type": "Identifier",
          "name": "reserves"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpTokenSupply",
         "identifier": {
          "type": "Identifier",
          "name": "lpTokenSupply"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "lpTokenSupply"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "TupleExpression",
              "components": [
               {
                "type": "BinaryOperation",
                "operator": "*",
                "left": {
                 "type": "BinaryOperation",
                 "operator": "*",
                 "left": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "reserves"
                  },
                  "index": {
                   "type": "NumberLiteral",
                   "number": "0",
                   "subdenomination": null
                  }
                 },
                 "right": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "reserves"
                  },
                  "index": {
                   "type": "NumberLiteral",
                   "number": "1",
                   "subdenomination": null
                  }
                 }
                },
                "right": {
                 "type": "Identifier",
                 "name": "EXP_PRECISION"
                }
               }
              ],
              "isArray": false
             },
             "memberName": "sqrt"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "calcReserve",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "reserves",
         "identifier": {
          "type": "Identifier",
          "name": "reserves"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "j",
         "identifier": {
          "type": "Identifier",
          "name": "j"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpTokenSupply",
         "identifier": {
          "type": "Identifier",
          "name": "lpTokenSupply"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "reserve",
         "identifier": {
          "type": "Identifier",
          "name": "reserve"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">=",
           "left": {
            "type": "Identifier",
            "name": "j"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "2",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "InvalidJArgument"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "reserve"
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "**",
            "left": {
             "type": "Identifier",
             "name": "lpTokenSupply"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "2",
             "subdenomination": null
            }
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "reserve"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "LibMath"
             },
             "memberName": "roundUpDiv"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "reserve"
             },
             {
              "type": "BinaryOperation",
              "operator": "*",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "reserves"
               },
               "index": {
                "type": "Conditional",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "==",
                 "left": {
                  "type": "Identifier",
                  "name": "j"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "1",
                  "subdenomination": null
                 }
                },
                "trueExpression": {
                 "type": "NumberLiteral",
                 "number": "0",
                 "subdenomination": null
                },
                "falseExpression": {
                 "type": "NumberLiteral",
                 "number": "1",
                 "subdenomination": null
                }
               }
              },
              "right": {
               "type": "Identifier",
               "name": "EXP_PRECISION"
              }
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "name",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "StringLiteral",
           "value": "Constant Product 2",
           "parts": [
            "Constant Product 2"
           ],
           "isUnicode": [
            false
           ]
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "symbol",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "StringLiteral",
           "value": "CP2",
           "parts": [
            "CP2"
           ],
           "isUnicode": [
            false
           ]
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "calcReserveAtRatioSwap",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "reserves",
         "identifier": {
          "type": "Identifier",
          "name": "reserves"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "j",
         "identifier": {
          "type": "Identifier",
          "name": "j"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "ratios",
         "identifier": {
          "type": "Identifier",
          "name": "ratios"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "reserve",
         "identifier": {
          "type": "Identifier",
          "name": "reserve"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "i",
            "identifier": {
             "type": "Identifier",
             "name": "i"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "Conditional",
           "condition": {
            "type": "BinaryOperation",
            "operator": "==",
            "left": {
             "type": "Identifier",
             "name": "j"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           },
           "trueExpression": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           },
           "falseExpression": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "reserve"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "TupleExpression",
                "components": [
                 {
                  "type": "BinaryOperation",
                  "operator": "*",
                  "left": {
                   "type": "IndexAccess",
                   "base": {
                    "type": "Identifier",
                    "name": "reserves"
                   },
                   "index": {
                    "type": "Identifier",
                    "name": "i"
                   }
                  },
                  "right": {
                   "type": "IndexAccess",
                   "base": {
                    "type": "Identifier",
                    "name": "reserves"
                   },
                   "index": {
                    "type": "Identifier",
                    "name": "j"
                   }
                  }
                 }
                ],
                "isArray": false
               },
               "memberName": "mulDiv"
              },
              "arguments": [
               {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "ratios"
                },
                "index": {
                 "type": "Identifier",
                 "name": "j"
                }
               },
               {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "ratios"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               }
              ],
              "names": [],
              "identifiers": []
             },
             "memberName": "sqrt"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "calcReserveAtRatioLiquidity",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "reserves",
         "identifier": {
          "type": "Identifier",
          "name": "reserves"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "j",
         "identifier": {
          "type": "Identifier",
          "name": "j"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "ratios",
         "identifier": {
          "type": "Identifier",
          "name": "ratios"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "reserve",
         "identifier": {
          "type": "Identifier",
          "name": "reserve"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "i",
            "identifier": {
             "type": "Identifier",
             "name": "i"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "Conditional",
           "condition": {
            "type": "BinaryOperation",
            "operator": "==",
            "left": {
             "type": "Identifier",
             "name": "j"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           },
           "trueExpression": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           },
           "falseExpression": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "reserve"
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "/",
            "left": {
             "type": "BinaryOperation",
             "operator": "*",
             "left": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "reserves"
              },
              "index": {
               "type": "Identifier",
               "name": "i"
              }
             },
             "right": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "ratios"
              },
              "index": {
               "type": "Identifier",
               "name": "j"
              }
             }
            },
            "right": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "ratios"
             },
             "index": {
              "type": "Identifier",
              "name": "i"
             }
            }
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "calcRate",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "reserves",
         "identifier": {
          "type": "Identifier",
          "name": "reserves"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "i",
         "identifier": {
          "type": "Identifier",
          "name": "i"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "j",
         "identifier": {
          "type": "Identifier",
          "name": "j"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "rate",
         "identifier": {
          "type": "Identifier",
          "name": "rate"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "/",
           "left": {
            "type": "BinaryOperation",
            "operator": "*",
            "left": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "reserves"
             },
             "index": {
              "type": "Identifier",
              "name": "i"
             }
            },
            "right": {
             "type": "Identifier",
             "name": "CALC_RATE_PRECISION"
            }
           },
           "right": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "reserves"
            },
            "index": {
             "type": "Identifier",
             "name": "j"
            }
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-08-basin/src/functions/ConstantProduct.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.8.20"
    },
    {
     "type": "ImportDirective",
     "path": "src/interfaces/IBeanstalkWellFunction.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "src/interfaces/IBeanstalkWellFunction.sol",
      "parts": [
       "src/interfaces/IBeanstalkWellFunction.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IBeanstalkWellFunction",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IBeanstalkWellFunction"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "src/functions/ProportionalLPToken.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "src/functions/ProportionalLPToken.sol",
      "parts": [
       "src/functions/ProportionalLPToken.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "ProportionalLPToken",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "ProportionalLPToken"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "src/libraries/LibMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "src/libraries/LibMath.sol",
      "parts": [
       "src/libraries/LibMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "LibMath",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "LibMath"
       },
       null
      ]
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "ConstantProduct",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ProportionalLPToken"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "IBeanstalkWellFunction"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "libraryName": "LibMath",
       "functions": [],
       "operators": []
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "CALC_RATE_PRECISION",
         "identifier": {
          "type": "Identifier",
          "name": "CALC_RATE_PRECISION"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "1e18",
          "subdenomination": null
         },
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "1e18",
        "subdenomination": null
       }
      },
      {
       "type": "FunctionDefinition",
       "name": "calcLpTokenSupply",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "reserves",
         "identifier": {
          "type": "Identifier",
          "name": "reserves"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpTokenSupply",
         "identifier": {
          "type": "Identifier",
          "name": "lpTokenSupply"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "lpTokenSupply"
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "*",
            "left": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "_prodX"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "reserves"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "memberName": "nthRoot"
             },
             "arguments": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "reserves"
               },
               "memberName": "length"
              }
             ],
             "names": [],
             "identifiers": []
            },
            "right": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "reserves"
             },
             "memberName": "length"
            }
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "calcReserve",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "reserves",
         "identifier": {
          "type": "Identifier",
          "name": "reserves"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "j",
         "identifier": {
          "type": "Identifier",
          "name": "j"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpTokenSupply",
         "identifier": {
          "type": "Identifier",
          "name": "lpTokenSupply"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "reserve",
         "identifier": {
          "type": "Identifier",
          "name": "reserve"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "n",
            "identifier": {
             "type": "Identifier",
             "name": "n"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "reserves"
           },
           "memberName": "length"
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "reserve"
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "**",
            "left": {
             "type": "TupleExpression",
             "components": [
              {
               "type": "BinaryOperation",
               "operator": "/",
               "left": {
                "type": "Identifier",
                "name": "lpTokenSupply"
               },
               "right": {
                "type": "Identifier",
                "name": "n"
               }
              }
             ],
             "isArray": false
            },
            "right": {
             "type": "Identifier",
             "name": "n"
            }
           }
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": null
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "Identifier",
            "name": "n"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": true
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "!=",
              "left": {
               "type": "Identifier",
               "name": "i"
              },
              "right": {
               "type": "Identifier",
               "name": "j"
              }
             },
             "trueBody": {
              "type": "ExpressionStatement",
              "expression": {
               "type": "BinaryOperation",
               "operator": "=",
               "left": {
                "type": "Identifier",
                "name": "reserve"
               },
               "right": {
                "type": "BinaryOperation",
                "operator": "/",
                "left": {
                 "type": "Identifier",
                 "name": "reserve"
                },
                "right": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "reserves"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "i"
                 }
                }
               }
              }
             },
             "falseBody": null
            }
           ]
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "name",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "StringLiteral",
           "value": "Constant Product",
           "parts": [
            "Constant Product"
           ],
           "isUnicode": [
            false
           ]
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "symbol",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "StringLiteral",
           "value": "CP",
           "parts": [
            "CP"
           ],
           "isUnicode": [
            false
           ]
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "_prodX",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "xs",
         "identifier": {
          "type": "Identifier",
          "name": "xs"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "pX",
         "identifier": {
          "type": "Identifier",
          "name": "pX"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "pX"
           },
           "right": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "xs"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "length",
            "identifier": {
             "type": "Identifier",
             "name": "length"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "xs"
           },
           "memberName": "length"
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "Identifier",
            "name": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": true
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "pX"
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "*",
               "left": {
                "type": "Identifier",
                "name": "pX"
               },
               "right": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "xs"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               }
              }
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "calcReserveAtRatioSwap",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "reserves",
         "identifier": {
          "type": "Identifier",
          "name": "reserves"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "j",
         "identifier": {
          "type": "Identifier",
          "name": "j"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "ratios",
         "identifier": {
          "type": "Identifier",
          "name": "ratios"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "reserve",
         "identifier": {
          "type": "Identifier",
          "name": "reserve"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "sumRatio",
            "identifier": {
             "type": "Identifier",
             "name": "sumRatio"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "NumberLiteral",
           "number": "0",
           "subdenomination": null
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": null
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "reserves"
            },
            "memberName": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": true
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "!=",
              "left": {
               "type": "Identifier",
               "name": "i"
              },
              "right": {
               "type": "Identifier",
               "name": "j"
              }
             },
             "trueBody": {
              "type": "ExpressionStatement",
              "expression": {
               "type": "BinaryOperation",
               "operator": "+=",
               "left": {
                "type": "Identifier",
                "name": "sumRatio"
               },
               "right": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "ratios"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               }
              }
             },
             "falseBody": null
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "/=",
           "left": {
            "type": "Identifier",
            "name": "sumRatio"
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "-",
            "left": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "reserves"
             },
             "memberName": "length"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "reserve"
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "/",
            "left": {
             "type": "BinaryOperation",
             "operator": "*",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "_prodX"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "reserves"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "ratios"
              },
              "index": {
               "type": "Identifier",
               "name": "j"
              }
             }
            },
            "right": {
             "type": "Identifier",
             "name": "sumRatio"
            }
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "reserve"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "reserve"
             },
             "memberName": "nthRoot"
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "reserves"
              },
              "memberName": "length"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "calcReserveAtRatioLiquidity",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "reserves",
         "identifier": {
          "type": "Identifier",
          "name": "reserves"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "j",
         "identifier": {
          "type": "Identifier",
          "name": "j"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "ratios",
         "identifier": {
          "type": "Identifier",
          "name": "ratios"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "reserve",
         "identifier": {
          "type": "Identifier",
          "name": "reserve"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": null
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "reserves"
            },
            "memberName": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": true
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "!=",
              "left": {
               "type": "Identifier",
               "name": "i"
              },
              "right": {
               "type": "Identifier",
               "name": "j"
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "+=",
                 "left": {
                  "type": "Identifier",
                  "name": "reserve"
                 },
                 "right": {
                  "type": "BinaryOperation",
                  "operator": "/",
                  "left": {
                   "type": "BinaryOperation",
                   "operator": "*",
                   "left": {
                    "type": "IndexAccess",
                    "base": {
                     "type": "Identifier",
                     "name": "ratios"
                    },
                    "index": {
                     "type": "Identifier",
                     "name": "j"
                    }
                   },
                   "right": {
                    "type": "IndexAccess",
                    "base": {
                     "type": "Identifier",
                     "name": "reserves"
                    },
                    "index": {
                     "type": "Identifier",
                     "name": "i"
                    }
                   }
                  },
                  "right": {
                   "type": "IndexAccess",
                   "base": {
                    "type": "Identifier",
                    "name": "ratios"
                   },
                   "index": {
                    "type": "Identifier",
                    "name": "i"
                   }
                  }
                 }
                }
               }
              ]
             },
             "falseBody": null
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "/=",
           "left": {
            "type": "Identifier",
            "name": "reserve"
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "-",
            "left": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "reserves"
             },
             "memberName": "length"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "calcRate",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "reserves",
         "identifier": {
          "type": "Identifier",
          "name": "reserves"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "i",
         "identifier": {
          "type": "Identifier",
          "name": "i"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "j",
         "identifier": {
          "type": "Identifier",
          "name": "j"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "rate",
         "identifier": {
          "type": "Identifier",
          "name": "rate"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "/",
           "left": {
            "type": "BinaryOperation",
            "operator": "*",
            "left": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "reserves"
             },
             "index": {
              "type": "Identifier",
              "name": "i"
             }
            },
            "right": {
             "type": "Identifier",
             "name": "CALC_RATE_PRECISION"
            }
           },
           "right": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "reserves"
            },
            "index": {
             "type": "Identifier",
             "name": "j"
            }
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-08-basin/src/functions/StableLUT/Stable2LUT1.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.8.20"
    },
    {
     "type": "ImportDirective",
     "path": "src/interfaces/ILookupTable.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "src/interfaces/ILookupTable.sol",
      "parts": [
       "src/interfaces/ILookupTable.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "ILookupTable",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "ILookupTable"
       },
       null
      ]
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "Stable2LUT1",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ILookupTable"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "getAParameter",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "NumberLiteral",
           "number": "100",
           "subdenomination": null
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "getRatiosFromPriceLiquidity",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "price",
         "identifier": {
          "type": "Identifier",
          "name": "price"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "PriceData"
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "price"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "1.006758e6",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "price"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0.885627e6",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "<",
                 "left": {
                  "type": "Identifier",
                  "name": "price"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "0.59332e6",
                  "subdenomination": null
                 }
                },
                "trueBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "IfStatement",
                   "condition": {
                    "type": "BinaryOperation",
                    "operator": "<",
                    "left": {
                     "type": "Identifier",
                     "name": "price"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0.404944e6",
                     "subdenomination": null
                    }
                   },
                   "trueBody": {
                    "type": "Block",
                    "statements": [
                     {
                      "type": "IfStatement",
                      "condition": {
                       "type": "BinaryOperation",
                       "operator": "<",
                       "left": {
                        "type": "Identifier",
                        "name": "price"
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "0.30624e6",
                        "subdenomination": null
                       }
                      },
                      "trueBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "0.27702e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "0.001083e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ExpressionStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "revert"
                                },
                                "arguments": [
                                 {
                                  "type": "StringLiteral",
                                  "value": "LUT: Invalid price",
                                  "parts": [
                                   "LUT: Invalid price"
                                  ],
                                  "isUnicode": [
                                   false
                                  ]
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.27702e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "9.646293093274934449e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.001083e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "2000e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "ReturnStatement",
                            "expression": {
                             "type": "FunctionCall",
                             "expression": {
                              "type": "Identifier",
                              "name": "PriceData"
                             },
                             "arguments": [
                              {
                               "type": "NumberLiteral",
                               "number": "0.30624e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "8.612761690424049377e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.27702e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "9.646293093274934449e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1e18",
                               "subdenomination": null
                              }
                             ],
                             "names": [],
                             "identifiers": []
                            }
                           }
                          ]
                         }
                        }
                       ]
                      },
                      "falseBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "0.370355e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "0.337394e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.337394e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "7.689965795021471706e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.30624e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "8.612761690424049377e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.370355e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "6.866040888412029197e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.337394e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "7.689965795021471706e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "ReturnStatement",
                            "expression": {
                             "type": "FunctionCall",
                             "expression": {
                              "type": "Identifier",
                              "name": "PriceData"
                             },
                             "arguments": [
                              {
                               "type": "NumberLiteral",
                               "number": "0.404944e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "6.130393650367882863e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.370355e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "6.866040888412029197e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1e18",
                               "subdenomination": null
                              }
                             ],
                             "names": [],
                             "identifiers": []
                            }
                           }
                          ]
                         }
                        }
                       ]
                      }
                     }
                    ]
                   },
                   "falseBody": {
                    "type": "Block",
                    "statements": [
                     {
                      "type": "IfStatement",
                      "condition": {
                       "type": "BinaryOperation",
                       "operator": "<",
                       "left": {
                        "type": "Identifier",
                        "name": "price"
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "0.516039e6",
                        "subdenomination": null
                       }
                      },
                      "trueBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "0.478063e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "0.440934e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.440934e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "5.473565759257038366e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.404944e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "6.130393650367882863e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.478063e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "4.887112285050926097e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.440934e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "5.473565759257038366e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "ReturnStatement",
                            "expression": {
                             "type": "FunctionCall",
                             "expression": {
                              "type": "Identifier",
                              "name": "PriceData"
                             },
                             "arguments": [
                              {
                               "type": "NumberLiteral",
                               "number": "0.516039e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "4.363493111652613443e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.478063e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "4.887112285050926097e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1e18",
                               "subdenomination": null
                              }
                             ],
                             "names": [],
                             "identifiers": []
                            }
                           }
                          ]
                         }
                        }
                       ]
                      },
                      "falseBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "0.554558e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "ReturnStatement",
                            "expression": {
                             "type": "FunctionCall",
                             "expression": {
                              "type": "Identifier",
                              "name": "PriceData"
                             },
                             "arguments": [
                              {
                               "type": "NumberLiteral",
                               "number": "0.554558e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "3.89597599254697613e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.516039e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "4.363493111652613443e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1e18",
                               "subdenomination": null
                              }
                             ],
                             "names": [],
                             "identifiers": []
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "ReturnStatement",
                            "expression": {
                             "type": "FunctionCall",
                             "expression": {
                              "type": "Identifier",
                              "name": "PriceData"
                             },
                             "arguments": [
                              {
                               "type": "NumberLiteral",
                               "number": "0.59332e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "3.478549993345514402e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.554558e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "3.89597599254697613e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1e18",
                               "subdenomination": null
                              }
                             ],
                             "names": [],
                             "identifiers": []
                            }
                           }
                          ]
                         }
                        }
                       ]
                      }
                     }
                    ]
                   }
                  }
                 ]
                },
                "falseBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "IfStatement",
                   "condition": {
                    "type": "BinaryOperation",
                    "operator": "<",
                    "left": {
                     "type": "Identifier",
                     "name": "price"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0.782874e6",
                     "subdenomination": null
                    }
                   },
                   "trueBody": {
                    "type": "Block",
                    "statements": [
                     {
                      "type": "IfStatement",
                      "condition": {
                       "type": "BinaryOperation",
                       "operator": "<",
                       "left": {
                        "type": "Identifier",
                        "name": "price"
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "0.708539e6",
                        "subdenomination": null
                       }
                      },
                      "trueBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "0.670518e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "0.632052e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.632052e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "3.105848208344209382e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.59332e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "3.478549993345514402e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.670518e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "2.773078757450186949e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.632052e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "3.105848208344209382e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "ReturnStatement",
                            "expression": {
                             "type": "FunctionCall",
                             "expression": {
                              "type": "Identifier",
                              "name": "PriceData"
                             },
                             "arguments": [
                              {
                               "type": "NumberLiteral",
                               "number": "0.708539e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "2.475963176294809553e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.670518e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "2.773078757450186949e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1e18",
                               "subdenomination": null
                              }
                             ],
                             "names": [],
                             "identifiers": []
                            }
                           }
                          ]
                         }
                        }
                       ]
                      },
                      "falseBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "0.746003e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "ReturnStatement",
                            "expression": {
                             "type": "FunctionCall",
                             "expression": {
                              "type": "Identifier",
                              "name": "PriceData"
                             },
                             "arguments": [
                              {
                               "type": "NumberLiteral",
                               "number": "0.746003e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "2.210681407406080101e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.708539e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "2.475963176294809553e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1e18",
                               "subdenomination": null
                              }
                             ],
                             "names": [],
                             "identifiers": []
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "ReturnStatement",
                            "expression": {
                             "type": "FunctionCall",
                             "expression": {
                              "type": "Identifier",
                              "name": "PriceData"
                             },
                             "arguments": [
                              {
                               "type": "NumberLiteral",
                               "number": "0.782874e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1.973822685183999948e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.746003e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "2.210681407406080101e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1e18",
                               "subdenomination": null
                              }
                             ],
                             "names": [],
                             "identifiers": []
                            }
                           }
                          ]
                         }
                        }
                       ]
                      }
                     }
                    ]
                   },
                   "falseBody": {
                    "type": "Block",
                    "statements": [
                     {
                      "type": "IfStatement",
                      "condition": {
                       "type": "BinaryOperation",
                       "operator": "<",
                       "left": {
                        "type": "Identifier",
                        "name": "price"
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "0.873157e6",
                        "subdenomination": null
                       }
                      },
                      "trueBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "0.855108e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "0.819199e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.819199e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.762341683200000064e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.782874e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.973822685183999948e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.855108e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.573519359999999923e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.819199e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.762341683200000064e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "ReturnStatement",
                            "expression": {
                             "type": "FunctionCall",
                             "expression": {
                              "type": "Identifier",
                              "name": "PriceData"
                             },
                             "arguments": [
                              {
                               "type": "NumberLiteral",
                               "number": "0.873157e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1.485947395978354457e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.855108e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1.573519359999999923e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1e18",
                               "subdenomination": null
                              }
                             ],
                             "names": [],
                             "identifiers": []
                            }
                           }
                          ]
                         }
                        }
                       ]
                      },
                      "falseBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "0.879393e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "ReturnStatement",
                            "expression": {
                             "type": "FunctionCall",
                             "expression": {
                              "type": "Identifier",
                              "name": "PriceData"
                             },
                             "arguments": [
                              {
                               "type": "NumberLiteral",
                               "number": "0.879393e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1.456811172527798348e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.873157e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1.485947395978354457e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1e18",
                               "subdenomination": null
                              }
                             ],
                             "names": [],
                             "identifiers": []
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "ReturnStatement",
                            "expression": {
                             "type": "FunctionCall",
                             "expression": {
                              "type": "Identifier",
                              "name": "PriceData"
                             },
                             "arguments": [
                              {
                               "type": "NumberLiteral",
                               "number": "0.885627e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1.428246247576273165e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.879393e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1.456811172527798348e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1e18",
                               "subdenomination": null
                              }
                             ],
                             "names": [],
                             "identifiers": []
                            }
                           }
                          ]
                         }
                        }
                       ]
                      }
                     }
                    ]
                   }
                  }
                 ]
                }
               }
              ]
             },
             "falseBody": {
              "type": "Block",
              "statements": [
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "<",
                 "left": {
                  "type": "Identifier",
                  "name": "price"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "0.94201e6",
                  "subdenomination": null
                 }
                },
                "trueBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "IfStatement",
                   "condition": {
                    "type": "BinaryOperation",
                    "operator": "<",
                    "left": {
                     "type": "Identifier",
                     "name": "price"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0.916852e6",
                     "subdenomination": null
                    }
                   },
                   "trueBody": {
                    "type": "Block",
                    "statements": [
                     {
                      "type": "IfStatement",
                      "condition": {
                       "type": "BinaryOperation",
                       "operator": "<",
                       "left": {
                        "type": "Identifier",
                        "name": "price"
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "0.898101e6",
                        "subdenomination": null
                       }
                      },
                      "trueBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "0.891863e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "0.89081e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.89081e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.404927999999999955e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.885627e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.428246247576273165e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.891863e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.400241419192424397e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.89081e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.404927999999999955e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "ReturnStatement",
                            "expression": {
                             "type": "FunctionCall",
                             "expression": {
                              "type": "Identifier",
                              "name": "PriceData"
                             },
                             "arguments": [
                              {
                               "type": "NumberLiteral",
                               "number": "0.898101e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1.372785705090612263e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.891863e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1.400241419192424397e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1e18",
                               "subdenomination": null
                              }
                             ],
                             "names": [],
                             "identifiers": []
                            }
                           }
                          ]
                         }
                        }
                       ]
                      },
                      "falseBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "0.910594e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "0.904344e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.904344e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.345868338324129665e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.898101e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.372785705090612263e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.910594e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.319478763062872151e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.904344e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.345868338324129665e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "ReturnStatement",
                            "expression": {
                             "type": "FunctionCall",
                             "expression": {
                              "type": "Identifier",
                              "name": "PriceData"
                             },
                             "arguments": [
                              {
                               "type": "NumberLiteral",
                               "number": "0.916852e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1.293606630453796313e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.910594e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1.319478763062872151e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1e18",
                               "subdenomination": null
                              }
                             ],
                             "names": [],
                             "identifiers": []
                            }
                           }
                          ]
                         }
                        }
                       ]
                      }
                     }
                    ]
                   },
                   "falseBody": {
                    "type": "Block",
                    "statements": [
                     {
                      "type": "IfStatement",
                      "condition": {
                       "type": "BinaryOperation",
                       "operator": "<",
                       "left": {
                        "type": "Identifier",
                        "name": "price"
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "0.929402e6",
                        "subdenomination": null
                       }
                      },
                      "trueBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "0.9266e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "0.92312e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.92312e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.268241794562545266e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.916852e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.293606630453796313e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.9266e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.254399999999999959e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.92312e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.268241794562545266e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "ReturnStatement",
                            "expression": {
                             "type": "FunctionCall",
                             "expression": {
                              "type": "Identifier",
                              "name": "PriceData"
                             },
                             "arguments": [
                              {
                               "type": "NumberLiteral",
                               "number": "0.929402e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1.243374308394652239e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.9266e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1.254399999999999959e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1e18",
                               "subdenomination": null
                              }
                             ],
                             "names": [],
                             "identifiers": []
                            }
                           }
                          ]
                         }
                        }
                       ]
                      },
                      "falseBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "0.935697e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "ReturnStatement",
                            "expression": {
                             "type": "FunctionCall",
                             "expression": {
                              "type": "Identifier",
                              "name": "PriceData"
                             },
                             "arguments": [
                              {
                               "type": "NumberLiteral",
                               "number": "0.935697e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1.218994419994757328e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.929402e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1.243374308394652239e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1e18",
                               "subdenomination": null
                              }
                             ],
                             "names": [],
                             "identifiers": []
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "ReturnStatement",
                            "expression": {
                             "type": "FunctionCall",
                             "expression": {
                              "type": "Identifier",
                              "name": "PriceData"
                             },
                             "arguments": [
                              {
                               "type": "NumberLiteral",
                               "number": "0.94201e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1.195092568622310836e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.935697e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1.218994419994757328e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1e18",
                               "subdenomination": null
                              }
                             ],
                             "names": [],
                             "identifiers": []
                            }
                           }
                          ]
                         }
                        }
                       ]
                      }
                     }
                    ]
                   }
                  }
                 ]
                },
                "falseBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "IfStatement",
                   "condition": {
                    "type": "BinaryOperation",
                    "operator": "<",
                    "left": {
                     "type": "Identifier",
                     "name": "price"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0.96748e6",
                     "subdenomination": null
                    }
                   },
                   "trueBody": {
                    "type": "Block",
                    "statements": [
                     {
                      "type": "IfStatement",
                      "condition": {
                       "type": "BinaryOperation",
                       "operator": "<",
                       "left": {
                        "type": "Identifier",
                        "name": "price"
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "0.961075e6",
                        "subdenomination": null
                       }
                      },
                      "trueBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "0.954697e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "0.948343e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.948343e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.171659381002265521e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.94201e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.195092568622310836e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.954697e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.14868566764928004e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.948343e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.171659381002265521e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "ReturnStatement",
                            "expression": {
                             "type": "FunctionCall",
                             "expression": {
                              "type": "Identifier",
                              "name": "PriceData"
                             },
                             "arguments": [
                              {
                               "type": "NumberLiteral",
                               "number": "0.961075e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1.12616241926400007e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.954697e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1.14868566764928004e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1e18",
                               "subdenomination": null
                              }
                             ],
                             "names": [],
                             "identifiers": []
                            }
                           }
                          ]
                         }
                        }
                       ]
                      },
                      "falseBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "0.962847e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "ReturnStatement",
                            "expression": {
                             "type": "FunctionCall",
                             "expression": {
                              "type": "Identifier",
                              "name": "PriceData"
                             },
                             "arguments": [
                              {
                               "type": "NumberLiteral",
                               "number": "0.962847e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1.120000000000000107e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.961075e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1.12616241926400007e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1e18",
                               "subdenomination": null
                              }
                             ],
                             "names": [],
                             "identifiers": []
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "ReturnStatement",
                            "expression": {
                             "type": "FunctionCall",
                             "expression": {
                              "type": "Identifier",
                              "name": "PriceData"
                             },
                             "arguments": [
                              {
                               "type": "NumberLiteral",
                               "number": "0.96748e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1.104080803200000016e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.962847e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1.120000000000000107e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1e18",
                               "subdenomination": null
                              }
                             ],
                             "names": [],
                             "identifiers": []
                            }
                           }
                          ]
                         }
                        }
                       ]
                      }
                     }
                    ]
                   },
                   "falseBody": {
                    "type": "Block",
                    "statements": [
                     {
                      "type": "IfStatement",
                      "condition": {
                       "type": "BinaryOperation",
                       "operator": "<",
                       "left": {
                        "type": "Identifier",
                        "name": "price"
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "0.986882e6",
                        "subdenomination": null
                       }
                      },
                      "trueBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "0.98038e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "0.973914e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.973914e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.082432159999999977e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.96748e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.104080803200000016e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.98038e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.061208000000000151e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.973914e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.082432159999999977e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "ReturnStatement",
                            "expression": {
                             "type": "FunctionCall",
                             "expression": {
                              "type": "Identifier",
                              "name": "PriceData"
                             },
                             "arguments": [
                              {
                               "type": "NumberLiteral",
                               "number": "0.986882e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1.040399999999999991e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.98038e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1.061208000000000151e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1e18",
                               "subdenomination": null
                              }
                             ],
                             "names": [],
                             "identifiers": []
                            }
                           }
                          ]
                         }
                        }
                       ]
                      },
                      "falseBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "0.993421e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "ReturnStatement",
                            "expression": {
                             "type": "FunctionCall",
                             "expression": {
                              "type": "Identifier",
                              "name": "PriceData"
                             },
                             "arguments": [
                              {
                               "type": "NumberLiteral",
                               "number": "0.993421e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1.020000000000000018e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.986882e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1.040399999999999991e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1e18",
                               "subdenomination": null
                              }
                             ],
                             "names": [],
                             "identifiers": []
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "ReturnStatement",
                            "expression": {
                             "type": "FunctionCall",
                             "expression": {
                              "type": "Identifier",
                              "name": "PriceData"
                             },
                             "arguments": [
                              {
                               "type": "NumberLiteral",
                               "number": "1.006758e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.980000000000000093e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.993421e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1.020000000000000018e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1e18",
                               "subdenomination": null
                              }
                             ],
                             "names": [],
                             "identifiers": []
                            }
                           }
                          ]
                         }
                        }
                       ]
                      }
                     }
                    ]
                   }
                  }
                 ]
                }
               }
              ]
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "price"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "1.140253e6",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "<",
                 "left": {
                  "type": "Identifier",
                  "name": "price"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "1.077582e6",
                  "subdenomination": null
                 }
                },
                "trueBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "IfStatement",
                   "condition": {
                    "type": "BinaryOperation",
                    "operator": "<",
                    "left": {
                     "type": "Identifier",
                     "name": "price"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "1.04366e6",
                     "subdenomination": null
                    }
                   },
                   "trueBody": {
                    "type": "Block",
                    "statements": [
                     {
                      "type": "IfStatement",
                      "condition": {
                       "type": "BinaryOperation",
                       "operator": "<",
                       "left": {
                        "type": "Identifier",
                        "name": "price"
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "1.027335e6",
                        "subdenomination": null
                       }
                      },
                      "trueBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "1.020422e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "1.013564e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.013564e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.960400000000000031e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.006758e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.980000000000000093e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.020422e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.941192000000000029e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.013564e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.960400000000000031e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "ReturnStatement",
                            "expression": {
                             "type": "FunctionCall",
                             "expression": {
                              "type": "Identifier",
                              "name": "PriceData"
                             },
                             "arguments": [
                              {
                               "type": "NumberLiteral",
                               "number": "1.027335e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.922368159999999992e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1.020422e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.941192000000000029e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1e18",
                               "subdenomination": null
                              }
                             ],
                             "names": [],
                             "identifiers": []
                            }
                           }
                          ]
                         }
                        }
                       ]
                      },
                      "falseBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "1.041342e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "1.034307e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.034307e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.903920796799999926e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.027335e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.922368159999999992e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.041342e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.885842380864000023e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.034307e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.903920796799999926e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "ReturnStatement",
                            "expression": {
                             "type": "FunctionCall",
                             "expression": {
                              "type": "Identifier",
                              "name": "PriceData"
                             },
                             "arguments": [
                              {
                               "type": "NumberLiteral",
                               "number": "1.04366e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.880000000000000004e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1.041342e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.885842380864000023e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1e18",
                               "subdenomination": null
                              }
                             ],
                             "names": [],
                             "identifiers": []
                            }
                           }
                          ]
                         }
                        }
                       ]
                      }
                     }
                    ]
                   },
                   "falseBody": {
                    "type": "Block",
                    "statements": [
                     {
                      "type": "IfStatement",
                      "condition": {
                       "type": "BinaryOperation",
                       "operator": "<",
                       "left": {
                        "type": "Identifier",
                        "name": "price"
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "1.062857e6",
                        "subdenomination": null
                       }
                      },
                      "trueBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "1.055613e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "1.048443e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.048443e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.868125533246720038e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.04366e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.880000000000000004e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.055613e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.8507630225817856e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.048443e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.868125533246720038e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "ReturnStatement",
                            "expression": {
                             "type": "FunctionCall",
                             "expression": {
                              "type": "Identifier",
                              "name": "PriceData"
                             },
                             "arguments": [
                              {
                               "type": "NumberLiteral",
                               "number": "1.062857e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.833747762130149894e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1.055613e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.8507630225817856e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1e18",
                               "subdenomination": null
                              }
                             ],
                             "names": [],
                             "identifiers": []
                            }
                           }
                          ]
                         }
                        }
                       ]
                      },
                      "falseBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "1.070179e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "ReturnStatement",
                            "expression": {
                             "type": "FunctionCall",
                             "expression": {
                              "type": "Identifier",
                              "name": "PriceData"
                             },
                             "arguments": [
                              {
                               "type": "NumberLiteral",
                               "number": "1.070179e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.81707280688754691e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1.062857e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.833747762130149894e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1e18",
                               "subdenomination": null
                              }
                             ],
                             "names": [],
                             "identifiers": []
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "ReturnStatement",
                            "expression": {
                             "type": "FunctionCall",
                             "expression": {
                              "type": "Identifier",
                              "name": "PriceData"
                             },
                             "arguments": [
                              {
                               "type": "NumberLiteral",
                               "number": "1.077582e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.800731350749795956e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1.070179e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.81707280688754691e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1e18",
                               "subdenomination": null
                              }
                             ],
                             "names": [],
                             "identifiers": []
                            }
                           }
                          ]
                         }
                        }
                       ]
                      }
                     }
                    ]
                   }
                  }
                 ]
                },
                "falseBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "IfStatement",
                   "condition": {
                    "type": "BinaryOperation",
                    "operator": "<",
                    "left": {
                     "type": "Identifier",
                     "name": "price"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "1.108094e6",
                     "subdenomination": null
                    }
                   },
                   "trueBody": {
                    "type": "Block",
                    "statements": [
                     {
                      "type": "IfStatement",
                      "condition": {
                       "type": "BinaryOperation",
                       "operator": "<",
                       "left": {
                        "type": "Identifier",
                        "name": "price"
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "1.09265e6",
                        "subdenomination": null
                       }
                      },
                      "trueBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "1.090025e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "1.085071e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.085071e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.784716723734800059e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.077582e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.800731350749795956e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.090025e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.774399999999999977e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.085071e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.784716723734800059e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "ReturnStatement",
                            "expression": {
                             "type": "FunctionCall",
                             "expression": {
                              "type": "Identifier",
                              "name": "PriceData"
                             },
                             "arguments": [
                              {
                               "type": "NumberLiteral",
                               "number": "1.09265e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.769022389260104022e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1.090025e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.774399999999999977e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1e18",
                               "subdenomination": null
                              }
                             ],
                             "names": [],
                             "identifiers": []
                            }
                           }
                          ]
                         }
                        }
                       ]
                      },
                      "falseBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "1.100323e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "ReturnStatement",
                            "expression": {
                             "type": "FunctionCall",
                             "expression": {
                              "type": "Identifier",
                              "name": "PriceData"
                             },
                             "arguments": [
                              {
                               "type": "NumberLiteral",
                               "number": "1.100323e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.753641941474902044e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1.09265e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.769022389260104022e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1e18",
                               "subdenomination": null
                              }
                             ],
                             "names": [],
                             "identifiers": []
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "ReturnStatement",
                            "expression": {
                             "type": "FunctionCall",
                             "expression": {
                              "type": "Identifier",
                              "name": "PriceData"
                             },
                             "arguments": [
                              {
                               "type": "NumberLiteral",
                               "number": "1.108094e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.738569102645403985e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1.100323e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.753641941474902044e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1e18",
                               "subdenomination": null
                              }
                             ],
                             "names": [],
                             "identifiers": []
                            }
                           }
                          ]
                         }
                        }
                       ]
                      }
                     }
                    ]
                   },
                   "falseBody": {
                    "type": "Block",
                    "statements": [
                     {
                      "type": "IfStatement",
                      "condition": {
                       "type": "BinaryOperation",
                       "operator": "<",
                       "left": {
                        "type": "Identifier",
                        "name": "price"
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "1.132044e6",
                        "subdenomination": null
                       }
                      },
                      "trueBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "1.123949e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "1.115967e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.115967e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.723797720592495919e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.108094e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.738569102645403985e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.123949e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.709321766180645907e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.115967e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.723797720592495919e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "ReturnStatement",
                            "expression": {
                             "type": "FunctionCall",
                             "expression": {
                              "type": "Identifier",
                              "name": "PriceData"
                             },
                             "arguments": [
                              {
                               "type": "NumberLiteral",
                               "number": "1.132044e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.695135330857033051e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1.123949e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.709321766180645907e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1e18",
                               "subdenomination": null
                              }
                             ],
                             "names": [],
                             "identifiers": []
                            }
                           }
                          ]
                         }
                        }
                       ]
                      },
                      "falseBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "1.14011e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "ReturnStatement",
                            "expression": {
                             "type": "FunctionCall",
                             "expression": {
                              "type": "Identifier",
                              "name": "PriceData"
                             },
                             "arguments": [
                              {
                               "type": "NumberLiteral",
                               "number": "1.14011e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.681471999999999967e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1.132044e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.695135330857033051e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1e18",
                               "subdenomination": null
                              }
                             ],
                             "names": [],
                             "identifiers": []
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "ReturnStatement",
                            "expression": {
                             "type": "FunctionCall",
                             "expression": {
                              "type": "Identifier",
                              "name": "PriceData"
                             },
                             "arguments": [
                              {
                               "type": "NumberLiteral",
                               "number": "1.140253e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.681232624239892393e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1.14011e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.681471999999999967e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1e18",
                               "subdenomination": null
                              }
                             ],
                             "names": [],
                             "identifiers": []
                            }
                           }
                          ]
                         }
                        }
                       ]
                      }
                     }
                    ]
                   }
                  }
                 ]
                }
               }
              ]
             },
             "falseBody": {
              "type": "Block",
              "statements": [
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "<",
                 "left": {
                  "type": "Identifier",
                  "name": "price"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "2.01775e6",
                  "subdenomination": null
                 }
                },
                "trueBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "IfStatement",
                   "condition": {
                    "type": "BinaryOperation",
                    "operator": "<",
                    "left": {
                     "type": "Identifier",
                     "name": "price"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "1.403579e6",
                     "subdenomination": null
                    }
                   },
                   "trueBody": {
                    "type": "Block",
                    "statements": [
                     {
                      "type": "IfStatement",
                      "condition": {
                       "type": "BinaryOperation",
                       "operator": "<",
                       "left": {
                        "type": "Identifier",
                        "name": "price"
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "1.256266e6",
                        "subdenomination": null
                       }
                      },
                      "trueBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "1.195079e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "1.148586e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.148586e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.667607971755094454e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.140253e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.681232624239892393e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.195079e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.599695360000000011e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.148586e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.667607971755094454e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "ReturnStatement",
                            "expression": {
                             "type": "FunctionCall",
                             "expression": {
                              "type": "Identifier",
                              "name": "PriceData"
                             },
                             "arguments": [
                              {
                               "type": "NumberLiteral",
                               "number": "1.256266e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.527731916799999978e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1.195079e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.599695360000000011e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1e18",
                               "subdenomination": null
                              }
                             ],
                             "names": [],
                             "identifiers": []
                            }
                           }
                          ]
                         }
                        }
                       ]
                      },
                      "falseBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "1.325188e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "ReturnStatement",
                            "expression": {
                             "type": "FunctionCall",
                             "expression": {
                              "type": "Identifier",
                              "name": "PriceData"
                             },
                             "arguments": [
                              {
                               "type": "NumberLiteral",
                               "number": "1.325188e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.464404086784000025e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1.256266e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.527731916799999978e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1e18",
                               "subdenomination": null
                              }
                             ],
                             "names": [],
                             "identifiers": []
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "ReturnStatement",
                            "expression": {
                             "type": "FunctionCall",
                             "expression": {
                              "type": "Identifier",
                              "name": "PriceData"
                             },
                             "arguments": [
                              {
                               "type": "NumberLiteral",
                               "number": "1.403579e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.408675596369920013e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1.325188e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.464404086784000025e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1e18",
                               "subdenomination": null
                              }
                             ],
                             "names": [],
                             "identifiers": []
                            }
                           }
                          ]
                         }
                        }
                       ]
                      }
                     }
                    ]
                   },
                   "falseBody": {
                    "type": "Block",
                    "statements": [
                     {
                      "type": "IfStatement",
                      "condition": {
                       "type": "BinaryOperation",
                       "operator": "<",
                       "left": {
                        "type": "Identifier",
                        "name": "price"
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "1.716848e6",
                        "subdenomination": null
                       }
                      },
                      "trueBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "1.596984e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "1.493424e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.493424e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.359634524805529598e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.403579e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.408675596369920013e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.596984e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.316478381828866062e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.493424e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.359634524805529598e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "ReturnStatement",
                            "expression": {
                             "type": "FunctionCall",
                             "expression": {
                              "type": "Identifier",
                              "name": "PriceData"
                             },
                             "arguments": [
                              {
                               "type": "NumberLiteral",
                               "number": "1.716848e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.278500976009402101e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1.596984e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.316478381828866062e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1e18",
                               "subdenomination": null
                              }
                             ],
                             "names": [],
                             "identifiers": []
                            }
                           }
                          ]
                         }
                        }
                       ]
                      },
                      "falseBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "1.855977e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "ReturnStatement",
                            "expression": {
                             "type": "FunctionCall",
                             "expression": {
                              "type": "Identifier",
                              "name": "PriceData"
                             },
                             "arguments": [
                              {
                               "type": "NumberLiteral",
                               "number": "1.855977e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.245080858888273884e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1.716848e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.278500976009402101e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1e18",
                               "subdenomination": null
                              }
                             ],
                             "names": [],
                             "identifiers": []
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "ReturnStatement",
                            "expression": {
                             "type": "FunctionCall",
                             "expression": {
                              "type": "Identifier",
                              "name": "PriceData"
                             },
                             "arguments": [
                              {
                               "type": "NumberLiteral",
                               "number": "2.01775e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.215671155821681004e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1.855977e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.245080858888273884e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1e18",
                               "subdenomination": null
                              }
                             ],
                             "names": [],
                             "identifiers": []
                            }
                           }
                          ]
                         }
                        }
                       ]
                      }
                     }
                    ]
                   }
                  }
                 ]
                },
                "falseBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "IfStatement",
                   "condition": {
                    "type": "BinaryOperation",
                    "operator": "<",
                    "left": {
                     "type": "Identifier",
                     "name": "price"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "3.322705e6",
                     "subdenomination": null
                    }
                   },
                   "trueBody": {
                    "type": "Block",
                    "statements": [
                     {
                      "type": "IfStatement",
                      "condition": {
                       "type": "BinaryOperation",
                       "operator": "<",
                       "left": {
                        "type": "Identifier",
                        "name": "price"
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "2.680458e6",
                        "subdenomination": null
                       }
                      },
                      "trueBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "2.425256e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "2.206036e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "2.206036e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.189790617123079292e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "2.01775e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.215671155821681004e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "2.425256e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.167015743068309769e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "2.206036e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.189790617123079292e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "ReturnStatement",
                            "expression": {
                             "type": "FunctionCall",
                             "expression": {
                              "type": "Identifier",
                              "name": "PriceData"
                             },
                             "arguments": [
                              {
                               "type": "NumberLiteral",
                               "number": "2.680458e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.146973853900112583e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "2.425256e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.167015743068309769e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1e18",
                               "subdenomination": null
                              }
                             ],
                             "names": [],
                             "identifiers": []
                            }
                           }
                          ]
                         }
                        }
                       ]
                      },
                      "falseBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "2.977411e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "ReturnStatement",
                            "expression": {
                             "type": "FunctionCall",
                             "expression": {
                              "type": "Identifier",
                              "name": "PriceData"
                             },
                             "arguments": [
                              {
                               "type": "NumberLiteral",
                               "number": "2.977411e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.129336991432099091e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "2.680458e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.146973853900112583e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1e18",
                               "subdenomination": null
                              }
                             ],
                             "names": [],
                             "identifiers": []
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "ReturnStatement",
                            "expression": {
                             "type": "FunctionCall",
                             "expression": {
                              "type": "Identifier",
                              "name": "PriceData"
                             },
                             "arguments": [
                              {
                               "type": "NumberLiteral",
                               "number": "3.322705e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.113816552460247203e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "2.977411e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.129336991432099091e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1e18",
                               "subdenomination": null
                              }
                             ],
                             "names": [],
                             "identifiers": []
                            }
                           }
                          ]
                         }
                        }
                       ]
                      }
                     }
                    ]
                   },
                   "falseBody": {
                    "type": "Block",
                    "statements": [
                     {
                      "type": "IfStatement",
                      "condition": {
                       "type": "BinaryOperation",
                       "operator": "<",
                       "left": {
                        "type": "Identifier",
                        "name": "price"
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "4.729321e6",
                        "subdenomination": null
                       }
                      },
                      "trueBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "4.189464e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "3.723858e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "3.723858e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.100158566165017532e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "3.322705e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.113816552460247203e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "4.189464e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.088139538225215433e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "3.723858e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.100158566165017532e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "ReturnStatement",
                            "expression": {
                             "type": "FunctionCall",
                             "expression": {
                              "type": "Identifier",
                              "name": "PriceData"
                             },
                             "arguments": [
                              {
                               "type": "NumberLiteral",
                               "number": "4.729321e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.077562793638189589e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "4.189464e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.088139538225215433e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1e18",
                               "subdenomination": null
                              }
                             ],
                             "names": [],
                             "identifiers": []
                            }
                           }
                          ]
                         }
                        }
                       ]
                      },
                      "falseBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "10.37089e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "ReturnStatement",
                            "expression": {
                             "type": "FunctionCall",
                             "expression": {
                              "type": "Identifier",
                              "name": "PriceData"
                             },
                             "arguments": [
                              {
                               "type": "NumberLiteral",
                               "number": "10.37089e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.035714285714285712e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "4.729321e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.077562793638189589e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1e18",
                               "subdenomination": null
                              }
                             ],
                             "names": [],
                             "identifiers": []
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "ExpressionStatement",
                            "expression": {
                             "type": "FunctionCall",
                             "expression": {
                              "type": "Identifier",
                              "name": "revert"
                             },
                             "arguments": [
                              {
                               "type": "StringLiteral",
                               "value": "LUT: Invalid price",
                               "parts": [
                                "LUT: Invalid price"
                               ],
                               "isUnicode": [
                                false
                               ]
                              }
                             ],
                             "names": [],
                             "identifiers": []
                            }
                           }
                          ]
                         }
                        }
                       ]
                      }
                     }
                    ]
                   }
                  }
                 ]
                }
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "getRatiosFromPriceSwap",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "price",
         "identifier": {
          "type": "Identifier",
          "name": "price"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "PriceData"
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "price"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0.993344e6",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "price"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0.834426e6",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "<",
                 "left": {
                  "type": "Identifier",
                  "name": "price"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "0.718073e6",
                  "subdenomination": null
                 }
                },
                "trueBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "IfStatement",
                   "condition": {
                    "type": "BinaryOperation",
                    "operator": "<",
                    "left": {
                     "type": "Identifier",
                     "name": "price"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0.391201e6",
                     "subdenomination": null
                    }
                   },
                   "trueBody": {
                    "type": "Block",
                    "statements": [
                     {
                      "type": "IfStatement",
                      "condition": {
                       "type": "BinaryOperation",
                       "operator": "<",
                       "left": {
                        "type": "Identifier",
                        "name": "price"
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "0.264147e6",
                        "subdenomination": null
                       }
                      },
                      "trueBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "0.213318e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "0.001083e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ExpressionStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "revert"
                                },
                                "arguments": [
                                 {
                                  "type": "StringLiteral",
                                  "value": "LUT: Invalid price",
                                  "parts": [
                                   "LUT: Invalid price"
                                  ],
                                  "isUnicode": [
                                   false
                                  ]
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.213318e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.188693329162796575e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "2.410556040105746423e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.001083e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.005263157894736842e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "10.522774272309483479e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "0.237671e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.237671e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.20510144474217018e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "2.337718072004858261e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.213318e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.188693329162796575e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "2.410556040105746423e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.264147e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.222936352980619729e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "2.26657220303422724e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.237671e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.20510144474217018e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "2.337718072004858261e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         }
                        }
                       ]
                      },
                      "falseBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "0.323531e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "0.292771e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.292771e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.242322122805021467e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "2.196897480682568293e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.264147e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.222936352980619729e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "2.26657220303422724e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.323531e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.263393611744588529e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "2.128468246736633152e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.292771e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.242322122805021467e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "2.196897480682568293e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "0.356373e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.356373e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.286297404070204931e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "2.061053544007124483e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.323531e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.263393611744588529e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "2.128468246736633152e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.391201e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.311192830511092366e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.994416599735895801e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.356373e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.286297404070204931e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "2.061053544007124483e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         }
                        }
                       ]
                      }
                     }
                    ]
                   },
                   "falseBody": {
                    "type": "Block",
                    "statements": [
                     {
                      "type": "IfStatement",
                      "condition": {
                       "type": "BinaryOperation",
                       "operator": "<",
                       "left": {
                        "type": "Identifier",
                        "name": "price"
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "0.546918e6",
                        "subdenomination": null
                       }
                      },
                      "trueBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "0.466197e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "0.427871e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.427871e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.338253076642491657e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.92831441898410505e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.391201e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.311192830511092366e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.994416599735895801e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.466197e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.367666387654882243e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.86249753363281334e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.427871e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.338253076642491657e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.92831441898410505e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "0.50596e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.50596e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.399637377885741607e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.796709969924970451e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.466197e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.367666387654882243e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.86249753363281334e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.546918e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.434388454223632148e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.73068952191306602e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.50596e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.399637377885741607e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.796709969924970451e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         }
                        }
                       ]
                      },
                      "falseBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "0.631434e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "0.588821e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.588821e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.472161363286556723e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.664168452923131536e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.546918e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.434388454223632148e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.73068952191306602e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.631434e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.513218873137561538e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.596874796852916001e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.588821e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.472161363286556723e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.664168452923131536e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "0.67456e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.67456e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.55784660123648e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.52853450260679824e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.631434e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.513218873137561538e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.596874796852916001e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.718073e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.606355001344e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.458874768183093584e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.67456e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.55784660123648e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.52853450260679824e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         }
                        }
                       ]
                      }
                     }
                    ]
                   }
                  }
                 ]
                },
                "falseBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "IfStatement",
                   "condition": {
                    "type": "BinaryOperation",
                    "operator": "<",
                    "left": {
                     "type": "Identifier",
                     "name": "price"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0.801931e6",
                     "subdenomination": null
                    }
                   },
                   "trueBody": {
                    "type": "Block",
                    "statements": [
                     {
                      "type": "IfStatement",
                      "condition": {
                       "type": "BinaryOperation",
                       "operator": "<",
                       "left": {
                        "type": "Identifier",
                        "name": "price"
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "0.780497e6",
                        "subdenomination": null
                       }
                      },
                      "trueBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "0.769833e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "0.76195e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.76195e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.659081523200000019e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.387629060213009469e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.718073e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.606355001344e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.458874768183093584e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.769833e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.668971758569680497e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.37471571145172633e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.76195e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.659081523200000019e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.387629060213009469e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "0.775161e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.775161e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.675729049060283415e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.365968375000512491e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.769833e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.668971758569680497e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.37471571145172633e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.780497e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.682554595010387288e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.357193251389227306e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.775161e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.675729049060283415e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.365968375000512491e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         }
                        }
                       ]
                      },
                      "falseBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "0.791195e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "0.785842e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.785842e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.689449085869078049e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.34838993014876074e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.780497e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.682554595010387288e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.357193251389227306e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.791195e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.696413218049573679e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.339558007037547016e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.785842e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.689449085869078049e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.34838993014876074e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "0.796558e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.796558e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.703447694999569495e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.330697084427678423e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.791195e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.696413218049573679e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.339558007037547016e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.801931e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.710553227272292309e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.321806771708554873e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.796558e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.703447694999569495e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.330697084427678423e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         }
                        }
                       ]
                      }
                     }
                    ]
                   },
                   "falseBody": {
                    "type": "Block",
                    "statements": [
                     {
                      "type": "IfStatement",
                      "condition": {
                       "type": "BinaryOperation",
                       "operator": "<",
                       "left": {
                        "type": "Identifier",
                        "name": "price"
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "0.818119e6",
                        "subdenomination": null
                       }
                      },
                      "trueBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "0.807315e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "0.806314e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.806314e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.716392959999999968e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.314544530202049311e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.801931e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.710553227272292309e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.321806771708554873e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.807315e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.717730532598275128e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.312886685708826162e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.806314e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.716392959999999968e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.314544530202049311e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "0.812711e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.812711e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.724980335957853717e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.303936451137418295e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.807315e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.717730532598275128e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.312886685708826162e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.818119e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.732303369654397684e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.294955701044462559e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.812711e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.724980335957853717e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.303936451137418295e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         }
                        }
                       ]
                      },
                      "falseBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "0.828976e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "0.82354e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.82354e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.73970037338828043e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.285944077302980215e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.818119e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.732303369654397684e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.294955701044462559e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.828976e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.74717209433159637e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.276901231112211654e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.82354e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.73970037338828043e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.285944077302980215e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "ReturnStatement",
                            "expression": {
                             "type": "FunctionCall",
                             "expression": {
                              "type": "Identifier",
                              "name": "PriceData"
                             },
                             "arguments": [
                              {
                               "type": "NumberLiteral",
                               "number": "0.834426e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.754719287203632794e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1.267826823523503732e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.828976e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.74717209433159637e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1.276901231112211654e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1e18",
                               "subdenomination": null
                              }
                             ],
                             "names": [],
                             "identifiers": []
                            }
                           }
                          ]
                         }
                        }
                       ]
                      }
                     }
                    ]
                   }
                  }
                 ]
                }
               }
              ]
             },
             "falseBody": {
              "type": "Block",
              "statements": [
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "<",
                 "left": {
                  "type": "Identifier",
                  "name": "price"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "0.907266e6",
                  "subdenomination": null
                 }
                },
                "trueBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "IfStatement",
                   "condition": {
                    "type": "BinaryOperation",
                    "operator": "<",
                    "left": {
                     "type": "Identifier",
                     "name": "price"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0.873109e6",
                     "subdenomination": null
                    }
                   },
                   "trueBody": {
                    "type": "Block",
                    "statements": [
                     {
                      "type": "IfStatement",
                      "condition": {
                       "type": "BinaryOperation",
                       "operator": "<",
                       "left": {
                        "type": "Identifier",
                        "name": "price"
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "0.851493e6",
                        "subdenomination": null
                       }
                      },
                      "trueBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "0.845379e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "0.839894e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.839894e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.762342714347103767e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.258720525989716954e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.834426e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.754719287203632794e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.267826823523503732e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.845379e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.770043145805155316e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.249582020939133509e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.839894e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.762342714347103767e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.258720525989716954e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "0.850882e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.850882e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.777821359399146761e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.240411002374896432e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.845379e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.770043145805155316e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.249582020939133509e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.851493e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.778688000000000047e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.239392846883276889e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.850882e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.777821359399146761e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.240411002374896432e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         }
                        }
                       ]
                      },
                      "falseBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "0.86195e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "0.856405e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.856405e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.785678140807218983e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.231207176501035727e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.851493e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.778688000000000047e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.239392846883276889e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.86195e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.793614283643655494e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.221970262376178118e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.856405e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.785678140807218983e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.231207176501035727e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "0.867517e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.867517e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.801630589539045979e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.212699992596070864e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.86195e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.793614283643655494e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.221970262376178118e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.873109e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.809727868221258529e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.203396114006087814e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.867517e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.801630589539045979e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.212699992596070864e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         }
                        }
                       ]
                      }
                     }
                    ]
                   },
                   "falseBody": {
                    "type": "Block",
                    "statements": [
                     {
                      "type": "IfStatement",
                      "condition": {
                       "type": "BinaryOperation",
                       "operator": "<",
                       "left": {
                        "type": "Identifier",
                        "name": "price"
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "0.895753e6",
                        "subdenomination": null
                       }
                      },
                      "trueBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "0.884372e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "0.878727e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.878727e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.817906937597230987e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.194058388444914964e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.873109e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.809727868221258529e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.203396114006087814e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.884372e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.826168623835586646e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.18468659352065786e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.878727e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.817906937597230987e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.194058388444914964e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "0.890047e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.890047e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.834513761450087599e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.17528052342063094e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.884372e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.826168623835586646e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.18468659352065786e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.895753e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.84294319338392687e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.16583998975613734e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.890047e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.834513761450087599e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.17528052342063094e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         }
                        }
                       ]
                      },
                      "falseBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "0.901491e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "0.898085e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.898085e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.846400000000000041e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.161985895520041945e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.895753e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.84294319338392687e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.16583998975613734e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.901491e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.851457771094875637e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.156364822443562979e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.898085e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.846400000000000041e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.161985895520041945e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "ReturnStatement",
                            "expression": {
                             "type": "FunctionCall",
                             "expression": {
                              "type": "Identifier",
                              "name": "PriceData"
                             },
                             "arguments": [
                              {
                               "type": "NumberLiteral",
                               "number": "0.907266e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.860058354641288547e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1.146854870623147615e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.901491e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.851457771094875637e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1.156364822443562979e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1e18",
                               "subdenomination": null
                              }
                             ],
                             "names": [],
                             "identifiers": []
                            }
                           }
                          ]
                         }
                        }
                       ]
                      }
                     }
                    ]
                   }
                  }
                 ]
                },
                "falseBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "IfStatement",
                   "condition": {
                    "type": "BinaryOperation",
                    "operator": "<",
                    "left": {
                     "type": "Identifier",
                     "name": "price"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0.948888e6",
                     "subdenomination": null
                    }
                   },
                   "trueBody": {
                    "type": "Block",
                    "statements": [
                     {
                      "type": "IfStatement",
                      "condition": {
                       "type": "BinaryOperation",
                       "operator": "<",
                       "left": {
                        "type": "Identifier",
                        "name": "price"
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "0.930767e6",
                        "subdenomination": null
                       }
                      },
                      "trueBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "0.918932e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "0.913079e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.913079e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.868745812768978332e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.137310003616810228e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.907266e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.860058354641288547e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.146854870623147615e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.918932e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.877521022998967948e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.127730111926438461e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.913079e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.868745812768978332e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.137310003616810228e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "0.924827e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.924827e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.88638487171612923e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.118115108274055913e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.918932e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.877521022998967948e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.127730111926438461e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.930767e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.895338254258716493e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.10846492868530544e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.924827e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.88638487171612923e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.118115108274055913e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         }
                        }
                       ]
                      },
                      "falseBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "0.942795e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "0.936756e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.936756e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.90438207500880452e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.09877953361768621e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.930767e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.895338254258716493e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.10846492868530544e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.942795e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.913517247483640937e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.089058909134983155e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.936756e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.90438207500880452e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.09877953361768621e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "0.947076e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.947076e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.92000000000000004e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.082198372170484424e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.942795e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.913517247483640937e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.089058909134983155e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.948888e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.922744694427920065e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.079303068129318754e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.947076e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.92000000000000004e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.082198372170484424e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         }
                        }
                       ]
                      }
                     }
                    ]
                   },
                   "falseBody": {
                    "type": "Block",
                    "statements": [
                     {
                      "type": "IfStatement",
                      "condition": {
                       "type": "BinaryOperation",
                       "operator": "<",
                       "left": {
                        "type": "Identifier",
                        "name": "price"
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "0.973868e6",
                        "subdenomination": null
                       }
                      },
                      "trueBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "0.961249e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "0.955039e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.955039e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.932065347906990027e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.069512051592246715e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.948888e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.922744694427920065e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.079303068129318754e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.961249e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.941480149400999999e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.059685929936267312e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.955039e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.932065347906990027e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.069512051592246715e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "0.967525e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.967525e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.950990049900000023e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.049824804368118425e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.961249e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.941480149400999999e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.059685929936267312e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.973868e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.960596010000000056e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.039928808315135234e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.967525e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.950990049900000023e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.049824804368118425e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         }
                        }
                       ]
                      },
                      "falseBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "0.986773e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "0.980283e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.980283e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.970299000000000134e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.029998108905910481e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.973868e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.960596010000000056e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.039928808315135234e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.986773e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.980099999999999971e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.020032908506394831e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.980283e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.970299000000000134e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.029998108905910481e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "ReturnStatement",
                            "expression": {
                             "type": "FunctionCall",
                             "expression": {
                              "type": "Identifier",
                              "name": "PriceData"
                             },
                             "arguments": [
                              {
                               "type": "NumberLiteral",
                               "number": "0.993344e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.989999999999999991e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1.01003344631248293e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.986773e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.980099999999999971e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1.020032908506394831e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1e18",
                               "subdenomination": null
                              }
                             ],
                             "names": [],
                             "identifiers": []
                            }
                           }
                          ]
                         }
                        }
                       ]
                      }
                     }
                    ]
                   }
                  }
                 ]
                }
               }
              ]
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "price"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "1.211166e6",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "<",
                 "left": {
                  "type": "Identifier",
                  "name": "price"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "1.09577e6",
                  "subdenomination": null
                 }
                },
                "trueBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "IfStatement",
                   "condition": {
                    "type": "BinaryOperation",
                    "operator": "<",
                    "left": {
                     "type": "Identifier",
                     "name": "price"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "1.048893e6",
                     "subdenomination": null
                    }
                   },
                   "trueBody": {
                    "type": "Block",
                    "statements": [
                     {
                      "type": "IfStatement",
                      "condition": {
                       "type": "BinaryOperation",
                       "operator": "<",
                       "left": {
                        "type": "Identifier",
                        "name": "price"
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "1.027293e6",
                        "subdenomination": null
                       }
                      },
                      "trueBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "1.01345e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "1.006679e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.006679e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.010000000000000009e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.990033224058159078e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.993344e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.989999999999999991e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.01003344631248293e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.01345e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.020100000000000007e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.980033797419900599e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.006679e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.010000000000000009e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.990033224058159078e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "1.020319e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.020319e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.030300999999999911e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.970002111104709575e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.01345e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.020100000000000007e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.980033797419900599e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.027293e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.040604010000000024e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.959938599971011053e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.020319e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.030300999999999911e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.970002111104709575e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         }
                        }
                       ]
                      },
                      "falseBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "1.034375e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "1.033686e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.033686e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.050000000000000044e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.950820553711780869e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.027293e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.040604010000000024e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.959938599971011053e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.034375e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.051010050100000148e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.949843744564435544e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.033686e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.050000000000000044e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.950820553711780869e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "1.041574e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.041574e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.061520150601000134e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.93971807302139454e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.034375e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.051010050100000148e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.949843744564435544e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.048893e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.072135352107010053e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.929562163027227939e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.041574e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.061520150601000134e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.93971807302139454e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         }
                        }
                       ]
                      }
                     }
                    ]
                   },
                   "falseBody": {
                    "type": "Block",
                    "statements": [
                     {
                      "type": "IfStatement",
                      "condition": {
                       "type": "BinaryOperation",
                       "operator": "<",
                       "left": {
                        "type": "Identifier",
                        "name": "price"
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "1.071652e6",
                        "subdenomination": null
                       }
                      },
                      "trueBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "1.063925e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "1.056342e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.056342e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.082856705628080007e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.919376643827810258e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.048893e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.072135352107010053e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.929562163027227939e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.063925e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.093685272684360887e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.90916219829307332e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.056342e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.082856705628080007e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.919376643827810258e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "1.070147e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.070147e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.102500000000000036e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.900901195775543062e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.063925e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.093685272684360887e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.90916219829307332e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.071652e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.104622125411204525e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.89891956503043724e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.070147e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.102500000000000036e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.900901195775543062e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         }
                        }
                       ]
                      },
                      "falseBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "1.087566e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "1.079529e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.079529e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.115668346665316557e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.888649540545595529e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.071652e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.104622125411204525e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.89891956503043724e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.087566e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.126825030131969774e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.878352981447521719e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.079529e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.115668346665316557e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.888649540545595529e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "ReturnStatement",
                            "expression": {
                             "type": "FunctionCall",
                             "expression": {
                              "type": "Identifier",
                              "name": "PriceData"
                             },
                             "arguments": [
                              {
                               "type": "NumberLiteral",
                               "number": "1.09577e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1.1380932804332895e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.868030806693890433e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1.087566e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1.126825030131969774e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.878352981447521719e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1e18",
                               "subdenomination": null
                              }
                             ],
                             "names": [],
                             "identifiers": []
                            }
                           }
                          ]
                         }
                        }
                       ]
                      }
                     }
                    ]
                   }
                  }
                 ]
                },
                "falseBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "IfStatement",
                   "condition": {
                    "type": "BinaryOperation",
                    "operator": "<",
                    "left": {
                     "type": "Identifier",
                     "name": "price"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "1.15496e6",
                     "subdenomination": null
                    }
                   },
                   "trueBody": {
                    "type": "Block",
                    "statements": [
                     {
                      "type": "IfStatement",
                      "condition": {
                       "type": "BinaryOperation",
                       "operator": "<",
                       "left": {
                        "type": "Identifier",
                        "name": "price"
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "1.121482e6",
                        "subdenomination": null
                       }
                      },
                      "trueBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "1.110215e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "1.104151e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.104151e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.149474213237622333e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.857683999872391523e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.09577e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.1380932804332895e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.868030806693890433e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.110215e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.157625000000000126e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.850322213751246947e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.104151e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.149474213237622333e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.857683999872391523e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "1.112718e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.112718e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.160968955369998667e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.847313611512600207e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.110215e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.157625000000000126e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.850322213751246947e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.121482e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.172578644923698565e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.836920761422192294e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.112718e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.160968955369998667e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.847313611512600207e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         }
                        }
                       ]
                      },
                      "falseBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "1.139642e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "1.130452e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.130452e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.184304431372935618e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.826506641040327228e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.121482e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.172578644923698565e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.836920761422192294e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.139642e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.196147475686665018e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.8160725157999702e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.130452e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.184304431372935618e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.826506641040327228e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "1.149062e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.149062e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.208108950443531393e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.805619727489791271e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.139642e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.196147475686665018e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.8160725157999702e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.15496e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.21550625000000001e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.799198479643147719e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.149062e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.208108950443531393e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.805619727489791271e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         }
                        }
                       ]
                      }
                     }
                    ]
                   },
                   "falseBody": {
                    "type": "Block",
                    "statements": [
                     {
                      "type": "IfStatement",
                      "condition": {
                       "type": "BinaryOperation",
                       "operator": "<",
                       "left": {
                        "type": "Identifier",
                        "name": "price"
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "1.189304e6",
                        "subdenomination": null
                       }
                      },
                      "trueBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "1.168643e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "1.158725e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.158725e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.22019003994796682e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.795149696605042422e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.15496e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.21550625000000001e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.799198479643147719e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.168643e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.232391940347446369e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.784663924675502389e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.158725e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.22019003994796682e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.795149696605042422e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "1.178832e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.178832e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.244715859750920917e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.774163996557160172e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.168643e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.232391940347446369e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.784663924675502389e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.189304e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.257163018348430139e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.763651582672810969e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.178832e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.244715859750920917e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.774163996557160172e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         }
                        }
                       ]
                      },
                      "falseBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "1.205768e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "1.200076e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.200076e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.269734648531914534e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.753128441185147435e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.189304e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.257163018348430139e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.763651582672810969e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.205768e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.276281562499999911e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.747685899578659385e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.200076e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.269734648531914534e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.753128441185147435e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "ReturnStatement",
                            "expression": {
                             "type": "FunctionCall",
                             "expression": {
                              "type": "Identifier",
                              "name": "PriceData"
                             },
                             "arguments": [
                              {
                               "type": "NumberLiteral",
                               "number": "1.211166e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1.282431995017233595e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.74259642008426785e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1.205768e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1.276281562499999911e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.747685899578659385e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1e18",
                               "subdenomination": null
                              }
                             ],
                             "names": [],
                             "identifiers": []
                            }
                           }
                          ]
                         }
                        }
                       ]
                      }
                     }
                    ]
                   }
                  }
                 ]
                }
               }
              ]
             },
             "falseBody": {
              "type": "Block",
              "statements": [
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "<",
                 "left": {
                  "type": "Identifier",
                  "name": "price"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "1.393403e6",
                  "subdenomination": null
                 }
                },
                "trueBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "IfStatement",
                   "condition": {
                    "type": "BinaryOperation",
                    "operator": "<",
                    "left": {
                     "type": "Identifier",
                     "name": "price"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "1.299217e6",
                     "subdenomination": null
                    }
                   },
                   "trueBody": {
                    "type": "Block",
                    "statements": [
                     {
                      "type": "IfStatement",
                      "condition": {
                       "type": "BinaryOperation",
                       "operator": "<",
                       "left": {
                        "type": "Identifier",
                        "name": "price"
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "1.259043e6",
                        "subdenomination": null
                       }
                      },
                      "trueBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "1.234362e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "1.222589e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.222589e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.295256314967406119e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.732057459169776381e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.211166e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.282431995017233595e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.74259642008426785e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.234362e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.308208878117080198e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.721513591905860174e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.222589e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.295256314967406119e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.732057459169776381e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "1.246507e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.246507e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.321290966898250874e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.710966947125877935e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.234362e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.308208878117080198e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.721513591905860174e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.259043e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.33450387656723346e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.700419750561125598e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.246507e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.321290966898250874e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.710966947125877935e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         }
                        }
                       ]
                      },
                      "falseBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "1.271991e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "1.264433e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.264433e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.340095640624999973e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.695987932996588454e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.259043e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.33450387656723346e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.700419750561125598e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.271991e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.347848915332905628e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.689874326166576179e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.264433e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.340095640624999973e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.695987932996588454e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "1.285375e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.285375e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.361327404486234682e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.67933309721453039e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.271991e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.347848915332905628e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.689874326166576179e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.299217e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.374940678531097138e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.668798587125333244e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.285375e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.361327404486234682e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.67933309721453039e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         }
                        }
                       ]
                      }
                     }
                    ]
                   },
                   "falseBody": {
                    "type": "Block",
                    "statements": [
                     {
                      "type": "IfStatement",
                      "condition": {
                       "type": "BinaryOperation",
                       "operator": "<",
                       "left": {
                        "type": "Identifier",
                        "name": "price"
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "1.343751e6",
                        "subdenomination": null
                       }
                      },
                      "trueBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "1.328377e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "1.313542e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.313542e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.38869008531640814e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.658273420002602916e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.299217e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.374940678531097138e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.668798587125333244e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.328377e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.402576986169572049e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.647760320838866033e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.313542e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.38869008531640814e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.658273420002602916e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "1.333292e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.333292e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.407100422656250016e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.644361360672887962e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.328377e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.402576986169572049e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.647760320838866033e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.343751e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.416602756031267951e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.637262115356114656e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.333292e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.407100422656250016e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.644361360672887962e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         }
                        }
                       ]
                      },
                      "falseBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "1.376232e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "1.359692e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.359692e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.430768783591580551e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.626781729444674585e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.343751e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.416602756031267951e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.637262115356114656e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.376232e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.445076471427496179e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.616322188162944262e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.359692e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.430768783591580551e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.626781729444674585e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "ReturnStatement",
                            "expression": {
                             "type": "FunctionCall",
                             "expression": {
                              "type": "Identifier",
                              "name": "PriceData"
                             },
                             "arguments": [
                              {
                               "type": "NumberLiteral",
                               "number": "1.393403e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1.459527236141771489e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.605886614260108591e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1.376232e6",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1.445076471427496179e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "0.616322188162944262e18",
                               "subdenomination": null
                              },
                              {
                               "type": "NumberLiteral",
                               "number": "1e18",
                               "subdenomination": null
                              }
                             ],
                             "names": [],
                             "identifiers": []
                            }
                           }
                          ]
                         }
                        }
                       ]
                      }
                     }
                    ]
                   }
                  }
                 ]
                },
                "falseBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "IfStatement",
                   "condition": {
                    "type": "BinaryOperation",
                    "operator": "<",
                    "left": {
                     "type": "Identifier",
                     "name": "price"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "2.209802e6",
                     "subdenomination": null
                    }
                   },
                   "trueBody": {
                    "type": "Block",
                    "statements": [
                     {
                      "type": "IfStatement",
                      "condition": {
                       "type": "BinaryOperation",
                       "operator": "<",
                       "left": {
                        "type": "Identifier",
                        "name": "price"
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "1.514667e6",
                        "subdenomination": null
                       }
                      },
                      "trueBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "1.415386e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "1.41124e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.41124e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.474122508503188822e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.595478226183906334e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.393403e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.459527236141771489e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.605886614260108591e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.415386e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.47745544378906235e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.593119977480511928e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.41124e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.474122508503188822e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.595478226183906334e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "1.42978e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.42978e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.488863733588220883e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.585100335536025584e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.415386e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.47745544378906235e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.593119977480511928e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.514667e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.551328215978515557e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.54263432113736132e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.42978e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.488863733588220883e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.585100335536025584e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         }
                        }
                       ]
                      },
                      "falseBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "1.786708e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "1.636249e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.636249e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.628894626777441568e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.493325115988533236e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.514667e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.551328215978515557e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.54263432113736132e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.786708e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.710339358116313546e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.445648172809785581e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.636249e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.628894626777441568e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.493325115988533236e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "1.974398e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.974398e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.79585632602212919e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.400069510798421513e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.786708e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.710339358116313546e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.445648172809785581e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "2.209802e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.885649142323235772e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.357031765135700119e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.974398e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.79585632602212919e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.400069510798421513e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         }
                        }
                       ]
                      }
                     }
                    ]
                   },
                   "falseBody": {
                    "type": "Block",
                    "statements": [
                     {
                      "type": "IfStatement",
                      "condition": {
                       "type": "BinaryOperation",
                       "operator": "<",
                       "left": {
                        "type": "Identifier",
                        "name": "price"
                       },
                       "right": {
                        "type": "NumberLiteral",
                        "number": "3.931396e6",
                        "subdenomination": null
                       }
                      },
                      "trueBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "2.878327e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "2.505865e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "2.505865e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.97993159943939756e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.316916199929126341e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "2.209802e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.885649142323235772e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.357031765135700119e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "2.878327e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "2.078928179411367427e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.28000760254479623e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "2.505865e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1.97993159943939756e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.316916199929126341e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "3.346057e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "3.346057e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "2.182874588381935599e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.246470170347584949e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "2.878327e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "2.078928179411367427e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.28000760254479623e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "3.931396e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "2.292018317801032268e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.216340086006769544e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "3.346057e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "2.182874588381935599e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.246470170347584949e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         }
                        }
                       ]
                      },
                      "falseBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "IfStatement",
                         "condition": {
                          "type": "BinaryOperation",
                          "operator": "<",
                          "left": {
                           "type": "Identifier",
                           "name": "price"
                          },
                          "right": {
                           "type": "NumberLiteral",
                           "number": "10.709509e6",
                           "subdenomination": null
                          }
                         },
                         "trueBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "IfStatement",
                            "condition": {
                             "type": "BinaryOperation",
                             "operator": "<",
                             "left": {
                              "type": "Identifier",
                              "name": "price"
                             },
                             "right": {
                              "type": "NumberLiteral",
                              "number": "4.660591e6",
                              "subdenomination": null
                             }
                            },
                            "trueBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "4.660591e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "2.406619233691083881e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.189535571483960663e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "3.931396e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "2.292018317801032268e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.216340086006769544e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            },
                            "falseBody": {
                             "type": "Block",
                             "statements": [
                              {
                               "type": "ReturnStatement",
                               "expression": {
                                "type": "FunctionCall",
                                "expression": {
                                 "type": "Identifier",
                                 "name": "PriceData"
                                },
                                "arguments": [
                                 {
                                  "type": "NumberLiteral",
                                  "number": "10.709509e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "3e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.103912563829966526e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "4.660591e6",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "2.406619233691083881e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "0.189535571483960663e18",
                                  "subdenomination": null
                                 },
                                 {
                                  "type": "NumberLiteral",
                                  "number": "1e18",
                                  "subdenomination": null
                                 }
                                ],
                                "names": [],
                                "identifiers": []
                               }
                              }
                             ]
                            }
                           }
                          ]
                         },
                         "falseBody": {
                          "type": "Block",
                          "statements": [
                           {
                            "type": "ExpressionStatement",
                            "expression": {
                             "type": "FunctionCall",
                             "expression": {
                              "type": "Identifier",
                              "name": "revert"
                             },
                             "arguments": [
                              {
                               "type": "StringLiteral",
                               "value": "LUT: Invalid price",
                               "parts": [
                                "LUT: Invalid price"
                               ],
                               "isUnicode": [
                                false
                               ]
                              }
                             ],
                             "names": [],
                             "identifiers": []
                            }
                           }
                          ]
                         }
                        }
                       ]
                      }
                     }
                    ]
                   }
                  }
                 ]
                }
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-08-basin/src/WellUpgradeable.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.8.20"
    },
    {
     "type": "ImportDirective",
     "path": "src/Well.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "src/Well.sol",
      "parts": [
       "src/Well.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Well",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Well"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "ozu/proxy/utils/UUPSUpgradeable.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "ozu/proxy/utils/UUPSUpgradeable.sol",
      "parts": [
       "ozu/proxy/utils/UUPSUpgradeable.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "UUPSUpgradeable",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "UUPSUpgradeable"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "ozu/access/OwnableUpgradeable.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "ozu/access/OwnableUpgradeable.sol",
      "parts": [
       "ozu/access/OwnableUpgradeable.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "OwnableUpgradeable",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "OwnableUpgradeable"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "oz/token/ERC20/utils/SafeERC20.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "oz/token/ERC20/utils/SafeERC20.sol",
      "parts": [
       "oz/token/ERC20/utils/SafeERC20.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IERC20",
       null
      ],
      [
       "SafeERC20",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IERC20"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "SafeERC20"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "src/interfaces/IAquifer.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "src/interfaces/IAquifer.sol",
      "parts": [
       "src/interfaces/IAquifer.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IAquifer",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IAquifer"
       },
       null
      ]
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "WellUpgradeable",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "Well"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "UUPSUpgradeable"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "OwnableUpgradeable"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "___self",
         "identifier": {
          "type": "Identifier",
          "name": "___self"
         },
         "expression": {
          "type": "FunctionCall",
          "expression": {
           "type": "Identifier",
           "name": "address"
          },
          "arguments": [
           {
            "type": "Identifier",
            "name": "this"
           }
          ],
          "names": [],
          "identifiers": []
         },
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": true,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "FunctionCall",
        "expression": {
         "type": "Identifier",
         "name": "address"
        },
        "arguments": [
         {
          "type": "Identifier",
          "name": "this"
         }
        ],
        "names": [],
        "identifiers": []
       }
      },
      {
       "type": "ModifierDefinition",
       "name": "notDelegatedOrIsMinimalProxy",
       "parameters": [],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "address"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "this"
             }
            ],
            "names": [],
            "identifiers": []
           },
           "right": {
            "type": "Identifier",
            "name": "___self"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "address",
                "stateMutability": null
               },
               "name": "aquifer",
               "identifier": {
                "type": "Identifier",
                "name": "aquifer"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "aquifer"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "address",
                "stateMutability": null
               },
               "name": "wellImplmentation",
               "identifier": {
                "type": "Identifier",
                "name": "wellImplmentation"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "IAquifer"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "aquifer"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "memberName": "wellImplementation"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "address"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "this"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "==",
                "left": {
                 "type": "Identifier",
                 "name": "wellImplmentation"
                },
                "right": {
                 "type": "Identifier",
                 "name": "___self"
                }
               },
               {
                "type": "StringLiteral",
                "value": "Function must be called by a Well bored by an aquifer",
                "parts": [
                 "Function must be called by a Well bored by an aquifer"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "_"
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "FunctionDefinition",
       "name": "init",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_name",
         "identifier": {
          "type": "Identifier",
          "name": "_name"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_symbol",
         "identifier": {
          "type": "Identifier",
          "name": "_symbol"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "__ERC20Permit_init"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_name"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "__ERC20_init"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_name"
            },
            {
             "type": "Identifier",
             "name": "_symbol"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "__ReentrancyGuard_init"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "__UUPSUpgradeable_init"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "__Ownable_init"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "IERC20"
             },
             "length": null
            },
            "name": "_tokens",
            "identifier": {
             "type": "Identifier",
             "name": "_tokens"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "tokens"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "tokensLength",
            "identifier": {
             "type": "Identifier",
             "name": "tokensLength"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "_tokens"
           },
           "memberName": "length"
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": null
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "-",
            "left": {
             "type": "Identifier",
             "name": "tokensLength"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": true
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ForStatement",
             "initExpression": {
              "type": "VariableDeclarationStatement",
              "variables": [
               {
                "type": "VariableDeclaration",
                "typeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "name": "j",
                "identifier": {
                 "type": "Identifier",
                 "name": "j"
                },
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false,
                "expression": null
               }
              ],
              "initialValue": {
               "type": "BinaryOperation",
               "operator": "+",
               "left": {
                "type": "Identifier",
                "name": "i"
               },
               "right": {
                "type": "NumberLiteral",
                "number": "1",
                "subdenomination": null
               }
              }
             },
             "conditionExpression": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "j"
              },
              "right": {
               "type": "Identifier",
               "name": "tokensLength"
              }
             },
             "loopExpression": {
              "type": "ExpressionStatement",
              "expression": {
               "type": "UnaryOperation",
               "operator": "++",
               "subExpression": {
                "type": "Identifier",
                "name": "j"
               },
               "isPrefix": true
              }
             },
             "body": {
              "type": "Block",
              "statements": [
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "==",
                 "left": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "_tokens"
                  },
                  "index": {
                   "type": "Identifier",
                   "name": "i"
                  }
                 },
                 "right": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "_tokens"
                  },
                  "index": {
                   "type": "Identifier",
                   "name": "j"
                  }
                 }
                },
                "trueBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "RevertStatement",
                   "revertCall": {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "Identifier",
                     "name": "DuplicateTokens"
                    },
                    "arguments": [
                     {
                      "type": "IndexAccess",
                      "base": {
                       "type": "Identifier",
                       "name": "_tokens"
                      },
                      "index": {
                       "type": "Identifier",
                       "name": "i"
                      }
                     }
                    ],
                    "names": [],
                    "identifiers": []
                   }
                  }
                 ]
                },
                "falseBody": null
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "reinitializer",
         "arguments": [
          {
           "type": "NumberLiteral",
           "number": "2",
           "subdenomination": null
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "initNoWellToken",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": []
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "initializer",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_authorizeUpgrade",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "newImplementation",
         "identifier": {
          "type": "Identifier",
          "name": "newImplementation"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "this"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "Identifier",
              "name": "___self"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Function must be called through delegatecall",
             "parts": [
              "Function must be called through delegatecall"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "aquifer",
            "identifier": {
             "type": "Identifier",
             "name": "aquifer"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "aquifer"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "activeProxy",
            "identifier": {
             "type": "Identifier",
             "name": "activeProxy"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "IAquifer"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "aquifer"
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "wellImplementation"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "_getImplementation"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "Identifier",
              "name": "activeProxy"
             },
             "right": {
              "type": "Identifier",
              "name": "___self"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Function must be called through active proxy bored by an aquifer",
             "parts": [
              "Function must be called through active proxy bored by an aquifer"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "IAquifer"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "aquifer"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "memberName": "wellImplementation"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "newImplementation"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "New implementation must be a well implmentation",
             "parts": [
              "New implementation must be a well implmentation"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "IERC20"
             },
             "length": null
            },
            "name": "_tokens",
            "identifier": {
             "type": "Identifier",
             "name": "_tokens"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "tokens"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "IERC20"
             },
             "length": null
            },
            "name": "newTokens",
            "identifier": {
             "type": "Identifier",
             "name": "newTokens"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "WellUpgradeable"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "newImplementation"
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "tokens"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_tokens"
              },
              "memberName": "length"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "newTokens"
              },
              "memberName": "length"
             }
            },
            {
             "type": "StringLiteral",
             "value": "New well must use the same number of tokens",
             "parts": [
              "New well must use the same number of tokens"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": null
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_tokens"
            },
            "memberName": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": true
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "==",
                "left": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "_tokens"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "i"
                 }
                },
                "right": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "newTokens"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "i"
                 }
                }
               },
               {
                "type": "StringLiteral",
                "value": "New well must use the same tokens in the same order",
                "parts": [
                 "New well must use the same tokens in the same order"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "UUPSUpgradeable"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "newImplementation"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "memberName": "proxiableUUID"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "Identifier",
              "name": "_IMPLEMENTATION_SLOT"
             }
            },
            {
             "type": "StringLiteral",
             "value": "New implementation must be a valid ERC-1967 implmentation",
             "parts": [
              "New implementation must be a valid ERC-1967 implmentation"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyOwner",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "upgradeTo",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "newImplementation",
         "identifier": {
          "type": "Identifier",
          "name": "newImplementation"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_authorizeUpgrade"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "newImplementation"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_upgradeToAndCallUUPS"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "newImplementation"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "NewExpression",
              "typeName": {
               "type": "ElementaryTypeName",
               "name": "bytes",
               "stateMutability": null
              }
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "BooleanLiteral",
             "value": false
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "upgradeToAndCall",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "newImplementation",
         "identifier": {
          "type": "Identifier",
          "name": "newImplementation"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_authorizeUpgrade"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "newImplementation"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_upgradeToAndCallUUPS"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "newImplementation"
            },
            {
             "type": "Identifier",
             "name": "data"
            },
            {
             "type": "BooleanLiteral",
             "value": true
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "proxiableUUID",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "_IMPLEMENTATION_SLOT"
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "notDelegatedOrIsMinimalProxy",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getImplementation",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getImplementation"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getVersion",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "NumberLiteral",
           "number": "1",
           "subdenomination": null
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "getInitializerVersion",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getInitializedVersion"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-08-basin/src/Well.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.8.20"
    },
    {
     "type": "ImportDirective",
     "path": "ozu/security/ReentrancyGuardUpgradeable.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "ozu/security/ReentrancyGuardUpgradeable.sol",
      "parts": [
       "ozu/security/ReentrancyGuardUpgradeable.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "ReentrancyGuardUpgradeable",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "ReentrancyGuardUpgradeable"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "ozu/token/ERC20/extensions/ERC20PermitUpgradeable.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "ozu/token/ERC20/extensions/ERC20PermitUpgradeable.sol",
      "parts": [
       "ozu/token/ERC20/extensions/ERC20PermitUpgradeable.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "ERC20Upgradeable",
       null
      ],
      [
       "ERC20PermitUpgradeable",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "ERC20Upgradeable"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "ERC20PermitUpgradeable"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "oz/token/ERC20/utils/SafeERC20.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "oz/token/ERC20/utils/SafeERC20.sol",
      "parts": [
       "oz/token/ERC20/utils/SafeERC20.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IERC20",
       null
      ],
      [
       "SafeERC20",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IERC20"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "SafeERC20"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "src/interfaces/IWell.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "src/interfaces/IWell.sol",
      "parts": [
       "src/interfaces/IWell.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IWell",
       null
      ],
      [
       "Call",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IWell"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "Call"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "src/interfaces/IWellErrors.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "src/interfaces/IWellErrors.sol",
      "parts": [
       "src/interfaces/IWellErrors.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IWellErrors",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IWellErrors"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "src/interfaces/pumps/IPump.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "src/interfaces/pumps/IPump.sol",
      "parts": [
       "src/interfaces/pumps/IPump.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IPump",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IPump"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "src/interfaces/IWellFunction.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "src/interfaces/IWellFunction.sol",
      "parts": [
       "src/interfaces/IWellFunction.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IWellFunction",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IWellFunction"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "src/libraries/LibBytes.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "src/libraries/LibBytes.sol",
      "parts": [
       "src/libraries/LibBytes.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "LibBytes",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "LibBytes"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "src/utils/ClonePlus.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "src/utils/ClonePlus.sol",
      "parts": [
       "src/utils/ClonePlus.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "ClonePlus",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "ClonePlus"
       },
       null
      ]
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "Well",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ERC20PermitUpgradeable"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "IWell"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "IWellErrors"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ReentrancyGuardUpgradeable"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ClonePlus"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "IERC20"
       },
       "libraryName": "SafeERC20",
       "functions": [],
       "operators": []
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "PACKED_ADDRESS",
         "identifier": {
          "type": "Identifier",
          "name": "PACKED_ADDRESS"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "20",
          "subdenomination": null
         },
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "20",
        "subdenomination": null
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "ONE_WORD_PLUS_PACKED_ADDRESS",
         "identifier": {
          "type": "Identifier",
          "name": "ONE_WORD_PLUS_PACKED_ADDRESS"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "52",
          "subdenomination": null
         },
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "52",
        "subdenomination": null
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "RESERVES_STORAGE_SLOT",
         "identifier": {
          "type": "Identifier",
          "name": "RESERVES_STORAGE_SLOT"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "0x4bba01c388049b5ebd30398b65e8ad45b632802c5faf4964e58085ea8ab03715",
          "subdenomination": null
         },
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "0x4bba01c388049b5ebd30398b65e8ad45b632802c5faf4964e58085ea8ab03715",
        "subdenomination": null
       }
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_disableInitializers"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "default",
       "modifiers": [],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "init",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_name",
         "identifier": {
          "type": "Identifier",
          "name": "_name"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_symbol",
         "identifier": {
          "type": "Identifier",
          "name": "_symbol"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "__ERC20Permit_init"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_name"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "__ERC20_init"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_name"
            },
            {
             "type": "Identifier",
             "name": "_symbol"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "__ReentrancyGuard_init"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "IERC20"
             },
             "length": null
            },
            "name": "_tokens",
            "identifier": {
             "type": "Identifier",
             "name": "_tokens"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "tokens"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "tokensLength",
            "identifier": {
             "type": "Identifier",
             "name": "tokensLength"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "_tokens"
           },
           "memberName": "length"
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": null
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "-",
            "left": {
             "type": "Identifier",
             "name": "tokensLength"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": true
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ForStatement",
             "initExpression": {
              "type": "VariableDeclarationStatement",
              "variables": [
               {
                "type": "VariableDeclaration",
                "typeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "name": "j",
                "identifier": {
                 "type": "Identifier",
                 "name": "j"
                },
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false,
                "expression": null
               }
              ],
              "initialValue": {
               "type": "BinaryOperation",
               "operator": "+",
               "left": {
                "type": "Identifier",
                "name": "i"
               },
               "right": {
                "type": "NumberLiteral",
                "number": "1",
                "subdenomination": null
               }
              }
             },
             "conditionExpression": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "j"
              },
              "right": {
               "type": "Identifier",
               "name": "tokensLength"
              }
             },
             "loopExpression": {
              "type": "ExpressionStatement",
              "expression": {
               "type": "UnaryOperation",
               "operator": "++",
               "subExpression": {
                "type": "Identifier",
                "name": "j"
               },
               "isPrefix": true
              }
             },
             "body": {
              "type": "Block",
              "statements": [
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "==",
                 "left": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "_tokens"
                  },
                  "index": {
                   "type": "Identifier",
                   "name": "i"
                  }
                 },
                 "right": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "_tokens"
                  },
                  "index": {
                   "type": "Identifier",
                   "name": "j"
                  }
                 }
                },
                "trueBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "RevertStatement",
                   "revertCall": {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "Identifier",
                     "name": "DuplicateTokens"
                    },
                    "arguments": [
                     {
                      "type": "IndexAccess",
                      "base": {
                       "type": "Identifier",
                       "name": "_tokens"
                      },
                      "index": {
                       "type": "Identifier",
                       "name": "i"
                      }
                     }
                    ],
                    "names": [],
                    "identifiers": []
                   }
                  }
                 ]
                },
                "falseBody": null
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "initializer",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "isInitialized",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_getInitializedVersion"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "LOC_AQUIFER_ADDR",
         "identifier": {
          "type": "Identifier",
          "name": "LOC_AQUIFER_ADDR"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "0",
          "subdenomination": null
         },
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "0",
        "subdenomination": null
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "LOC_TOKENS_COUNT",
         "identifier": {
          "type": "Identifier",
          "name": "LOC_TOKENS_COUNT"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "20",
          "subdenomination": null
         },
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "20",
        "subdenomination": null
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "LOC_WELL_FUNCTION_ADDR",
         "identifier": {
          "type": "Identifier",
          "name": "LOC_WELL_FUNCTION_ADDR"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "52",
          "subdenomination": null
         },
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "52",
        "subdenomination": null
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "LOC_WELL_FUNCTION_DATA_LENGTH",
         "identifier": {
          "type": "Identifier",
          "name": "LOC_WELL_FUNCTION_DATA_LENGTH"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "72",
          "subdenomination": null
         },
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "72",
        "subdenomination": null
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "LOC_PUMPS_COUNT",
         "identifier": {
          "type": "Identifier",
          "name": "LOC_PUMPS_COUNT"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "104",
          "subdenomination": null
         },
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "104",
        "subdenomination": null
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "LOC_VARIABLE",
         "identifier": {
          "type": "Identifier",
          "name": "LOC_VARIABLE"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "136",
          "subdenomination": null
         },
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "136",
        "subdenomination": null
       }
      },
      {
       "type": "FunctionDefinition",
       "name": "tokens",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "IERC20"
          },
          "length": null
         },
         "name": "_tokens",
         "identifier": {
          "type": "Identifier",
          "name": "_tokens"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "_tokens"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_getArgIERC20Array"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "LOC_VARIABLE"
             },
             {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "numberOfTokens"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "wellFunction",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Call"
         },
         "name": "_wellFunction",
         "identifier": {
          "type": "Identifier",
          "name": "_wellFunction"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_wellFunction"
            },
            "memberName": "target"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "wellFunctionAddress"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_wellFunction"
            },
            "memberName": "data"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_getArgBytes"
            },
            "arguments": [
             {
              "type": "BinaryOperation",
              "operator": "+",
              "left": {
               "type": "Identifier",
               "name": "LOC_VARIABLE"
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "*",
               "left": {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "numberOfTokens"
                },
                "arguments": [],
                "names": [],
                "identifiers": []
               },
               "right": {
                "type": "Identifier",
                "name": "ONE_WORD"
               }
              }
             },
             {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "wellFunctionDataLength"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "pumps",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "Call"
          },
          "length": null
         },
         "name": "_pumps",
         "identifier": {
          "type": "Identifier",
          "name": "_pumps"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "_numberOfPumps",
            "identifier": {
             "type": "Identifier",
             "name": "_numberOfPumps"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "numberOfPumps"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "_numberOfPumps"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "ReturnStatement",
           "expression": {
            "type": "Identifier",
            "name": "_pumps"
           }
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "_pumps"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "NewExpression",
             "typeName": {
              "type": "ArrayTypeName",
              "baseTypeName": {
               "type": "UserDefinedTypeName",
               "namePath": "Call"
              },
              "length": null
             }
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_numberOfPumps"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "dataLoc",
            "identifier": {
             "type": "Identifier",
             "name": "dataLoc"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "BinaryOperation",
           "operator": "+",
           "left": {
            "type": "BinaryOperation",
            "operator": "+",
            "left": {
             "type": "Identifier",
             "name": "LOC_VARIABLE"
            },
            "right": {
             "type": "BinaryOperation",
             "operator": "*",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "numberOfTokens"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "Identifier",
              "name": "ONE_WORD"
             }
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "wellFunctionDataLength"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "pumpDataLength",
            "identifier": {
             "type": "Identifier",
             "name": "pumpDataLength"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": null
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_pumps"
            },
            "memberName": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": true
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "_pumps"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               },
               "memberName": "target"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "_getArgAddress"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "dataLoc"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "+=",
              "left": {
               "type": "Identifier",
               "name": "dataLoc"
              },
              "right": {
               "type": "Identifier",
               "name": "PACKED_ADDRESS"
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "pumpDataLength"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "_getArgUint256"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "dataLoc"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "+=",
              "left": {
               "type": "Identifier",
               "name": "dataLoc"
              },
              "right": {
               "type": "Identifier",
               "name": "ONE_WORD"
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "_pumps"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               },
               "memberName": "data"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "_getArgBytes"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "dataLoc"
                },
                {
                 "type": "Identifier",
                 "name": "pumpDataLength"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "+=",
              "left": {
               "type": "Identifier",
               "name": "dataLoc"
              },
              "right": {
               "type": "Identifier",
               "name": "pumpDataLength"
              }
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "wellData",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": []
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "aquifer",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getArgAddress"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "LOC_AQUIFER_ADDR"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "well",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "IERC20"
          },
          "length": null
         },
         "name": "_tokens",
         "identifier": {
          "type": "Identifier",
          "name": "_tokens"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Call"
         },
         "name": "_wellFunction",
         "identifier": {
          "type": "Identifier",
          "name": "_wellFunction"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "Call"
          },
          "length": null
         },
         "name": "_pumps",
         "identifier": {
          "type": "Identifier",
          "name": "_pumps"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_wellData",
         "identifier": {
          "type": "Identifier",
          "name": "_wellData"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_aquifer",
         "identifier": {
          "type": "Identifier",
          "name": "_aquifer"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "_tokens"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "tokens"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "_wellFunction"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "wellFunction"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "_pumps"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "pumps"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "_wellData"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "wellData"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "_aquifer"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "aquifer"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "numberOfTokens",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getArgUint256"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "LOC_TOKENS_COUNT"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "wellFunctionAddress",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getArgAddress"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "LOC_WELL_FUNCTION_ADDR"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "wellFunctionDataLength",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getArgUint256"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "LOC_WELL_FUNCTION_DATA_LENGTH"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "numberOfPumps",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getArgUint256"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "LOC_PUMPS_COUNT"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "firstPump",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Call"
         },
         "name": "_pump",
         "identifier": {
          "type": "Identifier",
          "name": "_pump"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "dataLoc",
            "identifier": {
             "type": "Identifier",
             "name": "dataLoc"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "BinaryOperation",
           "operator": "+",
           "left": {
            "type": "BinaryOperation",
            "operator": "+",
            "left": {
             "type": "Identifier",
             "name": "LOC_VARIABLE"
            },
            "right": {
             "type": "BinaryOperation",
             "operator": "*",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "numberOfTokens"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "Identifier",
              "name": "ONE_WORD"
             }
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "wellFunctionDataLength"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_pump"
            },
            "memberName": "target"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_getArgAddress"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "dataLoc"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_pump"
            },
            "memberName": "data"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_getArgBytes"
            },
            "arguments": [
             {
              "type": "BinaryOperation",
              "operator": "+",
              "left": {
               "type": "Identifier",
               "name": "dataLoc"
              },
              "right": {
               "type": "Identifier",
               "name": "ONE_WORD_PLUS_PACKED_ADDRESS"
              }
             },
             {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "_getArgUint256"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "+",
                "left": {
                 "type": "Identifier",
                 "name": "dataLoc"
                },
                "right": {
                 "type": "Identifier",
                 "name": "PACKED_ADDRESS"
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "swapFrom",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "fromToken",
         "identifier": {
          "type": "Identifier",
          "name": "fromToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "toToken",
         "identifier": {
          "type": "Identifier",
          "name": "toToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountIn",
         "identifier": {
          "type": "Identifier",
          "name": "amountIn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "minAmountOut",
         "identifier": {
          "type": "Identifier",
          "name": "minAmountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "recipient",
         "identifier": {
          "type": "Identifier",
          "name": "recipient"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "deadline",
         "identifier": {
          "type": "Identifier",
          "name": "deadline"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountOut",
         "identifier": {
          "type": "Identifier",
          "name": "amountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "fromToken"
            },
            "memberName": "safeTransferFrom"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "this"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "amountIn"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "amountOut"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_swapFrom"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "fromToken"
             },
             {
              "type": "Identifier",
              "name": "toToken"
             },
             {
              "type": "Identifier",
              "name": "amountIn"
             },
             {
              "type": "Identifier",
              "name": "minAmountOut"
             },
             {
              "type": "Identifier",
              "name": "recipient"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "nonReentrant",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "expire",
         "arguments": [
          {
           "type": "Identifier",
           "name": "deadline"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "swapFromFeeOnTransfer",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "fromToken",
         "identifier": {
          "type": "Identifier",
          "name": "fromToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "toToken",
         "identifier": {
          "type": "Identifier",
          "name": "toToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountIn",
         "identifier": {
          "type": "Identifier",
          "name": "amountIn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "minAmountOut",
         "identifier": {
          "type": "Identifier",
          "name": "minAmountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "recipient",
         "identifier": {
          "type": "Identifier",
          "name": "recipient"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "deadline",
         "identifier": {
          "type": "Identifier",
          "name": "deadline"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountOut",
         "identifier": {
          "type": "Identifier",
          "name": "amountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "amountIn"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_safeTransferFromFeeOnTransfer"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "fromToken"
             },
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "sender"
             },
             {
              "type": "Identifier",
              "name": "amountIn"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "amountOut"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_swapFrom"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "fromToken"
             },
             {
              "type": "Identifier",
              "name": "toToken"
             },
             {
              "type": "Identifier",
              "name": "amountIn"
             },
             {
              "type": "Identifier",
              "name": "minAmountOut"
             },
             {
              "type": "Identifier",
              "name": "recipient"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "nonReentrant",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "expire",
         "arguments": [
          {
           "type": "Identifier",
           "name": "deadline"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_swapFrom",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "fromToken",
         "identifier": {
          "type": "Identifier",
          "name": "fromToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "toToken",
         "identifier": {
          "type": "Identifier",
          "name": "toToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountIn",
         "identifier": {
          "type": "Identifier",
          "name": "amountIn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "minAmountOut",
         "identifier": {
          "type": "Identifier",
          "name": "minAmountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "recipient",
         "identifier": {
          "type": "Identifier",
          "name": "recipient"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountOut",
         "identifier": {
          "type": "Identifier",
          "name": "amountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "IERC20"
             },
             "length": null
            },
            "name": "_tokens",
            "identifier": {
             "type": "Identifier",
             "name": "_tokens"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "tokens"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "name": "i",
            "identifier": {
             "type": "Identifier",
             "name": "i"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "j",
            "identifier": {
             "type": "Identifier",
             "name": "j"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getIJ"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_tokens"
            },
            {
             "type": "Identifier",
             "name": "fromToken"
            },
            {
             "type": "Identifier",
             "name": "toToken"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "reserves",
            "identifier": {
             "type": "Identifier",
             "name": "reserves"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_updatePumps"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_tokens"
             },
             "memberName": "length"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "+=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "reserves"
            },
            "index": {
             "type": "Identifier",
             "name": "i"
            }
           },
           "right": {
            "type": "Identifier",
            "name": "amountIn"
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "reserveJBefore",
            "identifier": {
             "type": "Identifier",
             "name": "reserveJBefore"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "reserves"
           },
           "index": {
            "type": "Identifier",
            "name": "j"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "reserves"
            },
            "index": {
             "type": "Identifier",
             "name": "j"
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_calcReserve"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "wellFunction"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             },
             {
              "type": "Identifier",
              "name": "reserves"
             },
             {
              "type": "Identifier",
              "name": "j"
             },
             {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "totalSupply"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "amountOut"
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "-",
            "left": {
             "type": "Identifier",
             "name": "reserveJBefore"
            },
            "right": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "reserves"
             },
             "index": {
              "type": "Identifier",
              "name": "j"
             }
            }
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "amountOut"
           },
           "right": {
            "type": "Identifier",
            "name": "minAmountOut"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "SlippageOut"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "amountOut"
               },
               {
                "type": "Identifier",
                "name": "minAmountOut"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "toToken"
            },
            "memberName": "safeTransfer"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "recipient"
            },
            {
             "type": "Identifier",
             "name": "amountOut"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "Swap"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "fromToken"
            },
            {
             "type": "Identifier",
             "name": "toToken"
            },
            {
             "type": "Identifier",
             "name": "amountIn"
            },
            {
             "type": "Identifier",
             "name": "amountOut"
            },
            {
             "type": "Identifier",
             "name": "recipient"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_setReserves"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_tokens"
            },
            {
             "type": "Identifier",
             "name": "reserves"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getSwapOut",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "fromToken",
         "identifier": {
          "type": "Identifier",
          "name": "fromToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "toToken",
         "identifier": {
          "type": "Identifier",
          "name": "toToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountIn",
         "identifier": {
          "type": "Identifier",
          "name": "amountIn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountOut",
         "identifier": {
          "type": "Identifier",
          "name": "amountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "IERC20"
             },
             "length": null
            },
            "name": "_tokens",
            "identifier": {
             "type": "Identifier",
             "name": "_tokens"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "tokens"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "name": "i",
            "identifier": {
             "type": "Identifier",
             "name": "i"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "j",
            "identifier": {
             "type": "Identifier",
             "name": "j"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getIJ"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_tokens"
            },
            {
             "type": "Identifier",
             "name": "fromToken"
            },
            {
             "type": "Identifier",
             "name": "toToken"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "reserves",
            "identifier": {
             "type": "Identifier",
             "name": "reserves"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getReserves"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_tokens"
             },
             "memberName": "length"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "+=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "reserves"
            },
            "index": {
             "type": "Identifier",
             "name": "i"
            }
           },
           "right": {
            "type": "Identifier",
            "name": "amountIn"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "amountOut"
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "-",
            "left": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "reserves"
             },
             "index": {
              "type": "Identifier",
              "name": "j"
             }
            },
            "right": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "_calcReserve"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "wellFunction"
               },
               "arguments": [],
               "names": [],
               "identifiers": []
              },
              {
               "type": "Identifier",
               "name": "reserves"
              },
              {
               "type": "Identifier",
               "name": "j"
              },
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "totalSupply"
               },
               "arguments": [],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "readOnlyNonReentrant",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "swapTo",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "fromToken",
         "identifier": {
          "type": "Identifier",
          "name": "fromToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "toToken",
         "identifier": {
          "type": "Identifier",
          "name": "toToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "maxAmountIn",
         "identifier": {
          "type": "Identifier",
          "name": "maxAmountIn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountOut",
         "identifier": {
          "type": "Identifier",
          "name": "amountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "recipient",
         "identifier": {
          "type": "Identifier",
          "name": "recipient"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "deadline",
         "identifier": {
          "type": "Identifier",
          "name": "deadline"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountIn",
         "identifier": {
          "type": "Identifier",
          "name": "amountIn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "IERC20"
             },
             "length": null
            },
            "name": "_tokens",
            "identifier": {
             "type": "Identifier",
             "name": "_tokens"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "tokens"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "name": "i",
            "identifier": {
             "type": "Identifier",
             "name": "i"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "j",
            "identifier": {
             "type": "Identifier",
             "name": "j"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getIJ"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_tokens"
            },
            {
             "type": "Identifier",
             "name": "fromToken"
            },
            {
             "type": "Identifier",
             "name": "toToken"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "reserves",
            "identifier": {
             "type": "Identifier",
             "name": "reserves"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_updatePumps"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_tokens"
             },
             "memberName": "length"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "-=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "reserves"
            },
            "index": {
             "type": "Identifier",
             "name": "j"
            }
           },
           "right": {
            "type": "Identifier",
            "name": "amountOut"
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "reserveIBefore",
            "identifier": {
             "type": "Identifier",
             "name": "reserveIBefore"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "reserves"
           },
           "index": {
            "type": "Identifier",
            "name": "i"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "reserves"
            },
            "index": {
             "type": "Identifier",
             "name": "i"
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_calcReserve"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "wellFunction"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             },
             {
              "type": "Identifier",
              "name": "reserves"
             },
             {
              "type": "Identifier",
              "name": "i"
             },
             {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "totalSupply"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "amountIn"
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "-",
            "left": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "reserves"
             },
             "index": {
              "type": "Identifier",
              "name": "i"
             }
            },
            "right": {
             "type": "Identifier",
             "name": "reserveIBefore"
            }
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "amountIn"
           },
           "right": {
            "type": "Identifier",
            "name": "maxAmountIn"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "SlippageIn"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "amountIn"
               },
               {
                "type": "Identifier",
                "name": "maxAmountIn"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_swapTo"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "fromToken"
            },
            {
             "type": "Identifier",
             "name": "toToken"
            },
            {
             "type": "Identifier",
             "name": "amountIn"
            },
            {
             "type": "Identifier",
             "name": "amountOut"
            },
            {
             "type": "Identifier",
             "name": "recipient"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_setReserves"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_tokens"
            },
            {
             "type": "Identifier",
             "name": "reserves"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "nonReentrant",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "expire",
         "arguments": [
          {
           "type": "Identifier",
           "name": "deadline"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_swapTo",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "fromToken",
         "identifier": {
          "type": "Identifier",
          "name": "fromToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "toToken",
         "identifier": {
          "type": "Identifier",
          "name": "toToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountIn",
         "identifier": {
          "type": "Identifier",
          "name": "amountIn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountOut",
         "identifier": {
          "type": "Identifier",
          "name": "amountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "recipient",
         "identifier": {
          "type": "Identifier",
          "name": "recipient"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "fromToken"
            },
            "memberName": "safeTransferFrom"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "this"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "amountIn"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "toToken"
            },
            "memberName": "safeTransfer"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "recipient"
            },
            {
             "type": "Identifier",
             "name": "amountOut"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "Swap"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "fromToken"
            },
            {
             "type": "Identifier",
             "name": "toToken"
            },
            {
             "type": "Identifier",
             "name": "amountIn"
            },
            {
             "type": "Identifier",
             "name": "amountOut"
            },
            {
             "type": "Identifier",
             "name": "recipient"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getSwapIn",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "fromToken",
         "identifier": {
          "type": "Identifier",
          "name": "fromToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "toToken",
         "identifier": {
          "type": "Identifier",
          "name": "toToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountOut",
         "identifier": {
          "type": "Identifier",
          "name": "amountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountIn",
         "identifier": {
          "type": "Identifier",
          "name": "amountIn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "IERC20"
             },
             "length": null
            },
            "name": "_tokens",
            "identifier": {
             "type": "Identifier",
             "name": "_tokens"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "tokens"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "name": "i",
            "identifier": {
             "type": "Identifier",
             "name": "i"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "j",
            "identifier": {
             "type": "Identifier",
             "name": "j"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getIJ"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_tokens"
            },
            {
             "type": "Identifier",
             "name": "fromToken"
            },
            {
             "type": "Identifier",
             "name": "toToken"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "reserves",
            "identifier": {
             "type": "Identifier",
             "name": "reserves"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getReserves"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_tokens"
             },
             "memberName": "length"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "-=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "reserves"
            },
            "index": {
             "type": "Identifier",
             "name": "j"
            }
           },
           "right": {
            "type": "Identifier",
            "name": "amountOut"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "amountIn"
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "-",
            "left": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "_calcReserve"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "wellFunction"
               },
               "arguments": [],
               "names": [],
               "identifiers": []
              },
              {
               "type": "Identifier",
               "name": "reserves"
              },
              {
               "type": "Identifier",
               "name": "i"
              },
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "totalSupply"
               },
               "arguments": [],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            "right": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "reserves"
             },
             "index": {
              "type": "Identifier",
              "name": "i"
             }
            }
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "readOnlyNonReentrant",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "shift",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "tokenOut",
         "identifier": {
          "type": "Identifier",
          "name": "tokenOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "minAmountOut",
         "identifier": {
          "type": "Identifier",
          "name": "minAmountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "recipient",
         "identifier": {
          "type": "Identifier",
          "name": "recipient"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountOut",
         "identifier": {
          "type": "Identifier",
          "name": "amountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "IERC20"
             },
             "length": null
            },
            "name": "_tokens",
            "identifier": {
             "type": "Identifier",
             "name": "_tokens"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "tokens"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "tokensLength",
            "identifier": {
             "type": "Identifier",
             "name": "tokensLength"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "_tokens"
           },
           "memberName": "length"
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_updatePumps"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "tokensLength"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "reserves",
            "identifier": {
             "type": "Identifier",
             "name": "reserves"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "NewExpression",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            }
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "tokensLength"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": null
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "Identifier",
            "name": "tokensLength"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": true
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "reserves"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "_tokens"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "i"
                 }
                },
                "memberName": "balanceOf"
               },
               "arguments": [
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "address"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "this"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "j",
            "identifier": {
             "type": "Identifier",
             "name": "j"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getJ"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_tokens"
            },
            {
             "type": "Identifier",
             "name": "tokenOut"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "amountOut"
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "-",
            "left": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "reserves"
             },
             "index": {
              "type": "Identifier",
              "name": "j"
             }
            },
            "right": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "_calcReserve"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "wellFunction"
               },
               "arguments": [],
               "names": [],
               "identifiers": []
              },
              {
               "type": "Identifier",
               "name": "reserves"
              },
              {
               "type": "Identifier",
               "name": "j"
              },
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "totalSupply"
               },
               "arguments": [],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">=",
           "left": {
            "type": "Identifier",
            "name": "amountOut"
           },
           "right": {
            "type": "Identifier",
            "name": "minAmountOut"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "tokenOut"
               },
               "memberName": "safeTransfer"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "recipient"
               },
               {
                "type": "Identifier",
                "name": "amountOut"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "-=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "reserves"
               },
               "index": {
                "type": "Identifier",
                "name": "j"
               }
              },
              "right": {
               "type": "Identifier",
               "name": "amountOut"
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "_setReserves"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_tokens"
               },
               {
                "type": "Identifier",
                "name": "reserves"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "EmitStatement",
             "eventCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "Shift"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "reserves"
               },
               {
                "type": "Identifier",
                "name": "tokenOut"
               },
               {
                "type": "Identifier",
                "name": "amountOut"
               },
               {
                "type": "Identifier",
                "name": "recipient"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "SlippageOut"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "amountOut"
               },
               {
                "type": "Identifier",
                "name": "minAmountOut"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "nonReentrant",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getShiftOut",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "tokenOut",
         "identifier": {
          "type": "Identifier",
          "name": "tokenOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountOut",
         "identifier": {
          "type": "Identifier",
          "name": "amountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "IERC20"
             },
             "length": null
            },
            "name": "_tokens",
            "identifier": {
             "type": "Identifier",
             "name": "_tokens"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "tokens"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "tokensLength",
            "identifier": {
             "type": "Identifier",
             "name": "tokensLength"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "_tokens"
           },
           "memberName": "length"
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "reserves",
            "identifier": {
             "type": "Identifier",
             "name": "reserves"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "NewExpression",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            }
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "tokensLength"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": null
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "Identifier",
            "name": "tokensLength"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": true
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "reserves"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "_tokens"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "i"
                 }
                },
                "memberName": "balanceOf"
               },
               "arguments": [
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "address"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "this"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "j",
            "identifier": {
             "type": "Identifier",
             "name": "j"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getJ"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_tokens"
            },
            {
             "type": "Identifier",
             "name": "tokenOut"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "amountOut"
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "-",
            "left": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "reserves"
             },
             "index": {
              "type": "Identifier",
              "name": "j"
             }
            },
            "right": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "_calcReserve"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "wellFunction"
               },
               "arguments": [],
               "names": [],
               "identifiers": []
              },
              {
               "type": "Identifier",
               "name": "reserves"
              },
              {
               "type": "Identifier",
               "name": "j"
              },
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "totalSupply"
               },
               "arguments": [],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "readOnlyNonReentrant",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "addLiquidity",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "tokenAmountsIn",
         "identifier": {
          "type": "Identifier",
          "name": "tokenAmountsIn"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "minLpAmountOut",
         "identifier": {
          "type": "Identifier",
          "name": "minLpAmountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "recipient",
         "identifier": {
          "type": "Identifier",
          "name": "recipient"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "deadline",
         "identifier": {
          "type": "Identifier",
          "name": "deadline"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpAmountOut",
         "identifier": {
          "type": "Identifier",
          "name": "lpAmountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "lpAmountOut"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_addLiquidity"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "tokenAmountsIn"
             },
             {
              "type": "Identifier",
              "name": "minLpAmountOut"
             },
             {
              "type": "Identifier",
              "name": "recipient"
             },
             {
              "type": "BooleanLiteral",
              "value": false
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "nonReentrant",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "expire",
         "arguments": [
          {
           "type": "Identifier",
           "name": "deadline"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "addLiquidityFeeOnTransfer",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "tokenAmountsIn",
         "identifier": {
          "type": "Identifier",
          "name": "tokenAmountsIn"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "minLpAmountOut",
         "identifier": {
          "type": "Identifier",
          "name": "minLpAmountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "recipient",
         "identifier": {
          "type": "Identifier",
          "name": "recipient"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "deadline",
         "identifier": {
          "type": "Identifier",
          "name": "deadline"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpAmountOut",
         "identifier": {
          "type": "Identifier",
          "name": "lpAmountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "lpAmountOut"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_addLiquidity"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "tokenAmountsIn"
             },
             {
              "type": "Identifier",
              "name": "minLpAmountOut"
             },
             {
              "type": "Identifier",
              "name": "recipient"
             },
             {
              "type": "BooleanLiteral",
              "value": true
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "nonReentrant",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "expire",
         "arguments": [
          {
           "type": "Identifier",
           "name": "deadline"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_addLiquidity",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "tokenAmountsIn",
         "identifier": {
          "type": "Identifier",
          "name": "tokenAmountsIn"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "minLpAmountOut",
         "identifier": {
          "type": "Identifier",
          "name": "minLpAmountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "recipient",
         "identifier": {
          "type": "Identifier",
          "name": "recipient"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "feeOnTransfer",
         "identifier": {
          "type": "Identifier",
          "name": "feeOnTransfer"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpAmountOut",
         "identifier": {
          "type": "Identifier",
          "name": "lpAmountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "IERC20"
             },
             "length": null
            },
            "name": "_tokens",
            "identifier": {
             "type": "Identifier",
             "name": "_tokens"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "tokens"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "tokensLength",
            "identifier": {
             "type": "Identifier",
             "name": "tokensLength"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "_tokens"
           },
           "memberName": "length"
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "reserves",
            "identifier": {
             "type": "Identifier",
             "name": "reserves"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_updatePumps"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "tokensLength"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "_tokenAmountIn",
            "identifier": {
             "type": "Identifier",
             "name": "_tokenAmountIn"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "Identifier",
           "name": "feeOnTransfer"
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ForStatement",
             "initExpression": {
              "type": "VariableDeclarationStatement",
              "variables": [
               {
                "type": "VariableDeclaration",
                "typeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "name": "i",
                "identifier": {
                 "type": "Identifier",
                 "name": "i"
                },
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false,
                "expression": null
               }
              ],
              "initialValue": null
             },
             "conditionExpression": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "i"
              },
              "right": {
               "type": "Identifier",
               "name": "tokensLength"
              }
             },
             "loopExpression": {
              "type": "ExpressionStatement",
              "expression": {
               "type": "UnaryOperation",
               "operator": "++",
               "subExpression": {
                "type": "Identifier",
                "name": "i"
               },
               "isPrefix": true
              }
             },
             "body": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "_tokenAmountIn"
                 },
                 "right": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "tokenAmountsIn"
                  },
                  "index": {
                   "type": "Identifier",
                   "name": "i"
                  }
                 }
                }
               },
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "==",
                 "left": {
                  "type": "Identifier",
                  "name": "_tokenAmountIn"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                 }
                },
                "trueBody": {
                 "type": "ContinueStatement"
                },
                "falseBody": null
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "_tokenAmountIn"
                 },
                 "right": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "Identifier",
                   "name": "_safeTransferFromFeeOnTransfer"
                  },
                  "arguments": [
                   {
                    "type": "IndexAccess",
                    "base": {
                     "type": "Identifier",
                     "name": "_tokens"
                    },
                    "index": {
                     "type": "Identifier",
                     "name": "i"
                    }
                   },
                   {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "msg"
                    },
                    "memberName": "sender"
                   },
                   {
                    "type": "Identifier",
                    "name": "_tokenAmountIn"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "+=",
                 "left": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "reserves"
                  },
                  "index": {
                   "type": "Identifier",
                   "name": "i"
                  }
                 },
                 "right": {
                  "type": "Identifier",
                  "name": "_tokenAmountIn"
                 }
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "tokenAmountsIn"
                  },
                  "index": {
                   "type": "Identifier",
                   "name": "i"
                  }
                 },
                 "right": {
                  "type": "Identifier",
                  "name": "_tokenAmountIn"
                 }
                }
               }
              ]
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ForStatement",
             "initExpression": {
              "type": "VariableDeclarationStatement",
              "variables": [
               {
                "type": "VariableDeclaration",
                "typeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "name": "i",
                "identifier": {
                 "type": "Identifier",
                 "name": "i"
                },
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false,
                "expression": null
               }
              ],
              "initialValue": null
             },
             "conditionExpression": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "i"
              },
              "right": {
               "type": "Identifier",
               "name": "tokensLength"
              }
             },
             "loopExpression": {
              "type": "ExpressionStatement",
              "expression": {
               "type": "UnaryOperation",
               "operator": "++",
               "subExpression": {
                "type": "Identifier",
                "name": "i"
               },
               "isPrefix": true
              }
             },
             "body": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "_tokenAmountIn"
                 },
                 "right": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "tokenAmountsIn"
                  },
                  "index": {
                   "type": "Identifier",
                   "name": "i"
                  }
                 }
                }
               },
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "==",
                 "left": {
                  "type": "Identifier",
                  "name": "_tokenAmountIn"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                 }
                },
                "trueBody": {
                 "type": "ContinueStatement"
                },
                "falseBody": null
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "IndexAccess",
                   "base": {
                    "type": "Identifier",
                    "name": "_tokens"
                   },
                   "index": {
                    "type": "Identifier",
                    "name": "i"
                   }
                  },
                  "memberName": "safeTransferFrom"
                 },
                 "arguments": [
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "msg"
                   },
                   "memberName": "sender"
                  },
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "Identifier",
                    "name": "address"
                   },
                   "arguments": [
                    {
                     "type": "Identifier",
                     "name": "this"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  },
                  {
                   "type": "Identifier",
                   "name": "_tokenAmountIn"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "+=",
                 "left": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "reserves"
                  },
                  "index": {
                   "type": "Identifier",
                   "name": "i"
                  }
                 },
                 "right": {
                  "type": "Identifier",
                  "name": "_tokenAmountIn"
                 }
                }
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "lpAmountOut"
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "-",
            "left": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "_calcLpTokenSupply"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "wellFunction"
               },
               "arguments": [],
               "names": [],
               "identifiers": []
              },
              {
               "type": "Identifier",
               "name": "reserves"
              }
             ],
             "names": [],
             "identifiers": []
            },
            "right": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "totalSupply"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            }
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "lpAmountOut"
           },
           "right": {
            "type": "Identifier",
            "name": "minLpAmountOut"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "SlippageOut"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "lpAmountOut"
               },
               {
                "type": "Identifier",
                "name": "minLpAmountOut"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_mint"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "recipient"
            },
            {
             "type": "Identifier",
             "name": "lpAmountOut"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_setReserves"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_tokens"
            },
            {
             "type": "Identifier",
             "name": "reserves"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "AddLiquidity"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "tokenAmountsIn"
            },
            {
             "type": "Identifier",
             "name": "lpAmountOut"
            },
            {
             "type": "Identifier",
             "name": "recipient"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getAddLiquidityOut",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "tokenAmountsIn",
         "identifier": {
          "type": "Identifier",
          "name": "tokenAmountsIn"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpAmountOut",
         "identifier": {
          "type": "Identifier",
          "name": "lpAmountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "IERC20"
             },
             "length": null
            },
            "name": "_tokens",
            "identifier": {
             "type": "Identifier",
             "name": "_tokens"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "tokens"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "tokensLength",
            "identifier": {
             "type": "Identifier",
             "name": "tokensLength"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "_tokens"
           },
           "memberName": "length"
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "reserves",
            "identifier": {
             "type": "Identifier",
             "name": "reserves"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getReserves"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "tokensLength"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": null
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "Identifier",
            "name": "tokensLength"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": true
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "+=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "reserves"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              },
              "right": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "tokenAmountsIn"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              }
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "lpAmountOut"
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "-",
            "left": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "_calcLpTokenSupply"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "wellFunction"
               },
               "arguments": [],
               "names": [],
               "identifiers": []
              },
              {
               "type": "Identifier",
               "name": "reserves"
              }
             ],
             "names": [],
             "identifiers": []
            },
            "right": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "totalSupply"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            }
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "readOnlyNonReentrant",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "removeLiquidity",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpAmountIn",
         "identifier": {
          "type": "Identifier",
          "name": "lpAmountIn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "minTokenAmountsOut",
         "identifier": {
          "type": "Identifier",
          "name": "minTokenAmountsOut"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "recipient",
         "identifier": {
          "type": "Identifier",
          "name": "recipient"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "deadline",
         "identifier": {
          "type": "Identifier",
          "name": "deadline"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "tokenAmountsOut",
         "identifier": {
          "type": "Identifier",
          "name": "tokenAmountsOut"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "IERC20"
             },
             "length": null
            },
            "name": "_tokens",
            "identifier": {
             "type": "Identifier",
             "name": "_tokens"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "tokens"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "tokensLength",
            "identifier": {
             "type": "Identifier",
             "name": "tokensLength"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "_tokens"
           },
           "memberName": "length"
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "reserves",
            "identifier": {
             "type": "Identifier",
             "name": "reserves"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_updatePumps"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "tokensLength"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "tokenAmountsOut"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_calcLPTokenUnderlying"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "wellFunction"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             },
             {
              "type": "Identifier",
              "name": "lpAmountIn"
             },
             {
              "type": "Identifier",
              "name": "reserves"
             },
             {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "totalSupply"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_burn"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "lpAmountIn"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "_tokenAmountOut",
            "identifier": {
             "type": "Identifier",
             "name": "_tokenAmountOut"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": null
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "Identifier",
            "name": "tokensLength"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": true
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "_tokenAmountOut"
              },
              "right": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "tokenAmountsOut"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              }
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "_tokenAmountOut"
              },
              "right": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "minTokenAmountsOut"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "RevertStatement",
                "revertCall": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "SlippageOut"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "_tokenAmountOut"
                  },
                  {
                   "type": "IndexAccess",
                   "base": {
                    "type": "Identifier",
                    "name": "minTokenAmountsOut"
                   },
                   "index": {
                    "type": "Identifier",
                    "name": "i"
                   }
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": null
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "_tokens"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               },
               "memberName": "safeTransfer"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "recipient"
               },
               {
                "type": "Identifier",
                "name": "_tokenAmountOut"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "-=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "reserves"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              },
              "right": {
               "type": "Identifier",
               "name": "_tokenAmountOut"
              }
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_setReserves"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_tokens"
            },
            {
             "type": "Identifier",
             "name": "reserves"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RemoveLiquidity"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "lpAmountIn"
            },
            {
             "type": "Identifier",
             "name": "tokenAmountsOut"
            },
            {
             "type": "Identifier",
             "name": "recipient"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "nonReentrant",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "expire",
         "arguments": [
          {
           "type": "Identifier",
           "name": "deadline"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getRemoveLiquidityOut",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpAmountIn",
         "identifier": {
          "type": "Identifier",
          "name": "lpAmountIn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "tokenAmountsOut",
         "identifier": {
          "type": "Identifier",
          "name": "tokenAmountsOut"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "IERC20"
             },
             "length": null
            },
            "name": "_tokens",
            "identifier": {
             "type": "Identifier",
             "name": "_tokens"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "tokens"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "reserves",
            "identifier": {
             "type": "Identifier",
             "name": "reserves"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getReserves"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_tokens"
             },
             "memberName": "length"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "lpTokenSupply",
            "identifier": {
             "type": "Identifier",
             "name": "lpTokenSupply"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "totalSupply"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "tokenAmountsOut"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_calcLPTokenUnderlying"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "wellFunction"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             },
             {
              "type": "Identifier",
              "name": "lpAmountIn"
             },
             {
              "type": "Identifier",
              "name": "reserves"
             },
             {
              "type": "Identifier",
              "name": "lpTokenSupply"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "readOnlyNonReentrant",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "removeLiquidityOneToken",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpAmountIn",
         "identifier": {
          "type": "Identifier",
          "name": "lpAmountIn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "tokenOut",
         "identifier": {
          "type": "Identifier",
          "name": "tokenOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "minTokenAmountOut",
         "identifier": {
          "type": "Identifier",
          "name": "minTokenAmountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "recipient",
         "identifier": {
          "type": "Identifier",
          "name": "recipient"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "deadline",
         "identifier": {
          "type": "Identifier",
          "name": "deadline"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "tokenAmountOut",
         "identifier": {
          "type": "Identifier",
          "name": "tokenAmountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "IERC20"
             },
             "length": null
            },
            "name": "_tokens",
            "identifier": {
             "type": "Identifier",
             "name": "_tokens"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "tokens"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "reserves",
            "identifier": {
             "type": "Identifier",
             "name": "reserves"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_updatePumps"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_tokens"
             },
             "memberName": "length"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "j",
            "identifier": {
             "type": "Identifier",
             "name": "j"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getJ"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_tokens"
            },
            {
             "type": "Identifier",
             "name": "tokenOut"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "tokenAmountOut"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_getRemoveLiquidityOneTokenOut"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "lpAmountIn"
             },
             {
              "type": "Identifier",
              "name": "j"
             },
             {
              "type": "Identifier",
              "name": "reserves"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "tokenAmountOut"
           },
           "right": {
            "type": "Identifier",
            "name": "minTokenAmountOut"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "SlippageOut"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "tokenAmountOut"
               },
               {
                "type": "Identifier",
                "name": "minTokenAmountOut"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_burn"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "lpAmountIn"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "tokenOut"
            },
            "memberName": "safeTransfer"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "recipient"
            },
            {
             "type": "Identifier",
             "name": "tokenAmountOut"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "-=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "reserves"
            },
            "index": {
             "type": "Identifier",
             "name": "j"
            }
           },
           "right": {
            "type": "Identifier",
            "name": "tokenAmountOut"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_setReserves"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_tokens"
            },
            {
             "type": "Identifier",
             "name": "reserves"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RemoveLiquidityOneToken"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "lpAmountIn"
            },
            {
             "type": "Identifier",
             "name": "tokenOut"
            },
            {
             "type": "Identifier",
             "name": "tokenAmountOut"
            },
            {
             "type": "Identifier",
             "name": "recipient"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "nonReentrant",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "expire",
         "arguments": [
          {
           "type": "Identifier",
           "name": "deadline"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getRemoveLiquidityOneTokenOut",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpAmountIn",
         "identifier": {
          "type": "Identifier",
          "name": "lpAmountIn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "tokenOut",
         "identifier": {
          "type": "Identifier",
          "name": "tokenOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "tokenAmountOut",
         "identifier": {
          "type": "Identifier",
          "name": "tokenAmountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "IERC20"
             },
             "length": null
            },
            "name": "_tokens",
            "identifier": {
             "type": "Identifier",
             "name": "_tokens"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "tokens"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "reserves",
            "identifier": {
             "type": "Identifier",
             "name": "reserves"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getReserves"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_tokens"
             },
             "memberName": "length"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "tokenAmountOut"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_getRemoveLiquidityOneTokenOut"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "lpAmountIn"
             },
             {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "_getJ"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_tokens"
               },
               {
                "type": "Identifier",
                "name": "tokenOut"
               }
              ],
              "names": [],
              "identifiers": []
             },
             {
              "type": "Identifier",
              "name": "reserves"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "readOnlyNonReentrant",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "_getRemoveLiquidityOneTokenOut",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpAmountIn",
         "identifier": {
          "type": "Identifier",
          "name": "lpAmountIn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "j",
         "identifier": {
          "type": "Identifier",
          "name": "j"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "reserves",
         "identifier": {
          "type": "Identifier",
          "name": "reserves"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "tokenAmountOut",
         "identifier": {
          "type": "Identifier",
          "name": "tokenAmountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "newReserveJ",
            "identifier": {
             "type": "Identifier",
             "name": "newReserveJ"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_calcReserve"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "wellFunction"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "reserves"
            },
            {
             "type": "Identifier",
             "name": "j"
            },
            {
             "type": "BinaryOperation",
             "operator": "-",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "totalSupply"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "Identifier",
              "name": "lpAmountIn"
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "tokenAmountOut"
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "-",
            "left": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "reserves"
             },
             "index": {
              "type": "Identifier",
              "name": "j"
             }
            },
            "right": {
             "type": "Identifier",
             "name": "newReserveJ"
            }
           }
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "removeLiquidityImbalanced",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "maxLpAmountIn",
         "identifier": {
          "type": "Identifier",
          "name": "maxLpAmountIn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "tokenAmountsOut",
         "identifier": {
          "type": "Identifier",
          "name": "tokenAmountsOut"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "recipient",
         "identifier": {
          "type": "Identifier",
          "name": "recipient"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "deadline",
         "identifier": {
          "type": "Identifier",
          "name": "deadline"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpAmountIn",
         "identifier": {
          "type": "Identifier",
          "name": "lpAmountIn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "IERC20"
             },
             "length": null
            },
            "name": "_tokens",
            "identifier": {
             "type": "Identifier",
             "name": "_tokens"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "tokens"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "tokensLength",
            "identifier": {
             "type": "Identifier",
             "name": "tokensLength"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "_tokens"
           },
           "memberName": "length"
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "reserves",
            "identifier": {
             "type": "Identifier",
             "name": "reserves"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_updatePumps"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "tokensLength"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "_tokenAmountOut",
            "identifier": {
             "type": "Identifier",
             "name": "_tokenAmountOut"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": null
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "Identifier",
            "name": "tokensLength"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": true
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "_tokenAmountOut"
              },
              "right": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "tokenAmountsOut"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "_tokens"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               },
               "memberName": "safeTransfer"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "recipient"
               },
               {
                "type": "Identifier",
                "name": "_tokenAmountOut"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "-=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "reserves"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              },
              "right": {
               "type": "Identifier",
               "name": "_tokenAmountOut"
              }
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "lpAmountIn"
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "-",
            "left": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "totalSupply"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            "right": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "_calcLpTokenSupply"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "wellFunction"
               },
               "arguments": [],
               "names": [],
               "identifiers": []
              },
              {
               "type": "Identifier",
               "name": "reserves"
              }
             ],
             "names": [],
             "identifiers": []
            }
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "lpAmountIn"
           },
           "right": {
            "type": "Identifier",
            "name": "maxLpAmountIn"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "SlippageIn"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "lpAmountIn"
               },
               {
                "type": "Identifier",
                "name": "maxLpAmountIn"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_burn"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "lpAmountIn"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_setReserves"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_tokens"
            },
            {
             "type": "Identifier",
             "name": "reserves"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RemoveLiquidity"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "lpAmountIn"
            },
            {
             "type": "Identifier",
             "name": "tokenAmountsOut"
            },
            {
             "type": "Identifier",
             "name": "recipient"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "nonReentrant",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "expire",
         "arguments": [
          {
           "type": "Identifier",
           "name": "deadline"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getRemoveLiquidityImbalancedIn",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "tokenAmountsOut",
         "identifier": {
          "type": "Identifier",
          "name": "tokenAmountsOut"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpAmountIn",
         "identifier": {
          "type": "Identifier",
          "name": "lpAmountIn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "IERC20"
             },
             "length": null
            },
            "name": "_tokens",
            "identifier": {
             "type": "Identifier",
             "name": "_tokens"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "tokens"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "tokensLength",
            "identifier": {
             "type": "Identifier",
             "name": "tokensLength"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "_tokens"
           },
           "memberName": "length"
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "reserves",
            "identifier": {
             "type": "Identifier",
             "name": "reserves"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getReserves"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "tokensLength"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": null
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "Identifier",
            "name": "tokensLength"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": true
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "-=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "reserves"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              },
              "right": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "tokenAmountsOut"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              }
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "lpAmountIn"
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "-",
            "left": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "totalSupply"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            "right": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "_calcLpTokenSupply"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "wellFunction"
               },
               "arguments": [],
               "names": [],
               "identifiers": []
              },
              {
               "type": "Identifier",
               "name": "reserves"
              }
             ],
             "names": [],
             "identifiers": []
            }
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "readOnlyNonReentrant",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "sync",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "recipient",
         "identifier": {
          "type": "Identifier",
          "name": "recipient"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "minLpAmountOut",
         "identifier": {
          "type": "Identifier",
          "name": "minLpAmountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpAmountOut",
         "identifier": {
          "type": "Identifier",
          "name": "lpAmountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "IERC20"
             },
             "length": null
            },
            "name": "_tokens",
            "identifier": {
             "type": "Identifier",
             "name": "_tokens"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "tokens"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "tokensLength",
            "identifier": {
             "type": "Identifier",
             "name": "tokensLength"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "_tokens"
           },
           "memberName": "length"
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_updatePumps"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "tokensLength"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "reserves",
            "identifier": {
             "type": "Identifier",
             "name": "reserves"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "NewExpression",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            }
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "tokensLength"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": null
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "Identifier",
            "name": "tokensLength"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": true
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "reserves"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "_tokens"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "i"
                 }
                },
                "memberName": "balanceOf"
               },
               "arguments": [
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "address"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "this"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "newTokenSupply",
            "identifier": {
             "type": "Identifier",
             "name": "newTokenSupply"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_calcLpTokenSupply"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "wellFunction"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "reserves"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "oldTokenSupply",
            "identifier": {
             "type": "Identifier",
             "name": "oldTokenSupply"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "totalSupply"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "newTokenSupply"
           },
           "right": {
            "type": "Identifier",
            "name": "oldTokenSupply"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "lpAmountOut"
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "-",
               "left": {
                "type": "Identifier",
                "name": "newTokenSupply"
               },
               "right": {
                "type": "Identifier",
                "name": "oldTokenSupply"
               }
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "_mint"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "recipient"
               },
               {
                "type": "Identifier",
                "name": "lpAmountOut"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "lpAmountOut"
           },
           "right": {
            "type": "Identifier",
            "name": "minLpAmountOut"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "SlippageOut"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "lpAmountOut"
               },
               {
                "type": "Identifier",
                "name": "minLpAmountOut"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_setReserves"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_tokens"
            },
            {
             "type": "Identifier",
             "name": "reserves"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "Sync"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "reserves"
            },
            {
             "type": "Identifier",
             "name": "lpAmountOut"
            },
            {
             "type": "Identifier",
             "name": "recipient"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "nonReentrant",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getSyncOut",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpAmountOut",
         "identifier": {
          "type": "Identifier",
          "name": "lpAmountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "IERC20"
             },
             "length": null
            },
            "name": "_tokens",
            "identifier": {
             "type": "Identifier",
             "name": "_tokens"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "tokens"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "tokensLength",
            "identifier": {
             "type": "Identifier",
             "name": "tokensLength"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "_tokens"
           },
           "memberName": "length"
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "reserves",
            "identifier": {
             "type": "Identifier",
             "name": "reserves"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "NewExpression",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            }
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "tokensLength"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": null
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "Identifier",
            "name": "tokensLength"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": true
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "reserves"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "_tokens"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "i"
                 }
                },
                "memberName": "balanceOf"
               },
               "arguments": [
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "address"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "this"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "newTokenSupply",
            "identifier": {
             "type": "Identifier",
             "name": "newTokenSupply"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_calcLpTokenSupply"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "wellFunction"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "reserves"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "oldTokenSupply",
            "identifier": {
             "type": "Identifier",
             "name": "oldTokenSupply"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "totalSupply"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "newTokenSupply"
           },
           "right": {
            "type": "Identifier",
            "name": "oldTokenSupply"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "lpAmountOut"
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "-",
               "left": {
                "type": "Identifier",
                "name": "newTokenSupply"
               },
               "right": {
                "type": "Identifier",
                "name": "oldTokenSupply"
               }
              }
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "readOnlyNonReentrant",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "skim",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "recipient",
         "identifier": {
          "type": "Identifier",
          "name": "recipient"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "skimAmounts",
         "identifier": {
          "type": "Identifier",
          "name": "skimAmounts"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "IERC20"
             },
             "length": null
            },
            "name": "_tokens",
            "identifier": {
             "type": "Identifier",
             "name": "_tokens"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "tokens"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "tokensLength",
            "identifier": {
             "type": "Identifier",
             "name": "tokensLength"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "_tokens"
           },
           "memberName": "length"
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "reserves",
            "identifier": {
             "type": "Identifier",
             "name": "reserves"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getReserves"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "tokensLength"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "skimAmounts"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "NewExpression",
             "typeName": {
              "type": "ArrayTypeName",
              "baseTypeName": {
               "type": "ElementaryTypeName",
               "name": "uint256",
               "stateMutability": null
              },
              "length": null
             }
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "tokensLength"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": null
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "Identifier",
            "name": "tokensLength"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": true
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "skimAmounts"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "-",
               "left": {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "_tokens"
                  },
                  "index": {
                   "type": "Identifier",
                   "name": "i"
                  }
                 },
                 "memberName": "balanceOf"
                },
                "arguments": [
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "Identifier",
                   "name": "address"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "this"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "right": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "reserves"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               }
              }
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": ">",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "skimAmounts"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "IndexAccess",
                   "base": {
                    "type": "Identifier",
                    "name": "_tokens"
                   },
                   "index": {
                    "type": "Identifier",
                    "name": "i"
                   }
                  },
                  "memberName": "safeTransfer"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "recipient"
                  },
                  {
                   "type": "IndexAccess",
                   "base": {
                    "type": "Identifier",
                    "name": "skimAmounts"
                   },
                   "index": {
                    "type": "Identifier",
                    "name": "i"
                   }
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": null
            }
           ]
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "nonReentrant",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getReserves",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "reserves",
         "identifier": {
          "type": "Identifier",
          "name": "reserves"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "reserves"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_getReserves"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "numberOfTokens"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "readOnlyNonReentrant",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "_getReserves",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_numberOfTokens",
         "identifier": {
          "type": "Identifier",
          "name": "_numberOfTokens"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "reserves",
         "identifier": {
          "type": "Identifier",
          "name": "reserves"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "reserves"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "LibBytes"
             },
             "memberName": "readUint128"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "RESERVES_STORAGE_SLOT"
             },
             {
              "type": "Identifier",
              "name": "_numberOfTokens"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "_setReserves",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "IERC20"
          },
          "length": null
         },
         "name": "_tokens",
         "identifier": {
          "type": "Identifier",
          "name": "_tokens"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "reserves",
         "identifier": {
          "type": "Identifier",
          "name": "reserves"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": null
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "reserves"
            },
            "memberName": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": true
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": ">",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "reserves"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "_tokens"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "i"
                 }
                },
                "memberName": "balanceOf"
               },
               "arguments": [
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "address"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "this"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               ],
               "names": [],
               "identifiers": []
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "RevertStatement",
                "revertCall": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "InvalidReserves"
                 },
                 "arguments": [],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": null
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "LibBytes"
            },
            "memberName": "storeUint128"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "RESERVES_STORAGE_SLOT"
            },
            {
             "type": "Identifier",
             "name": "reserves"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_updatePumps",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_numberOfTokens",
         "identifier": {
          "type": "Identifier",
          "name": "_numberOfTokens"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "reserves",
         "identifier": {
          "type": "Identifier",
          "name": "reserves"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "reserves"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_getReserves"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_numberOfTokens"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "_numberOfPumps",
            "identifier": {
             "type": "Identifier",
             "name": "_numberOfPumps"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "numberOfPumps"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "_numberOfPumps"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "Identifier",
              "name": "reserves"
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "_numberOfPumps"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "UserDefinedTypeName",
                "namePath": "Call"
               },
               "name": "_pump",
               "identifier": {
                "type": "Identifier",
                "name": "_pump"
               },
               "storageLocation": "memory",
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "firstPump"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "TryStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "IPump"
                },
                "arguments": [
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "_pump"
                  },
                  "memberName": "target"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "memberName": "update"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "reserves"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_pump"
                },
                "memberName": "data"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "returnParameters": null,
             "body": {
              "type": "Block",
              "statements": []
             },
             "catchClauses": [
              {
               "type": "CatchClause",
               "isReasonStringType": false,
               "kind": null,
               "parameters": null,
               "body": {
                "type": "Block",
                "statements": []
               }
              }
             ]
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ArrayTypeName",
                "baseTypeName": {
                 "type": "UserDefinedTypeName",
                 "namePath": "Call"
                },
                "length": null
               },
               "name": "_pumps",
               "identifier": {
                "type": "Identifier",
                "name": "_pumps"
               },
               "storageLocation": "memory",
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "pumps"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ForStatement",
             "initExpression": {
              "type": "VariableDeclarationStatement",
              "variables": [
               {
                "type": "VariableDeclaration",
                "typeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "name": "i",
                "identifier": {
                 "type": "Identifier",
                 "name": "i"
                },
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false,
                "expression": null
               }
              ],
              "initialValue": null
             },
             "conditionExpression": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "i"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_pumps"
               },
               "memberName": "length"
              }
             },
             "loopExpression": {
              "type": "ExpressionStatement",
              "expression": {
               "type": "UnaryOperation",
               "operator": "++",
               "subExpression": {
                "type": "Identifier",
                "name": "i"
               },
               "isPrefix": true
              }
             },
             "body": {
              "type": "Block",
              "statements": [
               {
                "type": "TryStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "Identifier",
                    "name": "IPump"
                   },
                   "arguments": [
                    {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "IndexAccess",
                      "base": {
                       "type": "Identifier",
                       "name": "_pumps"
                      },
                      "index": {
                       "type": "Identifier",
                       "name": "i"
                      }
                     },
                     "memberName": "target"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  },
                  "memberName": "update"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "reserves"
                  },
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "IndexAccess",
                    "base": {
                     "type": "Identifier",
                     "name": "_pumps"
                    },
                    "index": {
                     "type": "Identifier",
                     "name": "i"
                    }
                   },
                   "memberName": "data"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                },
                "returnParameters": null,
                "body": {
                 "type": "Block",
                 "statements": []
                },
                "catchClauses": [
                 {
                  "type": "CatchClause",
                  "isReasonStringType": false,
                  "kind": null,
                  "parameters": null,
                  "body": {
                   "type": "Block",
                   "statements": []
                  }
                 }
                ]
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_calcLpTokenSupply",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Call"
         },
         "name": "_wellFunction",
         "identifier": {
          "type": "Identifier",
          "name": "_wellFunction"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "reserves",
         "identifier": {
          "type": "Identifier",
          "name": "reserves"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpTokenSupply",
         "identifier": {
          "type": "Identifier",
          "name": "lpTokenSupply"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "lpTokenSupply"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "IWellFunction"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_wellFunction"
                },
                "memberName": "target"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "memberName": "calcLpTokenSupply"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "reserves"
             },
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_wellFunction"
              },
              "memberName": "data"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "_calcReserve",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Call"
         },
         "name": "_wellFunction",
         "identifier": {
          "type": "Identifier",
          "name": "_wellFunction"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "reserves",
         "identifier": {
          "type": "Identifier",
          "name": "reserves"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "j",
         "identifier": {
          "type": "Identifier",
          "name": "j"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpTokenSupply",
         "identifier": {
          "type": "Identifier",
          "name": "lpTokenSupply"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "reserve",
         "identifier": {
          "type": "Identifier",
          "name": "reserve"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "reserve"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "IWellFunction"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_wellFunction"
                },
                "memberName": "target"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "memberName": "calcReserve"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "reserves"
             },
             {
              "type": "Identifier",
              "name": "j"
             },
             {
              "type": "Identifier",
              "name": "lpTokenSupply"
             },
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_wellFunction"
              },
              "memberName": "data"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "_calcLPTokenUnderlying",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Call"
         },
         "name": "_wellFunction",
         "identifier": {
          "type": "Identifier",
          "name": "_wellFunction"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpTokenAmount",
         "identifier": {
          "type": "Identifier",
          "name": "lpTokenAmount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "reserves",
         "identifier": {
          "type": "Identifier",
          "name": "reserves"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "lpTokenSupply",
         "identifier": {
          "type": "Identifier",
          "name": "lpTokenSupply"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "tokenAmounts",
         "identifier": {
          "type": "Identifier",
          "name": "tokenAmounts"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "tokenAmounts"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "IWellFunction"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_wellFunction"
                },
                "memberName": "target"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "memberName": "calcLPTokenUnderlying"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "lpTokenAmount"
             },
             {
              "type": "Identifier",
              "name": "reserves"
             },
             {
              "type": "Identifier",
              "name": "lpTokenSupply"
             },
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_wellFunction"
              },
              "memberName": "data"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "_getIJ",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "IERC20"
          },
          "length": null
         },
         "name": "_tokens",
         "identifier": {
          "type": "Identifier",
          "name": "_tokens"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "iToken",
         "identifier": {
          "type": "Identifier",
          "name": "iToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "jToken",
         "identifier": {
          "type": "Identifier",
          "name": "jToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "i",
         "identifier": {
          "type": "Identifier",
          "name": "i"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "j",
         "identifier": {
          "type": "Identifier",
          "name": "j"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bool",
             "stateMutability": null
            },
            "name": "foundOne",
            "identifier": {
             "type": "Identifier",
             "name": "foundOne"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "k",
             "identifier": {
              "type": "Identifier",
              "name": "k"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": null
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "k"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_tokens"
            },
            "memberName": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "k"
            },
            "isPrefix": true
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "Identifier",
               "name": "iToken"
              },
              "right": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "_tokens"
               },
               "index": {
                "type": "Identifier",
                "name": "k"
               }
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "i"
                 },
                 "right": {
                  "type": "Identifier",
                  "name": "k"
                 }
                }
               },
               {
                "type": "IfStatement",
                "condition": {
                 "type": "Identifier",
                 "name": "foundOne"
                },
                "trueBody": {
                 "type": "ReturnStatement",
                 "expression": {
                  "type": "TupleExpression",
                  "components": [
                   {
                    "type": "Identifier",
                    "name": "i"
                   },
                   {
                    "type": "Identifier",
                    "name": "j"
                   }
                  ],
                  "isArray": false
                 }
                },
                "falseBody": null
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "foundOne"
                 },
                 "right": {
                  "type": "BooleanLiteral",
                  "value": true
                 }
                }
               }
              ]
             },
             "falseBody": {
              "type": "IfStatement",
              "condition": {
               "type": "BinaryOperation",
               "operator": "==",
               "left": {
                "type": "Identifier",
                "name": "jToken"
               },
               "right": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "_tokens"
                },
                "index": {
                 "type": "Identifier",
                 "name": "k"
                }
               }
              },
              "trueBody": {
               "type": "Block",
               "statements": [
                {
                 "type": "ExpressionStatement",
                 "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                   "type": "Identifier",
                   "name": "j"
                  },
                  "right": {
                   "type": "Identifier",
                   "name": "k"
                  }
                 }
                },
                {
                 "type": "IfStatement",
                 "condition": {
                  "type": "Identifier",
                  "name": "foundOne"
                 },
                 "trueBody": {
                  "type": "ReturnStatement",
                  "expression": {
                   "type": "TupleExpression",
                   "components": [
                    {
                     "type": "Identifier",
                     "name": "i"
                    },
                    {
                     "type": "Identifier",
                     "name": "j"
                    }
                   ],
                   "isArray": false
                  }
                 },
                 "falseBody": null
                },
                {
                 "type": "ExpressionStatement",
                 "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                   "type": "Identifier",
                   "name": "foundOne"
                  },
                  "right": {
                   "type": "BooleanLiteral",
                   "value": true
                  }
                 }
                }
               ]
              },
              "falseBody": null
             }
            }
           ]
          }
         },
         {
          "type": "RevertStatement",
          "revertCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "InvalidTokens"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "_getJ",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "IERC20"
          },
          "length": null
         },
         "name": "_tokens",
         "identifier": {
          "type": "Identifier",
          "name": "_tokens"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "jToken",
         "identifier": {
          "type": "Identifier",
          "name": "jToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "j",
         "identifier": {
          "type": "Identifier",
          "name": "j"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "Identifier",
            "name": "j"
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "j"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_tokens"
            },
            "memberName": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "j"
            },
            "isPrefix": true
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "Identifier",
               "name": "jToken"
              },
              "right": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "_tokens"
               },
               "index": {
                "type": "Identifier",
                "name": "j"
               }
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ReturnStatement",
                "expression": {
                 "type": "Identifier",
                 "name": "j"
                }
               }
              ]
             },
             "falseBody": null
            }
           ]
          }
         },
         {
          "type": "RevertStatement",
          "revertCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "InvalidTokens"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "_safeTransferFromFeeOnTransfer",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "token",
         "identifier": {
          "type": "Identifier",
          "name": "token"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "from",
         "identifier": {
          "type": "Identifier",
          "name": "from"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amountTransferred",
         "identifier": {
          "type": "Identifier",
          "name": "amountTransferred"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "balanceBefore",
            "identifier": {
             "type": "Identifier",
             "name": "balanceBefore"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "token"
            },
            "memberName": "balanceOf"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "this"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "token"
            },
            "memberName": "safeTransferFrom"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "from"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "this"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "amountTransferred"
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "-",
            "left": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "token"
              },
              "memberName": "balanceOf"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "address"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "this"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            "right": {
             "type": "Identifier",
             "name": "balanceBefore"
            }
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "ModifierDefinition",
       "name": "expire",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "deadline",
         "identifier": {
          "type": "Identifier",
          "name": "deadline"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "block"
            },
            "memberName": "timestamp"
           },
           "right": {
            "type": "Identifier",
            "name": "deadline"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "Expired"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "_"
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "ModifierDefinition",
       "name": "readOnlyNonReentrant",
       "parameters": [],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "UnaryOperation",
             "operator": "!",
             "subExpression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "_reentrancyGuardEntered"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             },
             "isPrefix": true
            },
            {
             "type": "StringLiteral",
             "value": "ReentrancyGuard: reentrant call",
             "parts": [
              "ReentrancyGuard: reentrant call"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "_"
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-08-basin/src/Aquifer.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.8.20"
    },
    {
     "type": "ImportDirective",
     "path": "oz/security/ReentrancyGuard.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "oz/security/ReentrancyGuard.sol",
      "parts": [
       "oz/security/ReentrancyGuard.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "ReentrancyGuard",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "ReentrancyGuard"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "src/interfaces/IAquifer.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "src/interfaces/IAquifer.sol",
      "parts": [
       "src/interfaces/IAquifer.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IAquifer",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IAquifer"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "src/Well.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "src/Well.sol",
      "parts": [
       "src/Well.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IWell",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IWell"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "src/libraries/LibClone.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "src/libraries/LibClone.sol",
      "parts": [
       "src/libraries/LibClone.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "LibClone",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "LibClone"
       },
       null
      ]
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "Aquifer",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "IAquifer"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ReentrancyGuard"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "address",
        "stateMutability": null
       },
       "libraryName": "LibClone",
       "functions": [],
       "operators": []
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "wellImplementation",
         "identifier": {
          "type": "Identifier",
          "name": "wellImplementation"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": []
       },
       "visibility": "default",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "ReentrancyGuard",
         "arguments": []
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "boreWell",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "implementation",
         "identifier": {
          "type": "Identifier",
          "name": "implementation"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "immutableData",
         "identifier": {
          "type": "Identifier",
          "name": "immutableData"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "initFunctionCall",
         "identifier": {
          "type": "Identifier",
          "name": "initFunctionCall"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "salt",
         "identifier": {
          "type": "Identifier",
          "name": "salt"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "well",
         "identifier": {
          "type": "Identifier",
          "name": "well"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "immutableData"
            },
            "memberName": "length"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "!=",
              "left": {
               "type": "Identifier",
               "name": "salt"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "bytes32",
                "stateMutability": null
               },
               "arguments": [
                {
                 "type": "NumberLiteral",
                 "number": "0",
                 "subdenomination": null
                }
               ],
               "names": [],
               "identifiers": []
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "salt"
                 },
                 "right": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "Identifier",
                   "name": "keccak256"
                  },
                  "arguments": [
                   {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "abi"
                     },
                     "memberName": "encode"
                    },
                    "arguments": [
                     {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "Identifier",
                       "name": "msg"
                      },
                      "memberName": "sender"
                     },
                     {
                      "type": "Identifier",
                      "name": "salt"
                     }
                    ],
                    "names": [],
                    "identifiers": []
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "well"
                 },
                 "right": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "implementation"
                   },
                   "memberName": "cloneDeterministic"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "immutableData"
                   },
                   {
                    "type": "Identifier",
                    "name": "salt"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                }
               }
              ]
             },
             "falseBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "well"
                 },
                 "right": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "implementation"
                   },
                   "memberName": "clone"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "immutableData"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                }
               }
              ]
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "!=",
              "left": {
               "type": "Identifier",
               "name": "salt"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "bytes32",
                "stateMutability": null
               },
               "arguments": [
                {
                 "type": "NumberLiteral",
                 "number": "0",
                 "subdenomination": null
                }
               ],
               "names": [],
               "identifiers": []
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "salt"
                 },
                 "right": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "Identifier",
                   "name": "keccak256"
                  },
                  "arguments": [
                   {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "abi"
                     },
                     "memberName": "encode"
                    },
                    "arguments": [
                     {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "Identifier",
                       "name": "msg"
                      },
                      "memberName": "sender"
                     },
                     {
                      "type": "Identifier",
                      "name": "salt"
                     }
                    ],
                    "names": [],
                    "identifiers": []
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "well"
                 },
                 "right": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "implementation"
                   },
                   "memberName": "cloneDeterministic"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "salt"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                }
               }
              ]
             },
             "falseBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "well"
                 },
                 "right": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "implementation"
                   },
                   "memberName": "clone"
                  },
                  "arguments": [],
                  "names": [],
                  "identifiers": []
                 }
                }
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "initFunctionCall"
            },
            "memberName": "length"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "name": "success",
               "identifier": {
                "type": "Identifier",
                "name": "success"
               },
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "bool",
                "stateMutability": null
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              },
              {
               "type": "VariableDeclaration",
               "name": "returnData",
               "identifier": {
                "type": "Identifier",
                "name": "returnData"
               },
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "bytes",
                "stateMutability": null
               },
               "storageLocation": "memory",
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "well"
               },
               "memberName": "call"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "initFunctionCall"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "UnaryOperation",
              "operator": "!",
              "subExpression": {
               "type": "Identifier",
               "name": "success"
              },
              "isPrefix": true
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "<",
                 "left": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "returnData"
                  },
                  "memberName": "length"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "68",
                  "subdenomination": null
                 }
                },
                "trueBody": {
                 "type": "RevertStatement",
                 "revertCall": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "Identifier",
                   "name": "InitFailed"
                  },
                  "arguments": [
                   {
                    "type": "StringLiteral",
                    "value": "",
                    "parts": [
                     ""
                    ],
                    "isUnicode": [
                     false
                    ]
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                },
                "falseBody": null
               },
               {
                "type": "InlineAssemblyStatement",
                "language": null,
                "flags": [],
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "returnData"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "returnData",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x04"
                     }
                    ]
                   }
                  }
                 ]
                }
               },
               {
                "type": "RevertStatement",
                "revertCall": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "InitFailed"
                 },
                 "arguments": [
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "abi"
                    },
                    "memberName": "decode"
                   },
                   "arguments": [
                    {
                     "type": "Identifier",
                     "name": "returnData"
                    },
                    {
                     "type": "TupleExpression",
                     "components": [
                      {
                       "type": "ElementaryTypeName",
                       "name": "string",
                       "stateMutability": null
                      }
                     ],
                     "isArray": false
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": null
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "UnaryOperation",
           "operator": "!",
           "subExpression": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "IWell"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "well"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "memberName": "isInitialized"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           },
           "isPrefix": true
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "WellNotInitialized"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "IWell"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "well"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "memberName": "aquifer"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "address"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "this"
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "InvalidConfig"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "wellImplementation"
            },
            "index": {
             "type": "Identifier",
             "name": "well"
            }
           },
           "right": {
            "type": "Identifier",
            "name": "implementation"
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "BoreWell"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "well"
            },
            {
             "type": "Identifier",
             "name": "implementation"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "IWell"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "well"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "memberName": "tokens"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "IWell"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "well"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "memberName": "wellFunction"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "IWell"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "well"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "memberName": "pumps"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "IWell"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "well"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "memberName": "wellData"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "nonReentrant",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "predictWellAddress",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "implementation",
         "identifier": {
          "type": "Identifier",
          "name": "implementation"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "immutableData",
         "identifier": {
          "type": "Identifier",
          "name": "immutableData"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "salt",
         "identifier": {
          "type": "Identifier",
          "name": "salt"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "well",
         "identifier": {
          "type": "Identifier",
          "name": "well"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "salt"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "arguments": [
             {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "InvalidSalt"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "salt"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "keccak256"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "abi"
               },
               "memberName": "encode"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "msg"
                },
                "memberName": "sender"
               },
               {
                "type": "Identifier",
                "name": "salt"
               }
              ],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "immutableData"
            },
            "memberName": "length"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "well"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "implementation"
                },
                "memberName": "predictDeterministicAddress"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "immutableData"
                },
                {
                 "type": "Identifier",
                 "name": "salt"
                },
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "address"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "this"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "well"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "implementation"
                },
                "memberName": "predictDeterministicAddress"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "salt"
                },
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "address"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "this"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 }
]