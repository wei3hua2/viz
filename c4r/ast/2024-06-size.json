[
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-06-size/src/SizeViewData.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.23"
    },
    {
     "type": "ImportDirective",
     "path": "@aave/interfaces/IPool.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@aave/interfaces/IPool.sol",
      "parts": [
       "@aave/interfaces/IPool.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IPool",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IPool"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
      "parts": [
       "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IERC20Metadata",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IERC20Metadata"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/SizeStorage.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/SizeStorage.sol",
      "parts": [
       "@src/SizeStorage.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "User",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "User"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/token/NonTransferrableScaledToken.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/token/NonTransferrableScaledToken.sol",
      "parts": [
       "@src/token/NonTransferrableScaledToken.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "NonTransferrableScaledToken",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "NonTransferrableScaledToken"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/token/NonTransferrableToken.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/token/NonTransferrableToken.sol",
      "parts": [
       "@src/token/NonTransferrableToken.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "NonTransferrableToken",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "NonTransferrableToken"
       },
       null
      ]
     ]
    },
    {
     "type": "StructDefinition",
     "name": "UserView",
     "members": [
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "User"
       },
       "name": "user",
       "identifier": {
        "type": "Identifier",
        "name": "user"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "address",
        "stateMutability": null
       },
       "name": "account",
       "identifier": {
        "type": "Identifier",
        "name": "account"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "collateralTokenBalance",
       "identifier": {
        "type": "Identifier",
        "name": "collateralTokenBalance"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "borrowATokenBalance",
       "identifier": {
        "type": "Identifier",
        "name": "borrowATokenBalance"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "debtBalance",
       "identifier": {
        "type": "Identifier",
        "name": "debtBalance"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      }
     ]
    },
    {
     "type": "StructDefinition",
     "name": "DataView",
     "members": [
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "nextDebtPositionId",
       "identifier": {
        "type": "Identifier",
        "name": "nextDebtPositionId"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "nextCreditPositionId",
       "identifier": {
        "type": "Identifier",
        "name": "nextCreditPositionId"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "IERC20Metadata"
       },
       "name": "underlyingCollateralToken",
       "identifier": {
        "type": "Identifier",
        "name": "underlyingCollateralToken"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "IERC20Metadata"
       },
       "name": "underlyingBorrowToken",
       "identifier": {
        "type": "Identifier",
        "name": "underlyingBorrowToken"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "NonTransferrableToken"
       },
       "name": "collateralToken",
       "identifier": {
        "type": "Identifier",
        "name": "collateralToken"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "NonTransferrableScaledToken"
       },
       "name": "borrowAToken",
       "identifier": {
        "type": "Identifier",
        "name": "borrowAToken"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "NonTransferrableToken"
       },
       "name": "debtToken",
       "identifier": {
        "type": "Identifier",
        "name": "debtToken"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "IPool"
       },
       "name": "variablePool",
       "identifier": {
        "type": "Identifier",
        "name": "variablePool"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      }
     ]
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-06-size/src/SizeView.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.23"
    },
    {
     "type": "ImportDirective",
     "path": "@src/SizeStorage.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/SizeStorage.sol",
      "parts": [
       "@src/SizeStorage.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "SizeStorage",
       null
      ],
      [
       "State",
       null
      ],
      [
       "User",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "SizeStorage"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "State"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "User"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/YieldCurveLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/YieldCurveLibrary.sol",
      "parts": [
       "@src/libraries/YieldCurveLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "VariablePoolBorrowRateParams",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "VariablePoolBorrowRateParams"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/LoanLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/LoanLibrary.sol",
      "parts": [
       "@src/libraries/LoanLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "CREDIT_POSITION_ID_START",
       null
      ],
      [
       "CreditPosition",
       null
      ],
      [
       "DEBT_POSITION_ID_START",
       null
      ],
      [
       "DebtPosition",
       null
      ],
      [
       "LoanLibrary",
       null
      ],
      [
       "LoanStatus",
       null
      ],
      [
       "RESERVED_ID",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "CREDIT_POSITION_ID_START"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "CreditPosition"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "DEBT_POSITION_ID_START"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "DebtPosition"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "LoanLibrary"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "LoanStatus"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "RESERVED_ID"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/actions/UpdateConfig.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/actions/UpdateConfig.sol",
      "parts": [
       "@src/libraries/actions/UpdateConfig.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "UpdateConfig",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "UpdateConfig"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/AccountingLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/AccountingLibrary.sol",
      "parts": [
       "@src/libraries/AccountingLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "AccountingLibrary",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "AccountingLibrary"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/RiskLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/RiskLibrary.sol",
      "parts": [
       "@src/libraries/RiskLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "RiskLibrary",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "RiskLibrary"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/SizeViewData.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/SizeViewData.sol",
      "parts": [
       "@src/SizeViewData.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "DataView",
       null
      ],
      [
       "UserView",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "DataView"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "UserView"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/interfaces/ISizeView.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/interfaces/ISizeView.sol",
      "parts": [
       "@src/interfaces/ISizeView.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "ISizeView",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "ISizeView"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Errors.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Errors.sol",
      "parts": [
       "@src/libraries/Errors.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Errors",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Errors"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/OfferLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/OfferLibrary.sol",
      "parts": [
       "@src/libraries/OfferLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "BorrowOffer",
       null
      ],
      [
       "LoanOffer",
       null
      ],
      [
       "OfferLibrary",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "BorrowOffer"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "LoanOffer"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "OfferLibrary"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/actions/Initialize.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/actions/Initialize.sol",
      "parts": [
       "@src/libraries/actions/Initialize.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "InitializeDataParams",
       null
      ],
      [
       "InitializeFeeConfigParams",
       null
      ],
      [
       "InitializeOracleParams",
       null
      ],
      [
       "InitializeRiskConfigParams",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "InitializeDataParams"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "InitializeFeeConfigParams"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "InitializeOracleParams"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "InitializeRiskConfigParams"
       },
       null
      ]
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "SizeView",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "SizeStorage"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ISizeView"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "LoanOffer"
       },
       "libraryName": "OfferLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "BorrowOffer"
       },
       "libraryName": "OfferLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "DebtPosition"
       },
       "libraryName": "LoanLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "CreditPosition"
       },
       "libraryName": "LoanLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "LoanLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "RiskLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "AccountingLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "UpdateConfig",
       "functions": [],
       "operators": []
      },
      {
       "type": "FunctionDefinition",
       "name": "collateralRatio",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "user",
         "identifier": {
          "type": "Identifier",
          "name": "user"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "collateralRatio"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "user"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "isUserUnderwater",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "user",
         "identifier": {
          "type": "Identifier",
          "name": "user"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "isUserUnderwater"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "user"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "isDebtPositionLiquidatable",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "debtPositionId",
         "identifier": {
          "type": "Identifier",
          "name": "debtPositionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "isDebtPositionLiquidatable"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "debtPositionId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "debtTokenAmountToCollateralTokenAmount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "borrowATokenAmount",
         "identifier": {
          "type": "Identifier",
          "name": "borrowATokenAmount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "debtTokenAmountToCollateralTokenAmount"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "borrowATokenAmount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "feeConfig",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "InitializeFeeConfigParams"
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "feeConfigParams"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "riskConfig",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "InitializeRiskConfigParams"
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "riskConfigParams"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "oracle",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "InitializeOracleParams"
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "oracleParams"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "data",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "DataView"
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "DataView"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "nextDebtPositionId"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "nextCreditPositionId"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "underlyingCollateralToken"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "underlyingBorrowToken"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "variablePool"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "collateralToken"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "borrowAToken"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "debtToken"
            }
           ],
           "names": [
            "nextDebtPositionId",
            "nextCreditPositionId",
            "underlyingCollateralToken",
            "underlyingBorrowToken",
            "variablePool",
            "collateralToken",
            "borrowAToken",
            "debtToken"
           ],
           "identifiers": [
            {
             "type": "Identifier",
             "name": "nextDebtPositionId"
            },
            {
             "type": "Identifier",
             "name": "nextCreditPositionId"
            },
            {
             "type": "Identifier",
             "name": "underlyingCollateralToken"
            },
            {
             "type": "Identifier",
             "name": "underlyingBorrowToken"
            },
            {
             "type": "Identifier",
             "name": "variablePool"
            },
            {
             "type": "Identifier",
             "name": "collateralToken"
            },
            {
             "type": "Identifier",
             "name": "borrowAToken"
            },
            {
             "type": "Identifier",
             "name": "debtToken"
            }
           ]
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getUserView",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "user",
         "identifier": {
          "type": "Identifier",
          "name": "user"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "UserView"
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "UserView"
           },
           "arguments": [
            {
             "type": "IndexAccess",
             "base": {
              "type": "MemberAccess",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "state"
               },
               "memberName": "data"
              },
              "memberName": "users"
             },
             "index": {
              "type": "Identifier",
              "name": "user"
             }
            },
            {
             "type": "Identifier",
             "name": "user"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "data"
               },
               "memberName": "collateralToken"
              },
              "memberName": "balanceOf"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "user"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "data"
               },
               "memberName": "borrowAToken"
              },
              "memberName": "balanceOf"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "user"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "data"
               },
               "memberName": "debtToken"
              },
              "memberName": "balanceOf"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "user"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [
            "user",
            "account",
            "collateralTokenBalance",
            "borrowATokenBalance",
            "debtBalance"
           ],
           "identifiers": [
            {
             "type": "Identifier",
             "name": "user"
            },
            {
             "type": "Identifier",
             "name": "account"
            },
            {
             "type": "Identifier",
             "name": "collateralTokenBalance"
            },
            {
             "type": "Identifier",
             "name": "borrowATokenBalance"
            },
            {
             "type": "Identifier",
             "name": "debtBalance"
            }
           ]
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "isDebtPositionId",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "debtPositionId",
         "identifier": {
          "type": "Identifier",
          "name": "debtPositionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "isDebtPositionId"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "debtPositionId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "isCreditPositionId",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "creditPositionId",
         "identifier": {
          "type": "Identifier",
          "name": "creditPositionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "isCreditPositionId"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "creditPositionId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getDebtPosition",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "debtPositionId",
         "identifier": {
          "type": "Identifier",
          "name": "debtPositionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "DebtPosition"
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "getDebtPosition"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "debtPositionId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getCreditPosition",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "creditPositionId",
         "identifier": {
          "type": "Identifier",
          "name": "creditPositionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "CreditPosition"
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "getCreditPosition"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "creditPositionId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getLoanStatus",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "positionId",
         "identifier": {
          "type": "Identifier",
          "name": "positionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "LoanStatus"
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "getLoanStatus"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "positionId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getPositionsCount",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "TupleExpression",
           "components": [
            {
             "type": "BinaryOperation",
             "operator": "-",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "state"
               },
               "memberName": "data"
              },
              "memberName": "nextDebtPositionId"
             },
             "right": {
              "type": "Identifier",
              "name": "DEBT_POSITION_ID_START"
             }
            },
            {
             "type": "BinaryOperation",
             "operator": "-",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "state"
               },
               "memberName": "data"
              },
              "memberName": "nextCreditPositionId"
             },
             "right": {
              "type": "Identifier",
              "name": "CREDIT_POSITION_ID_START"
             }
            }
           ],
           "isArray": false
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getBorrowOfferAPR",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "borrower",
         "identifier": {
          "type": "Identifier",
          "name": "borrower"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "tenor",
         "identifier": {
          "type": "Identifier",
          "name": "tenor"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "BorrowOffer"
            },
            "name": "offer",
            "identifier": {
             "type": "Identifier",
             "name": "offer"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "IndexAccess",
            "base": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "users"
            },
            "index": {
             "type": "Identifier",
             "name": "borrower"
            }
           },
           "memberName": "borrowOffer"
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "offer"
            },
            "memberName": "isNull"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "NULL_OFFER"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "offer"
            },
            "memberName": "getAPRByTenor"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "VariablePoolBorrowRateParams"
             },
             "arguments": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "oracle"
               },
               "memberName": "variablePoolBorrowRate"
              },
              {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "oracle"
               },
               "memberName": "variablePoolBorrowRateUpdatedAt"
              },
              {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "oracle"
               },
               "memberName": "variablePoolBorrowRateStaleRateInterval"
              }
             ],
             "names": [
              "variablePoolBorrowRate",
              "variablePoolBorrowRateUpdatedAt",
              "variablePoolBorrowRateStaleRateInterval"
             ],
             "identifiers": [
              {
               "type": "Identifier",
               "name": "variablePoolBorrowRate"
              },
              {
               "type": "Identifier",
               "name": "variablePoolBorrowRateUpdatedAt"
              },
              {
               "type": "Identifier",
               "name": "variablePoolBorrowRateStaleRateInterval"
              }
             ]
            },
            {
             "type": "Identifier",
             "name": "tenor"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getLoanOfferAPR",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "lender",
         "identifier": {
          "type": "Identifier",
          "name": "lender"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "tenor",
         "identifier": {
          "type": "Identifier",
          "name": "tenor"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "LoanOffer"
            },
            "name": "offer",
            "identifier": {
             "type": "Identifier",
             "name": "offer"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "IndexAccess",
            "base": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "users"
            },
            "index": {
             "type": "Identifier",
             "name": "lender"
            }
           },
           "memberName": "loanOffer"
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "offer"
            },
            "memberName": "isNull"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "NULL_OFFER"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "offer"
            },
            "memberName": "getAPRByTenor"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "VariablePoolBorrowRateParams"
             },
             "arguments": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "oracle"
               },
               "memberName": "variablePoolBorrowRate"
              },
              {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "oracle"
               },
               "memberName": "variablePoolBorrowRateUpdatedAt"
              },
              {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "oracle"
               },
               "memberName": "variablePoolBorrowRateStaleRateInterval"
              }
             ],
             "names": [
              "variablePoolBorrowRate",
              "variablePoolBorrowRateUpdatedAt",
              "variablePoolBorrowRateStaleRateInterval"
             ],
             "identifiers": [
              {
               "type": "Identifier",
               "name": "variablePoolBorrowRate"
              },
              {
               "type": "Identifier",
               "name": "variablePoolBorrowRateUpdatedAt"
              },
              {
               "type": "Identifier",
               "name": "variablePoolBorrowRateStaleRateInterval"
              }
             ]
            },
            {
             "type": "Identifier",
             "name": "tenor"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getDebtPositionAssignedCollateral",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "debtPositionId",
         "identifier": {
          "type": "Identifier",
          "name": "debtPositionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "DebtPosition"
            },
            "name": "debtPosition",
            "identifier": {
             "type": "Identifier",
             "name": "debtPosition"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "getDebtPosition"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "debtPositionId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "getDebtPositionAssignedCollateral"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "debtPosition"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getSwapFee",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "cash",
         "identifier": {
          "type": "Identifier",
          "name": "cash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "tenor",
         "identifier": {
          "type": "Identifier",
          "name": "tenor"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "tenor"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "NULL_TENOR"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "getSwapFee"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "cash"
            },
            {
             "type": "Identifier",
             "name": "tenor"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "abstract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-06-size/src/SizeStorage.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.23"
    },
    {
     "type": "ImportDirective",
     "path": "@aave/interfaces/IPool.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@aave/interfaces/IPool.sol",
      "parts": [
       "@aave/interfaces/IPool.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IPool",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IPool"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
      "parts": [
       "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IERC20Metadata",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IERC20Metadata"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/interfaces/IWETH.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/interfaces/IWETH.sol",
      "parts": [
       "@src/interfaces/IWETH.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IWETH",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IWETH"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/LoanLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/LoanLibrary.sol",
      "parts": [
       "@src/libraries/LoanLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "CreditPosition",
       null
      ],
      [
       "DebtPosition",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "CreditPosition"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "DebtPosition"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/OfferLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/OfferLibrary.sol",
      "parts": [
       "@src/libraries/OfferLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "BorrowOffer",
       null
      ],
      [
       "LoanOffer",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "BorrowOffer"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "LoanOffer"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/oracle/IPriceFeed.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/oracle/IPriceFeed.sol",
      "parts": [
       "@src/oracle/IPriceFeed.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IPriceFeed",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IPriceFeed"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/token/NonTransferrableScaledToken.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/token/NonTransferrableScaledToken.sol",
      "parts": [
       "@src/token/NonTransferrableScaledToken.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "NonTransferrableScaledToken",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "NonTransferrableScaledToken"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/token/NonTransferrableToken.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/token/NonTransferrableToken.sol",
      "parts": [
       "@src/token/NonTransferrableToken.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "NonTransferrableToken",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "NonTransferrableToken"
       },
       null
      ]
     ]
    },
    {
     "type": "StructDefinition",
     "name": "User",
     "members": [
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "LoanOffer"
       },
       "name": "loanOffer",
       "identifier": {
        "type": "Identifier",
        "name": "loanOffer"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "BorrowOffer"
       },
       "name": "borrowOffer",
       "identifier": {
        "type": "Identifier",
        "name": "borrowOffer"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "openingLimitBorrowCR",
       "identifier": {
        "type": "Identifier",
        "name": "openingLimitBorrowCR"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "bool",
        "stateMutability": null
       },
       "name": "allCreditPositionsForSaleDisabled",
       "identifier": {
        "type": "Identifier",
        "name": "allCreditPositionsForSaleDisabled"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      }
     ]
    },
    {
     "type": "StructDefinition",
     "name": "FeeConfig",
     "members": [
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "swapFeeAPR",
       "identifier": {
        "type": "Identifier",
        "name": "swapFeeAPR"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "fragmentationFee",
       "identifier": {
        "type": "Identifier",
        "name": "fragmentationFee"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "liquidationRewardPercent",
       "identifier": {
        "type": "Identifier",
        "name": "liquidationRewardPercent"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "overdueCollateralProtocolPercent",
       "identifier": {
        "type": "Identifier",
        "name": "overdueCollateralProtocolPercent"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "collateralProtocolPercent",
       "identifier": {
        "type": "Identifier",
        "name": "collateralProtocolPercent"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "address",
        "stateMutability": null
       },
       "name": "feeRecipient",
       "identifier": {
        "type": "Identifier",
        "name": "feeRecipient"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      }
     ]
    },
    {
     "type": "StructDefinition",
     "name": "RiskConfig",
     "members": [
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "crOpening",
       "identifier": {
        "type": "Identifier",
        "name": "crOpening"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "crLiquidation",
       "identifier": {
        "type": "Identifier",
        "name": "crLiquidation"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "minimumCreditBorrowAToken",
       "identifier": {
        "type": "Identifier",
        "name": "minimumCreditBorrowAToken"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "borrowATokenCap",
       "identifier": {
        "type": "Identifier",
        "name": "borrowATokenCap"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "minTenor",
       "identifier": {
        "type": "Identifier",
        "name": "minTenor"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "maxTenor",
       "identifier": {
        "type": "Identifier",
        "name": "maxTenor"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      }
     ]
    },
    {
     "type": "StructDefinition",
     "name": "Oracle",
     "members": [
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "IPriceFeed"
       },
       "name": "priceFeed",
       "identifier": {
        "type": "Identifier",
        "name": "priceFeed"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint128",
        "stateMutability": null
       },
       "name": "variablePoolBorrowRate",
       "identifier": {
        "type": "Identifier",
        "name": "variablePoolBorrowRate"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint64",
        "stateMutability": null
       },
       "name": "variablePoolBorrowRateUpdatedAt",
       "identifier": {
        "type": "Identifier",
        "name": "variablePoolBorrowRateUpdatedAt"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint64",
        "stateMutability": null
       },
       "name": "variablePoolBorrowRateStaleRateInterval",
       "identifier": {
        "type": "Identifier",
        "name": "variablePoolBorrowRateStaleRateInterval"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      }
     ]
    },
    {
     "type": "StructDefinition",
     "name": "Data",
     "members": [
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "Mapping",
        "keyType": {
         "type": "ElementaryTypeName",
         "name": "address",
         "stateMutability": null
        },
        "keyName": null,
        "valueType": {
         "type": "UserDefinedTypeName",
         "namePath": "User"
        },
        "valueName": null
       },
       "name": "users",
       "identifier": {
        "type": "Identifier",
        "name": "users"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "Mapping",
        "keyType": {
         "type": "ElementaryTypeName",
         "name": "uint256",
         "stateMutability": null
        },
        "keyName": null,
        "valueType": {
         "type": "UserDefinedTypeName",
         "namePath": "DebtPosition"
        },
        "valueName": null
       },
       "name": "debtPositions",
       "identifier": {
        "type": "Identifier",
        "name": "debtPositions"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "Mapping",
        "keyType": {
         "type": "ElementaryTypeName",
         "name": "uint256",
         "stateMutability": null
        },
        "keyName": null,
        "valueType": {
         "type": "UserDefinedTypeName",
         "namePath": "CreditPosition"
        },
        "valueName": null
       },
       "name": "creditPositions",
       "identifier": {
        "type": "Identifier",
        "name": "creditPositions"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "nextDebtPositionId",
       "identifier": {
        "type": "Identifier",
        "name": "nextDebtPositionId"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "nextCreditPositionId",
       "identifier": {
        "type": "Identifier",
        "name": "nextCreditPositionId"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "IWETH"
       },
       "name": "weth",
       "identifier": {
        "type": "Identifier",
        "name": "weth"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "IERC20Metadata"
       },
       "name": "underlyingCollateralToken",
       "identifier": {
        "type": "Identifier",
        "name": "underlyingCollateralToken"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "IERC20Metadata"
       },
       "name": "underlyingBorrowToken",
       "identifier": {
        "type": "Identifier",
        "name": "underlyingBorrowToken"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "NonTransferrableToken"
       },
       "name": "collateralToken",
       "identifier": {
        "type": "Identifier",
        "name": "collateralToken"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "NonTransferrableScaledToken"
       },
       "name": "borrowAToken",
       "identifier": {
        "type": "Identifier",
        "name": "borrowAToken"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "NonTransferrableToken"
       },
       "name": "debtToken",
       "identifier": {
        "type": "Identifier",
        "name": "debtToken"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "IPool"
       },
       "name": "variablePool",
       "identifier": {
        "type": "Identifier",
        "name": "variablePool"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "bool",
        "stateMutability": null
       },
       "name": "isMulticall",
       "identifier": {
        "type": "Identifier",
        "name": "isMulticall"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      }
     ]
    },
    {
     "type": "StructDefinition",
     "name": "State",
     "members": [
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "FeeConfig"
       },
       "name": "feeConfig",
       "identifier": {
        "type": "Identifier",
        "name": "feeConfig"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "RiskConfig"
       },
       "name": "riskConfig",
       "identifier": {
        "type": "Identifier",
        "name": "riskConfig"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "Oracle"
       },
       "name": "oracle",
       "identifier": {
        "type": "Identifier",
        "name": "oracle"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "Data"
       },
       "name": "data",
       "identifier": {
        "type": "Identifier",
        "name": "data"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      }
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "SizeStorage",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "expression": null,
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      }
     ],
     "kind": "abstract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-06-size/src/Size.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.23"
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
      "parts": [
       "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "AccessControlUpgradeable",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "AccessControlUpgradeable"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
      "parts": [
       "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Initializable",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Initializable"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
      "parts": [
       "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "UUPSUpgradeable",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "UUPSUpgradeable"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
      "parts": [
       "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "PausableUpgradeable",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "PausableUpgradeable"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/LoanLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/LoanLibrary.sol",
      "parts": [
       "@src/libraries/LoanLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "RESERVED_ID",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "RESERVED_ID"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/actions/Initialize.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/actions/Initialize.sol",
      "parts": [
       "@src/libraries/actions/Initialize.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Initialize",
       null
      ],
      [
       "InitializeDataParams",
       null
      ],
      [
       "InitializeFeeConfigParams",
       null
      ],
      [
       "InitializeOracleParams",
       null
      ],
      [
       "InitializeRiskConfigParams",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Initialize"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "InitializeDataParams"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "InitializeFeeConfigParams"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "InitializeOracleParams"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "InitializeRiskConfigParams"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/actions/UpdateConfig.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/actions/UpdateConfig.sol",
      "parts": [
       "@src/libraries/actions/UpdateConfig.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "UpdateConfig",
       null
      ],
      [
       "UpdateConfigParams",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "UpdateConfig"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "UpdateConfigParams"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/actions/SellCreditLimit.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/actions/SellCreditLimit.sol",
      "parts": [
       "@src/libraries/actions/SellCreditLimit.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "SellCreditLimit",
       null
      ],
      [
       "SellCreditLimitParams",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "SellCreditLimit"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "SellCreditLimitParams"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/actions/SellCreditMarket.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/actions/SellCreditMarket.sol",
      "parts": [
       "@src/libraries/actions/SellCreditMarket.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "SellCreditMarket",
       null
      ],
      [
       "SellCreditMarketParams",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "SellCreditMarket"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "SellCreditMarketParams"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/actions/Claim.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/actions/Claim.sol",
      "parts": [
       "@src/libraries/actions/Claim.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Claim",
       null
      ],
      [
       "ClaimParams",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Claim"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "ClaimParams"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/actions/Deposit.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/actions/Deposit.sol",
      "parts": [
       "@src/libraries/actions/Deposit.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Deposit",
       null
      ],
      [
       "DepositParams",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Deposit"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "DepositParams"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/actions/BuyCreditMarket.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/actions/BuyCreditMarket.sol",
      "parts": [
       "@src/libraries/actions/BuyCreditMarket.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "BuyCreditMarket",
       null
      ],
      [
       "BuyCreditMarketParams",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "BuyCreditMarket"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "BuyCreditMarketParams"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/actions/SetUserConfiguration.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/actions/SetUserConfiguration.sol",
      "parts": [
       "@src/libraries/actions/SetUserConfiguration.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "SetUserConfiguration",
       null
      ],
      [
       "SetUserConfigurationParams",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "SetUserConfiguration"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "SetUserConfigurationParams"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/actions/BuyCreditLimit.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/actions/BuyCreditLimit.sol",
      "parts": [
       "@src/libraries/actions/BuyCreditLimit.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "BuyCreditLimit",
       null
      ],
      [
       "BuyCreditLimitParams",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "BuyCreditLimit"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "BuyCreditLimitParams"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/actions/Liquidate.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/actions/Liquidate.sol",
      "parts": [
       "@src/libraries/actions/Liquidate.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Liquidate",
       null
      ],
      [
       "LiquidateParams",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Liquidate"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "LiquidateParams"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Multicall.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Multicall.sol",
      "parts": [
       "@src/libraries/Multicall.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Multicall",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Multicall"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/actions/Compensate.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/actions/Compensate.sol",
      "parts": [
       "@src/libraries/actions/Compensate.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Compensate",
       null
      ],
      [
       "CompensateParams",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Compensate"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "CompensateParams"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/actions/LiquidateWithReplacement.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/actions/LiquidateWithReplacement.sol",
      "parts": [
       "@src/libraries/actions/LiquidateWithReplacement.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "LiquidateWithReplacement",
       null
      ],
      [
       "LiquidateWithReplacementParams",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "LiquidateWithReplacement"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "LiquidateWithReplacementParams"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/actions/Repay.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/actions/Repay.sol",
      "parts": [
       "@src/libraries/actions/Repay.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Repay",
       null
      ],
      [
       "RepayParams",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Repay"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "RepayParams"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/actions/SelfLiquidate.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/actions/SelfLiquidate.sol",
      "parts": [
       "@src/libraries/actions/SelfLiquidate.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "SelfLiquidate",
       null
      ],
      [
       "SelfLiquidateParams",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "SelfLiquidate"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "SelfLiquidateParams"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/actions/Withdraw.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/actions/Withdraw.sol",
      "parts": [
       "@src/libraries/actions/Withdraw.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Withdraw",
       null
      ],
      [
       "WithdrawParams",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Withdraw"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "WithdrawParams"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/SizeStorage.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/SizeStorage.sol",
      "parts": [
       "@src/SizeStorage.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "State",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "State"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/CapsLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/CapsLibrary.sol",
      "parts": [
       "@src/libraries/CapsLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "CapsLibrary",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "CapsLibrary"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/RiskLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/RiskLibrary.sol",
      "parts": [
       "@src/libraries/RiskLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "RiskLibrary",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "RiskLibrary"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/SizeView.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/SizeView.sol",
      "parts": [
       "@src/SizeView.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "SizeView",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "SizeView"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Events.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Events.sol",
      "parts": [
       "@src/libraries/Events.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Events",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Events"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/interfaces/IMulticall.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/interfaces/IMulticall.sol",
      "parts": [
       "@src/interfaces/IMulticall.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IMulticall",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IMulticall"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/interfaces/ISize.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/interfaces/ISize.sol",
      "parts": [
       "@src/interfaces/ISize.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "ISize",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "ISize"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/interfaces/ISizeAdmin.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/interfaces/ISizeAdmin.sol",
      "parts": [
       "@src/interfaces/ISizeAdmin.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "ISizeAdmin",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "ISizeAdmin"
       },
       null
      ]
     ]
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "bytes32",
      "stateMutability": null
     },
     "name": "KEEPER_ROLE",
     "initialValue": {
      "type": "FunctionCall",
      "expression": {
       "type": "Identifier",
       "name": "keccak256"
      },
      "arguments": [
       {
        "type": "StringLiteral",
        "value": "KEEPER_ROLE",
        "parts": [
         "KEEPER_ROLE"
        ],
        "isUnicode": [
         false
        ]
       }
      ],
      "names": [],
      "identifiers": []
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "bytes32",
      "stateMutability": null
     },
     "name": "PAUSER_ROLE",
     "initialValue": {
      "type": "FunctionCall",
      "expression": {
       "type": "Identifier",
       "name": "keccak256"
      },
      "arguments": [
       {
        "type": "StringLiteral",
        "value": "PAUSER_ROLE",
        "parts": [
         "PAUSER_ROLE"
        ],
        "isUnicode": [
         false
        ]
       }
      ],
      "names": [],
      "identifiers": []
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "bytes32",
      "stateMutability": null
     },
     "name": "BORROW_RATE_UPDATER_ROLE",
     "initialValue": {
      "type": "FunctionCall",
      "expression": {
       "type": "Identifier",
       "name": "keccak256"
      },
      "arguments": [
       {
        "type": "StringLiteral",
        "value": "BORROW_RATE_UPDATER_ROLE",
        "parts": [
         "BORROW_RATE_UPDATER_ROLE"
        ],
        "isUnicode": [
         false
        ]
       }
      ],
      "names": [],
      "identifiers": []
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "ContractDefinition",
     "name": "Size",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ISize"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "SizeView"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "Initializable"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "AccessControlUpgradeable"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "PausableUpgradeable"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "UUPSUpgradeable"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "Initialize",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "UpdateConfig",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "Deposit",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "Withdraw",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "SellCreditMarket",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "SellCreditLimit",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "BuyCreditMarket",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "BuyCreditLimit",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "Repay",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "Claim",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "Liquidate",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "SelfLiquidate",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "LiquidateWithReplacement",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "Compensate",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "SetUserConfiguration",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "RiskLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "CapsLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "Multicall",
       "functions": [],
       "operators": []
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_disableInitializers"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "default",
       "modifiers": [],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "initialize",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "owner",
         "identifier": {
          "type": "Identifier",
          "name": "owner"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "InitializeFeeConfigParams"
         },
         "name": "f",
         "identifier": {
          "type": "Identifier",
          "name": "f"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "InitializeRiskConfigParams"
         },
         "name": "r",
         "identifier": {
          "type": "Identifier",
          "name": "r"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "InitializeOracleParams"
         },
         "name": "o",
         "identifier": {
          "type": "Identifier",
          "name": "o"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "InitializeDataParams"
         },
         "name": "d",
         "identifier": {
          "type": "Identifier",
          "name": "d"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "validateInitialize"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "owner"
            },
            {
             "type": "Identifier",
             "name": "f"
            },
            {
             "type": "Identifier",
             "name": "r"
            },
            {
             "type": "Identifier",
             "name": "o"
            },
            {
             "type": "Identifier",
             "name": "d"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "__AccessControl_init"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "__Pausable_init"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "__UUPSUpgradeable_init"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "executeInitialize"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "f"
            },
            {
             "type": "Identifier",
             "name": "r"
            },
            {
             "type": "Identifier",
             "name": "o"
            },
            {
             "type": "Identifier",
             "name": "d"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_grantRole"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "DEFAULT_ADMIN_ROLE"
            },
            {
             "type": "Identifier",
             "name": "owner"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_grantRole"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "PAUSER_ROLE"
            },
            {
             "type": "Identifier",
             "name": "owner"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_grantRole"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "KEEPER_ROLE"
            },
            {
             "type": "Identifier",
             "name": "owner"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_grantRole"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "BORROW_RATE_UPDATER_ROLE"
            },
            {
             "type": "Identifier",
             "name": "owner"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "initializer",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_authorizeUpgrade",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "newImplementation",
         "identifier": {
          "type": "Identifier",
          "name": "newImplementation"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": []
       },
       "visibility": "internal",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyRole",
         "arguments": [
          {
           "type": "Identifier",
           "name": "DEFAULT_ADMIN_ROLE"
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "updateConfig",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "UpdateConfigParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "validateUpdateConfig"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "params"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "executeUpdateConfig"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "params"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyRole",
         "arguments": [
          {
           "type": "Identifier",
           "name": "DEFAULT_ADMIN_ROLE"
          }
         ]
        }
       ],
       "override": [
        {
         "type": "UserDefinedTypeName",
         "namePath": "ISizeAdmin"
        }
       ],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setVariablePoolBorrowRate",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint128",
          "stateMutability": null
         },
         "name": "borrowRate",
         "identifier": {
          "type": "Identifier",
          "name": "borrowRate"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint128",
             "stateMutability": null
            },
            "name": "oldBorrowRate",
            "identifier": {
             "type": "Identifier",
             "name": "oldBorrowRate"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "oracle"
           },
           "memberName": "variablePoolBorrowRate"
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "oracle"
            },
            "memberName": "variablePoolBorrowRate"
           },
           "right": {
            "type": "Identifier",
            "name": "borrowRate"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "oracle"
            },
            "memberName": "variablePoolBorrowRateUpdatedAt"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "ElementaryTypeName",
             "name": "uint64",
             "stateMutability": null
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "block"
              },
              "memberName": "timestamp"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "Events"
            },
            "memberName": "VariablePoolBorrowRateUpdated"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "oldBorrowRate"
            },
            {
             "type": "Identifier",
             "name": "borrowRate"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyRole",
         "arguments": [
          {
           "type": "Identifier",
           "name": "BORROW_RATE_UPDATER_ROLE"
          }
         ]
        }
       ],
       "override": [
        {
         "type": "UserDefinedTypeName",
         "namePath": "ISizeAdmin"
        }
       ],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "pause",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_pause"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyRole",
         "arguments": [
          {
           "type": "Identifier",
           "name": "PAUSER_ROLE"
          }
         ]
        }
       ],
       "override": [
        {
         "type": "UserDefinedTypeName",
         "namePath": "ISizeAdmin"
        }
       ],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "unpause",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_unpause"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyRole",
         "arguments": [
          {
           "type": "Identifier",
           "name": "PAUSER_ROLE"
          }
         ]
        }
       ],
       "override": [
        {
         "type": "UserDefinedTypeName",
         "namePath": "ISizeAdmin"
        }
       ],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "multicall",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "bytes",
           "stateMutability": null
          },
          "length": null
         },
         "name": "_data",
         "identifier": {
          "type": "Identifier",
          "name": "_data"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "bytes",
           "stateMutability": null
          },
          "length": null
         },
         "name": "results",
         "identifier": {
          "type": "Identifier",
          "name": "results"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "results"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "multicall"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_data"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "whenNotPaused",
         "arguments": null
        }
       ],
       "override": [
        {
         "type": "UserDefinedTypeName",
         "namePath": "IMulticall"
        }
       ],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "deposit",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "DepositParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "validateDeposit"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "params"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "executeDeposit"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "params"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "whenNotPaused",
         "arguments": null
        }
       ],
       "override": [
        {
         "type": "UserDefinedTypeName",
         "namePath": "ISize"
        }
       ],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "withdraw",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "WithdrawParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "validateWithdraw"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "params"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "executeWithdraw"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "params"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "validateUserIsNotBelowOpeningLimitBorrowCR"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "whenNotPaused",
         "arguments": null
        }
       ],
       "override": [
        {
         "type": "UserDefinedTypeName",
         "namePath": "ISize"
        }
       ],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "buyCreditLimit",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "BuyCreditLimitParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "validateBuyCreditLimit"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "params"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "executeBuyCreditLimit"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "params"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "whenNotPaused",
         "arguments": null
        }
       ],
       "override": [
        {
         "type": "UserDefinedTypeName",
         "namePath": "ISize"
        }
       ],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "sellCreditLimit",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "SellCreditLimitParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "validateSellCreditLimit"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "params"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "executeSellCreditLimit"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "params"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "whenNotPaused",
         "arguments": null
        }
       ],
       "override": [
        {
         "type": "UserDefinedTypeName",
         "namePath": "ISize"
        }
       ],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "buyCreditMarket",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "BuyCreditMarketParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "validateBuyCreditMarket"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "params"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "amount",
            "identifier": {
             "type": "Identifier",
             "name": "amount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "executeBuyCreditMarket"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "params"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "params"
            },
            "memberName": "creditPositionId"
           },
           "right": {
            "type": "Identifier",
            "name": "RESERVED_ID"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "state"
               },
               "memberName": "validateUserIsNotBelowOpeningLimitBorrowCR"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "params"
                },
                "memberName": "borrower"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "validateVariablePoolHasEnoughLiquidity"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "whenNotPaused",
         "arguments": null
        }
       ],
       "override": [
        {
         "type": "UserDefinedTypeName",
         "namePath": "ISize"
        }
       ],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "sellCreditMarket",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "SellCreditMarketParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "validateSellCreditMarket"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "params"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "amount",
            "identifier": {
             "type": "Identifier",
             "name": "amount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "executeSellCreditMarket"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "params"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "params"
            },
            "memberName": "creditPositionId"
           },
           "right": {
            "type": "Identifier",
            "name": "RESERVED_ID"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "state"
               },
               "memberName": "validateUserIsNotBelowOpeningLimitBorrowCR"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "msg"
                },
                "memberName": "sender"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "validateVariablePoolHasEnoughLiquidity"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "whenNotPaused",
         "arguments": null
        }
       ],
       "override": [
        {
         "type": "UserDefinedTypeName",
         "namePath": "ISize"
        }
       ],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "repay",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "RepayParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "validateRepay"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "params"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "executeRepay"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "params"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "whenNotPaused",
         "arguments": null
        }
       ],
       "override": [
        {
         "type": "UserDefinedTypeName",
         "namePath": "ISize"
        }
       ],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "claim",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "ClaimParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "validateClaim"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "params"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "executeClaim"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "params"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "whenNotPaused",
         "arguments": null
        }
       ],
       "override": [
        {
         "type": "UserDefinedTypeName",
         "namePath": "ISize"
        }
       ],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "liquidate",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "LiquidateParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "liquidatorProfitCollateralToken",
         "identifier": {
          "type": "Identifier",
          "name": "liquidatorProfitCollateralToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "validateLiquidate"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "params"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "liquidatorProfitCollateralToken"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "executeLiquidate"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "params"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "validateMinimumCollateralProfit"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "params"
            },
            {
             "type": "Identifier",
             "name": "liquidatorProfitCollateralToken"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "whenNotPaused",
         "arguments": null
        }
       ],
       "override": [
        {
         "type": "UserDefinedTypeName",
         "namePath": "ISize"
        }
       ],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "selfLiquidate",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "SelfLiquidateParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "validateSelfLiquidate"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "params"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "executeSelfLiquidate"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "params"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "whenNotPaused",
         "arguments": null
        }
       ],
       "override": [
        {
         "type": "UserDefinedTypeName",
         "namePath": "ISize"
        }
       ],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "liquidateWithReplacement",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "LiquidateWithReplacementParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "liquidatorProfitCollateralToken",
         "identifier": {
          "type": "Identifier",
          "name": "liquidatorProfitCollateralToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "liquidatorProfitBorrowToken",
         "identifier": {
          "type": "Identifier",
          "name": "liquidatorProfitBorrowToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "validateLiquidateWithReplacement"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "params"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "amount",
            "identifier": {
             "type": "Identifier",
             "name": "amount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "TupleExpression",
            "components": [
             {
              "type": "Identifier",
              "name": "amount"
             },
             {
              "type": "Identifier",
              "name": "liquidatorProfitCollateralToken"
             },
             {
              "type": "Identifier",
              "name": "liquidatorProfitBorrowToken"
             }
            ],
            "isArray": false
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "executeLiquidateWithReplacement"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "params"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "validateUserIsNotBelowOpeningLimitBorrowCR"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "borrower"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "validateMinimumCollateralProfit"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "params"
            },
            {
             "type": "Identifier",
             "name": "liquidatorProfitCollateralToken"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "validateVariablePoolHasEnoughLiquidity"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "whenNotPaused",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyRole",
         "arguments": [
          {
           "type": "Identifier",
           "name": "KEEPER_ROLE"
          }
         ]
        }
       ],
       "override": [
        {
         "type": "UserDefinedTypeName",
         "namePath": "ISize"
        }
       ],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "compensate",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "CompensateParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "validateCompensate"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "params"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "executeCompensate"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "params"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "validateUserIsNotUnderwater"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "whenNotPaused",
         "arguments": null
        }
       ],
       "override": [
        {
         "type": "UserDefinedTypeName",
         "namePath": "ISize"
        }
       ],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "setUserConfiguration",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "SetUserConfigurationParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "validateSetUserConfiguration"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "params"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "executeSetUserConfiguration"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "params"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "whenNotPaused",
         "arguments": null
        }
       ],
       "override": [
        {
         "type": "UserDefinedTypeName",
         "namePath": "ISize"
        }
       ],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-06-size/src/token/NonTransferrableToken.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.23"
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/access/Ownable.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/access/Ownable.sol",
      "parts": [
       "@openzeppelin/contracts/access/Ownable.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Ownable",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Ownable"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
      "parts": [
       "@openzeppelin/contracts/token/ERC20/ERC20.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "ERC20",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "ERC20"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Errors.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Errors.sol",
      "parts": [
       "@src/libraries/Errors.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Errors",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Errors"
       },
       null
      ]
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "NonTransferrableToken",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "Ownable"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ERC20"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "_decimals",
         "identifier": {
          "type": "Identifier",
          "name": "_decimals"
         },
         "expression": null,
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": true,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "owner_",
         "identifier": {
          "type": "Identifier",
          "name": "owner_"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "name_",
         "identifier": {
          "type": "Identifier",
          "name": "name_"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "symbol_",
         "identifier": {
          "type": "Identifier",
          "name": "symbol_"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "decimals_",
         "identifier": {
          "type": "Identifier",
          "name": "decimals_"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "decimals_"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "NULL_AMOUNT"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "_decimals"
           },
           "right": {
            "type": "Identifier",
            "name": "decimals_"
           }
          }
         }
        ]
       },
       "visibility": "default",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "Ownable",
         "arguments": [
          {
           "type": "Identifier",
           "name": "owner_"
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "ERC20",
         "arguments": [
          {
           "type": "Identifier",
           "name": "name_"
          },
          {
           "type": "Identifier",
           "name": "symbol_"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "mint",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "to",
         "identifier": {
          "type": "Identifier",
          "name": "to"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "value",
         "identifier": {
          "type": "Identifier",
          "name": "value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_mint"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "to"
            },
            {
             "type": "Identifier",
             "name": "value"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyOwner",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "burn",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "from",
         "identifier": {
          "type": "Identifier",
          "name": "from"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "value",
         "identifier": {
          "type": "Identifier",
          "name": "value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_burn"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "from"
            },
            {
             "type": "Identifier",
             "name": "value"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyOwner",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "transferFrom",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "from",
         "identifier": {
          "type": "Identifier",
          "name": "from"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "to",
         "identifier": {
          "type": "Identifier",
          "name": "to"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "value",
         "identifier": {
          "type": "Identifier",
          "name": "value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_transfer"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "from"
            },
            {
             "type": "Identifier",
             "name": "to"
            },
            {
             "type": "Identifier",
             "name": "value"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BooleanLiteral",
           "value": true
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyOwner",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "transfer",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "to",
         "identifier": {
          "type": "Identifier",
          "name": "to"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "value",
         "identifier": {
          "type": "Identifier",
          "name": "value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "transferFrom"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "to"
            },
            {
             "type": "Identifier",
             "name": "value"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyOwner",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "allowance",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "spender",
         "identifier": {
          "type": "Identifier",
          "name": "spender"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Conditional",
           "condition": {
            "type": "BinaryOperation",
            "operator": "==",
            "left": {
             "type": "Identifier",
             "name": "spender"
            },
            "right": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "owner"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            }
           },
           "trueExpression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "type"
             },
             "arguments": [
              {
               "type": "ElementaryTypeName",
               "name": "uint256",
               "stateMutability": null
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "max"
           },
           "falseExpression": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "approve",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "RevertStatement",
          "revertCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "Errors"
            },
            "memberName": "NOT_SUPPORTED"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "decimals",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "_decimals"
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": "view"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-06-size/src/token/NonTransferrableScaledToken.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.23"
    },
    {
     "type": "ImportDirective",
     "path": "@aave/interfaces/IPool.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@aave/interfaces/IPool.sol",
      "parts": [
       "@aave/interfaces/IPool.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IPool",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IPool"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@aave/protocol/libraries/math/WadRayMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@aave/protocol/libraries/math/WadRayMath.sol",
      "parts": [
       "@aave/protocol/libraries/math/WadRayMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "WadRayMath",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "WadRayMath"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/interfaces/IERC20Metadata.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/interfaces/IERC20Metadata.sol",
      "parts": [
       "@openzeppelin/contracts/interfaces/IERC20Metadata.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IERC20Metadata",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IERC20Metadata"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Math.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Math.sol",
      "parts": [
       "@src/libraries/Math.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Math",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Math"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/token/NonTransferrableToken.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/token/NonTransferrableToken.sol",
      "parts": [
       "@src/token/NonTransferrableToken.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "NonTransferrableToken",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "NonTransferrableToken"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Errors.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Errors.sol",
      "parts": [
       "@src/libraries/Errors.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Errors",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Errors"
       },
       null
      ]
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "NonTransferrableScaledToken",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "NonTransferrableToken"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IPool"
         },
         "name": "variablePool",
         "identifier": {
          "type": "Identifier",
          "name": "variablePool"
         },
         "expression": null,
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": true,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20Metadata"
         },
         "name": "underlyingToken",
         "identifier": {
          "type": "Identifier",
          "name": "underlyingToken"
         },
         "expression": null,
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": true,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "EventDefinition",
       "name": "TransferUnscaled",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "from",
         "identifier": {
          "type": "Identifier",
          "name": "from"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "to",
         "identifier": {
          "type": "Identifier",
          "name": "to"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "value",
         "identifier": {
          "type": "Identifier",
          "name": "value"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IPool"
         },
         "name": "variablePool_",
         "identifier": {
          "type": "Identifier",
          "name": "variablePool_"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20Metadata"
         },
         "name": "underlyingToken_",
         "identifier": {
          "type": "Identifier",
          "name": "underlyingToken_"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "owner_",
         "identifier": {
          "type": "Identifier",
          "name": "owner_"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "name_",
         "identifier": {
          "type": "Identifier",
          "name": "name_"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "symbol_",
         "identifier": {
          "type": "Identifier",
          "name": "symbol_"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "decimals_",
         "identifier": {
          "type": "Identifier",
          "name": "decimals_"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "||",
           "left": {
            "type": "BinaryOperation",
            "operator": "==",
            "left": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "variablePool_"
              }
             ],
             "names": [],
             "identifiers": []
            },
            "right": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            }
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "==",
            "left": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "underlyingToken_"
              }
             ],
             "names": [],
             "identifiers": []
            },
            "right": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            }
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "NULL_ADDRESS"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "variablePool"
           },
           "right": {
            "type": "Identifier",
            "name": "variablePool_"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "underlyingToken"
           },
           "right": {
            "type": "Identifier",
            "name": "underlyingToken_"
           }
          }
         }
        ]
       },
       "visibility": "default",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "NonTransferrableToken",
         "arguments": [
          {
           "type": "Identifier",
           "name": "owner_"
          },
          {
           "type": "Identifier",
           "name": "name_"
          },
          {
           "type": "Identifier",
           "name": "symbol_"
          },
          {
           "type": "Identifier",
           "name": "decimals_"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "mint",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "RevertStatement",
          "revertCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "Errors"
            },
            "memberName": "NOT_SUPPORTED"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyOwner",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "mintScaled",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "to",
         "identifier": {
          "type": "Identifier",
          "name": "to"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "scaledAmount",
         "identifier": {
          "type": "Identifier",
          "name": "scaledAmount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_mint"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "to"
            },
            {
             "type": "Identifier",
             "name": "scaledAmount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "TransferUnscaled"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "to"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "_unscale"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "scaledAmount"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyOwner",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "burn",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "RevertStatement",
          "revertCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "Errors"
            },
            "memberName": "NOT_SUPPORTED"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyOwner",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "burnScaled",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "from",
         "identifier": {
          "type": "Identifier",
          "name": "from"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "scaledAmount",
         "identifier": {
          "type": "Identifier",
          "name": "scaledAmount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_burn"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "from"
            },
            {
             "type": "Identifier",
             "name": "scaledAmount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "TransferUnscaled"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "from"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "_unscale"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "scaledAmount"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyOwner",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "transferFrom",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "from",
         "identifier": {
          "type": "Identifier",
          "name": "from"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "to",
         "identifier": {
          "type": "Identifier",
          "name": "to"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "value",
         "identifier": {
          "type": "Identifier",
          "name": "value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "scaledAmount",
            "identifier": {
             "type": "Identifier",
             "name": "scaledAmount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "Math"
            },
            "memberName": "mulDivDown"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "value"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "WadRayMath"
             },
             "memberName": "RAY"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "liquidityIndex"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_burn"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "from"
            },
            {
             "type": "Identifier",
             "name": "scaledAmount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_mint"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "to"
            },
            {
             "type": "Identifier",
             "name": "scaledAmount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "TransferUnscaled"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "from"
            },
            {
             "type": "Identifier",
             "name": "to"
            },
            {
             "type": "Identifier",
             "name": "value"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BooleanLiteral",
           "value": true
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyOwner",
         "arguments": null
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "scaledBalanceOf",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "account",
         "identifier": {
          "type": "Identifier",
          "name": "account"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "super"
            },
            "memberName": "balanceOf"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "account"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "_unscale",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "scaledAmount",
         "identifier": {
          "type": "Identifier",
          "name": "scaledAmount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "Math"
            },
            "memberName": "mulDivDown"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "scaledAmount"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "liquidityIndex"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "WadRayMath"
             },
             "memberName": "RAY"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "balanceOf",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "account",
         "identifier": {
          "type": "Identifier",
          "name": "account"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_unscale"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "scaledBalanceOf"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "account"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "scaledTotalSupply",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "super"
            },
            "memberName": "totalSupply"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "totalSupply",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_unscale"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "scaledTotalSupply"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "liquidityIndex",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "variablePool"
            },
            "memberName": "getReserveNormalizedIncome"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "underlyingToken"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-06-size/src/oracle/PriceFeed.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.23"
    },
    {
     "type": "ImportDirective",
     "path": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
      "parts": [
       "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "AggregatorV3Interface",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "AggregatorV3Interface"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/utils/math/SafeCast.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/utils/math/SafeCast.sol",
      "parts": [
       "@openzeppelin/contracts/utils/math/SafeCast.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "SafeCast",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "SafeCast"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Math.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Math.sol",
      "parts": [
       "@src/libraries/Math.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Math",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Math"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "./IPriceFeed.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./IPriceFeed.sol",
      "parts": [
       "./IPriceFeed.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IPriceFeed",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IPriceFeed"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Errors.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Errors.sol",
      "parts": [
       "@src/libraries/Errors.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Errors",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Errors"
       },
       null
      ]
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "PriceFeed",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "IPriceFeed"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "GRACE_PERIOD_TIME",
         "identifier": {
          "type": "Identifier",
          "name": "GRACE_PERIOD_TIME"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "3600",
          "subdenomination": null
         },
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "3600",
        "subdenomination": null
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "decimals",
         "identifier": {
          "type": "Identifier",
          "name": "decimals"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "18",
          "subdenomination": null
         },
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "18",
        "subdenomination": null
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "AggregatorV3Interface"
         },
         "name": "base",
         "identifier": {
          "type": "Identifier",
          "name": "base"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": true,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "AggregatorV3Interface"
         },
         "name": "quote",
         "identifier": {
          "type": "Identifier",
          "name": "quote"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": true,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "AggregatorV3Interface"
         },
         "name": "sequencerUptimeFeed",
         "identifier": {
          "type": "Identifier",
          "name": "sequencerUptimeFeed"
         },
         "expression": null,
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": true,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "baseStalePriceInterval",
         "identifier": {
          "type": "Identifier",
          "name": "baseStalePriceInterval"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": true,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "quoteStalePriceInterval",
         "identifier": {
          "type": "Identifier",
          "name": "quoteStalePriceInterval"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": true,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_base",
         "identifier": {
          "type": "Identifier",
          "name": "_base"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_quote",
         "identifier": {
          "type": "Identifier",
          "name": "_quote"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_sequencerUptimeFeed",
         "identifier": {
          "type": "Identifier",
          "name": "_sequencerUptimeFeed"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_baseStalePriceInterval",
         "identifier": {
          "type": "Identifier",
          "name": "_baseStalePriceInterval"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_quoteStalePriceInterval",
         "identifier": {
          "type": "Identifier",
          "name": "_quoteStalePriceInterval"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "||",
           "left": {
            "type": "BinaryOperation",
            "operator": "==",
            "left": {
             "type": "Identifier",
             "name": "_base"
            },
            "right": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            }
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "==",
            "left": {
             "type": "Identifier",
             "name": "_quote"
            },
            "right": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            }
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "NULL_ADDRESS"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "||",
           "left": {
            "type": "BinaryOperation",
            "operator": "==",
            "left": {
             "type": "Identifier",
             "name": "_baseStalePriceInterval"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "==",
            "left": {
             "type": "Identifier",
             "name": "_quoteStalePriceInterval"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "NULL_STALE_PRICE"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "base"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "AggregatorV3Interface"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_base"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "quote"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "AggregatorV3Interface"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_quote"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "sequencerUptimeFeed"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "AggregatorV3Interface"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_sequencerUptimeFeed"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "baseStalePriceInterval"
           },
           "right": {
            "type": "Identifier",
            "name": "_baseStalePriceInterval"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "quoteStalePriceInterval"
           },
           "right": {
            "type": "Identifier",
            "name": "_quoteStalePriceInterval"
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "base"
             },
             "memberName": "decimals"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "quote"
             },
             "memberName": "decimals"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "INVALID_DECIMALS"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "quote"
                 },
                 "memberName": "decimals"
                },
                "arguments": [],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "default",
       "modifiers": [],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getPrice",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "address"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "sequencerUptimeFeed"
             }
            ],
            "names": [],
            "identifiers": []
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "address"
            },
            "arguments": [
             {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              null,
              {
               "type": "VariableDeclaration",
               "name": "answer",
               "identifier": {
                "type": "Identifier",
                "name": "answer"
               },
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "int256",
                "stateMutability": null
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              },
              {
               "type": "VariableDeclaration",
               "name": "startedAt",
               "identifier": {
                "type": "Identifier",
                "name": "startedAt"
               },
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              },
              null,
              null
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "sequencerUptimeFeed"
               },
               "memberName": "latestRoundData"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "Identifier",
               "name": "answer"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "RevertStatement",
                "revertCall": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "Errors"
                  },
                  "memberName": "SEQUENCER_DOWN"
                 },
                 "arguments": [],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": null
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "<=",
              "left": {
               "type": "BinaryOperation",
               "operator": "-",
               "left": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "block"
                },
                "memberName": "timestamp"
               },
               "right": {
                "type": "Identifier",
                "name": "startedAt"
               }
              },
              "right": {
               "type": "Identifier",
               "name": "GRACE_PERIOD_TIME"
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "RevertStatement",
                "revertCall": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "Errors"
                  },
                  "memberName": "GRACE_PERIOD_NOT_OVER"
                 },
                 "arguments": [],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": null
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "Math"
            },
            "memberName": "mulDivDown"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "_getPrice"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "base"
              },
              {
               "type": "Identifier",
               "name": "baseStalePriceInterval"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "BinaryOperation",
             "operator": "**",
             "left": {
              "type": "NumberLiteral",
              "number": "10",
              "subdenomination": null
             },
             "right": {
              "type": "Identifier",
              "name": "decimals"
             }
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "_getPrice"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "quote"
              },
              {
               "type": "Identifier",
               "name": "quoteStalePriceInterval"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "_getPrice",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "AggregatorV3Interface"
         },
         "name": "aggregator",
         "identifier": {
          "type": "Identifier",
          "name": "aggregator"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "stalePriceInterval",
         "identifier": {
          "type": "Identifier",
          "name": "stalePriceInterval"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           null,
           {
            "type": "VariableDeclaration",
            "name": "price",
            "identifier": {
             "type": "Identifier",
             "name": "price"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "int256",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           null,
           {
            "type": "VariableDeclaration",
            "name": "updatedAt",
            "identifier": {
             "type": "Identifier",
             "name": "updatedAt"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           null
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "aggregator"
            },
            "memberName": "latestRoundData"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "<=",
           "left": {
            "type": "Identifier",
            "name": "price"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "RevertStatement",
           "revertCall": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "Errors"
             },
             "memberName": "INVALID_PRICE"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "aggregator"
               }
              ],
              "names": [],
              "identifiers": []
             },
             {
              "type": "Identifier",
              "name": "price"
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "BinaryOperation",
            "operator": "-",
            "left": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            },
            "right": {
             "type": "Identifier",
             "name": "updatedAt"
            }
           },
           "right": {
            "type": "Identifier",
            "name": "stalePriceInterval"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "STALE_PRICE"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "address"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "aggregator"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "Identifier",
                "name": "updatedAt"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "SafeCast"
            },
            "memberName": "toUint256"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "price"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-06-size/src/oracle/IPriceFeed.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.23"
    },
    {
     "type": "ContractDefinition",
     "name": "IPriceFeed",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "getPrice",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "decimals",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-06-size/src/libraries/YieldCurveLibrary.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.23"
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/utils/math/SafeCast.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/utils/math/SafeCast.sol",
      "parts": [
       "@openzeppelin/contracts/utils/math/SafeCast.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "SafeCast",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "SafeCast"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Errors.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Errors.sol",
      "parts": [
       "@src/libraries/Errors.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Errors",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Errors"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Math.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Math.sol",
      "parts": [
       "@src/libraries/Math.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Math",
       null
      ],
      [
       "PERCENT",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Math"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "PERCENT"
       },
       null
      ]
     ]
    },
    {
     "type": "StructDefinition",
     "name": "YieldCurve",
     "members": [
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ArrayTypeName",
        "baseTypeName": {
         "type": "ElementaryTypeName",
         "name": "uint256",
         "stateMutability": null
        },
        "length": null
       },
       "name": "tenors",
       "identifier": {
        "type": "Identifier",
        "name": "tenors"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ArrayTypeName",
        "baseTypeName": {
         "type": "ElementaryTypeName",
         "name": "int256",
         "stateMutability": null
        },
        "length": null
       },
       "name": "aprs",
       "identifier": {
        "type": "Identifier",
        "name": "aprs"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ArrayTypeName",
        "baseTypeName": {
         "type": "ElementaryTypeName",
         "name": "uint256",
         "stateMutability": null
        },
        "length": null
       },
       "name": "marketRateMultipliers",
       "identifier": {
        "type": "Identifier",
        "name": "marketRateMultipliers"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      }
     ]
    },
    {
     "type": "StructDefinition",
     "name": "VariablePoolBorrowRateParams",
     "members": [
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint128",
        "stateMutability": null
       },
       "name": "variablePoolBorrowRate",
       "identifier": {
        "type": "Identifier",
        "name": "variablePoolBorrowRate"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint64",
        "stateMutability": null
       },
       "name": "variablePoolBorrowRateUpdatedAt",
       "identifier": {
        "type": "Identifier",
        "name": "variablePoolBorrowRateUpdatedAt"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint64",
        "stateMutability": null
       },
       "name": "variablePoolBorrowRateStaleRateInterval",
       "identifier": {
        "type": "Identifier",
        "name": "variablePoolBorrowRateStaleRateInterval"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      }
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "YieldCurveLibrary",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "isNull",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "YieldCurve"
         },
         "name": "self",
         "identifier": {
          "type": "Identifier",
          "name": "self"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "&&",
           "left": {
            "type": "BinaryOperation",
            "operator": "&&",
            "left": {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "self"
               },
               "memberName": "tenors"
              },
              "memberName": "length"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            "right": {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "self"
               },
               "memberName": "aprs"
              },
              "memberName": "length"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            }
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "==",
            "left": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "self"
              },
              "memberName": "marketRateMultipliers"
             },
             "memberName": "length"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "validateYieldCurve",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "YieldCurve"
         },
         "name": "self",
         "identifier": {
          "type": "Identifier",
          "name": "self"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "minTenor",
         "identifier": {
          "type": "Identifier",
          "name": "minTenor"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "maxTenor",
         "identifier": {
          "type": "Identifier",
          "name": "maxTenor"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "||",
           "left": {
            "type": "BinaryOperation",
            "operator": "||",
            "left": {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "self"
               },
               "memberName": "tenors"
              },
              "memberName": "length"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            "right": {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "self"
               },
               "memberName": "aprs"
              },
              "memberName": "length"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            }
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "==",
            "left": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "self"
              },
              "memberName": "marketRateMultipliers"
             },
             "memberName": "length"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "NULL_ARRAY"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "||",
           "left": {
            "type": "BinaryOperation",
            "operator": "!=",
            "left": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "self"
              },
              "memberName": "tenors"
             },
             "memberName": "length"
            },
            "right": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "self"
              },
              "memberName": "aprs"
             },
             "memberName": "length"
            }
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "!=",
            "left": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "self"
              },
              "memberName": "tenors"
             },
             "memberName": "length"
            },
            "right": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "self"
              },
              "memberName": "marketRateMultipliers"
             },
             "memberName": "length"
            }
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "ARRAY_LENGTHS_MISMATCH"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "lastTenor",
            "identifier": {
             "type": "Identifier",
             "name": "lastTenor"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "type"
            },
            "arguments": [
             {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             }
            ],
            "names": [],
            "identifiers": []
           },
           "memberName": "max"
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "self"
             },
             "memberName": "tenors"
            },
            "memberName": "length"
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "--",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": ">=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "self"
                },
                "memberName": "tenors"
               },
               "index": {
                "type": "BinaryOperation",
                "operator": "-",
                "left": {
                 "type": "Identifier",
                 "name": "i"
                },
                "right": {
                 "type": "NumberLiteral",
                 "number": "1",
                 "subdenomination": null
                }
               }
              },
              "right": {
               "type": "Identifier",
               "name": "lastTenor"
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "RevertStatement",
                "revertCall": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "Errors"
                  },
                  "memberName": "TENORS_NOT_STRICTLY_INCREASING"
                 },
                 "arguments": [],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": null
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "lastTenor"
              },
              "right": {
               "type": "IndexAccess",
               "base": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "self"
                },
                "memberName": "tenors"
               },
               "index": {
                "type": "BinaryOperation",
                "operator": "-",
                "left": {
                 "type": "Identifier",
                 "name": "i"
                },
                "right": {
                 "type": "NumberLiteral",
                 "number": "1",
                 "subdenomination": null
                }
               }
              }
             }
            }
           ]
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "self"
             },
             "memberName": "tenors"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           },
           "right": {
            "type": "Identifier",
            "name": "minTenor"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "TENOR_OUT_OF_RANGE"
              },
              "arguments": [
               {
                "type": "IndexAccess",
                "base": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "self"
                 },
                 "memberName": "tenors"
                },
                "index": {
                 "type": "NumberLiteral",
                 "number": "0",
                 "subdenomination": null
                }
               },
               {
                "type": "Identifier",
                "name": "minTenor"
               },
               {
                "type": "Identifier",
                "name": "maxTenor"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "self"
             },
             "memberName": "tenors"
            },
            "index": {
             "type": "BinaryOperation",
             "operator": "-",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "self"
               },
               "memberName": "tenors"
              },
              "memberName": "length"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "1",
              "subdenomination": null
             }
            }
           },
           "right": {
            "type": "Identifier",
            "name": "maxTenor"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "TENOR_OUT_OF_RANGE"
              },
              "arguments": [
               {
                "type": "IndexAccess",
                "base": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "self"
                 },
                 "memberName": "tenors"
                },
                "index": {
                 "type": "BinaryOperation",
                 "operator": "-",
                 "left": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "self"
                   },
                   "memberName": "tenors"
                  },
                  "memberName": "length"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "1",
                  "subdenomination": null
                 }
                }
               },
               {
                "type": "Identifier",
                "name": "minTenor"
               },
               {
                "type": "Identifier",
                "name": "maxTenor"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "getAdjustedAPR",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "int256",
          "stateMutability": null
         },
         "name": "apr",
         "identifier": {
          "type": "Identifier",
          "name": "apr"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "marketRateMultiplier",
         "identifier": {
          "type": "Identifier",
          "name": "marketRateMultiplier"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "VariablePoolBorrowRateParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "marketRateMultiplier"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "SafeCast"
               },
               "memberName": "toUint256"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "apr"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": {
           "type": "IfStatement",
           "condition": {
            "type": "BinaryOperation",
            "operator": "||",
            "left": {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "params"
              },
              "memberName": "variablePoolBorrowRateStaleRateInterval"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            "right": {
             "type": "TupleExpression",
             "components": [
              {
               "type": "BinaryOperation",
               "operator": ">",
               "left": {
                "type": "BinaryOperation",
                "operator": "-",
                "left": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "block"
                 },
                 "memberName": "timestamp"
                },
                "right": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "params"
                 },
                 "memberName": "variablePoolBorrowRateUpdatedAt"
                }
               },
               "right": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "params"
                },
                "memberName": "variablePoolBorrowRateStaleRateInterval"
               }
              }
             ],
             "isArray": false
            }
           },
           "trueBody": {
            "type": "Block",
            "statements": [
             {
              "type": "RevertStatement",
              "revertCall": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "Errors"
                },
                "memberName": "STALE_RATE"
               },
               "arguments": [
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "params"
                 },
                 "memberName": "variablePoolBorrowRateUpdatedAt"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            ]
           },
           "falseBody": {
            "type": "Block",
            "statements": [
             {
              "type": "ReturnStatement",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "SafeCast"
                },
                "memberName": "toUint256"
               },
               "arguments": [
                {
                 "type": "BinaryOperation",
                 "operator": "+",
                 "left": {
                  "type": "Identifier",
                  "name": "apr"
                 },
                 "right": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "SafeCast"
                   },
                   "memberName": "toInt256"
                  },
                  "arguments": [
                   {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "Math"
                     },
                     "memberName": "mulDivDown"
                    },
                    "arguments": [
                     {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "Identifier",
                       "name": "params"
                      },
                      "memberName": "variablePoolBorrowRate"
                     },
                     {
                      "type": "Identifier",
                      "name": "marketRateMultiplier"
                     },
                     {
                      "type": "Identifier",
                      "name": "PERCENT"
                     }
                    ],
                    "names": [],
                    "identifiers": []
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            ]
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getAPR",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "YieldCurve"
         },
         "name": "curveRelativeTime",
         "identifier": {
          "type": "Identifier",
          "name": "curveRelativeTime"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "VariablePoolBorrowRateParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "tenor",
         "identifier": {
          "type": "Identifier",
          "name": "tenor"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "length",
            "identifier": {
             "type": "Identifier",
             "name": "length"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "curveRelativeTime"
            },
            "memberName": "tenors"
           },
           "memberName": "length"
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "||",
           "left": {
            "type": "BinaryOperation",
            "operator": "<",
            "left": {
             "type": "Identifier",
             "name": "tenor"
            },
            "right": {
             "type": "IndexAccess",
             "base": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "curveRelativeTime"
              },
              "memberName": "tenors"
             },
             "index": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            }
           },
           "right": {
            "type": "BinaryOperation",
            "operator": ">",
            "left": {
             "type": "Identifier",
             "name": "tenor"
            },
            "right": {
             "type": "IndexAccess",
             "base": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "curveRelativeTime"
              },
              "memberName": "tenors"
             },
             "index": {
              "type": "BinaryOperation",
              "operator": "-",
              "left": {
               "type": "Identifier",
               "name": "length"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              }
             }
            }
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "TENOR_OUT_OF_RANGE"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "tenor"
               },
               {
                "type": "IndexAccess",
                "base": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "curveRelativeTime"
                 },
                 "memberName": "tenors"
                },
                "index": {
                 "type": "NumberLiteral",
                 "number": "0",
                 "subdenomination": null
                }
               },
               {
                "type": "IndexAccess",
                "base": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "curveRelativeTime"
                 },
                 "memberName": "tenors"
                },
                "index": {
                 "type": "BinaryOperation",
                 "operator": "-",
                 "left": {
                  "type": "Identifier",
                  "name": "length"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "1",
                  "subdenomination": null
                 }
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "name": "low",
               "identifier": {
                "type": "Identifier",
                "name": "low"
               },
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              },
              {
               "type": "VariableDeclaration",
               "name": "high",
               "identifier": {
                "type": "Identifier",
                "name": "high"
               },
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Math"
               },
               "memberName": "binarySearch"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "curveRelativeTime"
                },
                "memberName": "tenors"
               },
               {
                "type": "Identifier",
                "name": "tenor"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "y0",
               "identifier": {
                "type": "Identifier",
                "name": "y0"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "getAdjustedAPR"
              },
              "arguments": [
               {
                "type": "IndexAccess",
                "base": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "curveRelativeTime"
                 },
                 "memberName": "aprs"
                },
                "index": {
                 "type": "Identifier",
                 "name": "low"
                }
               },
               {
                "type": "IndexAccess",
                "base": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "curveRelativeTime"
                 },
                 "memberName": "marketRateMultipliers"
                },
                "index": {
                 "type": "Identifier",
                 "name": "low"
                }
               },
               {
                "type": "Identifier",
                "name": "params"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "!=",
              "left": {
               "type": "Identifier",
               "name": "low"
              },
              "right": {
               "type": "Identifier",
               "name": "high"
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "ElementaryTypeName",
                   "name": "uint256",
                   "stateMutability": null
                  },
                  "name": "x0",
                  "identifier": {
                   "type": "Identifier",
                   "name": "x0"
                  },
                  "storageLocation": null,
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "curveRelativeTime"
                  },
                  "memberName": "tenors"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "low"
                 }
                }
               },
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "ElementaryTypeName",
                   "name": "uint256",
                   "stateMutability": null
                  },
                  "name": "x1",
                  "identifier": {
                   "type": "Identifier",
                   "name": "x1"
                  },
                  "storageLocation": null,
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "curveRelativeTime"
                  },
                  "memberName": "tenors"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "high"
                 }
                }
               },
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "ElementaryTypeName",
                   "name": "uint256",
                   "stateMutability": null
                  },
                  "name": "y1",
                  "identifier": {
                   "type": "Identifier",
                   "name": "y1"
                  },
                  "storageLocation": null,
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "getAdjustedAPR"
                 },
                 "arguments": [
                  {
                   "type": "IndexAccess",
                   "base": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "curveRelativeTime"
                    },
                    "memberName": "aprs"
                   },
                   "index": {
                    "type": "Identifier",
                    "name": "high"
                   }
                  },
                  {
                   "type": "IndexAccess",
                   "base": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "curveRelativeTime"
                    },
                    "memberName": "marketRateMultipliers"
                   },
                   "index": {
                    "type": "Identifier",
                    "name": "high"
                   }
                  },
                  {
                   "type": "Identifier",
                   "name": "params"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": ">=",
                 "left": {
                  "type": "Identifier",
                  "name": "y1"
                 },
                 "right": {
                  "type": "Identifier",
                  "name": "y0"
                 }
                },
                "trueBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "ReturnStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "+",
                    "left": {
                     "type": "Identifier",
                     "name": "y0"
                    },
                    "right": {
                     "type": "FunctionCall",
                     "expression": {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "Identifier",
                       "name": "Math"
                      },
                      "memberName": "mulDivDown"
                     },
                     "arguments": [
                      {
                       "type": "BinaryOperation",
                       "operator": "-",
                       "left": {
                        "type": "Identifier",
                        "name": "y1"
                       },
                       "right": {
                        "type": "Identifier",
                        "name": "y0"
                       }
                      },
                      {
                       "type": "BinaryOperation",
                       "operator": "-",
                       "left": {
                        "type": "Identifier",
                        "name": "tenor"
                       },
                       "right": {
                        "type": "Identifier",
                        "name": "x0"
                       }
                      },
                      {
                       "type": "BinaryOperation",
                       "operator": "-",
                       "left": {
                        "type": "Identifier",
                        "name": "x1"
                       },
                       "right": {
                        "type": "Identifier",
                        "name": "x0"
                       }
                      }
                     ],
                     "names": [],
                     "identifiers": []
                    }
                   }
                  }
                 ]
                },
                "falseBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "ReturnStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "-",
                    "left": {
                     "type": "Identifier",
                     "name": "y0"
                    },
                    "right": {
                     "type": "FunctionCall",
                     "expression": {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "Identifier",
                       "name": "Math"
                      },
                      "memberName": "mulDivDown"
                     },
                     "arguments": [
                      {
                       "type": "BinaryOperation",
                       "operator": "-",
                       "left": {
                        "type": "Identifier",
                        "name": "y0"
                       },
                       "right": {
                        "type": "Identifier",
                        "name": "y1"
                       }
                      },
                      {
                       "type": "BinaryOperation",
                       "operator": "-",
                       "left": {
                        "type": "Identifier",
                        "name": "tenor"
                       },
                       "right": {
                        "type": "Identifier",
                        "name": "x0"
                       }
                      },
                      {
                       "type": "BinaryOperation",
                       "operator": "-",
                       "left": {
                        "type": "Identifier",
                        "name": "x1"
                       },
                       "right": {
                        "type": "Identifier",
                        "name": "x0"
                       }
                      }
                     ],
                     "names": [],
                     "identifiers": []
                    }
                   }
                  }
                 ]
                }
               }
              ]
             },
             "falseBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ReturnStatement",
                "expression": {
                 "type": "Identifier",
                 "name": "y0"
                }
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "library"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-06-size/src/libraries/RiskLibrary.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.23"
    },
    {
     "type": "ImportDirective",
     "path": "@src/SizeStorage.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/SizeStorage.sol",
      "parts": [
       "@src/SizeStorage.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "State",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "State"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Errors.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Errors.sol",
      "parts": [
       "@src/libraries/Errors.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Errors",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Errors"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/LoanLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/LoanLibrary.sol",
      "parts": [
       "@src/libraries/LoanLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "CreditPosition",
       null
      ],
      [
       "DebtPosition",
       null
      ],
      [
       "LoanLibrary",
       null
      ],
      [
       "LoanStatus",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "CreditPosition"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "DebtPosition"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "LoanLibrary"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "LoanStatus"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Math.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Math.sol",
      "parts": [
       "@src/libraries/Math.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Math",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Math"
       },
       null
      ]
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "RiskLibrary",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "LoanLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "FunctionDefinition",
       "name": "validateMinimumCredit",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "credit",
         "identifier": {
          "type": "Identifier",
          "name": "credit"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "&&",
           "left": {
            "type": "BinaryOperation",
            "operator": "<",
            "left": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            },
            "right": {
             "type": "Identifier",
             "name": "credit"
            }
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "<",
            "left": {
             "type": "Identifier",
             "name": "credit"
            },
            "right": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "riskConfig"
             },
             "memberName": "minimumCreditBorrowAToken"
            }
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "CREDIT_LOWER_THAN_MINIMUM_CREDIT"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "credit"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "state"
                 },
                 "memberName": "riskConfig"
                },
                "memberName": "minimumCreditBorrowAToken"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "validateMinimumCreditOpening",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "credit",
         "identifier": {
          "type": "Identifier",
          "name": "credit"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "credit"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "riskConfig"
            },
            "memberName": "minimumCreditBorrowAToken"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "CREDIT_LOWER_THAN_MINIMUM_CREDIT_OPENING"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "credit"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "state"
                 },
                 "memberName": "riskConfig"
                },
                "memberName": "minimumCreditBorrowAToken"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "validateTenor",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "tenor",
         "identifier": {
          "type": "Identifier",
          "name": "tenor"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "||",
           "left": {
            "type": "BinaryOperation",
            "operator": "<",
            "left": {
             "type": "Identifier",
             "name": "tenor"
            },
            "right": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "riskConfig"
             },
             "memberName": "minTenor"
            }
           },
           "right": {
            "type": "BinaryOperation",
            "operator": ">",
            "left": {
             "type": "Identifier",
             "name": "tenor"
            },
            "right": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "riskConfig"
             },
             "memberName": "maxTenor"
            }
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "TENOR_OUT_OF_RANGE"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "tenor"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "state"
                 },
                 "memberName": "riskConfig"
                },
                "memberName": "minTenor"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "state"
                 },
                 "memberName": "riskConfig"
                },
                "memberName": "maxTenor"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "collateralRatio",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "account",
         "identifier": {
          "type": "Identifier",
          "name": "account"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "collateral",
            "identifier": {
             "type": "Identifier",
             "name": "collateral"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "collateralToken"
            },
            "memberName": "balanceOf"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "account"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "debt",
            "identifier": {
             "type": "Identifier",
             "name": "debt"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "debtToken"
            },
            "memberName": "balanceOf"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "account"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "debtWad",
            "identifier": {
             "type": "Identifier",
             "name": "debtWad"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "Math"
            },
            "memberName": "amountToWad"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "debt"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "data"
               },
               "memberName": "underlyingBorrowToken"
              },
              "memberName": "decimals"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "price",
            "identifier": {
             "type": "Identifier",
             "name": "price"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "oracle"
             },
             "memberName": "priceFeed"
            },
            "memberName": "getPrice"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "Identifier",
            "name": "debt"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Math"
               },
               "memberName": "mulDivDown"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "collateral"
               },
               {
                "type": "Identifier",
                "name": "price"
               },
               {
                "type": "Identifier",
                "name": "debtWad"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "type"
               },
               "arguments": [
                {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                }
               ],
               "names": [],
               "identifiers": []
              },
              "memberName": "max"
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "isCreditPositionSelfLiquidatable",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "creditPositionId",
         "identifier": {
          "type": "Identifier",
          "name": "creditPositionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "CreditPosition"
            },
            "name": "creditPosition",
            "identifier": {
             "type": "Identifier",
             "name": "creditPosition"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "data"
            },
            "memberName": "creditPositions"
           },
           "index": {
            "type": "Identifier",
            "name": "creditPositionId"
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "DebtPosition"
            },
            "name": "debtPosition",
            "identifier": {
             "type": "Identifier",
             "name": "debtPosition"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "data"
            },
            "memberName": "debtPositions"
           },
           "index": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "creditPosition"
            },
            "memberName": "debtPositionId"
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "LoanStatus"
            },
            "name": "status",
            "identifier": {
             "type": "Identifier",
             "name": "status"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "getLoanStatus"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "creditPositionId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "&&",
           "left": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "isCreditPositionId"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "creditPositionId"
             }
            ],
            "names": [],
            "identifiers": []
           },
           "right": {
            "type": "TupleExpression",
            "components": [
             {
              "type": "BinaryOperation",
              "operator": "&&",
              "left": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "isUserUnderwater"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "state"
                },
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "debtPosition"
                 },
                 "memberName": "borrower"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "!=",
               "left": {
                "type": "Identifier",
                "name": "status"
               },
               "right": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "LoanStatus"
                },
                "memberName": "REPAID"
               }
              }
             }
            ],
            "isArray": false
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "isCreditPositionTransferrable",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "creditPositionId",
         "identifier": {
          "type": "Identifier",
          "name": "creditPositionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "&&",
           "left": {
            "type": "BinaryOperation",
            "operator": "==",
            "left": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "getLoanStatus"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "creditPositionId"
              }
             ],
             "names": [],
             "identifiers": []
            },
            "right": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "LoanStatus"
             },
             "memberName": "ACTIVE"
            }
           },
           "right": {
            "type": "UnaryOperation",
            "operator": "!",
            "subExpression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "isUserUnderwater"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "state"
              },
              {
               "type": "MemberAccess",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "state"
                 },
                 "memberName": "getDebtPositionByCreditPositionId"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "creditPositionId"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "memberName": "borrower"
              }
             ],
             "names": [],
             "identifiers": []
            },
            "isPrefix": true
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "isDebtPositionLiquidatable",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "debtPositionId",
         "identifier": {
          "type": "Identifier",
          "name": "debtPositionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "DebtPosition"
            },
            "name": "debtPosition",
            "identifier": {
             "type": "Identifier",
             "name": "debtPosition"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "data"
            },
            "memberName": "debtPositions"
           },
           "index": {
            "type": "Identifier",
            "name": "debtPositionId"
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "LoanStatus"
            },
            "name": "status",
            "identifier": {
             "type": "Identifier",
             "name": "status"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "getLoanStatus"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "debtPositionId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "&&",
           "left": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "isDebtPositionId"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "debtPositionId"
             }
            ],
            "names": [],
            "identifiers": []
           },
           "right": {
            "type": "TupleExpression",
            "components": [
             {
              "type": "BinaryOperation",
              "operator": "||",
              "left": {
               "type": "TupleExpression",
               "components": [
                {
                 "type": "BinaryOperation",
                 "operator": "&&",
                 "left": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "Identifier",
                   "name": "isUserUnderwater"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "state"
                   },
                   {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "debtPosition"
                    },
                    "memberName": "borrower"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 },
                 "right": {
                  "type": "BinaryOperation",
                  "operator": "!=",
                  "left": {
                   "type": "Identifier",
                   "name": "status"
                  },
                  "right": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "LoanStatus"
                   },
                   "memberName": "REPAID"
                  }
                 }
                }
               ],
               "isArray": false
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "==",
               "left": {
                "type": "Identifier",
                "name": "status"
               },
               "right": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "LoanStatus"
                },
                "memberName": "OVERDUE"
               }
              }
             }
            ],
            "isArray": false
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "isUserUnderwater",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "account",
         "identifier": {
          "type": "Identifier",
          "name": "account"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "collateralRatio"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "state"
             },
             {
              "type": "Identifier",
              "name": "account"
             }
            ],
            "names": [],
            "identifiers": []
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "riskConfig"
            },
            "memberName": "crLiquidation"
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "validateUserIsNotUnderwater",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "account",
         "identifier": {
          "type": "Identifier",
          "name": "account"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "isUserUnderwater"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "state"
            },
            {
             "type": "Identifier",
             "name": "account"
            }
           ],
           "names": [],
           "identifiers": []
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "USER_IS_UNDERWATER"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "account"
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "collateralRatio"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "state"
                 },
                 {
                  "type": "Identifier",
                  "name": "account"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "validateUserIsNotBelowOpeningLimitBorrowCR",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "account",
         "identifier": {
          "type": "Identifier",
          "name": "account"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "openingLimitBorrowCR",
            "identifier": {
             "type": "Identifier",
             "name": "openingLimitBorrowCR"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "Math"
            },
            "memberName": "max"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "riskConfig"
             },
             "memberName": "crOpening"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "IndexAccess",
              "base": {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "data"
               },
               "memberName": "users"
              },
              "index": {
               "type": "Identifier",
               "name": "account"
              }
             },
             "memberName": "openingLimitBorrowCR"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "collateralRatio"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "state"
             },
             {
              "type": "Identifier",
              "name": "account"
             }
            ],
            "names": [],
            "identifiers": []
           },
           "right": {
            "type": "Identifier",
            "name": "openingLimitBorrowCR"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "CR_BELOW_OPENING_LIMIT_BORROW_CR"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "account"
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "collateralRatio"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "state"
                 },
                 {
                  "type": "Identifier",
                  "name": "account"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "Identifier",
                "name": "openingLimitBorrowCR"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "library"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-06-size/src/libraries/OfferLibrary.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.23"
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Errors.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Errors.sol",
      "parts": [
       "@src/libraries/Errors.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Errors",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Errors"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Math.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Math.sol",
      "parts": [
       "@src/libraries/Math.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Math",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Math"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/YieldCurveLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/YieldCurveLibrary.sol",
      "parts": [
       "@src/libraries/YieldCurveLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "VariablePoolBorrowRateParams",
       null
      ],
      [
       "YieldCurve",
       null
      ],
      [
       "YieldCurveLibrary",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "VariablePoolBorrowRateParams"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "YieldCurve"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "YieldCurveLibrary"
       },
       null
      ]
     ]
    },
    {
     "type": "StructDefinition",
     "name": "LoanOffer",
     "members": [
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "maxDueDate",
       "identifier": {
        "type": "Identifier",
        "name": "maxDueDate"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "YieldCurve"
       },
       "name": "curveRelativeTime",
       "identifier": {
        "type": "Identifier",
        "name": "curveRelativeTime"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      }
     ]
    },
    {
     "type": "StructDefinition",
     "name": "BorrowOffer",
     "members": [
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "YieldCurve"
       },
       "name": "curveRelativeTime",
       "identifier": {
        "type": "Identifier",
        "name": "curveRelativeTime"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      }
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "OfferLibrary",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "YieldCurve"
       },
       "libraryName": "YieldCurveLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "FunctionDefinition",
       "name": "isNull",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "LoanOffer"
         },
         "name": "self",
         "identifier": {
          "type": "Identifier",
          "name": "self"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "&&",
           "left": {
            "type": "BinaryOperation",
            "operator": "==",
            "left": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "self"
             },
             "memberName": "maxDueDate"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "self"
              },
              "memberName": "curveRelativeTime"
             },
             "memberName": "isNull"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "isNull",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "BorrowOffer"
         },
         "name": "self",
         "identifier": {
          "type": "Identifier",
          "name": "self"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "self"
             },
             "memberName": "curveRelativeTime"
            },
            "memberName": "isNull"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "getAPRByTenor",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "LoanOffer"
         },
         "name": "self",
         "identifier": {
          "type": "Identifier",
          "name": "self"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "VariablePoolBorrowRateParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "tenor",
         "identifier": {
          "type": "Identifier",
          "name": "tenor"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "tenor"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "RevertStatement",
           "revertCall": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "Errors"
             },
             "memberName": "NULL_TENOR"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           }
          },
          "falseBody": null
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "YieldCurveLibrary"
            },
            "memberName": "getAPR"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "self"
             },
             "memberName": "curveRelativeTime"
            },
            {
             "type": "Identifier",
             "name": "params"
            },
            {
             "type": "Identifier",
             "name": "tenor"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getRatePerTenor",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "LoanOffer"
         },
         "name": "self",
         "identifier": {
          "type": "Identifier",
          "name": "self"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "VariablePoolBorrowRateParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "tenor",
         "identifier": {
          "type": "Identifier",
          "name": "tenor"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "apr",
            "identifier": {
             "type": "Identifier",
             "name": "apr"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getAPRByTenor"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "self"
            },
            {
             "type": "Identifier",
             "name": "params"
            },
            {
             "type": "Identifier",
             "name": "tenor"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "Math"
            },
            "memberName": "aprToRatePerTenor"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "apr"
            },
            {
             "type": "Identifier",
             "name": "tenor"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getAPRByTenor",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "BorrowOffer"
         },
         "name": "self",
         "identifier": {
          "type": "Identifier",
          "name": "self"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "VariablePoolBorrowRateParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "tenor",
         "identifier": {
          "type": "Identifier",
          "name": "tenor"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "tenor"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "RevertStatement",
           "revertCall": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "Errors"
             },
             "memberName": "NULL_TENOR"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           }
          },
          "falseBody": null
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "YieldCurveLibrary"
            },
            "memberName": "getAPR"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "self"
             },
             "memberName": "curveRelativeTime"
            },
            {
             "type": "Identifier",
             "name": "params"
            },
            {
             "type": "Identifier",
             "name": "tenor"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getRatePerTenor",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "BorrowOffer"
         },
         "name": "self",
         "identifier": {
          "type": "Identifier",
          "name": "self"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "VariablePoolBorrowRateParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "tenor",
         "identifier": {
          "type": "Identifier",
          "name": "tenor"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "apr",
            "identifier": {
             "type": "Identifier",
             "name": "apr"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getAPRByTenor"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "self"
            },
            {
             "type": "Identifier",
             "name": "params"
            },
            {
             "type": "Identifier",
             "name": "tenor"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "Math"
            },
            "memberName": "aprToRatePerTenor"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "apr"
            },
            {
             "type": "Identifier",
             "name": "tenor"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "library"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-06-size/src/libraries/Multicall.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.23"
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/utils/Address.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/utils/Address.sol",
      "parts": [
       "@openzeppelin/contracts/utils/Address.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Address",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Address"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/SizeStorage.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/SizeStorage.sol",
      "parts": [
       "@src/SizeStorage.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "State",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "State"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/CapsLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/CapsLibrary.sol",
      "parts": [
       "@src/libraries/CapsLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "CapsLibrary",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "CapsLibrary"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/RiskLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/RiskLibrary.sol",
      "parts": [
       "@src/libraries/RiskLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "RiskLibrary",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "RiskLibrary"
       },
       null
      ]
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "Multicall",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "CapsLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "RiskLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "FunctionDefinition",
       "name": "multicall",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "bytes",
           "stateMutability": null
          },
          "length": null
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "bytes",
           "stateMutability": null
          },
          "length": null
         },
         "name": "results",
         "identifier": {
          "type": "Identifier",
          "name": "results"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "data"
            },
            "memberName": "isMulticall"
           },
           "right": {
            "type": "BooleanLiteral",
            "value": true
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "borrowATokenSupplyBefore",
            "identifier": {
             "type": "Identifier",
             "name": "borrowATokenSupplyBefore"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "borrowAToken"
            },
            "memberName": "balanceOf"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "this"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "debtTokenSupplyBefore",
            "identifier": {
             "type": "Identifier",
             "name": "debtTokenSupplyBefore"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "debtToken"
            },
            "memberName": "totalSupply"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "results"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "NewExpression",
             "typeName": {
              "type": "ArrayTypeName",
              "baseTypeName": {
               "type": "ElementaryTypeName",
               "name": "bytes",
               "stateMutability": null
              },
              "length": null
             }
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "data"
              },
              "memberName": "length"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "data"
            },
            "memberName": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "results"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "Address"
                },
                "memberName": "functionDelegateCall"
               },
               "arguments": [
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "address"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "this"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                },
                {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "data"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "i"
                 }
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "borrowATokenSupplyAfter",
            "identifier": {
             "type": "Identifier",
             "name": "borrowATokenSupplyAfter"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "borrowAToken"
            },
            "memberName": "balanceOf"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "this"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "debtTokenSupplyAfter",
            "identifier": {
             "type": "Identifier",
             "name": "debtTokenSupplyAfter"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "debtToken"
            },
            "memberName": "totalSupply"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "validateBorrowATokenIncreaseLteDebtTokenDecrease"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "borrowATokenSupplyBefore"
            },
            {
             "type": "Identifier",
             "name": "debtTokenSupplyBefore"
            },
            {
             "type": "Identifier",
             "name": "borrowATokenSupplyAfter"
            },
            {
             "type": "Identifier",
             "name": "debtTokenSupplyAfter"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "data"
            },
            "memberName": "isMulticall"
           },
           "right": {
            "type": "BooleanLiteral",
            "value": false
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "library"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-06-size/src/libraries/Math.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.23"
    },
    {
     "type": "ImportDirective",
     "path": "@solady/utils/FixedPointMathLib.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@solady/utils/FixedPointMathLib.sol",
      "parts": [
       "@solady/utils/FixedPointMathLib.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "FixedPointMathLib",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "FixedPointMathLib"
       },
       null
      ]
     ]
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "PERCENT",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "1e18",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "YEAR",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "365",
      "subdenomination": "days"
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "ContractDefinition",
     "name": "Math",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "min",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "a",
         "identifier": {
          "type": "Identifier",
          "name": "a"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "b",
         "identifier": {
          "type": "Identifier",
          "name": "b"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "FixedPointMathLib"
            },
            "memberName": "min"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "a"
            },
            {
             "type": "Identifier",
             "name": "b"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "max",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "a",
         "identifier": {
          "type": "Identifier",
          "name": "a"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "b",
         "identifier": {
          "type": "Identifier",
          "name": "b"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "FixedPointMathLib"
            },
            "memberName": "max"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "a"
            },
            {
             "type": "Identifier",
             "name": "b"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "mulDivUp",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "x",
         "identifier": {
          "type": "Identifier",
          "name": "x"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "y",
         "identifier": {
          "type": "Identifier",
          "name": "y"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "z",
         "identifier": {
          "type": "Identifier",
          "name": "z"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "FixedPointMathLib"
            },
            "memberName": "mulDivUp"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "x"
            },
            {
             "type": "Identifier",
             "name": "y"
            },
            {
             "type": "Identifier",
             "name": "z"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "mulDivDown",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "x",
         "identifier": {
          "type": "Identifier",
          "name": "x"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "y",
         "identifier": {
          "type": "Identifier",
          "name": "y"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "z",
         "identifier": {
          "type": "Identifier",
          "name": "z"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "FixedPointMathLib"
            },
            "memberName": "mulDiv"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "x"
            },
            {
             "type": "Identifier",
             "name": "y"
            },
            {
             "type": "Identifier",
             "name": "z"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "amountToWad",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "decimals",
         "identifier": {
          "type": "Identifier",
          "name": "decimals"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "*",
           "left": {
            "type": "Identifier",
            "name": "amount"
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "**",
            "left": {
             "type": "NumberLiteral",
             "number": "10",
             "subdenomination": null
            },
            "right": {
             "type": "TupleExpression",
             "components": [
              {
               "type": "BinaryOperation",
               "operator": "-",
               "left": {
                "type": "NumberLiteral",
                "number": "18",
                "subdenomination": null
               },
               "right": {
                "type": "Identifier",
                "name": "decimals"
               }
              }
             ],
             "isArray": false
            }
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "aprToRatePerTenor",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "apr",
         "identifier": {
          "type": "Identifier",
          "name": "apr"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "tenor",
         "identifier": {
          "type": "Identifier",
          "name": "tenor"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "mulDivDown"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "apr"
            },
            {
             "type": "Identifier",
             "name": "tenor"
            },
            {
             "type": "Identifier",
             "name": "YEAR"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "binarySearch",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "array",
         "identifier": {
          "type": "Identifier",
          "name": "array"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "value",
         "identifier": {
          "type": "Identifier",
          "name": "value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "low",
         "identifier": {
          "type": "Identifier",
          "name": "low"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "high",
         "identifier": {
          "type": "Identifier",
          "name": "high"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "low"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "high"
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "-",
            "left": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "array"
             },
             "memberName": "length"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "||",
           "left": {
            "type": "BinaryOperation",
            "operator": "<",
            "left": {
             "type": "Identifier",
             "name": "value"
            },
            "right": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "array"
             },
             "index": {
              "type": "Identifier",
              "name": "low"
             }
            }
           },
           "right": {
            "type": "BinaryOperation",
            "operator": ">",
            "left": {
             "type": "Identifier",
             "name": "value"
            },
            "right": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "array"
             },
             "index": {
              "type": "Identifier",
              "name": "high"
             }
            }
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "TupleExpression",
              "components": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "type"
                 },
                 "arguments": [
                  {
                   "type": "ElementaryTypeName",
                   "name": "uint256",
                   "stateMutability": null
                  }
                 ],
                 "names": [],
                 "identifiers": []
                },
                "memberName": "max"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "type"
                 },
                 "arguments": [
                  {
                   "type": "ElementaryTypeName",
                   "name": "uint256",
                   "stateMutability": null
                  }
                 ],
                 "names": [],
                 "identifiers": []
                },
                "memberName": "max"
               }
              ],
              "isArray": false
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "WhileStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "<=",
           "left": {
            "type": "Identifier",
            "name": "low"
           },
           "right": {
            "type": "Identifier",
            "name": "high"
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "mid",
               "identifier": {
                "type": "Identifier",
                "name": "mid"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "BinaryOperation",
              "operator": "/",
              "left": {
               "type": "TupleExpression",
               "components": [
                {
                 "type": "BinaryOperation",
                 "operator": "+",
                 "left": {
                  "type": "Identifier",
                  "name": "low"
                 },
                 "right": {
                  "type": "Identifier",
                  "name": "high"
                 }
                }
               ],
               "isArray": false
              },
              "right": {
               "type": "NumberLiteral",
               "number": "2",
               "subdenomination": null
              }
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "array"
               },
               "index": {
                "type": "Identifier",
                "name": "mid"
               }
              },
              "right": {
               "type": "Identifier",
               "name": "value"
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ReturnStatement",
                "expression": {
                 "type": "TupleExpression",
                 "components": [
                  {
                   "type": "Identifier",
                   "name": "mid"
                  },
                  {
                   "type": "Identifier",
                   "name": "mid"
                  }
                 ],
                 "isArray": false
                }
               }
              ]
             },
             "falseBody": {
              "type": "IfStatement",
              "condition": {
               "type": "BinaryOperation",
               "operator": "<",
               "left": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "array"
                },
                "index": {
                 "type": "Identifier",
                 "name": "mid"
                }
               },
               "right": {
                "type": "Identifier",
                "name": "value"
               }
              },
              "trueBody": {
               "type": "Block",
               "statements": [
                {
                 "type": "ExpressionStatement",
                 "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                   "type": "Identifier",
                   "name": "low"
                  },
                  "right": {
                   "type": "BinaryOperation",
                   "operator": "+",
                   "left": {
                    "type": "Identifier",
                    "name": "mid"
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "1",
                    "subdenomination": null
                   }
                  }
                 }
                }
               ]
              },
              "falseBody": {
               "type": "Block",
               "statements": [
                {
                 "type": "ExpressionStatement",
                 "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                   "type": "Identifier",
                   "name": "high"
                  },
                  "right": {
                   "type": "BinaryOperation",
                   "operator": "-",
                   "left": {
                    "type": "Identifier",
                    "name": "mid"
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "1",
                    "subdenomination": null
                   }
                  }
                 }
                }
               ]
              }
             }
            }
           ]
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "TupleExpression",
           "components": [
            {
             "type": "Identifier",
             "name": "high"
            },
            {
             "type": "Identifier",
             "name": "low"
            }
           ],
           "isArray": false
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      }
     ],
     "kind": "library"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-06-size/src/libraries/LoanLibrary.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.23"
    },
    {
     "type": "ImportDirective",
     "path": "@src/SizeStorage.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/SizeStorage.sol",
      "parts": [
       "@src/SizeStorage.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "State",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "State"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/AccountingLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/AccountingLibrary.sol",
      "parts": [
       "@src/libraries/AccountingLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "AccountingLibrary",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "AccountingLibrary"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Errors.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Errors.sol",
      "parts": [
       "@src/libraries/Errors.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Errors",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Errors"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Math.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Math.sol",
      "parts": [
       "@src/libraries/Math.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Math",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Math"
       },
       null
      ]
     ]
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "DEBT_POSITION_ID_START",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "CREDIT_POSITION_ID_START",
     "initialValue": {
      "type": "BinaryOperation",
      "operator": "/",
      "left": {
       "type": "MemberAccess",
       "expression": {
        "type": "FunctionCall",
        "expression": {
         "type": "Identifier",
         "name": "type"
        },
        "arguments": [
         {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         }
        ],
        "names": [],
        "identifiers": []
       },
       "memberName": "max"
      },
      "right": {
       "type": "NumberLiteral",
       "number": "2",
       "subdenomination": null
      }
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "RESERVED_ID",
     "initialValue": {
      "type": "MemberAccess",
      "expression": {
       "type": "FunctionCall",
       "expression": {
        "type": "Identifier",
        "name": "type"
       },
       "arguments": [
        {
         "type": "ElementaryTypeName",
         "name": "uint256",
         "stateMutability": null
        }
       ],
       "names": [],
       "identifiers": []
      },
      "memberName": "max"
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "StructDefinition",
     "name": "DebtPosition",
     "members": [
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "address",
        "stateMutability": null
       },
       "name": "borrower",
       "identifier": {
        "type": "Identifier",
        "name": "borrower"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "futureValue",
       "identifier": {
        "type": "Identifier",
        "name": "futureValue"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "dueDate",
       "identifier": {
        "type": "Identifier",
        "name": "dueDate"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "liquidityIndexAtRepayment",
       "identifier": {
        "type": "Identifier",
        "name": "liquidityIndexAtRepayment"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      }
     ]
    },
    {
     "type": "StructDefinition",
     "name": "CreditPosition",
     "members": [
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "address",
        "stateMutability": null
       },
       "name": "lender",
       "identifier": {
        "type": "Identifier",
        "name": "lender"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "bool",
        "stateMutability": null
       },
       "name": "forSale",
       "identifier": {
        "type": "Identifier",
        "name": "forSale"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "credit",
       "identifier": {
        "type": "Identifier",
        "name": "credit"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "debtPositionId",
       "identifier": {
        "type": "Identifier",
        "name": "debtPositionId"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      }
     ]
    },
    {
     "type": "EnumDefinition",
     "name": "LoanStatus",
     "members": [
      {
       "type": "EnumValue",
       "name": "ACTIVE"
      },
      {
       "type": "EnumValue",
       "name": "OVERDUE"
      },
      {
       "type": "EnumValue",
       "name": "REPAID"
      }
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "LoanLibrary",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "AccountingLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "FunctionDefinition",
       "name": "isDebtPositionId",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "positionId",
         "identifier": {
          "type": "Identifier",
          "name": "positionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "&&",
           "left": {
            "type": "BinaryOperation",
            "operator": ">=",
            "left": {
             "type": "Identifier",
             "name": "positionId"
            },
            "right": {
             "type": "Identifier",
             "name": "DEBT_POSITION_ID_START"
            }
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "<",
            "left": {
             "type": "Identifier",
             "name": "positionId"
            },
            "right": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "nextDebtPositionId"
            }
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "isCreditPositionId",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "positionId",
         "identifier": {
          "type": "Identifier",
          "name": "positionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "&&",
           "left": {
            "type": "BinaryOperation",
            "operator": ">=",
            "left": {
             "type": "Identifier",
             "name": "positionId"
            },
            "right": {
             "type": "Identifier",
             "name": "CREDIT_POSITION_ID_START"
            }
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "<",
            "left": {
             "type": "Identifier",
             "name": "positionId"
            },
            "right": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "nextCreditPositionId"
            }
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getDebtPosition",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "debtPositionId",
         "identifier": {
          "type": "Identifier",
          "name": "debtPositionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "DebtPosition"
         },
         "name": null,
         "identifier": null,
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "isDebtPositionId"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "state"
            },
            {
             "type": "Identifier",
             "name": "debtPositionId"
            }
           ],
           "names": [],
           "identifiers": []
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "IndexAccess",
              "base": {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "data"
               },
               "memberName": "debtPositions"
              },
              "index": {
               "type": "Identifier",
               "name": "debtPositionId"
              }
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "INVALID_DEBT_POSITION_ID"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "debtPositionId"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getCreditPosition",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "creditPositionId",
         "identifier": {
          "type": "Identifier",
          "name": "creditPositionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "CreditPosition"
         },
         "name": null,
         "identifier": null,
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "isCreditPositionId"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "state"
            },
            {
             "type": "Identifier",
             "name": "creditPositionId"
            }
           ],
           "names": [],
           "identifiers": []
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "IndexAccess",
              "base": {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "data"
               },
               "memberName": "creditPositions"
              },
              "index": {
               "type": "Identifier",
               "name": "creditPositionId"
              }
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "INVALID_CREDIT_POSITION_ID"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "creditPositionId"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getDebtPositionByCreditPositionId",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "creditPositionId",
         "identifier": {
          "type": "Identifier",
          "name": "creditPositionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "DebtPosition"
         },
         "name": null,
         "identifier": null,
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "CreditPosition"
            },
            "name": "creditPosition",
            "identifier": {
             "type": "Identifier",
             "name": "creditPosition"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getCreditPosition"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "state"
            },
            {
             "type": "Identifier",
             "name": "creditPositionId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getDebtPosition"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "state"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "creditPosition"
             },
             "memberName": "debtPositionId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getLoanStatus",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "positionId",
         "identifier": {
          "type": "Identifier",
          "name": "positionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "LoanStatus"
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "DebtPosition"
            },
            "name": "debtPosition",
            "identifier": {
             "type": "Identifier",
             "name": "debtPosition"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "data"
            },
            "memberName": "debtPositions"
           },
           "index": {
            "type": "Identifier",
            "name": "positionId"
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "isCreditPositionId"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "state"
            },
            {
             "type": "Identifier",
             "name": "positionId"
            }
           ],
           "names": [],
           "identifiers": []
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "debtPosition"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "getDebtPositionByCreditPositionId"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "state"
                },
                {
                 "type": "Identifier",
                 "name": "positionId"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          },
          "falseBody": {
           "type": "IfStatement",
           "condition": {
            "type": "UnaryOperation",
            "operator": "!",
            "subExpression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "isDebtPositionId"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "state"
              },
              {
               "type": "Identifier",
               "name": "positionId"
              }
             ],
             "names": [],
             "identifiers": []
            },
            "isPrefix": true
           },
           "trueBody": {
            "type": "Block",
            "statements": [
             {
              "type": "RevertStatement",
              "revertCall": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "Errors"
                },
                "memberName": "INVALID_POSITION_ID"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "positionId"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            ]
           },
           "falseBody": null
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "debtPosition"
            },
            "memberName": "futureValue"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "LoanStatus"
              },
              "memberName": "REPAID"
             }
            }
           ]
          },
          "falseBody": {
           "type": "IfStatement",
           "condition": {
            "type": "BinaryOperation",
            "operator": ">",
            "left": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            },
            "right": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "debtPosition"
             },
             "memberName": "dueDate"
            }
           },
           "trueBody": {
            "type": "Block",
            "statements": [
             {
              "type": "ReturnStatement",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "LoanStatus"
               },
               "memberName": "OVERDUE"
              }
             }
            ]
           },
           "falseBody": {
            "type": "Block",
            "statements": [
             {
              "type": "ReturnStatement",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "LoanStatus"
               },
               "memberName": "ACTIVE"
              }
             }
            ]
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getDebtPositionAssignedCollateral",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "DebtPosition"
         },
         "name": "debtPosition",
         "identifier": {
          "type": "Identifier",
          "name": "debtPosition"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "debt",
            "identifier": {
             "type": "Identifier",
             "name": "debt"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "debtToken"
            },
            "memberName": "balanceOf"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "debtPosition"
             },
             "memberName": "borrower"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "collateral",
            "identifier": {
             "type": "Identifier",
             "name": "collateral"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "collateralToken"
            },
            "memberName": "balanceOf"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "debtPosition"
             },
             "memberName": "borrower"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "Identifier",
            "name": "debt"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Math"
               },
               "memberName": "mulDivDown"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "collateral"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "debtPosition"
                },
                "memberName": "futureValue"
               },
               {
                "type": "Identifier",
                "name": "debt"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getCreditPositionProRataAssignedCollateral",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "CreditPosition"
         },
         "name": "creditPosition",
         "identifier": {
          "type": "Identifier",
          "name": "creditPosition"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "DebtPosition"
            },
            "name": "debtPosition",
            "identifier": {
             "type": "Identifier",
             "name": "debtPosition"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getDebtPosition"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "state"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "creditPosition"
             },
             "memberName": "debtPositionId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "debtPositionCollateral",
            "identifier": {
             "type": "Identifier",
             "name": "debtPositionCollateral"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getDebtPositionAssignedCollateral"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "state"
            },
            {
             "type": "Identifier",
             "name": "debtPosition"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "creditPositionCredit",
            "identifier": {
             "type": "Identifier",
             "name": "creditPositionCredit"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "creditPosition"
           },
           "memberName": "credit"
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "debtPositionFutureValue",
            "identifier": {
             "type": "Identifier",
             "name": "debtPositionFutureValue"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "debtPosition"
           },
           "memberName": "futureValue"
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "Identifier",
            "name": "debtPositionFutureValue"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Math"
               },
               "memberName": "mulDivDown"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "debtPositionCollateral"
               },
               {
                "type": "Identifier",
                "name": "creditPositionCredit"
               },
               {
                "type": "Identifier",
                "name": "debtPositionFutureValue"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "library"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-06-size/src/libraries/Events.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.23"
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/LoanLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/LoanLibrary.sol",
      "parts": [
       "@src/libraries/LoanLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "LoanStatus",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "LoanStatus"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/actions/Initialize.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/actions/Initialize.sol",
      "parts": [
       "@src/libraries/actions/Initialize.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "InitializeDataParams",
       null
      ],
      [
       "InitializeFeeConfigParams",
       null
      ],
      [
       "InitializeOracleParams",
       null
      ],
      [
       "InitializeRiskConfigParams",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "InitializeDataParams"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "InitializeFeeConfigParams"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "InitializeOracleParams"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "InitializeRiskConfigParams"
       },
       null
      ]
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "Events",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "EventDefinition",
       "name": "Initialize",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "InitializeFeeConfigParams"
         },
         "name": "f",
         "identifier": {
          "type": "Identifier",
          "name": "f"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "InitializeRiskConfigParams"
         },
         "name": "r",
         "identifier": {
          "type": "Identifier",
          "name": "r"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "InitializeOracleParams"
         },
         "name": "o",
         "identifier": {
          "type": "Identifier",
          "name": "o"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "InitializeDataParams"
         },
         "name": "d",
         "identifier": {
          "type": "Identifier",
          "name": "d"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "Deposit",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "token",
         "identifier": {
          "type": "Identifier",
          "name": "token"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "to",
         "identifier": {
          "type": "Identifier",
          "name": "to"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "Withdraw",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "token",
         "identifier": {
          "type": "Identifier",
          "name": "token"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "to",
         "identifier": {
          "type": "Identifier",
          "name": "to"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "UpdateConfig",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "key",
         "identifier": {
          "type": "Identifier",
          "name": "key"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "value",
         "identifier": {
          "type": "Identifier",
          "name": "value"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "VariablePoolBorrowRateUpdated",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint128",
          "stateMutability": null
         },
         "name": "oldBorrowRate",
         "identifier": {
          "type": "Identifier",
          "name": "oldBorrowRate"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint128",
          "stateMutability": null
         },
         "name": "newBorrowRate",
         "identifier": {
          "type": "Identifier",
          "name": "newBorrowRate"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "SellCreditMarket",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "lender",
         "identifier": {
          "type": "Identifier",
          "name": "lender"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "creditPositionId",
         "identifier": {
          "type": "Identifier",
          "name": "creditPositionId"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "tenor",
         "identifier": {
          "type": "Identifier",
          "name": "tenor"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "dueDate",
         "identifier": {
          "type": "Identifier",
          "name": "dueDate"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "exactAmountIn",
         "identifier": {
          "type": "Identifier",
          "name": "exactAmountIn"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "SellCreditLimit",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "curveRelativeTimeTenors",
         "identifier": {
          "type": "Identifier",
          "name": "curveRelativeTimeTenors"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "int256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "curveRelativeTimeAprs",
         "identifier": {
          "type": "Identifier",
          "name": "curveRelativeTimeAprs"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "curveRelativeTimeMarketRateMultipliers",
         "identifier": {
          "type": "Identifier",
          "name": "curveRelativeTimeMarketRateMultipliers"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "BuyCreditMarket",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "borrower",
         "identifier": {
          "type": "Identifier",
          "name": "borrower"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "creditPositionId",
         "identifier": {
          "type": "Identifier",
          "name": "creditPositionId"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "tenor",
         "identifier": {
          "type": "Identifier",
          "name": "tenor"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "exactAmountIn",
         "identifier": {
          "type": "Identifier",
          "name": "exactAmountIn"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "BuyCreditLimit",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "maxDueDate",
         "identifier": {
          "type": "Identifier",
          "name": "maxDueDate"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "curveRelativeTimeTenors",
         "identifier": {
          "type": "Identifier",
          "name": "curveRelativeTimeTenors"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "int256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "curveRelativeTimeAprs",
         "identifier": {
          "type": "Identifier",
          "name": "curveRelativeTimeAprs"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "curveRelativeTimeMarketRateMultipliers",
         "identifier": {
          "type": "Identifier",
          "name": "curveRelativeTimeMarketRateMultipliers"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "Repay",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "debtPositionId",
         "identifier": {
          "type": "Identifier",
          "name": "debtPositionId"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "Claim",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "creditPositionId",
         "identifier": {
          "type": "Identifier",
          "name": "creditPositionId"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "debtPositionId",
         "identifier": {
          "type": "Identifier",
          "name": "debtPositionId"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "Liquidate",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "debtPositionId",
         "identifier": {
          "type": "Identifier",
          "name": "debtPositionId"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "minimumCollateralProfit",
         "identifier": {
          "type": "Identifier",
          "name": "minimumCollateralProfit"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "collateralRatio",
         "identifier": {
          "type": "Identifier",
          "name": "collateralRatio"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "LoanStatus"
         },
         "name": "loanStatus",
         "identifier": {
          "type": "Identifier",
          "name": "loanStatus"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "SelfLiquidate",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "creditPositionId",
         "identifier": {
          "type": "Identifier",
          "name": "creditPositionId"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "LiquidateWithReplacement",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "debtPositionId",
         "identifier": {
          "type": "Identifier",
          "name": "debtPositionId"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "borrower",
         "identifier": {
          "type": "Identifier",
          "name": "borrower"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "minimumCollateralProfit",
         "identifier": {
          "type": "Identifier",
          "name": "minimumCollateralProfit"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "Compensate",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "creditPositionWithDebtToRepayId",
         "identifier": {
          "type": "Identifier",
          "name": "creditPositionWithDebtToRepayId"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "creditPositionToCompensateId",
         "identifier": {
          "type": "Identifier",
          "name": "creditPositionToCompensateId"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "SetUserConfiguration",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "openingLimitBorrowCR",
         "identifier": {
          "type": "Identifier",
          "name": "openingLimitBorrowCR"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "allCreditPositionsForSaleDisabled",
         "identifier": {
          "type": "Identifier",
          "name": "allCreditPositionsForSaleDisabled"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "creditPositionIdsForSale",
         "identifier": {
          "type": "Identifier",
          "name": "creditPositionIdsForSale"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "creditPositionIds",
         "identifier": {
          "type": "Identifier",
          "name": "creditPositionIds"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "CreateDebtPosition",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "debtPositionId",
         "identifier": {
          "type": "Identifier",
          "name": "debtPositionId"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "borrower",
         "identifier": {
          "type": "Identifier",
          "name": "borrower"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "lender",
         "identifier": {
          "type": "Identifier",
          "name": "lender"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "futureValue",
         "identifier": {
          "type": "Identifier",
          "name": "futureValue"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "dueDate",
         "identifier": {
          "type": "Identifier",
          "name": "dueDate"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "CreateCreditPosition",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "creditPositionId",
         "identifier": {
          "type": "Identifier",
          "name": "creditPositionId"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "lender",
         "identifier": {
          "type": "Identifier",
          "name": "lender"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "debtPositionId",
         "identifier": {
          "type": "Identifier",
          "name": "debtPositionId"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "exitPositionId",
         "identifier": {
          "type": "Identifier",
          "name": "exitPositionId"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "credit",
         "identifier": {
          "type": "Identifier",
          "name": "credit"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "UpdateDebtPosition",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "debtPositionId",
         "identifier": {
          "type": "Identifier",
          "name": "debtPositionId"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "borrower",
         "identifier": {
          "type": "Identifier",
          "name": "borrower"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "futureValue",
         "identifier": {
          "type": "Identifier",
          "name": "futureValue"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "liquidityIndexAtRepayment",
         "identifier": {
          "type": "Identifier",
          "name": "liquidityIndexAtRepayment"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "UpdateCreditPosition",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "creditPositionId",
         "identifier": {
          "type": "Identifier",
          "name": "creditPositionId"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "lender",
         "identifier": {
          "type": "Identifier",
          "name": "lender"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "credit",
         "identifier": {
          "type": "Identifier",
          "name": "credit"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "forSale",
         "identifier": {
          "type": "Identifier",
          "name": "forSale"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      }
     ],
     "kind": "library"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-06-size/src/libraries/Errors.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.23"
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/LoanLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/LoanLibrary.sol",
      "parts": [
       "@src/libraries/LoanLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "LoanStatus",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "LoanStatus"
       },
       null
      ]
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "Errors",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "CustomErrorDefinition",
       "name": "USER_IS_UNDERWATER",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "account",
         "identifier": {
          "type": "Identifier",
          "name": "account"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "cr",
         "identifier": {
          "type": "Identifier",
          "name": "cr"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "NULL_ADDRESS",
       "parameters": []
      },
      {
       "type": "CustomErrorDefinition",
       "name": "NULL_AMOUNT",
       "parameters": []
      },
      {
       "type": "CustomErrorDefinition",
       "name": "NULL_TENOR",
       "parameters": []
      },
      {
       "type": "CustomErrorDefinition",
       "name": "NULL_MAX_DUE_DATE",
       "parameters": []
      },
      {
       "type": "CustomErrorDefinition",
       "name": "NULL_ARRAY",
       "parameters": []
      },
      {
       "type": "CustomErrorDefinition",
       "name": "NULL_OFFER",
       "parameters": []
      },
      {
       "type": "CustomErrorDefinition",
       "name": "INVALID_MSG_VALUE",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "value",
         "identifier": {
          "type": "Identifier",
          "name": "value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "TENORS_NOT_STRICTLY_INCREASING",
       "parameters": []
      },
      {
       "type": "CustomErrorDefinition",
       "name": "ARRAY_LENGTHS_MISMATCH",
       "parameters": []
      },
      {
       "type": "CustomErrorDefinition",
       "name": "INVALID_TOKEN",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "token",
         "identifier": {
          "type": "Identifier",
          "name": "token"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "INVALID_KEY",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "key",
         "identifier": {
          "type": "Identifier",
          "name": "key"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "INVALID_COLLATERAL_RATIO",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "cr",
         "identifier": {
          "type": "Identifier",
          "name": "cr"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "INVALID_COLLATERAL_PERCENTAGE_PREMIUM",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "percentage",
         "identifier": {
          "type": "Identifier",
          "name": "percentage"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "INVALID_MAXIMUM_TENOR",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "maxTenor",
         "identifier": {
          "type": "Identifier",
          "name": "maxTenor"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "VALUE_GREATER_THAN_MAX",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "value",
         "identifier": {
          "type": "Identifier",
          "name": "value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "max",
         "identifier": {
          "type": "Identifier",
          "name": "max"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "INVALID_LIQUIDATION_COLLATERAL_RATIO",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "crOpening",
         "identifier": {
          "type": "Identifier",
          "name": "crOpening"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "crLiquidation",
         "identifier": {
          "type": "Identifier",
          "name": "crLiquidation"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "PAST_DEADLINE",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "deadline",
         "identifier": {
          "type": "Identifier",
          "name": "deadline"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "PAST_MAX_DUE_DATE",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "maxDueDate",
         "identifier": {
          "type": "Identifier",
          "name": "maxDueDate"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "APR_LOWER_THAN_MIN_APR",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "apr",
         "identifier": {
          "type": "Identifier",
          "name": "apr"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "minAPR",
         "identifier": {
          "type": "Identifier",
          "name": "minAPR"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "APR_GREATER_THAN_MAX_APR",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "apr",
         "identifier": {
          "type": "Identifier",
          "name": "apr"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "maxAPR",
         "identifier": {
          "type": "Identifier",
          "name": "maxAPR"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "DUE_DATE_NOT_COMPATIBLE",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "dueDate1",
         "identifier": {
          "type": "Identifier",
          "name": "dueDate1"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "dueDate2",
         "identifier": {
          "type": "Identifier",
          "name": "dueDate2"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "DUE_DATE_GREATER_THAN_MAX_DUE_DATE",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "dueDate",
         "identifier": {
          "type": "Identifier",
          "name": "dueDate"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "maxDueDate",
         "identifier": {
          "type": "Identifier",
          "name": "maxDueDate"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "TENOR_OUT_OF_RANGE",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "tenor",
         "identifier": {
          "type": "Identifier",
          "name": "tenor"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "minTenor",
         "identifier": {
          "type": "Identifier",
          "name": "minTenor"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "maxTenor",
         "identifier": {
          "type": "Identifier",
          "name": "maxTenor"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "INVALID_POSITION_ID",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "positionId",
         "identifier": {
          "type": "Identifier",
          "name": "positionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "INVALID_DEBT_POSITION_ID",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "debtPositionId",
         "identifier": {
          "type": "Identifier",
          "name": "debtPositionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "INVALID_CREDIT_POSITION_ID",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "creditPositionId",
         "identifier": {
          "type": "Identifier",
          "name": "creditPositionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "INVALID_LENDER",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "account",
         "identifier": {
          "type": "Identifier",
          "name": "account"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "INVALID_LOAN_OFFER",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "lender",
         "identifier": {
          "type": "Identifier",
          "name": "lender"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "INVALID_BORROW_OFFER",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "borrower",
         "identifier": {
          "type": "Identifier",
          "name": "borrower"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "CREDIT_NOT_FOR_SALE",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "creditPositionId",
         "identifier": {
          "type": "Identifier",
          "name": "creditPositionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "NOT_ENOUGH_CREDIT",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "credit",
         "identifier": {
          "type": "Identifier",
          "name": "credit"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "required",
         "identifier": {
          "type": "Identifier",
          "name": "required"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "NOT_ENOUGH_CASH",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "cash",
         "identifier": {
          "type": "Identifier",
          "name": "cash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "required",
         "identifier": {
          "type": "Identifier",
          "name": "required"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "BORROWER_IS_NOT_LENDER",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "borrower",
         "identifier": {
          "type": "Identifier",
          "name": "borrower"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "lender",
         "identifier": {
          "type": "Identifier",
          "name": "lender"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "COMPENSATOR_IS_NOT_BORROWER",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "compensator",
         "identifier": {
          "type": "Identifier",
          "name": "compensator"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "borrower",
         "identifier": {
          "type": "Identifier",
          "name": "borrower"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "LIQUIDATOR_IS_NOT_LENDER",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "liquidator",
         "identifier": {
          "type": "Identifier",
          "name": "liquidator"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "lender",
         "identifier": {
          "type": "Identifier",
          "name": "lender"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "NOT_ENOUGH_BORROW_ATOKEN_BALANCE",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "account",
         "identifier": {
          "type": "Identifier",
          "name": "account"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "balance",
         "identifier": {
          "type": "Identifier",
          "name": "balance"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "required",
         "identifier": {
          "type": "Identifier",
          "name": "required"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "NOT_ENOUGH_BORROW_ATOKEN_LIQUIDITY",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "liquidity",
         "identifier": {
          "type": "Identifier",
          "name": "liquidity"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "required",
         "identifier": {
          "type": "Identifier",
          "name": "required"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "CREDIT_LOWER_THAN_MINIMUM_CREDIT",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "credit",
         "identifier": {
          "type": "Identifier",
          "name": "credit"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "minimumCreditBorrowAToken",
         "identifier": {
          "type": "Identifier",
          "name": "minimumCreditBorrowAToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "CREDIT_LOWER_THAN_MINIMUM_CREDIT_OPENING",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "credit",
         "identifier": {
          "type": "Identifier",
          "name": "credit"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "minimumCreditBorrowAToken",
         "identifier": {
          "type": "Identifier",
          "name": "minimumCreditBorrowAToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "CREDIT_POSITION_ALREADY_CLAIMED",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "positionId",
         "identifier": {
          "type": "Identifier",
          "name": "positionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "CREDIT_POSITION_NOT_TRANSFERRABLE",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "creditPositionId",
         "identifier": {
          "type": "Identifier",
          "name": "creditPositionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "LoanStatus"
         },
         "name": "status",
         "identifier": {
          "type": "Identifier",
          "name": "status"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "borrowerCR",
         "identifier": {
          "type": "Identifier",
          "name": "borrowerCR"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "LOAN_ALREADY_REPAID",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "positionId",
         "identifier": {
          "type": "Identifier",
          "name": "positionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "LOAN_NOT_REPAID",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "positionId",
         "identifier": {
          "type": "Identifier",
          "name": "positionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "LOAN_NOT_ACTIVE",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "positionId",
         "identifier": {
          "type": "Identifier",
          "name": "positionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "LOAN_NOT_LIQUIDATABLE",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "debtPositionId",
         "identifier": {
          "type": "Identifier",
          "name": "debtPositionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "cr",
         "identifier": {
          "type": "Identifier",
          "name": "cr"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "LoanStatus"
         },
         "name": "status",
         "identifier": {
          "type": "Identifier",
          "name": "status"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "LOAN_NOT_SELF_LIQUIDATABLE",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "creditPositionId",
         "identifier": {
          "type": "Identifier",
          "name": "creditPositionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "cr",
         "identifier": {
          "type": "Identifier",
          "name": "cr"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "LoanStatus"
         },
         "name": "status",
         "identifier": {
          "type": "Identifier",
          "name": "status"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "LIQUIDATE_PROFIT_BELOW_MINIMUM_COLLATERAL_PROFIT",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "liquidatorProfitCollateralToken",
         "identifier": {
          "type": "Identifier",
          "name": "liquidatorProfitCollateralToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "minimumCollateralProfit",
         "identifier": {
          "type": "Identifier",
          "name": "minimumCollateralProfit"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "CR_BELOW_OPENING_LIMIT_BORROW_CR",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "account",
         "identifier": {
          "type": "Identifier",
          "name": "account"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "cr",
         "identifier": {
          "type": "Identifier",
          "name": "cr"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "riskCollateralRatio",
         "identifier": {
          "type": "Identifier",
          "name": "riskCollateralRatio"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "LIQUIDATION_NOT_AT_LOSS",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "positionId",
         "identifier": {
          "type": "Identifier",
          "name": "positionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "cr",
         "identifier": {
          "type": "Identifier",
          "name": "cr"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "INVALID_DECIMALS",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "decimals",
         "identifier": {
          "type": "Identifier",
          "name": "decimals"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "INVALID_PRICE",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "aggregator",
         "identifier": {
          "type": "Identifier",
          "name": "aggregator"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "int256",
          "stateMutability": null
         },
         "name": "price",
         "identifier": {
          "type": "Identifier",
          "name": "price"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "STALE_PRICE",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "aggregator",
         "identifier": {
          "type": "Identifier",
          "name": "aggregator"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "updatedAt",
         "identifier": {
          "type": "Identifier",
          "name": "updatedAt"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "NULL_STALE_PRICE",
       "parameters": []
      },
      {
       "type": "CustomErrorDefinition",
       "name": "NULL_STALE_RATE",
       "parameters": []
      },
      {
       "type": "CustomErrorDefinition",
       "name": "STALE_RATE",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint128",
          "stateMutability": null
         },
         "name": "updatedAt",
         "identifier": {
          "type": "Identifier",
          "name": "updatedAt"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "BORROW_ATOKEN_INCREASE_EXCEEDS_DEBT_TOKEN_DECREASE",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "borrowATokenIncrease",
         "identifier": {
          "type": "Identifier",
          "name": "borrowATokenIncrease"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "debtTokenDecrease",
         "identifier": {
          "type": "Identifier",
          "name": "debtTokenDecrease"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "BORROW_ATOKEN_CAP_EXCEEDED",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "cap",
         "identifier": {
          "type": "Identifier",
          "name": "cap"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "NOT_SUPPORTED",
       "parameters": []
      },
      {
       "type": "CustomErrorDefinition",
       "name": "SEQUENCER_DOWN",
       "parameters": []
      },
      {
       "type": "CustomErrorDefinition",
       "name": "GRACE_PERIOD_NOT_OVER",
       "parameters": []
      }
     ],
     "kind": "library"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-06-size/src/libraries/DepositTokenLibrary.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.23"
    },
    {
     "type": "ImportDirective",
     "path": "@aave/interfaces/IAToken.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@aave/interfaces/IAToken.sol",
      "parts": [
       "@aave/interfaces/IAToken.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IAToken",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IAToken"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
      "parts": [
       "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IERC20Metadata",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IERC20Metadata"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
      "parts": [
       "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "SafeERC20",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "SafeERC20"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/SizeStorage.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/SizeStorage.sol",
      "parts": [
       "@src/SizeStorage.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "State",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "State"
       },
       null
      ]
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "DepositTokenLibrary",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "IERC20Metadata"
       },
       "libraryName": "SafeERC20",
       "functions": [],
       "operators": []
      },
      {
       "type": "FunctionDefinition",
       "name": "depositUnderlyingCollateralToken",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "from",
         "identifier": {
          "type": "Identifier",
          "name": "from"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "to",
         "identifier": {
          "type": "Identifier",
          "name": "to"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "IERC20Metadata"
            },
            "name": "underlyingCollateralToken",
            "identifier": {
             "type": "Identifier",
             "name": "underlyingCollateralToken"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "IERC20Metadata"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "underlyingCollateralToken"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "underlyingCollateralToken"
            },
            "memberName": "safeTransferFrom"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "from"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "this"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "collateralToken"
            },
            "memberName": "mint"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "to"
            },
            {
             "type": "Identifier",
             "name": "amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "withdrawUnderlyingCollateralToken",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "from",
         "identifier": {
          "type": "Identifier",
          "name": "from"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "to",
         "identifier": {
          "type": "Identifier",
          "name": "to"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "IERC20Metadata"
            },
            "name": "underlyingCollateralToken",
            "identifier": {
             "type": "Identifier",
             "name": "underlyingCollateralToken"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "IERC20Metadata"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "underlyingCollateralToken"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "collateralToken"
            },
            "memberName": "burn"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "from"
            },
            {
             "type": "Identifier",
             "name": "amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "underlyingCollateralToken"
            },
            "memberName": "safeTransfer"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "to"
            },
            {
             "type": "Identifier",
             "name": "amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "depositUnderlyingBorrowTokenToVariablePool",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "from",
         "identifier": {
          "type": "Identifier",
          "name": "from"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "to",
         "identifier": {
          "type": "Identifier",
          "name": "to"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "underlyingBorrowToken"
            },
            "memberName": "safeTransferFrom"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "from"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "this"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "IAToken"
            },
            "name": "aToken",
            "identifier": {
             "type": "Identifier",
             "name": "aToken"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "IAToken"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "state"
                 },
                 "memberName": "data"
                },
                "memberName": "variablePool"
               },
               "memberName": "getReserveData"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "address"
                },
                "arguments": [
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "state"
                   },
                   "memberName": "data"
                  },
                  "memberName": "underlyingBorrowToken"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             },
             "memberName": "aTokenAddress"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "scaledBalanceBefore",
            "identifier": {
             "type": "Identifier",
             "name": "scaledBalanceBefore"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "aToken"
            },
            "memberName": "scaledBalanceOf"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "this"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "underlyingBorrowToken"
            },
            "memberName": "forceApprove"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "data"
               },
               "memberName": "variablePool"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "variablePool"
            },
            "memberName": "supply"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "data"
               },
               "memberName": "underlyingBorrowToken"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "amount"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "this"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "scaledAmount",
            "identifier": {
             "type": "Identifier",
             "name": "scaledAmount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "BinaryOperation",
           "operator": "-",
           "left": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "aToken"
             },
             "memberName": "scaledBalanceOf"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "this"
               }
              ],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           },
           "right": {
            "type": "Identifier",
            "name": "scaledBalanceBefore"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "borrowAToken"
            },
            "memberName": "mintScaled"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "to"
            },
            {
             "type": "Identifier",
             "name": "scaledAmount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "withdrawUnderlyingTokenFromVariablePool",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "from",
         "identifier": {
          "type": "Identifier",
          "name": "from"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "to",
         "identifier": {
          "type": "Identifier",
          "name": "to"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "IAToken"
            },
            "name": "aToken",
            "identifier": {
             "type": "Identifier",
             "name": "aToken"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "IAToken"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "state"
                 },
                 "memberName": "data"
                },
                "memberName": "variablePool"
               },
               "memberName": "getReserveData"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "address"
                },
                "arguments": [
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "state"
                   },
                   "memberName": "data"
                  },
                  "memberName": "underlyingBorrowToken"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             },
             "memberName": "aTokenAddress"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "scaledBalanceBefore",
            "identifier": {
             "type": "Identifier",
             "name": "scaledBalanceBefore"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "aToken"
            },
            "memberName": "scaledBalanceOf"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "this"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "variablePool"
            },
            "memberName": "withdraw"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "data"
               },
               "memberName": "underlyingBorrowToken"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "amount"
            },
            {
             "type": "Identifier",
             "name": "to"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "scaledAmount",
            "identifier": {
             "type": "Identifier",
             "name": "scaledAmount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "BinaryOperation",
           "operator": "-",
           "left": {
            "type": "Identifier",
            "name": "scaledBalanceBefore"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "aToken"
             },
             "memberName": "scaledBalanceOf"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "this"
               }
              ],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "borrowAToken"
            },
            "memberName": "burnScaled"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "from"
            },
            {
             "type": "Identifier",
             "name": "scaledAmount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "library"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-06-size/src/libraries/CapsLibrary.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.23"
    },
    {
     "type": "ImportDirective",
     "path": "@src/SizeStorage.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/SizeStorage.sol",
      "parts": [
       "@src/SizeStorage.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "State",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "State"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Errors.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Errors.sol",
      "parts": [
       "@src/libraries/Errors.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Errors",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Errors"
       },
       null
      ]
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "CapsLibrary",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "validateBorrowATokenIncreaseLteDebtTokenDecrease",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "borrowATokenSupplyBefore",
         "identifier": {
          "type": "Identifier",
          "name": "borrowATokenSupplyBefore"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "debtTokenSupplyBefore",
         "identifier": {
          "type": "Identifier",
          "name": "debtTokenSupplyBefore"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "borrowATokenSupplyAfter",
         "identifier": {
          "type": "Identifier",
          "name": "borrowATokenSupplyAfter"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "debtTokenSupplyAfter",
         "identifier": {
          "type": "Identifier",
          "name": "debtTokenSupplyAfter"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "borrowATokenSupplyAfter"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "riskConfig"
            },
            "memberName": "borrowATokenCap"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "borrowATokenSupplyIncrease",
               "identifier": {
                "type": "Identifier",
                "name": "borrowATokenSupplyIncrease"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "Conditional",
              "condition": {
               "type": "BinaryOperation",
               "operator": ">",
               "left": {
                "type": "Identifier",
                "name": "borrowATokenSupplyAfter"
               },
               "right": {
                "type": "Identifier",
                "name": "borrowATokenSupplyBefore"
               }
              },
              "trueExpression": {
               "type": "BinaryOperation",
               "operator": "-",
               "left": {
                "type": "Identifier",
                "name": "borrowATokenSupplyAfter"
               },
               "right": {
                "type": "Identifier",
                "name": "borrowATokenSupplyBefore"
               }
              },
              "falseExpression": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "debtATokenSupplyDecrease",
               "identifier": {
                "type": "Identifier",
                "name": "debtATokenSupplyDecrease"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "Conditional",
              "condition": {
               "type": "BinaryOperation",
               "operator": ">",
               "left": {
                "type": "Identifier",
                "name": "debtTokenSupplyBefore"
               },
               "right": {
                "type": "Identifier",
                "name": "debtTokenSupplyAfter"
               }
              },
              "trueExpression": {
               "type": "BinaryOperation",
               "operator": "-",
               "left": {
                "type": "Identifier",
                "name": "debtTokenSupplyBefore"
               },
               "right": {
                "type": "Identifier",
                "name": "debtTokenSupplyAfter"
               }
              },
              "falseExpression": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": ">",
              "left": {
               "type": "Identifier",
               "name": "borrowATokenSupplyIncrease"
              },
              "right": {
               "type": "Identifier",
               "name": "debtATokenSupplyDecrease"
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "RevertStatement",
                "revertCall": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "Errors"
                  },
                  "memberName": "BORROW_ATOKEN_INCREASE_EXCEEDS_DEBT_TOKEN_DECREASE"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "borrowATokenSupplyIncrease"
                  },
                  {
                   "type": "Identifier",
                   "name": "debtATokenSupplyDecrease"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": null
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "validateBorrowATokenCap",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "state"
               },
               "memberName": "data"
              },
              "memberName": "borrowAToken"
             },
             "memberName": "totalSupply"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "riskConfig"
            },
            "memberName": "borrowATokenCap"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "BORROW_ATOKEN_CAP_EXCEEDED"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "state"
                 },
                 "memberName": "riskConfig"
                },
                "memberName": "borrowATokenCap"
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "state"
                   },
                   "memberName": "data"
                  },
                  "memberName": "borrowAToken"
                 },
                 "memberName": "totalSupply"
                },
                "arguments": [],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "validateVariablePoolHasEnoughLiquidity",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "liquidity",
            "identifier": {
             "type": "Identifier",
             "name": "liquidity"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "underlyingBorrowToken"
            },
            "memberName": "balanceOf"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "data"
               },
               "memberName": "variablePool"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "liquidity"
           },
           "right": {
            "type": "Identifier",
            "name": "amount"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "NOT_ENOUGH_BORROW_ATOKEN_LIQUIDITY"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "liquidity"
               },
               {
                "type": "Identifier",
                "name": "amount"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "library"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-06-size/src/libraries/AccountingLibrary.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.23"
    },
    {
     "type": "ImportDirective",
     "path": "@src/SizeStorage.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/SizeStorage.sol",
      "parts": [
       "@src/SizeStorage.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "State",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "State"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Errors.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Errors.sol",
      "parts": [
       "@src/libraries/Errors.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Errors",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Errors"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Events.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Events.sol",
      "parts": [
       "@src/libraries/Events.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Events",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Events"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Math.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Math.sol",
      "parts": [
       "@src/libraries/Math.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Math",
       null
      ],
      [
       "PERCENT",
       null
      ],
      [
       "YEAR",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Math"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "PERCENT"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "YEAR"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/LoanLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/LoanLibrary.sol",
      "parts": [
       "@src/libraries/LoanLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "CreditPosition",
       null
      ],
      [
       "DebtPosition",
       null
      ],
      [
       "LoanLibrary",
       null
      ],
      [
       "RESERVED_ID",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "CreditPosition"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "DebtPosition"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "LoanLibrary"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "RESERVED_ID"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/RiskLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/RiskLibrary.sol",
      "parts": [
       "@src/libraries/RiskLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "RiskLibrary",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "RiskLibrary"
       },
       null
      ]
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "AccountingLibrary",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "RiskLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "DebtPosition"
       },
       "libraryName": "LoanLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "LoanLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "FunctionDefinition",
       "name": "debtTokenAmountToCollateralTokenAmount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "debtTokenAmount",
         "identifier": {
          "type": "Identifier",
          "name": "debtTokenAmount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "collateralTokenAmount",
         "identifier": {
          "type": "Identifier",
          "name": "collateralTokenAmount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "debtTokenAmountWad",
            "identifier": {
             "type": "Identifier",
             "name": "debtTokenAmountWad"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "Math"
            },
            "memberName": "amountToWad"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "debtTokenAmount"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "data"
               },
               "memberName": "underlyingBorrowToken"
              },
              "memberName": "decimals"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "collateralTokenAmount"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "Math"
             },
             "memberName": "mulDivUp"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "debtTokenAmountWad"
             },
             {
              "type": "BinaryOperation",
              "operator": "**",
              "left": {
               "type": "NumberLiteral",
               "number": "10",
               "subdenomination": null
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "state"
                  },
                  "memberName": "oracle"
                 },
                 "memberName": "priceFeed"
                },
                "memberName": "decimals"
               },
               "arguments": [],
               "names": [],
               "identifiers": []
              }
             },
             {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "state"
                 },
                 "memberName": "oracle"
                },
                "memberName": "priceFeed"
               },
               "memberName": "getPrice"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "repayDebt",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "debtPositionId",
         "identifier": {
          "type": "Identifier",
          "name": "debtPositionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "repayAmount",
         "identifier": {
          "type": "Identifier",
          "name": "repayAmount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "DebtPosition"
            },
            "name": "debtPosition",
            "identifier": {
             "type": "Identifier",
             "name": "debtPosition"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "getDebtPosition"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "debtPositionId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "debtToken"
            },
            "memberName": "burn"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "debtPosition"
             },
             "memberName": "borrower"
            },
            {
             "type": "Identifier",
             "name": "repayAmount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "-=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "debtPosition"
            },
            "memberName": "futureValue"
           },
           "right": {
            "type": "Identifier",
            "name": "repayAmount"
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "Events"
            },
            "memberName": "UpdateDebtPosition"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "debtPositionId"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "debtPosition"
             },
             "memberName": "borrower"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "debtPosition"
             },
             "memberName": "futureValue"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "debtPosition"
             },
             "memberName": "liquidityIndexAtRepayment"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "createDebtAndCreditPositions",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "lender",
         "identifier": {
          "type": "Identifier",
          "name": "lender"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "borrower",
         "identifier": {
          "type": "Identifier",
          "name": "borrower"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "futureValue",
         "identifier": {
          "type": "Identifier",
          "name": "futureValue"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "dueDate",
         "identifier": {
          "type": "Identifier",
          "name": "dueDate"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "CreditPosition"
         },
         "name": "creditPosition",
         "identifier": {
          "type": "Identifier",
          "name": "creditPosition"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "DebtPosition"
            },
            "name": "debtPosition",
            "identifier": {
             "type": "Identifier",
             "name": "debtPosition"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "DebtPosition"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "borrower"
            },
            {
             "type": "Identifier",
             "name": "futureValue"
            },
            {
             "type": "Identifier",
             "name": "dueDate"
            },
            {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           ],
           "names": [
            "borrower",
            "futureValue",
            "dueDate",
            "liquidityIndexAtRepayment"
           ],
           "identifiers": [
            {
             "type": "Identifier",
             "name": "borrower"
            },
            {
             "type": "Identifier",
             "name": "futureValue"
            },
            {
             "type": "Identifier",
             "name": "dueDate"
            },
            {
             "type": "Identifier",
             "name": "liquidityIndexAtRepayment"
            }
           ]
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "debtPositionId",
            "identifier": {
             "type": "Identifier",
             "name": "debtPositionId"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "UnaryOperation",
           "operator": "++",
           "subExpression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "data"
            },
            "memberName": "nextDebtPositionId"
           },
           "isPrefix": false
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "debtPositions"
            },
            "index": {
             "type": "Identifier",
             "name": "debtPositionId"
            }
           },
           "right": {
            "type": "Identifier",
            "name": "debtPosition"
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "Events"
            },
            "memberName": "CreateDebtPosition"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "debtPositionId"
            },
            {
             "type": "Identifier",
             "name": "borrower"
            },
            {
             "type": "Identifier",
             "name": "lender"
            },
            {
             "type": "Identifier",
             "name": "futureValue"
            },
            {
             "type": "Identifier",
             "name": "dueDate"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "creditPosition"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "CreditPosition"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "lender"
             },
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "debtPosition"
              },
              "memberName": "futureValue"
             },
             {
              "type": "Identifier",
              "name": "debtPositionId"
             },
             {
              "type": "BooleanLiteral",
              "value": true
             }
            ],
            "names": [
             "lender",
             "credit",
             "debtPositionId",
             "forSale"
            ],
            "identifiers": [
             {
              "type": "Identifier",
              "name": "lender"
             },
             {
              "type": "Identifier",
              "name": "credit"
             },
             {
              "type": "Identifier",
              "name": "debtPositionId"
             },
             {
              "type": "Identifier",
              "name": "forSale"
             }
            ]
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "creditPositionId",
            "identifier": {
             "type": "Identifier",
             "name": "creditPositionId"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "UnaryOperation",
           "operator": "++",
           "subExpression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "data"
            },
            "memberName": "nextCreditPositionId"
           },
           "isPrefix": false
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "creditPositions"
            },
            "index": {
             "type": "Identifier",
             "name": "creditPositionId"
            }
           },
           "right": {
            "type": "Identifier",
            "name": "creditPosition"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "validateMinimumCreditOpening"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "creditPosition"
             },
             "memberName": "credit"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "validateTenor"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "-",
             "left": {
              "type": "Identifier",
              "name": "dueDate"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "block"
              },
              "memberName": "timestamp"
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "Events"
            },
            "memberName": "CreateCreditPosition"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "creditPositionId"
            },
            {
             "type": "Identifier",
             "name": "lender"
            },
            {
             "type": "Identifier",
             "name": "debtPositionId"
            },
            {
             "type": "Identifier",
             "name": "RESERVED_ID"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "creditPosition"
             },
             "memberName": "credit"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "debtToken"
            },
            "memberName": "mint"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "borrower"
            },
            {
             "type": "Identifier",
             "name": "futureValue"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "createCreditPosition",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "exitCreditPositionId",
         "identifier": {
          "type": "Identifier",
          "name": "exitCreditPositionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "lender",
         "identifier": {
          "type": "Identifier",
          "name": "lender"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "credit",
         "identifier": {
          "type": "Identifier",
          "name": "credit"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "CreditPosition"
            },
            "name": "exitCreditPosition",
            "identifier": {
             "type": "Identifier",
             "name": "exitCreditPosition"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "getCreditPosition"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "exitCreditPositionId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "exitCreditPosition"
            },
            "memberName": "credit"
           },
           "right": {
            "type": "Identifier",
            "name": "credit"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "exitCreditPosition"
               },
               "memberName": "lender"
              },
              "right": {
               "type": "Identifier",
               "name": "lender"
              }
             }
            },
            {
             "type": "EmitStatement",
             "eventCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Events"
               },
               "memberName": "UpdateCreditPosition"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "exitCreditPositionId"
               },
               {
                "type": "Identifier",
                "name": "lender"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "exitCreditPosition"
                },
                "memberName": "credit"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "exitCreditPosition"
                },
                "memberName": "forSale"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "debtPositionId",
               "identifier": {
                "type": "Identifier",
                "name": "debtPositionId"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "exitCreditPosition"
              },
              "memberName": "debtPositionId"
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "reduceCredit"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "state"
               },
               {
                "type": "Identifier",
                "name": "exitCreditPositionId"
               },
               {
                "type": "Identifier",
                "name": "credit"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "UserDefinedTypeName",
                "namePath": "CreditPosition"
               },
               "name": "creditPosition",
               "identifier": {
                "type": "Identifier",
                "name": "creditPosition"
               },
               "storageLocation": "memory",
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "CreditPosition"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "lender"
               },
               {
                "type": "Identifier",
                "name": "credit"
               },
               {
                "type": "Identifier",
                "name": "debtPositionId"
               },
               {
                "type": "BooleanLiteral",
                "value": true
               }
              ],
              "names": [
               "lender",
               "credit",
               "debtPositionId",
               "forSale"
              ],
              "identifiers": [
               {
                "type": "Identifier",
                "name": "lender"
               },
               {
                "type": "Identifier",
                "name": "credit"
               },
               {
                "type": "Identifier",
                "name": "debtPositionId"
               },
               {
                "type": "Identifier",
                "name": "forSale"
               }
              ]
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "creditPositionId",
               "identifier": {
                "type": "Identifier",
                "name": "creditPositionId"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "UnaryOperation",
              "operator": "++",
              "subExpression": {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "data"
               },
               "memberName": "nextCreditPositionId"
              },
              "isPrefix": false
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "state"
                 },
                 "memberName": "data"
                },
                "memberName": "creditPositions"
               },
               "index": {
                "type": "Identifier",
                "name": "creditPositionId"
               }
              },
              "right": {
               "type": "Identifier",
               "name": "creditPosition"
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "state"
               },
               "memberName": "validateMinimumCreditOpening"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "creditPosition"
                },
                "memberName": "credit"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "EmitStatement",
             "eventCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Events"
               },
               "memberName": "CreateCreditPosition"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "creditPositionId"
               },
               {
                "type": "Identifier",
                "name": "lender"
               },
               {
                "type": "Identifier",
                "name": "debtPositionId"
               },
               {
                "type": "Identifier",
                "name": "exitCreditPositionId"
               },
               {
                "type": "Identifier",
                "name": "credit"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "reduceCredit",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "creditPositionId",
         "identifier": {
          "type": "Identifier",
          "name": "creditPositionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "CreditPosition"
            },
            "name": "creditPosition",
            "identifier": {
             "type": "Identifier",
             "name": "creditPosition"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "getCreditPosition"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "creditPositionId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "-=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "creditPosition"
            },
            "memberName": "credit"
           },
           "right": {
            "type": "Identifier",
            "name": "amount"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "validateMinimumCredit"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "creditPosition"
             },
             "memberName": "credit"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "Events"
            },
            "memberName": "UpdateCreditPosition"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "creditPositionId"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "creditPosition"
             },
             "memberName": "lender"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "creditPosition"
             },
             "memberName": "credit"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "creditPosition"
             },
             "memberName": "forSale"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "reduceDebtAndCredit",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "debtPositionId",
         "identifier": {
          "type": "Identifier",
          "name": "debtPositionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "creditPositionId",
         "identifier": {
          "type": "Identifier",
          "name": "creditPositionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "repayDebt"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "state"
            },
            {
             "type": "Identifier",
             "name": "debtPositionId"
            },
            {
             "type": "Identifier",
             "name": "amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "reduceCredit"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "state"
            },
            {
             "type": "Identifier",
             "name": "creditPositionId"
            },
            {
             "type": "Identifier",
             "name": "amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getSwapFeePercent",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "tenor",
         "identifier": {
          "type": "Identifier",
          "name": "tenor"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "Math"
            },
            "memberName": "mulDivUp"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "feeConfig"
             },
             "memberName": "swapFeeAPR"
            },
            {
             "type": "Identifier",
             "name": "tenor"
            },
            {
             "type": "Identifier",
             "name": "YEAR"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getSwapFee",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "cash",
         "identifier": {
          "type": "Identifier",
          "name": "cash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "tenor",
         "identifier": {
          "type": "Identifier",
          "name": "tenor"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "Math"
            },
            "memberName": "mulDivUp"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "cash"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getSwapFeePercent"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "state"
              },
              {
               "type": "Identifier",
               "name": "tenor"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "PERCENT"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getCashAmountOut",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "creditAmountIn",
         "identifier": {
          "type": "Identifier",
          "name": "creditAmountIn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "maxCredit",
         "identifier": {
          "type": "Identifier",
          "name": "maxCredit"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "ratePerTenor",
         "identifier": {
          "type": "Identifier",
          "name": "ratePerTenor"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "tenor",
         "identifier": {
          "type": "Identifier",
          "name": "tenor"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "cashAmountOut",
         "identifier": {
          "type": "Identifier",
          "name": "cashAmountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "fees",
         "identifier": {
          "type": "Identifier",
          "name": "fees"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "maxCashAmountOut",
            "identifier": {
             "type": "Identifier",
             "name": "maxCashAmountOut"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "Math"
            },
            "memberName": "mulDivDown"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "creditAmountIn"
            },
            {
             "type": "Identifier",
             "name": "PERCENT"
            },
            {
             "type": "BinaryOperation",
             "operator": "+",
             "left": {
              "type": "Identifier",
              "name": "PERCENT"
             },
             "right": {
              "type": "Identifier",
              "name": "ratePerTenor"
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "creditAmountIn"
           },
           "right": {
            "type": "Identifier",
            "name": "maxCredit"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "fees"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "getSwapFee"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "state"
                },
                {
                 "type": "Identifier",
                 "name": "maxCashAmountOut"
                },
                {
                 "type": "Identifier",
                 "name": "tenor"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": ">",
              "left": {
               "type": "Identifier",
               "name": "fees"
              },
              "right": {
               "type": "Identifier",
               "name": "maxCashAmountOut"
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "RevertStatement",
                "revertCall": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "Errors"
                  },
                  "memberName": "NOT_ENOUGH_CASH"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "maxCashAmountOut"
                  },
                  {
                   "type": "Identifier",
                   "name": "fees"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": null
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "cashAmountOut"
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "-",
               "left": {
                "type": "Identifier",
                "name": "maxCashAmountOut"
               },
               "right": {
                "type": "Identifier",
                "name": "fees"
               }
              }
             }
            }
           ]
          },
          "falseBody": {
           "type": "IfStatement",
           "condition": {
            "type": "BinaryOperation",
            "operator": "<",
            "left": {
             "type": "Identifier",
             "name": "creditAmountIn"
            },
            "right": {
             "type": "Identifier",
             "name": "maxCredit"
            }
           },
           "trueBody": {
            "type": "Block",
            "statements": [
             {
              "type": "ExpressionStatement",
              "expression": {
               "type": "BinaryOperation",
               "operator": "=",
               "left": {
                "type": "Identifier",
                "name": "fees"
               },
               "right": {
                "type": "BinaryOperation",
                "operator": "+",
                "left": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "getSwapFee"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "state"
                  },
                  {
                   "type": "Identifier",
                   "name": "maxCashAmountOut"
                  },
                  {
                   "type": "Identifier",
                   "name": "tenor"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                },
                "right": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "state"
                  },
                  "memberName": "feeConfig"
                 },
                 "memberName": "fragmentationFee"
                }
               }
              }
             },
             {
              "type": "IfStatement",
              "condition": {
               "type": "BinaryOperation",
               "operator": ">",
               "left": {
                "type": "Identifier",
                "name": "fees"
               },
               "right": {
                "type": "Identifier",
                "name": "maxCashAmountOut"
               }
              },
              "trueBody": {
               "type": "Block",
               "statements": [
                {
                 "type": "RevertStatement",
                 "revertCall": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "Errors"
                   },
                   "memberName": "NOT_ENOUGH_CASH"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "maxCashAmountOut"
                   },
                   {
                    "type": "Identifier",
                    "name": "fees"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                }
               ]
              },
              "falseBody": null
             },
             {
              "type": "ExpressionStatement",
              "expression": {
               "type": "BinaryOperation",
               "operator": "=",
               "left": {
                "type": "Identifier",
                "name": "cashAmountOut"
               },
               "right": {
                "type": "BinaryOperation",
                "operator": "-",
                "left": {
                 "type": "Identifier",
                 "name": "maxCashAmountOut"
                },
                "right": {
                 "type": "Identifier",
                 "name": "fees"
                }
               }
              }
             }
            ]
           },
           "falseBody": {
            "type": "Block",
            "statements": [
             {
              "type": "RevertStatement",
              "revertCall": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "Errors"
                },
                "memberName": "NOT_ENOUGH_CREDIT"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "creditAmountIn"
                },
                {
                 "type": "Identifier",
                 "name": "maxCredit"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            ]
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getCreditAmountIn",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "cashAmountOut",
         "identifier": {
          "type": "Identifier",
          "name": "cashAmountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "maxCashAmountOut",
         "identifier": {
          "type": "Identifier",
          "name": "maxCashAmountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "maxCredit",
         "identifier": {
          "type": "Identifier",
          "name": "maxCredit"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "ratePerTenor",
         "identifier": {
          "type": "Identifier",
          "name": "ratePerTenor"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "tenor",
         "identifier": {
          "type": "Identifier",
          "name": "tenor"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "creditAmountIn",
         "identifier": {
          "type": "Identifier",
          "name": "creditAmountIn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "fees",
         "identifier": {
          "type": "Identifier",
          "name": "fees"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "swapFeePercent",
            "identifier": {
             "type": "Identifier",
             "name": "swapFeePercent"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getSwapFeePercent"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "state"
            },
            {
             "type": "Identifier",
             "name": "tenor"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "maxCashAmountOutFragmentation",
            "identifier": {
             "type": "Identifier",
             "name": "maxCashAmountOutFragmentation"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "NumberLiteral",
           "number": "0",
           "subdenomination": null
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">=",
           "left": {
            "type": "Identifier",
            "name": "maxCashAmountOut"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "feeConfig"
            },
            "memberName": "fragmentationFee"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "maxCashAmountOutFragmentation"
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "-",
               "left": {
                "type": "Identifier",
                "name": "maxCashAmountOut"
               },
               "right": {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "state"
                 },
                 "memberName": "feeConfig"
                },
                "memberName": "fragmentationFee"
               }
              }
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "cashAmountOut"
           },
           "right": {
            "type": "Identifier",
            "name": "maxCashAmountOut"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "creditAmountIn"
              },
              "right": {
               "type": "Identifier",
               "name": "maxCredit"
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "fees"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "Math"
                },
                "memberName": "mulDivUp"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "cashAmountOut"
                },
                {
                 "type": "Identifier",
                 "name": "swapFeePercent"
                },
                {
                 "type": "Identifier",
                 "name": "PERCENT"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          },
          "falseBody": {
           "type": "IfStatement",
           "condition": {
            "type": "BinaryOperation",
            "operator": "<",
            "left": {
             "type": "Identifier",
             "name": "cashAmountOut"
            },
            "right": {
             "type": "Identifier",
             "name": "maxCashAmountOutFragmentation"
            }
           },
           "trueBody": {
            "type": "Block",
            "statements": [
             {
              "type": "ExpressionStatement",
              "expression": {
               "type": "BinaryOperation",
               "operator": "=",
               "left": {
                "type": "Identifier",
                "name": "creditAmountIn"
               },
               "right": {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "Math"
                 },
                 "memberName": "mulDivUp"
                },
                "arguments": [
                 {
                  "type": "BinaryOperation",
                  "operator": "+",
                  "left": {
                   "type": "Identifier",
                   "name": "cashAmountOut"
                  },
                  "right": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "state"
                    },
                    "memberName": "feeConfig"
                   },
                   "memberName": "fragmentationFee"
                  }
                 },
                 {
                  "type": "BinaryOperation",
                  "operator": "+",
                  "left": {
                   "type": "Identifier",
                   "name": "PERCENT"
                  },
                  "right": {
                   "type": "Identifier",
                   "name": "ratePerTenor"
                  }
                 },
                 {
                  "type": "BinaryOperation",
                  "operator": "-",
                  "left": {
                   "type": "Identifier",
                   "name": "PERCENT"
                  },
                  "right": {
                   "type": "Identifier",
                   "name": "swapFeePercent"
                  }
                 }
                ],
                "names": [],
                "identifiers": []
               }
              }
             },
             {
              "type": "ExpressionStatement",
              "expression": {
               "type": "BinaryOperation",
               "operator": "=",
               "left": {
                "type": "Identifier",
                "name": "fees"
               },
               "right": {
                "type": "BinaryOperation",
                "operator": "+",
                "left": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "Math"
                  },
                  "memberName": "mulDivUp"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "cashAmountOut"
                  },
                  {
                   "type": "Identifier",
                   "name": "swapFeePercent"
                  },
                  {
                   "type": "Identifier",
                   "name": "PERCENT"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                },
                "right": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "state"
                  },
                  "memberName": "feeConfig"
                 },
                 "memberName": "fragmentationFee"
                }
               }
              }
             }
            ]
           },
           "falseBody": {
            "type": "Block",
            "statements": [
             {
              "type": "RevertStatement",
              "revertCall": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "Errors"
                },
                "memberName": "NOT_ENOUGH_CASH"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "maxCashAmountOutFragmentation"
                },
                {
                 "type": "Identifier",
                 "name": "cashAmountOut"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            ]
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getCreditAmountOut",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "cashAmountIn",
         "identifier": {
          "type": "Identifier",
          "name": "cashAmountIn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "maxCashAmountIn",
         "identifier": {
          "type": "Identifier",
          "name": "maxCashAmountIn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "maxCredit",
         "identifier": {
          "type": "Identifier",
          "name": "maxCredit"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "ratePerTenor",
         "identifier": {
          "type": "Identifier",
          "name": "ratePerTenor"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "tenor",
         "identifier": {
          "type": "Identifier",
          "name": "tenor"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "creditAmountOut",
         "identifier": {
          "type": "Identifier",
          "name": "creditAmountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "fees",
         "identifier": {
          "type": "Identifier",
          "name": "fees"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "cashAmountIn"
           },
           "right": {
            "type": "Identifier",
            "name": "maxCashAmountIn"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "creditAmountOut"
              },
              "right": {
               "type": "Identifier",
               "name": "maxCredit"
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "fees"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "getSwapFee"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "state"
                },
                {
                 "type": "Identifier",
                 "name": "cashAmountIn"
                },
                {
                 "type": "Identifier",
                 "name": "tenor"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          },
          "falseBody": {
           "type": "IfStatement",
           "condition": {
            "type": "BinaryOperation",
            "operator": "<",
            "left": {
             "type": "Identifier",
             "name": "cashAmountIn"
            },
            "right": {
             "type": "Identifier",
             "name": "maxCashAmountIn"
            }
           },
           "trueBody": {
            "type": "Block",
            "statements": [
             {
              "type": "IfStatement",
              "condition": {
               "type": "BinaryOperation",
               "operator": ">",
               "left": {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "state"
                 },
                 "memberName": "feeConfig"
                },
                "memberName": "fragmentationFee"
               },
               "right": {
                "type": "Identifier",
                "name": "cashAmountIn"
               }
              },
              "trueBody": {
               "type": "Block",
               "statements": [
                {
                 "type": "RevertStatement",
                 "revertCall": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "Errors"
                   },
                   "memberName": "NOT_ENOUGH_CASH"
                  },
                  "arguments": [
                   {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "state"
                     },
                     "memberName": "feeConfig"
                    },
                    "memberName": "fragmentationFee"
                   },
                   {
                    "type": "Identifier",
                    "name": "cashAmountIn"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                }
               ]
              },
              "falseBody": null
             },
             {
              "type": "VariableDeclarationStatement",
              "variables": [
               {
                "type": "VariableDeclaration",
                "typeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "name": "netCashAmountIn",
                "identifier": {
                 "type": "Identifier",
                 "name": "netCashAmountIn"
                },
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false,
                "expression": null
               }
              ],
              "initialValue": {
               "type": "BinaryOperation",
               "operator": "-",
               "left": {
                "type": "Identifier",
                "name": "cashAmountIn"
               },
               "right": {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "state"
                 },
                 "memberName": "feeConfig"
                },
                "memberName": "fragmentationFee"
               }
              }
             },
             {
              "type": "ExpressionStatement",
              "expression": {
               "type": "BinaryOperation",
               "operator": "=",
               "left": {
                "type": "Identifier",
                "name": "creditAmountOut"
               },
               "right": {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "Math"
                 },
                 "memberName": "mulDivDown"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "netCashAmountIn"
                 },
                 {
                  "type": "BinaryOperation",
                  "operator": "+",
                  "left": {
                   "type": "Identifier",
                   "name": "PERCENT"
                  },
                  "right": {
                   "type": "Identifier",
                   "name": "ratePerTenor"
                  }
                 },
                 {
                  "type": "Identifier",
                  "name": "PERCENT"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              }
             },
             {
              "type": "ExpressionStatement",
              "expression": {
               "type": "BinaryOperation",
               "operator": "=",
               "left": {
                "type": "Identifier",
                "name": "fees"
               },
               "right": {
                "type": "BinaryOperation",
                "operator": "+",
                "left": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "getSwapFee"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "state"
                  },
                  {
                   "type": "Identifier",
                   "name": "netCashAmountIn"
                  },
                  {
                   "type": "Identifier",
                   "name": "tenor"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                },
                "right": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "state"
                  },
                  "memberName": "feeConfig"
                 },
                 "memberName": "fragmentationFee"
                }
               }
              }
             }
            ]
           },
           "falseBody": {
            "type": "Block",
            "statements": [
             {
              "type": "RevertStatement",
              "revertCall": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "Errors"
                },
                "memberName": "NOT_ENOUGH_CREDIT"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "maxCashAmountIn"
                },
                {
                 "type": "Identifier",
                 "name": "cashAmountIn"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            ]
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getCashAmountIn",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "creditAmountOut",
         "identifier": {
          "type": "Identifier",
          "name": "creditAmountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "maxCredit",
         "identifier": {
          "type": "Identifier",
          "name": "maxCredit"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "ratePerTenor",
         "identifier": {
          "type": "Identifier",
          "name": "ratePerTenor"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "tenor",
         "identifier": {
          "type": "Identifier",
          "name": "tenor"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "cashAmountIn",
         "identifier": {
          "type": "Identifier",
          "name": "cashAmountIn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "fees",
         "identifier": {
          "type": "Identifier",
          "name": "fees"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "creditAmountOut"
           },
           "right": {
            "type": "Identifier",
            "name": "maxCredit"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "cashAmountIn"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "Math"
                },
                "memberName": "mulDivUp"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "maxCredit"
                },
                {
                 "type": "Identifier",
                 "name": "PERCENT"
                },
                {
                 "type": "BinaryOperation",
                 "operator": "+",
                 "left": {
                  "type": "Identifier",
                  "name": "PERCENT"
                 },
                 "right": {
                  "type": "Identifier",
                  "name": "ratePerTenor"
                 }
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "fees"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "getSwapFee"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "state"
                },
                {
                 "type": "Identifier",
                 "name": "cashAmountIn"
                },
                {
                 "type": "Identifier",
                 "name": "tenor"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          },
          "falseBody": {
           "type": "IfStatement",
           "condition": {
            "type": "BinaryOperation",
            "operator": "<",
            "left": {
             "type": "Identifier",
             "name": "creditAmountOut"
            },
            "right": {
             "type": "Identifier",
             "name": "maxCredit"
            }
           },
           "trueBody": {
            "type": "Block",
            "statements": [
             {
              "type": "VariableDeclarationStatement",
              "variables": [
               {
                "type": "VariableDeclaration",
                "typeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "name": "netCashAmountIn",
                "identifier": {
                 "type": "Identifier",
                 "name": "netCashAmountIn"
                },
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false,
                "expression": null
               }
              ],
              "initialValue": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "Math"
                },
                "memberName": "mulDivUp"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "creditAmountOut"
                },
                {
                 "type": "Identifier",
                 "name": "PERCENT"
                },
                {
                 "type": "BinaryOperation",
                 "operator": "+",
                 "left": {
                  "type": "Identifier",
                  "name": "PERCENT"
                 },
                 "right": {
                  "type": "Identifier",
                  "name": "ratePerTenor"
                 }
                }
               ],
               "names": [],
               "identifiers": []
              }
             },
             {
              "type": "ExpressionStatement",
              "expression": {
               "type": "BinaryOperation",
               "operator": "=",
               "left": {
                "type": "Identifier",
                "name": "cashAmountIn"
               },
               "right": {
                "type": "BinaryOperation",
                "operator": "+",
                "left": {
                 "type": "Identifier",
                 "name": "netCashAmountIn"
                },
                "right": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "state"
                  },
                  "memberName": "feeConfig"
                 },
                 "memberName": "fragmentationFee"
                }
               }
              }
             },
             {
              "type": "ExpressionStatement",
              "expression": {
               "type": "BinaryOperation",
               "operator": "=",
               "left": {
                "type": "Identifier",
                "name": "fees"
               },
               "right": {
                "type": "BinaryOperation",
                "operator": "+",
                "left": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "getSwapFee"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "state"
                  },
                  {
                   "type": "Identifier",
                   "name": "netCashAmountIn"
                  },
                  {
                   "type": "Identifier",
                   "name": "tenor"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                },
                "right": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "state"
                  },
                  "memberName": "feeConfig"
                 },
                 "memberName": "fragmentationFee"
                }
               }
              }
             }
            ]
           },
           "falseBody": {
            "type": "Block",
            "statements": [
             {
              "type": "RevertStatement",
              "revertCall": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "Errors"
                },
                "memberName": "NOT_ENOUGH_CREDIT"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "creditAmountOut"
                },
                {
                 "type": "Identifier",
                 "name": "maxCredit"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            ]
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "fees"
           },
           "right": {
            "type": "Identifier",
            "name": "cashAmountIn"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "NOT_ENOUGH_CASH"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "cashAmountIn"
               },
               {
                "type": "Identifier",
                "name": "fees"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "library"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-06-size/src/libraries/actions/Withdraw.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.23"
    },
    {
     "type": "ImportDirective",
     "path": "@src/SizeStorage.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/SizeStorage.sol",
      "parts": [
       "@src/SizeStorage.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "State",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "State"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/DepositTokenLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/DepositTokenLibrary.sol",
      "parts": [
       "@src/libraries/DepositTokenLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "DepositTokenLibrary",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "DepositTokenLibrary"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Math.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Math.sol",
      "parts": [
       "@src/libraries/Math.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Math",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Math"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Errors.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Errors.sol",
      "parts": [
       "@src/libraries/Errors.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Errors",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Errors"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Events.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Events.sol",
      "parts": [
       "@src/libraries/Events.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Events",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Events"
       },
       null
      ]
     ]
    },
    {
     "type": "StructDefinition",
     "name": "WithdrawParams",
     "members": [
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "address",
        "stateMutability": null
       },
       "name": "token",
       "identifier": {
        "type": "Identifier",
        "name": "token"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "amount",
       "identifier": {
        "type": "Identifier",
        "name": "amount"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "address",
        "stateMutability": null
       },
       "name": "to",
       "identifier": {
        "type": "Identifier",
        "name": "to"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      }
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "Withdraw",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "DepositTokenLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "FunctionDefinition",
       "name": "validateWithdraw",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "WithdrawParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "&&",
           "left": {
            "type": "BinaryOperation",
            "operator": "!=",
            "left": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "token"
            },
            "right": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "data"
               },
               "memberName": "underlyingCollateralToken"
              }
             ],
             "names": [],
             "identifiers": []
            }
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "!=",
            "left": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "token"
            },
            "right": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "data"
               },
               "memberName": "underlyingBorrowToken"
              }
             ],
             "names": [],
             "identifiers": []
            }
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "INVALID_TOKEN"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "params"
                },
                "memberName": "token"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "params"
            },
            "memberName": "amount"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "NULL_AMOUNT"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "params"
            },
            "memberName": "to"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "address"
            },
            "arguments": [
             {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "NULL_ADDRESS"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "executeWithdraw",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "WithdrawParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "amount",
            "identifier": {
             "type": "Identifier",
             "name": "amount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "params"
            },
            "memberName": "token"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "address"
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "state"
               },
               "memberName": "data"
              },
              "memberName": "underlyingBorrowToken"
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "amount"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "Math"
                },
                "memberName": "min"
               },
               "arguments": [
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "params"
                 },
                 "memberName": "amount"
                },
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "state"
                    },
                    "memberName": "data"
                   },
                   "memberName": "borrowAToken"
                  },
                  "memberName": "balanceOf"
                 },
                 "arguments": [
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "msg"
                   },
                   "memberName": "sender"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": ">",
              "left": {
               "type": "Identifier",
               "name": "amount"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "state"
                  },
                  "memberName": "withdrawUnderlyingTokenFromVariablePool"
                 },
                 "arguments": [
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "msg"
                   },
                   "memberName": "sender"
                  },
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "params"
                   },
                   "memberName": "to"
                  },
                  {
                   "type": "Identifier",
                   "name": "amount"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": null
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "amount"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "Math"
                },
                "memberName": "min"
               },
               "arguments": [
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "params"
                 },
                 "memberName": "amount"
                },
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "state"
                    },
                    "memberName": "data"
                   },
                   "memberName": "collateralToken"
                  },
                  "memberName": "balanceOf"
                 },
                 "arguments": [
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "msg"
                   },
                   "memberName": "sender"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": ">",
              "left": {
               "type": "Identifier",
               "name": "amount"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "state"
                  },
                  "memberName": "withdrawUnderlyingCollateralToken"
                 },
                 "arguments": [
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "msg"
                   },
                   "memberName": "sender"
                  },
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "params"
                   },
                   "memberName": "to"
                  },
                  {
                   "type": "Identifier",
                   "name": "amount"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": null
            }
           ]
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "Events"
            },
            "memberName": "Withdraw"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "token"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "to"
            },
            {
             "type": "Identifier",
             "name": "amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "library"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-06-size/src/libraries/actions/UpdateConfig.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.23"
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/utils/Strings.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/utils/Strings.sol",
      "parts": [
       "@openzeppelin/contracts/utils/Strings.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Strings",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Strings"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/SizeStorage.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/SizeStorage.sol",
      "parts": [
       "@src/SizeStorage.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "State",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "State"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Errors.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Errors.sol",
      "parts": [
       "@src/libraries/Errors.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Errors",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Errors"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Events.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Events.sol",
      "parts": [
       "@src/libraries/Events.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Events",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Events"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Math.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Math.sol",
      "parts": [
       "@src/libraries/Math.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Math",
       null
      ],
      [
       "PERCENT",
       null
      ],
      [
       "YEAR",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Math"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "PERCENT"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "YEAR"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/actions/Initialize.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/actions/Initialize.sol",
      "parts": [
       "@src/libraries/actions/Initialize.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Initialize",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Initialize"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/oracle/IPriceFeed.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/oracle/IPriceFeed.sol",
      "parts": [
       "@src/oracle/IPriceFeed.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IPriceFeed",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IPriceFeed"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/actions/Initialize.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/actions/Initialize.sol",
      "parts": [
       "@src/libraries/actions/Initialize.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "InitializeDataParams",
       null
      ],
      [
       "InitializeFeeConfigParams",
       null
      ],
      [
       "InitializeOracleParams",
       null
      ],
      [
       "InitializeRiskConfigParams",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "InitializeDataParams"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "InitializeFeeConfigParams"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "InitializeOracleParams"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "InitializeRiskConfigParams"
       },
       null
      ]
     ]
    },
    {
     "type": "StructDefinition",
     "name": "UpdateConfigParams",
     "members": [
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "string",
        "stateMutability": null
       },
       "name": "key",
       "identifier": {
        "type": "Identifier",
        "name": "key"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "value",
       "identifier": {
        "type": "Identifier",
        "name": "value"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      }
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "UpdateConfig",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "Initialize",
       "functions": [],
       "operators": []
      },
      {
       "type": "FunctionDefinition",
       "name": "feeConfigParams",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "InitializeFeeConfigParams"
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "InitializeFeeConfigParams"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "feeConfig"
             },
             "memberName": "swapFeeAPR"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "feeConfig"
             },
             "memberName": "fragmentationFee"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "feeConfig"
             },
             "memberName": "liquidationRewardPercent"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "feeConfig"
             },
             "memberName": "overdueCollateralProtocolPercent"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "feeConfig"
             },
             "memberName": "collateralProtocolPercent"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "feeConfig"
             },
             "memberName": "feeRecipient"
            }
           ],
           "names": [
            "swapFeeAPR",
            "fragmentationFee",
            "liquidationRewardPercent",
            "overdueCollateralProtocolPercent",
            "collateralProtocolPercent",
            "feeRecipient"
           ],
           "identifiers": [
            {
             "type": "Identifier",
             "name": "swapFeeAPR"
            },
            {
             "type": "Identifier",
             "name": "fragmentationFee"
            },
            {
             "type": "Identifier",
             "name": "liquidationRewardPercent"
            },
            {
             "type": "Identifier",
             "name": "overdueCollateralProtocolPercent"
            },
            {
             "type": "Identifier",
             "name": "collateralProtocolPercent"
            },
            {
             "type": "Identifier",
             "name": "feeRecipient"
            }
           ]
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "riskConfigParams",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "InitializeRiskConfigParams"
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "InitializeRiskConfigParams"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "riskConfig"
             },
             "memberName": "crOpening"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "riskConfig"
             },
             "memberName": "crLiquidation"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "riskConfig"
             },
             "memberName": "minimumCreditBorrowAToken"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "riskConfig"
             },
             "memberName": "borrowATokenCap"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "riskConfig"
             },
             "memberName": "minTenor"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "riskConfig"
             },
             "memberName": "maxTenor"
            }
           ],
           "names": [
            "crOpening",
            "crLiquidation",
            "minimumCreditBorrowAToken",
            "borrowATokenCap",
            "minTenor",
            "maxTenor"
           ],
           "identifiers": [
            {
             "type": "Identifier",
             "name": "crOpening"
            },
            {
             "type": "Identifier",
             "name": "crLiquidation"
            },
            {
             "type": "Identifier",
             "name": "minimumCreditBorrowAToken"
            },
            {
             "type": "Identifier",
             "name": "borrowATokenCap"
            },
            {
             "type": "Identifier",
             "name": "minTenor"
            },
            {
             "type": "Identifier",
             "name": "maxTenor"
            }
           ]
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "oracleParams",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "InitializeOracleParams"
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "InitializeOracleParams"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "oracle"
               },
               "memberName": "priceFeed"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "oracle"
             },
             "memberName": "variablePoolBorrowRateStaleRateInterval"
            }
           ],
           "names": [
            "priceFeed",
            "variablePoolBorrowRateStaleRateInterval"
           ],
           "identifiers": [
            {
             "type": "Identifier",
             "name": "priceFeed"
            },
            {
             "type": "Identifier",
             "name": "variablePoolBorrowRateStaleRateInterval"
            }
           ]
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "validateUpdateConfig",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": null,
         "identifier": null,
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "UpdateConfigParams"
         },
         "name": null,
         "identifier": null,
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": []
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "executeUpdateConfig",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "UpdateConfigParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "Strings"
            },
            "memberName": "equal"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "key"
            },
            {
             "type": "StringLiteral",
             "value": "crOpening",
             "parts": [
              "crOpening"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "riskConfig"
               },
               "memberName": "crOpening"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "params"
               },
               "memberName": "value"
              }
             }
            }
           ]
          },
          "falseBody": {
           "type": "IfStatement",
           "condition": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "Strings"
             },
             "memberName": "equal"
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "params"
              },
              "memberName": "key"
             },
             {
              "type": "StringLiteral",
              "value": "crLiquidation",
              "parts": [
               "crLiquidation"
              ],
              "isUnicode": [
               false
              ]
             }
            ],
            "names": [],
            "identifiers": []
           },
           "trueBody": {
            "type": "Block",
            "statements": [
             {
              "type": "IfStatement",
              "condition": {
               "type": "BinaryOperation",
               "operator": ">=",
               "left": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "params"
                },
                "memberName": "value"
               },
               "right": {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "state"
                 },
                 "memberName": "riskConfig"
                },
                "memberName": "crLiquidation"
               }
              },
              "trueBody": {
               "type": "Block",
               "statements": [
                {
                 "type": "RevertStatement",
                 "revertCall": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "Errors"
                   },
                   "memberName": "INVALID_COLLATERAL_RATIO"
                  },
                  "arguments": [
                   {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "params"
                    },
                    "memberName": "value"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                }
               ]
              },
              "falseBody": null
             },
             {
              "type": "ExpressionStatement",
              "expression": {
               "type": "BinaryOperation",
               "operator": "=",
               "left": {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "state"
                 },
                 "memberName": "riskConfig"
                },
                "memberName": "crLiquidation"
               },
               "right": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "params"
                },
                "memberName": "value"
               }
              }
             }
            ]
           },
           "falseBody": {
            "type": "IfStatement",
            "condition": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "Strings"
              },
              "memberName": "equal"
             },
             "arguments": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "params"
               },
               "memberName": "key"
              },
              {
               "type": "StringLiteral",
               "value": "minimumCreditBorrowAToken",
               "parts": [
                "minimumCreditBorrowAToken"
               ],
               "isUnicode": [
                false
               ]
              }
             ],
             "names": [],
             "identifiers": []
            },
            "trueBody": {
             "type": "Block",
             "statements": [
              {
               "type": "ExpressionStatement",
               "expression": {
                "type": "BinaryOperation",
                "operator": "=",
                "left": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "state"
                  },
                  "memberName": "riskConfig"
                 },
                 "memberName": "minimumCreditBorrowAToken"
                },
                "right": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "params"
                 },
                 "memberName": "value"
                }
               }
              }
             ]
            },
            "falseBody": {
             "type": "IfStatement",
             "condition": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Strings"
               },
               "memberName": "equal"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "params"
                },
                "memberName": "key"
               },
               {
                "type": "StringLiteral",
                "value": "borrowATokenCap",
                "parts": [
                 "borrowATokenCap"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "state"
                   },
                   "memberName": "riskConfig"
                  },
                  "memberName": "borrowATokenCap"
                 },
                 "right": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "params"
                  },
                  "memberName": "value"
                 }
                }
               }
              ]
             },
             "falseBody": {
              "type": "IfStatement",
              "condition": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "Strings"
                },
                "memberName": "equal"
               },
               "arguments": [
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "params"
                 },
                 "memberName": "key"
                },
                {
                 "type": "StringLiteral",
                 "value": "minTenor",
                 "parts": [
                  "minTenor"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              },
              "trueBody": {
               "type": "Block",
               "statements": [
                {
                 "type": "IfStatement",
                 "condition": {
                  "type": "BinaryOperation",
                  "operator": "&&",
                  "left": {
                   "type": "BinaryOperation",
                   "operator": "!=",
                   "left": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "state"
                     },
                     "memberName": "feeConfig"
                    },
                    "memberName": "swapFeeAPR"
                   },
                   "right": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "right": {
                   "type": "BinaryOperation",
                   "operator": ">=",
                   "left": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "params"
                    },
                    "memberName": "value"
                   },
                   "right": {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "Math"
                     },
                     "memberName": "mulDivDown"
                    },
                    "arguments": [
                     {
                      "type": "Identifier",
                      "name": "YEAR"
                     },
                     {
                      "type": "Identifier",
                      "name": "PERCENT"
                     },
                     {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "MemberAccess",
                       "expression": {
                        "type": "Identifier",
                        "name": "state"
                       },
                       "memberName": "feeConfig"
                      },
                      "memberName": "swapFeeAPR"
                     }
                    ],
                    "names": [],
                    "identifiers": []
                   }
                  }
                 },
                 "trueBody": {
                  "type": "Block",
                  "statements": [
                   {
                    "type": "RevertStatement",
                    "revertCall": {
                     "type": "FunctionCall",
                     "expression": {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "Identifier",
                       "name": "Errors"
                      },
                      "memberName": "VALUE_GREATER_THAN_MAX"
                     },
                     "arguments": [
                      {
                       "type": "MemberAccess",
                       "expression": {
                        "type": "Identifier",
                        "name": "params"
                       },
                       "memberName": "value"
                      },
                      {
                       "type": "FunctionCall",
                       "expression": {
                        "type": "MemberAccess",
                        "expression": {
                         "type": "Identifier",
                         "name": "Math"
                        },
                        "memberName": "mulDivDown"
                       },
                       "arguments": [
                        {
                         "type": "Identifier",
                         "name": "YEAR"
                        },
                        {
                         "type": "Identifier",
                         "name": "PERCENT"
                        },
                        {
                         "type": "MemberAccess",
                         "expression": {
                          "type": "MemberAccess",
                          "expression": {
                           "type": "Identifier",
                           "name": "state"
                          },
                          "memberName": "feeConfig"
                         },
                         "memberName": "swapFeeAPR"
                        }
                       ],
                       "names": [],
                       "identifiers": []
                      }
                     ],
                     "names": [],
                     "identifiers": []
                    }
                   }
                  ]
                 },
                 "falseBody": null
                },
                {
                 "type": "ExpressionStatement",
                 "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "state"
                    },
                    "memberName": "riskConfig"
                   },
                   "memberName": "minTenor"
                  },
                  "right": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "params"
                   },
                   "memberName": "value"
                  }
                 }
                }
               ]
              },
              "falseBody": {
               "type": "IfStatement",
               "condition": {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "Strings"
                 },
                 "memberName": "equal"
                },
                "arguments": [
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "params"
                  },
                  "memberName": "key"
                 },
                 {
                  "type": "StringLiteral",
                  "value": "maxTenor",
                  "parts": [
                   "maxTenor"
                  ],
                  "isUnicode": [
                   false
                  ]
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "trueBody": {
                "type": "Block",
                "statements": [
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": "&&",
                   "left": {
                    "type": "BinaryOperation",
                    "operator": "!=",
                    "left": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "Identifier",
                       "name": "state"
                      },
                      "memberName": "feeConfig"
                     },
                     "memberName": "swapFeeAPR"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0",
                     "subdenomination": null
                    }
                   },
                   "right": {
                    "type": "BinaryOperation",
                    "operator": ">=",
                    "left": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "params"
                     },
                     "memberName": "value"
                    },
                    "right": {
                     "type": "FunctionCall",
                     "expression": {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "Identifier",
                       "name": "Math"
                      },
                      "memberName": "mulDivDown"
                     },
                     "arguments": [
                      {
                       "type": "Identifier",
                       "name": "YEAR"
                      },
                      {
                       "type": "Identifier",
                       "name": "PERCENT"
                      },
                      {
                       "type": "MemberAccess",
                       "expression": {
                        "type": "MemberAccess",
                        "expression": {
                         "type": "Identifier",
                         "name": "state"
                        },
                        "memberName": "feeConfig"
                       },
                       "memberName": "swapFeeAPR"
                      }
                     ],
                     "names": [],
                     "identifiers": []
                    }
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "RevertStatement",
                     "revertCall": {
                      "type": "FunctionCall",
                      "expression": {
                       "type": "MemberAccess",
                       "expression": {
                        "type": "Identifier",
                        "name": "Errors"
                       },
                       "memberName": "VALUE_GREATER_THAN_MAX"
                      },
                      "arguments": [
                       {
                        "type": "MemberAccess",
                        "expression": {
                         "type": "Identifier",
                         "name": "params"
                        },
                        "memberName": "value"
                       },
                       {
                        "type": "FunctionCall",
                        "expression": {
                         "type": "MemberAccess",
                         "expression": {
                          "type": "Identifier",
                          "name": "Math"
                         },
                         "memberName": "mulDivDown"
                        },
                        "arguments": [
                         {
                          "type": "Identifier",
                          "name": "YEAR"
                         },
                         {
                          "type": "Identifier",
                          "name": "PERCENT"
                         },
                         {
                          "type": "MemberAccess",
                          "expression": {
                           "type": "MemberAccess",
                           "expression": {
                            "type": "Identifier",
                            "name": "state"
                           },
                           "memberName": "feeConfig"
                          },
                          "memberName": "swapFeeAPR"
                         }
                        ],
                        "names": [],
                        "identifiers": []
                       }
                      ],
                      "names": [],
                      "identifiers": []
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "ExpressionStatement",
                  "expression": {
                   "type": "BinaryOperation",
                   "operator": "=",
                   "left": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "state"
                     },
                     "memberName": "riskConfig"
                    },
                    "memberName": "maxTenor"
                   },
                   "right": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "params"
                    },
                    "memberName": "value"
                   }
                  }
                 }
                ]
               },
               "falseBody": {
                "type": "IfStatement",
                "condition": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "Strings"
                  },
                  "memberName": "equal"
                 },
                 "arguments": [
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "params"
                   },
                   "memberName": "key"
                  },
                  {
                   "type": "StringLiteral",
                   "value": "swapFeeAPR",
                   "parts": [
                    "swapFeeAPR"
                   ],
                   "isUnicode": [
                    false
                   ]
                  }
                 ],
                 "names": [],
                 "identifiers": []
                },
                "trueBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "IfStatement",
                   "condition": {
                    "type": "BinaryOperation",
                    "operator": ">=",
                    "left": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "params"
                     },
                     "memberName": "value"
                    },
                    "right": {
                     "type": "FunctionCall",
                     "expression": {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "Identifier",
                       "name": "Math"
                      },
                      "memberName": "mulDivDown"
                     },
                     "arguments": [
                      {
                       "type": "Identifier",
                       "name": "PERCENT"
                      },
                      {
                       "type": "Identifier",
                       "name": "YEAR"
                      },
                      {
                       "type": "MemberAccess",
                       "expression": {
                        "type": "MemberAccess",
                        "expression": {
                         "type": "Identifier",
                         "name": "state"
                        },
                        "memberName": "riskConfig"
                       },
                       "memberName": "maxTenor"
                      }
                     ],
                     "names": [],
                     "identifiers": []
                    }
                   },
                   "trueBody": {
                    "type": "Block",
                    "statements": [
                     {
                      "type": "RevertStatement",
                      "revertCall": {
                       "type": "FunctionCall",
                       "expression": {
                        "type": "MemberAccess",
                        "expression": {
                         "type": "Identifier",
                         "name": "Errors"
                        },
                        "memberName": "VALUE_GREATER_THAN_MAX"
                       },
                       "arguments": [
                        {
                         "type": "MemberAccess",
                         "expression": {
                          "type": "Identifier",
                          "name": "params"
                         },
                         "memberName": "value"
                        },
                        {
                         "type": "FunctionCall",
                         "expression": {
                          "type": "MemberAccess",
                          "expression": {
                           "type": "Identifier",
                           "name": "Math"
                          },
                          "memberName": "mulDivDown"
                         },
                         "arguments": [
                          {
                           "type": "Identifier",
                           "name": "PERCENT"
                          },
                          {
                           "type": "Identifier",
                           "name": "YEAR"
                          },
                          {
                           "type": "MemberAccess",
                           "expression": {
                            "type": "MemberAccess",
                            "expression": {
                             "type": "Identifier",
                             "name": "state"
                            },
                            "memberName": "riskConfig"
                           },
                           "memberName": "maxTenor"
                          }
                         ],
                         "names": [],
                         "identifiers": []
                        }
                       ],
                       "names": [],
                       "identifiers": []
                      }
                     }
                    ]
                   },
                   "falseBody": null
                  },
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "Identifier",
                       "name": "state"
                      },
                      "memberName": "feeConfig"
                     },
                     "memberName": "swapFeeAPR"
                    },
                    "right": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "params"
                     },
                     "memberName": "value"
                    }
                   }
                  }
                 ]
                },
                "falseBody": {
                 "type": "IfStatement",
                 "condition": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "Strings"
                   },
                   "memberName": "equal"
                  },
                  "arguments": [
                   {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "params"
                    },
                    "memberName": "key"
                   },
                   {
                    "type": "StringLiteral",
                    "value": "fragmentationFee",
                    "parts": [
                     "fragmentationFee"
                    ],
                    "isUnicode": [
                     false
                    ]
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 },
                 "trueBody": {
                  "type": "Block",
                  "statements": [
                   {
                    "type": "ExpressionStatement",
                    "expression": {
                     "type": "BinaryOperation",
                     "operator": "=",
                     "left": {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "MemberAccess",
                       "expression": {
                        "type": "Identifier",
                        "name": "state"
                       },
                       "memberName": "feeConfig"
                      },
                      "memberName": "fragmentationFee"
                     },
                     "right": {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "Identifier",
                       "name": "params"
                      },
                      "memberName": "value"
                     }
                    }
                   }
                  ]
                 },
                 "falseBody": {
                  "type": "IfStatement",
                  "condition": {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "Strings"
                    },
                    "memberName": "equal"
                   },
                   "arguments": [
                    {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "params"
                     },
                     "memberName": "key"
                    },
                    {
                     "type": "StringLiteral",
                     "value": "liquidationRewardPercent",
                     "parts": [
                      "liquidationRewardPercent"
                     ],
                     "isUnicode": [
                      false
                     ]
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "=",
                      "left": {
                       "type": "MemberAccess",
                       "expression": {
                        "type": "MemberAccess",
                        "expression": {
                         "type": "Identifier",
                         "name": "state"
                        },
                        "memberName": "feeConfig"
                       },
                       "memberName": "liquidationRewardPercent"
                      },
                      "right": {
                       "type": "MemberAccess",
                       "expression": {
                        "type": "Identifier",
                        "name": "params"
                       },
                       "memberName": "value"
                      }
                     }
                    }
                   ]
                  },
                  "falseBody": {
                   "type": "IfStatement",
                   "condition": {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "Strings"
                     },
                     "memberName": "equal"
                    },
                    "arguments": [
                     {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "Identifier",
                       "name": "params"
                      },
                      "memberName": "key"
                     },
                     {
                      "type": "StringLiteral",
                      "value": "overdueCollateralProtocolPercent",
                      "parts": [
                       "overdueCollateralProtocolPercent"
                      ],
                      "isUnicode": [
                       false
                      ]
                     }
                    ],
                    "names": [],
                    "identifiers": []
                   },
                   "trueBody": {
                    "type": "Block",
                    "statements": [
                     {
                      "type": "ExpressionStatement",
                      "expression": {
                       "type": "BinaryOperation",
                       "operator": "=",
                       "left": {
                        "type": "MemberAccess",
                        "expression": {
                         "type": "MemberAccess",
                         "expression": {
                          "type": "Identifier",
                          "name": "state"
                         },
                         "memberName": "feeConfig"
                        },
                        "memberName": "overdueCollateralProtocolPercent"
                       },
                       "right": {
                        "type": "MemberAccess",
                        "expression": {
                         "type": "Identifier",
                         "name": "params"
                        },
                        "memberName": "value"
                       }
                      }
                     }
                    ]
                   },
                   "falseBody": {
                    "type": "IfStatement",
                    "condition": {
                     "type": "FunctionCall",
                     "expression": {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "Identifier",
                       "name": "Strings"
                      },
                      "memberName": "equal"
                     },
                     "arguments": [
                      {
                       "type": "MemberAccess",
                       "expression": {
                        "type": "Identifier",
                        "name": "params"
                       },
                       "memberName": "key"
                      },
                      {
                       "type": "StringLiteral",
                       "value": "collateralProtocolPercent",
                       "parts": [
                        "collateralProtocolPercent"
                       ],
                       "isUnicode": [
                        false
                       ]
                      }
                     ],
                     "names": [],
                     "identifiers": []
                    },
                    "trueBody": {
                     "type": "Block",
                     "statements": [
                      {
                       "type": "ExpressionStatement",
                       "expression": {
                        "type": "BinaryOperation",
                        "operator": "=",
                        "left": {
                         "type": "MemberAccess",
                         "expression": {
                          "type": "MemberAccess",
                          "expression": {
                           "type": "Identifier",
                           "name": "state"
                          },
                          "memberName": "feeConfig"
                         },
                         "memberName": "collateralProtocolPercent"
                        },
                        "right": {
                         "type": "MemberAccess",
                         "expression": {
                          "type": "Identifier",
                          "name": "params"
                         },
                         "memberName": "value"
                        }
                       }
                      }
                     ]
                    },
                    "falseBody": {
                     "type": "IfStatement",
                     "condition": {
                      "type": "FunctionCall",
                      "expression": {
                       "type": "MemberAccess",
                       "expression": {
                        "type": "Identifier",
                        "name": "Strings"
                       },
                       "memberName": "equal"
                      },
                      "arguments": [
                       {
                        "type": "MemberAccess",
                        "expression": {
                         "type": "Identifier",
                         "name": "params"
                        },
                        "memberName": "key"
                       },
                       {
                        "type": "StringLiteral",
                        "value": "feeRecipient",
                        "parts": [
                         "feeRecipient"
                        ],
                        "isUnicode": [
                         false
                        ]
                       }
                      ],
                      "names": [],
                      "identifiers": []
                     },
                     "trueBody": {
                      "type": "Block",
                      "statements": [
                       {
                        "type": "ExpressionStatement",
                        "expression": {
                         "type": "BinaryOperation",
                         "operator": "=",
                         "left": {
                          "type": "MemberAccess",
                          "expression": {
                           "type": "MemberAccess",
                           "expression": {
                            "type": "Identifier",
                            "name": "state"
                           },
                           "memberName": "feeConfig"
                          },
                          "memberName": "feeRecipient"
                         },
                         "right": {
                          "type": "FunctionCall",
                          "expression": {
                           "type": "Identifier",
                           "name": "address"
                          },
                          "arguments": [
                           {
                            "type": "FunctionCall",
                            "expression": {
                             "type": "ElementaryTypeName",
                             "name": "uint160",
                             "stateMutability": null
                            },
                            "arguments": [
                             {
                              "type": "MemberAccess",
                              "expression": {
                               "type": "Identifier",
                               "name": "params"
                              },
                              "memberName": "value"
                             }
                            ],
                            "names": [],
                            "identifiers": []
                           }
                          ],
                          "names": [],
                          "identifiers": []
                         }
                        }
                       }
                      ]
                     },
                     "falseBody": {
                      "type": "IfStatement",
                      "condition": {
                       "type": "FunctionCall",
                       "expression": {
                        "type": "MemberAccess",
                        "expression": {
                         "type": "Identifier",
                         "name": "Strings"
                        },
                        "memberName": "equal"
                       },
                       "arguments": [
                        {
                         "type": "MemberAccess",
                         "expression": {
                          "type": "Identifier",
                          "name": "params"
                         },
                         "memberName": "key"
                        },
                        {
                         "type": "StringLiteral",
                         "value": "priceFeed",
                         "parts": [
                          "priceFeed"
                         ],
                         "isUnicode": [
                          false
                         ]
                        }
                       ],
                       "names": [],
                       "identifiers": []
                      },
                      "trueBody": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "ExpressionStatement",
                         "expression": {
                          "type": "BinaryOperation",
                          "operator": "=",
                          "left": {
                           "type": "MemberAccess",
                           "expression": {
                            "type": "MemberAccess",
                            "expression": {
                             "type": "Identifier",
                             "name": "state"
                            },
                            "memberName": "oracle"
                           },
                           "memberName": "priceFeed"
                          },
                          "right": {
                           "type": "FunctionCall",
                           "expression": {
                            "type": "Identifier",
                            "name": "IPriceFeed"
                           },
                           "arguments": [
                            {
                             "type": "FunctionCall",
                             "expression": {
                              "type": "Identifier",
                              "name": "address"
                             },
                             "arguments": [
                              {
                               "type": "FunctionCall",
                               "expression": {
                                "type": "ElementaryTypeName",
                                "name": "uint160",
                                "stateMutability": null
                               },
                               "arguments": [
                                {
                                 "type": "MemberAccess",
                                 "expression": {
                                  "type": "Identifier",
                                  "name": "params"
                                 },
                                 "memberName": "value"
                                }
                               ],
                               "names": [],
                               "identifiers": []
                              }
                             ],
                             "names": [],
                             "identifiers": []
                            }
                           ],
                           "names": [],
                           "identifiers": []
                          }
                         }
                        }
                       ]
                      },
                      "falseBody": {
                       "type": "IfStatement",
                       "condition": {
                        "type": "FunctionCall",
                        "expression": {
                         "type": "MemberAccess",
                         "expression": {
                          "type": "Identifier",
                          "name": "Strings"
                         },
                         "memberName": "equal"
                        },
                        "arguments": [
                         {
                          "type": "MemberAccess",
                          "expression": {
                           "type": "Identifier",
                           "name": "params"
                          },
                          "memberName": "key"
                         },
                         {
                          "type": "StringLiteral",
                          "value": "variablePoolBorrowRateStaleRateInterval",
                          "parts": [
                           "variablePoolBorrowRateStaleRateInterval"
                          ],
                          "isUnicode": [
                           false
                          ]
                         }
                        ],
                        "names": [],
                        "identifiers": []
                       },
                       "trueBody": {
                        "type": "Block",
                        "statements": [
                         {
                          "type": "ExpressionStatement",
                          "expression": {
                           "type": "BinaryOperation",
                           "operator": "=",
                           "left": {
                            "type": "MemberAccess",
                            "expression": {
                             "type": "MemberAccess",
                             "expression": {
                              "type": "Identifier",
                              "name": "state"
                             },
                             "memberName": "oracle"
                            },
                            "memberName": "variablePoolBorrowRateStaleRateInterval"
                           },
                           "right": {
                            "type": "FunctionCall",
                            "expression": {
                             "type": "ElementaryTypeName",
                             "name": "uint64",
                             "stateMutability": null
                            },
                            "arguments": [
                             {
                              "type": "MemberAccess",
                              "expression": {
                               "type": "Identifier",
                               "name": "params"
                              },
                              "memberName": "value"
                             }
                            ],
                            "names": [],
                            "identifiers": []
                           }
                          }
                         }
                        ]
                       },
                       "falseBody": {
                        "type": "Block",
                        "statements": [
                         {
                          "type": "RevertStatement",
                          "revertCall": {
                           "type": "FunctionCall",
                           "expression": {
                            "type": "MemberAccess",
                            "expression": {
                             "type": "Identifier",
                             "name": "Errors"
                            },
                            "memberName": "INVALID_KEY"
                           },
                           "arguments": [
                            {
                             "type": "MemberAccess",
                             "expression": {
                              "type": "Identifier",
                              "name": "params"
                             },
                             "memberName": "key"
                            }
                           ],
                           "names": [],
                           "identifiers": []
                          }
                         }
                        ]
                       }
                      }
                     }
                    }
                   }
                  }
                 }
                }
               }
              }
             }
            }
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "Initialize"
            },
            "memberName": "validateInitializeFeeConfigParams"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "feeConfigParams"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "state"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "Initialize"
            },
            "memberName": "validateInitializeRiskConfigParams"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "riskConfigParams"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "state"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "Initialize"
            },
            "memberName": "validateInitializeOracleParams"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "oracleParams"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "state"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "Events"
            },
            "memberName": "UpdateConfig"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "key"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "value"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "library"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-06-size/src/libraries/actions/SetUserConfiguration.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.23"
    },
    {
     "type": "ImportDirective",
     "path": "@src/SizeStorage.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/SizeStorage.sol",
      "parts": [
       "@src/SizeStorage.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "State",
       null
      ],
      [
       "User",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "State"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "User"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/LoanLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/LoanLibrary.sol",
      "parts": [
       "@src/libraries/LoanLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "CreditPosition",
       null
      ],
      [
       "LoanLibrary",
       null
      ],
      [
       "LoanStatus",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "CreditPosition"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "LoanLibrary"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "LoanStatus"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Errors.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Errors.sol",
      "parts": [
       "@src/libraries/Errors.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Errors",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Errors"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Events.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Events.sol",
      "parts": [
       "@src/libraries/Events.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Events",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Events"
       },
       null
      ]
     ]
    },
    {
     "type": "StructDefinition",
     "name": "SetUserConfigurationParams",
     "members": [
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "openingLimitBorrowCR",
       "identifier": {
        "type": "Identifier",
        "name": "openingLimitBorrowCR"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "bool",
        "stateMutability": null
       },
       "name": "allCreditPositionsForSaleDisabled",
       "identifier": {
        "type": "Identifier",
        "name": "allCreditPositionsForSaleDisabled"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "bool",
        "stateMutability": null
       },
       "name": "creditPositionIdsForSale",
       "identifier": {
        "type": "Identifier",
        "name": "creditPositionIdsForSale"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ArrayTypeName",
        "baseTypeName": {
         "type": "ElementaryTypeName",
         "name": "uint256",
         "stateMutability": null
        },
        "length": null
       },
       "name": "creditPositionIds",
       "identifier": {
        "type": "Identifier",
        "name": "creditPositionIds"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      }
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "SetUserConfiguration",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "LoanLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "FunctionDefinition",
       "name": "validateSetUserConfiguration",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "SetUserConfigurationParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "creditPositionIds"
            },
            "memberName": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "UserDefinedTypeName",
                "namePath": "CreditPosition"
               },
               "name": "creditPosition",
               "identifier": {
                "type": "Identifier",
                "name": "creditPosition"
               },
               "storageLocation": "storage",
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "state"
               },
               "memberName": "getCreditPosition"
              },
              "arguments": [
               {
                "type": "IndexAccess",
                "base": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "params"
                 },
                 "memberName": "creditPositionIds"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "!=",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "creditPosition"
               },
               "memberName": "lender"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "msg"
               },
               "memberName": "sender"
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "RevertStatement",
                "revertCall": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "Errors"
                  },
                  "memberName": "INVALID_CREDIT_POSITION_ID"
                 },
                 "arguments": [
                  {
                   "type": "IndexAccess",
                   "base": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "params"
                    },
                    "memberName": "creditPositionIds"
                   },
                   "index": {
                    "type": "Identifier",
                    "name": "i"
                   }
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": null
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "!=",
              "left": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "getLoanStatus"
               },
               "arguments": [
                {
                 "type": "IndexAccess",
                 "base": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "params"
                  },
                  "memberName": "creditPositionIds"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "i"
                 }
                }
               ],
               "names": [],
               "identifiers": []
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "LoanStatus"
               },
               "memberName": "ACTIVE"
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "RevertStatement",
                "revertCall": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "Errors"
                  },
                  "memberName": "LOAN_NOT_ACTIVE"
                 },
                 "arguments": [
                  {
                   "type": "IndexAccess",
                   "base": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "params"
                    },
                    "memberName": "creditPositionIds"
                   },
                   "index": {
                    "type": "Identifier",
                    "name": "i"
                   }
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": null
            }
           ]
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "executeSetUserConfiguration",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "SetUserConfigurationParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "User"
            },
            "name": "user",
            "identifier": {
             "type": "Identifier",
             "name": "user"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "data"
            },
            "memberName": "users"
           },
           "index": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "msg"
            },
            "memberName": "sender"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "user"
            },
            "memberName": "openingLimitBorrowCR"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "params"
            },
            "memberName": "openingLimitBorrowCR"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "user"
            },
            "memberName": "allCreditPositionsForSaleDisabled"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "params"
            },
            "memberName": "allCreditPositionsForSaleDisabled"
           }
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "creditPositionIds"
            },
            "memberName": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "UserDefinedTypeName",
                "namePath": "CreditPosition"
               },
               "name": "creditPosition",
               "identifier": {
                "type": "Identifier",
                "name": "creditPosition"
               },
               "storageLocation": "storage",
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "state"
               },
               "memberName": "getCreditPosition"
              },
              "arguments": [
               {
                "type": "IndexAccess",
                "base": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "params"
                 },
                 "memberName": "creditPositionIds"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "creditPosition"
               },
               "memberName": "forSale"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "params"
               },
               "memberName": "creditPositionIdsForSale"
              }
             }
            },
            {
             "type": "EmitStatement",
             "eventCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Events"
               },
               "memberName": "UpdateCreditPosition"
              },
              "arguments": [
               {
                "type": "IndexAccess",
                "base": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "params"
                 },
                 "memberName": "creditPositionIds"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "creditPosition"
                },
                "memberName": "lender"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "creditPosition"
                },
                "memberName": "credit"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "creditPosition"
                },
                "memberName": "forSale"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "Events"
            },
            "memberName": "SetUserConfiguration"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "openingLimitBorrowCR"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "allCreditPositionsForSaleDisabled"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "creditPositionIdsForSale"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "creditPositionIds"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "library"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-06-size/src/libraries/actions/SellCreditMarket.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.23"
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/LoanLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/LoanLibrary.sol",
      "parts": [
       "@src/libraries/LoanLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "CreditPosition",
       null
      ],
      [
       "DebtPosition",
       null
      ],
      [
       "LoanLibrary",
       null
      ],
      [
       "RESERVED_ID",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "CreditPosition"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "DebtPosition"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "LoanLibrary"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "RESERVED_ID"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Math.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Math.sol",
      "parts": [
       "@src/libraries/Math.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Math",
       null
      ],
      [
       "PERCENT",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Math"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "PERCENT"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/OfferLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/OfferLibrary.sol",
      "parts": [
       "@src/libraries/OfferLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "LoanOffer",
       null
      ],
      [
       "OfferLibrary",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "LoanOffer"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "OfferLibrary"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/YieldCurveLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/YieldCurveLibrary.sol",
      "parts": [
       "@src/libraries/YieldCurveLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "VariablePoolBorrowRateParams",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "VariablePoolBorrowRateParams"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/SizeStorage.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/SizeStorage.sol",
      "parts": [
       "@src/SizeStorage.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "State",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "State"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/AccountingLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/AccountingLibrary.sol",
      "parts": [
       "@src/libraries/AccountingLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "AccountingLibrary",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "AccountingLibrary"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/RiskLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/RiskLibrary.sol",
      "parts": [
       "@src/libraries/RiskLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "RiskLibrary",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "RiskLibrary"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Errors.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Errors.sol",
      "parts": [
       "@src/libraries/Errors.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Errors",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Errors"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Events.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Events.sol",
      "parts": [
       "@src/libraries/Events.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Events",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Events"
       },
       null
      ]
     ]
    },
    {
     "type": "StructDefinition",
     "name": "SellCreditMarketParams",
     "members": [
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "address",
        "stateMutability": null
       },
       "name": "lender",
       "identifier": {
        "type": "Identifier",
        "name": "lender"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "creditPositionId",
       "identifier": {
        "type": "Identifier",
        "name": "creditPositionId"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "amount",
       "identifier": {
        "type": "Identifier",
        "name": "amount"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "tenor",
       "identifier": {
        "type": "Identifier",
        "name": "tenor"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "deadline",
       "identifier": {
        "type": "Identifier",
        "name": "deadline"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "maxAPR",
       "identifier": {
        "type": "Identifier",
        "name": "maxAPR"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "bool",
        "stateMutability": null
       },
       "name": "exactAmountIn",
       "identifier": {
        "type": "Identifier",
        "name": "exactAmountIn"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      }
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "SellCreditMarket",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "LoanOffer"
       },
       "libraryName": "OfferLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "DebtPosition"
       },
       "libraryName": "LoanLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "CreditPosition"
       },
       "libraryName": "LoanLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "LoanLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "RiskLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "AccountingLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "FunctionDefinition",
       "name": "validateSellCreditMarket",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "SellCreditMarketParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "LoanOffer"
            },
            "name": "loanOffer",
            "identifier": {
             "type": "Identifier",
             "name": "loanOffer"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "IndexAccess",
            "base": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "users"
            },
            "index": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "lender"
            }
           },
           "memberName": "loanOffer"
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "tenor",
            "identifier": {
             "type": "Identifier",
             "name": "tenor"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "loanOffer"
            },
            "memberName": "isNull"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "INVALID_LOAN_OFFER"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "params"
                },
                "memberName": "lender"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "params"
            },
            "memberName": "creditPositionId"
           },
           "right": {
            "type": "Identifier",
            "name": "RESERVED_ID"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "tenor"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "params"
               },
               "memberName": "tenor"
              }
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "||",
              "left": {
               "type": "BinaryOperation",
               "operator": "<",
               "left": {
                "type": "Identifier",
                "name": "tenor"
               },
               "right": {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "state"
                 },
                 "memberName": "riskConfig"
                },
                "memberName": "minTenor"
               }
              },
              "right": {
               "type": "BinaryOperation",
               "operator": ">",
               "left": {
                "type": "Identifier",
                "name": "tenor"
               },
               "right": {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "state"
                 },
                 "memberName": "riskConfig"
                },
                "memberName": "maxTenor"
               }
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "RevertStatement",
                "revertCall": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "Errors"
                  },
                  "memberName": "TENOR_OUT_OF_RANGE"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "tenor"
                  },
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "state"
                    },
                    "memberName": "riskConfig"
                   },
                   "memberName": "minTenor"
                  },
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "state"
                    },
                    "memberName": "riskConfig"
                   },
                   "memberName": "maxTenor"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": null
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "UserDefinedTypeName",
                "namePath": "CreditPosition"
               },
               "name": "creditPosition",
               "identifier": {
                "type": "Identifier",
                "name": "creditPosition"
               },
               "storageLocation": "storage",
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "state"
               },
               "memberName": "getCreditPosition"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "params"
                },
                "memberName": "creditPositionId"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "UserDefinedTypeName",
                "namePath": "DebtPosition"
               },
               "name": "debtPosition",
               "identifier": {
                "type": "Identifier",
                "name": "debtPosition"
               },
               "storageLocation": "storage",
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "state"
               },
               "memberName": "getDebtPositionByCreditPositionId"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "params"
                },
                "memberName": "creditPositionId"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "!=",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "msg"
               },
               "memberName": "sender"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "creditPosition"
               },
               "memberName": "lender"
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "RevertStatement",
                "revertCall": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "Errors"
                  },
                  "memberName": "BORROWER_IS_NOT_LENDER"
                 },
                 "arguments": [
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "msg"
                   },
                   "memberName": "sender"
                  },
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "creditPosition"
                   },
                   "memberName": "lender"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": null
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "UnaryOperation",
              "operator": "!",
              "subExpression": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "isCreditPositionTransferrable"
               },
               "arguments": [
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "params"
                 },
                 "memberName": "creditPositionId"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "isPrefix": true
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "RevertStatement",
                "revertCall": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "Errors"
                  },
                  "memberName": "CREDIT_POSITION_NOT_TRANSFERRABLE"
                 },
                 "arguments": [
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "params"
                   },
                   "memberName": "creditPositionId"
                  },
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "state"
                    },
                    "memberName": "getLoanStatus"
                   },
                   "arguments": [
                    {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "params"
                     },
                     "memberName": "creditPositionId"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  },
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "state"
                    },
                    "memberName": "collateralRatio"
                   },
                   "arguments": [
                    {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "debtPosition"
                     },
                     "memberName": "borrower"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": null
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "tenor"
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "-",
               "left": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "debtPosition"
                },
                "memberName": "dueDate"
               },
               "right": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "block"
                },
                "memberName": "timestamp"
               }
              }
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": ">",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "params"
               },
               "memberName": "amount"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "creditPosition"
               },
               "memberName": "credit"
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "RevertStatement",
                "revertCall": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "Errors"
                  },
                  "memberName": "NOT_ENOUGH_CREDIT"
                 },
                 "arguments": [
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "params"
                   },
                   "memberName": "amount"
                  },
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "creditPosition"
                   },
                   "memberName": "credit"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": null
            }
           ]
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "params"
            },
            "memberName": "amount"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "riskConfig"
            },
            "memberName": "minimumCreditBorrowAToken"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "CREDIT_LOWER_THAN_MINIMUM_CREDIT"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "params"
                },
                "memberName": "amount"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "state"
                 },
                 "memberName": "riskConfig"
                },
                "memberName": "minimumCreditBorrowAToken"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "BinaryOperation",
            "operator": "+",
            "left": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            },
            "right": {
             "type": "Identifier",
             "name": "tenor"
            }
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "loanOffer"
            },
            "memberName": "maxDueDate"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "DUE_DATE_GREATER_THAN_MAX_DUE_DATE"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "+",
                "left": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "block"
                 },
                 "memberName": "timestamp"
                },
                "right": {
                 "type": "Identifier",
                 "name": "tenor"
                }
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "loanOffer"
                },
                "memberName": "maxDueDate"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "params"
            },
            "memberName": "deadline"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "block"
            },
            "memberName": "timestamp"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "PAST_DEADLINE"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "params"
                },
                "memberName": "deadline"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "apr",
            "identifier": {
             "type": "Identifier",
             "name": "apr"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "loanOffer"
            },
            "memberName": "getAPRByTenor"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "VariablePoolBorrowRateParams"
             },
             "arguments": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "oracle"
               },
               "memberName": "variablePoolBorrowRate"
              },
              {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "oracle"
               },
               "memberName": "variablePoolBorrowRateUpdatedAt"
              },
              {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "oracle"
               },
               "memberName": "variablePoolBorrowRateStaleRateInterval"
              }
             ],
             "names": [
              "variablePoolBorrowRate",
              "variablePoolBorrowRateUpdatedAt",
              "variablePoolBorrowRateStaleRateInterval"
             ],
             "identifiers": [
              {
               "type": "Identifier",
               "name": "variablePoolBorrowRate"
              },
              {
               "type": "Identifier",
               "name": "variablePoolBorrowRateUpdatedAt"
              },
              {
               "type": "Identifier",
               "name": "variablePoolBorrowRateStaleRateInterval"
              }
             ]
            },
            {
             "type": "Identifier",
             "name": "tenor"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "apr"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "params"
            },
            "memberName": "maxAPR"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "APR_GREATER_THAN_MAX_APR"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "apr"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "params"
                },
                "memberName": "maxAPR"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "executeSellCreditMarket",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "SellCreditMarketParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "cashAmountOut",
         "identifier": {
          "type": "Identifier",
          "name": "cashAmountOut"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "Events"
            },
            "memberName": "SellCreditMarket"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "lender"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "creditPositionId"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "tenor"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "amount"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "tenor"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "exactAmountIn"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "CreditPosition"
            },
            "name": "creditPosition",
            "identifier": {
             "type": "Identifier",
             "name": "creditPosition"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "tenor",
            "identifier": {
             "type": "Identifier",
             "name": "tenor"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "params"
            },
            "memberName": "creditPositionId"
           },
           "right": {
            "type": "Identifier",
            "name": "RESERVED_ID"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "tenor"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "params"
               },
               "memberName": "tenor"
              }
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "UserDefinedTypeName",
                "namePath": "DebtPosition"
               },
               "name": "debtPosition",
               "identifier": {
                "type": "Identifier",
                "name": "debtPosition"
               },
               "storageLocation": "storage",
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "state"
               },
               "memberName": "getDebtPositionByCreditPositionId"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "params"
                },
                "memberName": "creditPositionId"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "creditPosition"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "getCreditPosition"
               },
               "arguments": [
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "params"
                 },
                 "memberName": "creditPositionId"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "tenor"
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "-",
               "left": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "debtPosition"
                },
                "memberName": "dueDate"
               },
               "right": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "block"
                },
                "memberName": "timestamp"
               }
              }
             }
            }
           ]
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "ratePerTenor",
            "identifier": {
             "type": "Identifier",
             "name": "ratePerTenor"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "IndexAccess",
              "base": {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "data"
               },
               "memberName": "users"
              },
              "index": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "params"
               },
               "memberName": "lender"
              }
             },
             "memberName": "loanOffer"
            },
            "memberName": "getRatePerTenor"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "VariablePoolBorrowRateParams"
             },
             "arguments": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "oracle"
               },
               "memberName": "variablePoolBorrowRate"
              },
              {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "oracle"
               },
               "memberName": "variablePoolBorrowRateUpdatedAt"
              },
              {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "oracle"
               },
               "memberName": "variablePoolBorrowRateStaleRateInterval"
              }
             ],
             "names": [
              "variablePoolBorrowRate",
              "variablePoolBorrowRateUpdatedAt",
              "variablePoolBorrowRateStaleRateInterval"
             ],
             "identifiers": [
              {
               "type": "Identifier",
               "name": "variablePoolBorrowRate"
              },
              {
               "type": "Identifier",
               "name": "variablePoolBorrowRateUpdatedAt"
              },
              {
               "type": "Identifier",
               "name": "variablePoolBorrowRateStaleRateInterval"
              }
             ]
            },
            {
             "type": "Identifier",
             "name": "tenor"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "creditAmountIn",
            "identifier": {
             "type": "Identifier",
             "name": "creditAmountIn"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "fees",
            "identifier": {
             "type": "Identifier",
             "name": "fees"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "params"
           },
           "memberName": "exactAmountIn"
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "creditAmountIn"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "params"
               },
               "memberName": "amount"
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "TupleExpression",
               "components": [
                {
                 "type": "Identifier",
                 "name": "cashAmountOut"
                },
                {
                 "type": "Identifier",
                 "name": "fees"
                }
               ],
               "isArray": false
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "getCashAmountOut"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "creditAmountIn"
                },
                {
                 "type": "Conditional",
                 "condition": {
                  "type": "BinaryOperation",
                  "operator": "==",
                  "left": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "params"
                   },
                   "memberName": "creditPositionId"
                  },
                  "right": {
                   "type": "Identifier",
                   "name": "RESERVED_ID"
                  }
                 },
                 "trueExpression": {
                  "type": "Identifier",
                  "name": "creditAmountIn"
                 },
                 "falseExpression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "creditPosition"
                  },
                  "memberName": "credit"
                 }
                },
                {
                 "type": "Identifier",
                 "name": "ratePerTenor"
                },
                {
                 "type": "Identifier",
                 "name": "tenor"
                }
               ],
               "names": [
                "creditAmountIn",
                "maxCredit",
                "ratePerTenor",
                "tenor"
               ],
               "identifiers": [
                {
                 "type": "Identifier",
                 "name": "creditAmountIn"
                },
                {
                 "type": "Identifier",
                 "name": "maxCredit"
                },
                {
                 "type": "Identifier",
                 "name": "ratePerTenor"
                },
                {
                 "type": "Identifier",
                 "name": "tenor"
                }
               ]
              }
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "cashAmountOut"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "params"
               },
               "memberName": "amount"
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "TupleExpression",
               "components": [
                {
                 "type": "Identifier",
                 "name": "creditAmountIn"
                },
                {
                 "type": "Identifier",
                 "name": "fees"
                }
               ],
               "isArray": false
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "getCreditAmountIn"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "cashAmountOut"
                },
                {
                 "type": "Conditional",
                 "condition": {
                  "type": "BinaryOperation",
                  "operator": "==",
                  "left": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "params"
                   },
                   "memberName": "creditPositionId"
                  },
                  "right": {
                   "type": "Identifier",
                   "name": "RESERVED_ID"
                  }
                 },
                 "trueExpression": {
                  "type": "Identifier",
                  "name": "cashAmountOut"
                 },
                 "falseExpression": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "Math"
                   },
                   "memberName": "mulDivDown"
                  },
                  "arguments": [
                   {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "creditPosition"
                    },
                    "memberName": "credit"
                   },
                   {
                    "type": "BinaryOperation",
                    "operator": "-",
                    "left": {
                     "type": "Identifier",
                     "name": "PERCENT"
                    },
                    "right": {
                     "type": "FunctionCall",
                     "expression": {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "Identifier",
                       "name": "state"
                      },
                      "memberName": "getSwapFeePercent"
                     },
                     "arguments": [
                      {
                       "type": "Identifier",
                       "name": "tenor"
                      }
                     ],
                     "names": [],
                     "identifiers": []
                    }
                   },
                   {
                    "type": "BinaryOperation",
                    "operator": "+",
                    "left": {
                     "type": "Identifier",
                     "name": "PERCENT"
                    },
                    "right": {
                     "type": "Identifier",
                     "name": "ratePerTenor"
                    }
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                },
                {
                 "type": "Conditional",
                 "condition": {
                  "type": "BinaryOperation",
                  "operator": "==",
                  "left": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "params"
                   },
                   "memberName": "creditPositionId"
                  },
                  "right": {
                   "type": "Identifier",
                   "name": "RESERVED_ID"
                  }
                 },
                 "trueExpression": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "Math"
                   },
                   "memberName": "mulDivUp"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "cashAmountOut"
                   },
                   {
                    "type": "BinaryOperation",
                    "operator": "+",
                    "left": {
                     "type": "Identifier",
                     "name": "PERCENT"
                    },
                    "right": {
                     "type": "Identifier",
                     "name": "ratePerTenor"
                    }
                   },
                   {
                    "type": "BinaryOperation",
                    "operator": "-",
                    "left": {
                     "type": "Identifier",
                     "name": "PERCENT"
                    },
                    "right": {
                     "type": "FunctionCall",
                     "expression": {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "Identifier",
                       "name": "state"
                      },
                      "memberName": "getSwapFeePercent"
                     },
                     "arguments": [
                      {
                       "type": "Identifier",
                       "name": "tenor"
                      }
                     ],
                     "names": [],
                     "identifiers": []
                    }
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 },
                 "falseExpression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "creditPosition"
                  },
                  "memberName": "credit"
                 }
                },
                {
                 "type": "Identifier",
                 "name": "ratePerTenor"
                },
                {
                 "type": "Identifier",
                 "name": "tenor"
                }
               ],
               "names": [
                "cashAmountOut",
                "maxCashAmountOut",
                "maxCredit",
                "ratePerTenor",
                "tenor"
               ],
               "identifiers": [
                {
                 "type": "Identifier",
                 "name": "cashAmountOut"
                },
                {
                 "type": "Identifier",
                 "name": "maxCashAmountOut"
                },
                {
                 "type": "Identifier",
                 "name": "maxCredit"
                },
                {
                 "type": "Identifier",
                 "name": "ratePerTenor"
                },
                {
                 "type": "Identifier",
                 "name": "tenor"
                }
               ]
              }
             }
            }
           ]
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "params"
            },
            "memberName": "creditPositionId"
           },
           "right": {
            "type": "Identifier",
            "name": "RESERVED_ID"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "state"
               },
               "memberName": "createDebtAndCreditPositions"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "msg"
                },
                "memberName": "sender"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "msg"
                },
                "memberName": "sender"
               },
               {
                "type": "Identifier",
                "name": "creditAmountIn"
               },
               {
                "type": "BinaryOperation",
                "operator": "+",
                "left": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "block"
                 },
                 "memberName": "timestamp"
                },
                "right": {
                 "type": "Identifier",
                 "name": "tenor"
                }
               }
              ],
              "names": [
               "lender",
               "borrower",
               "futureValue",
               "dueDate"
              ],
              "identifiers": [
               {
                "type": "Identifier",
                "name": "lender"
               },
               {
                "type": "Identifier",
                "name": "borrower"
               },
               {
                "type": "Identifier",
                "name": "futureValue"
               },
               {
                "type": "Identifier",
                "name": "dueDate"
               }
              ]
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "createCreditPosition"
           },
           "arguments": [
            {
             "type": "Conditional",
             "condition": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "params"
               },
               "memberName": "creditPositionId"
              },
              "right": {
               "type": "Identifier",
               "name": "RESERVED_ID"
              }
             },
             "trueExpression": {
              "type": "BinaryOperation",
              "operator": "-",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "data"
               },
               "memberName": "nextCreditPositionId"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              }
             },
             "falseExpression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "params"
              },
              "memberName": "creditPositionId"
             }
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "lender"
            },
            {
             "type": "Identifier",
             "name": "creditAmountIn"
            }
           ],
           "names": [
            "exitCreditPositionId",
            "lender",
            "credit"
           ],
           "identifiers": [
            {
             "type": "Identifier",
             "name": "exitCreditPositionId"
            },
            {
             "type": "Identifier",
             "name": "lender"
            },
            {
             "type": "Identifier",
             "name": "credit"
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "borrowAToken"
            },
            "memberName": "transferFrom"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "lender"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "cashAmountOut"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "borrowAToken"
            },
            "memberName": "transferFrom"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "lender"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "feeConfig"
             },
             "memberName": "feeRecipient"
            },
            {
             "type": "Identifier",
             "name": "fees"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "library"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-06-size/src/libraries/actions/SellCreditLimit.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.23"
    },
    {
     "type": "ImportDirective",
     "path": "@src/SizeStorage.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/SizeStorage.sol",
      "parts": [
       "@src/SizeStorage.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "State",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "State"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/OfferLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/OfferLibrary.sol",
      "parts": [
       "@src/libraries/OfferLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "BorrowOffer",
       null
      ],
      [
       "OfferLibrary",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "BorrowOffer"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "OfferLibrary"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/YieldCurveLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/YieldCurveLibrary.sol",
      "parts": [
       "@src/libraries/YieldCurveLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "YieldCurve",
       null
      ],
      [
       "YieldCurveLibrary",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "YieldCurve"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "YieldCurveLibrary"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Events.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Events.sol",
      "parts": [
       "@src/libraries/Events.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Events",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Events"
       },
       null
      ]
     ]
    },
    {
     "type": "StructDefinition",
     "name": "SellCreditLimitParams",
     "members": [
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "YieldCurve"
       },
       "name": "curveRelativeTime",
       "identifier": {
        "type": "Identifier",
        "name": "curveRelativeTime"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      }
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "SellCreditLimit",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "BorrowOffer"
       },
       "libraryName": "OfferLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "FunctionDefinition",
       "name": "validateSellCreditLimit",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "SellCreditLimitParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "BorrowOffer"
            },
            "name": "borrowOffer",
            "identifier": {
             "type": "Identifier",
             "name": "borrowOffer"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "BorrowOffer"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "curveRelativeTime"
            }
           ],
           "names": [
            "curveRelativeTime"
           ],
           "identifiers": [
            {
             "type": "Identifier",
             "name": "curveRelativeTime"
            }
           ]
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "UnaryOperation",
           "operator": "!",
           "subExpression": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "borrowOffer"
             },
             "memberName": "isNull"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           },
           "isPrefix": true
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "YieldCurveLibrary"
               },
               "memberName": "validateYieldCurve"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "params"
                },
                "memberName": "curveRelativeTime"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "state"
                 },
                 "memberName": "riskConfig"
                },
                "memberName": "minTenor"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "state"
                 },
                 "memberName": "riskConfig"
                },
                "memberName": "maxTenor"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "executeSellCreditLimit",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "SellCreditLimitParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "IndexAccess",
             "base": {
              "type": "MemberAccess",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "state"
               },
               "memberName": "data"
              },
              "memberName": "users"
             },
             "index": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "sender"
             }
            },
            "memberName": "borrowOffer"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "BorrowOffer"
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "params"
              },
              "memberName": "curveRelativeTime"
             }
            ],
            "names": [
             "curveRelativeTime"
            ],
            "identifiers": [
             {
              "type": "Identifier",
              "name": "curveRelativeTime"
             }
            ]
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "Events"
            },
            "memberName": "SellCreditLimit"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "params"
              },
              "memberName": "curveRelativeTime"
             },
             "memberName": "tenors"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "params"
              },
              "memberName": "curveRelativeTime"
             },
             "memberName": "aprs"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "params"
              },
              "memberName": "curveRelativeTime"
             },
             "memberName": "marketRateMultipliers"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "library"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-06-size/src/libraries/actions/SelfLiquidate.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.23"
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/AccountingLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/AccountingLibrary.sol",
      "parts": [
       "@src/libraries/AccountingLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "AccountingLibrary",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "AccountingLibrary"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/LoanLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/LoanLibrary.sol",
      "parts": [
       "@src/libraries/LoanLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "CreditPosition",
       null
      ],
      [
       "DebtPosition",
       null
      ],
      [
       "LoanLibrary",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "CreditPosition"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "DebtPosition"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "LoanLibrary"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Math.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Math.sol",
      "parts": [
       "@src/libraries/Math.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "PERCENT",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "PERCENT"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/RiskLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/RiskLibrary.sol",
      "parts": [
       "@src/libraries/RiskLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "RiskLibrary",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "RiskLibrary"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/SizeStorage.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/SizeStorage.sol",
      "parts": [
       "@src/SizeStorage.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "State",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "State"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Errors.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Errors.sol",
      "parts": [
       "@src/libraries/Errors.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Errors",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Errors"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Events.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Events.sol",
      "parts": [
       "@src/libraries/Events.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Events",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Events"
       },
       null
      ]
     ]
    },
    {
     "type": "StructDefinition",
     "name": "SelfLiquidateParams",
     "members": [
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "creditPositionId",
       "identifier": {
        "type": "Identifier",
        "name": "creditPositionId"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      }
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "SelfLiquidate",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "DebtPosition"
       },
       "libraryName": "LoanLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "CreditPosition"
       },
       "libraryName": "LoanLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "LoanLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "AccountingLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "RiskLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "FunctionDefinition",
       "name": "validateSelfLiquidate",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "SelfLiquidateParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "CreditPosition"
            },
            "name": "creditPosition",
            "identifier": {
             "type": "Identifier",
             "name": "creditPosition"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "getCreditPosition"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "creditPositionId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "DebtPosition"
            },
            "name": "debtPosition",
            "identifier": {
             "type": "Identifier",
             "name": "debtPosition"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "getDebtPositionByCreditPositionId"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "creditPositionId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "UnaryOperation",
           "operator": "!",
           "subExpression": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "isCreditPositionSelfLiquidatable"
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "params"
              },
              "memberName": "creditPositionId"
             }
            ],
            "names": [],
            "identifiers": []
           },
           "isPrefix": true
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "LOAN_NOT_SELF_LIQUIDATABLE"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "params"
                },
                "memberName": "creditPositionId"
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "state"
                 },
                 "memberName": "collateralRatio"
                },
                "arguments": [
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "debtPosition"
                  },
                  "memberName": "borrower"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "state"
                 },
                 "memberName": "getLoanStatus"
                },
                "arguments": [
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "params"
                  },
                  "memberName": "creditPositionId"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">=",
           "left": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "collateralRatio"
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "debtPosition"
              },
              "memberName": "borrower"
             }
            ],
            "names": [],
            "identifiers": []
           },
           "right": {
            "type": "Identifier",
            "name": "PERCENT"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "LIQUIDATION_NOT_AT_LOSS"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "params"
                },
                "memberName": "creditPositionId"
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "state"
                 },
                 "memberName": "collateralRatio"
                },
                "arguments": [
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "debtPosition"
                  },
                  "memberName": "borrower"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "msg"
            },
            "memberName": "sender"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "creditPosition"
            },
            "memberName": "lender"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "LIQUIDATOR_IS_NOT_LENDER"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "msg"
                },
                "memberName": "sender"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "creditPosition"
                },
                "memberName": "lender"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "executeSelfLiquidate",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "SelfLiquidateParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "Events"
            },
            "memberName": "SelfLiquidate"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "creditPositionId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "CreditPosition"
            },
            "name": "creditPosition",
            "identifier": {
             "type": "Identifier",
             "name": "creditPosition"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "getCreditPosition"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "creditPositionId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "DebtPosition"
            },
            "name": "debtPosition",
            "identifier": {
             "type": "Identifier",
             "name": "debtPosition"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "getDebtPositionByCreditPositionId"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "creditPositionId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "assignedCollateral",
            "identifier": {
             "type": "Identifier",
             "name": "assignedCollateral"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "getCreditPositionProRataAssignedCollateral"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "creditPosition"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "reduceDebtAndCredit"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "creditPosition"
             },
             "memberName": "debtPositionId"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "creditPositionId"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "creditPosition"
             },
             "memberName": "credit"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "collateralToken"
            },
            "memberName": "transferFrom"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "debtPosition"
             },
             "memberName": "borrower"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "assignedCollateral"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "library"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-06-size/src/libraries/actions/Repay.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.23"
    },
    {
     "type": "ImportDirective",
     "path": "@src/SizeStorage.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/SizeStorage.sol",
      "parts": [
       "@src/SizeStorage.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "State",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "State"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/AccountingLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/AccountingLibrary.sol",
      "parts": [
       "@src/libraries/AccountingLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "AccountingLibrary",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "AccountingLibrary"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/RiskLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/RiskLibrary.sol",
      "parts": [
       "@src/libraries/RiskLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "RiskLibrary",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "RiskLibrary"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/LoanLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/LoanLibrary.sol",
      "parts": [
       "@src/libraries/LoanLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "DebtPosition",
       null
      ],
      [
       "LoanLibrary",
       null
      ],
      [
       "LoanStatus",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "DebtPosition"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "LoanLibrary"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "LoanStatus"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Errors.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Errors.sol",
      "parts": [
       "@src/libraries/Errors.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Errors",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Errors"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Events.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Events.sol",
      "parts": [
       "@src/libraries/Events.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Events",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Events"
       },
       null
      ]
     ]
    },
    {
     "type": "StructDefinition",
     "name": "RepayParams",
     "members": [
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "debtPositionId",
       "identifier": {
        "type": "Identifier",
        "name": "debtPositionId"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      }
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "Repay",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "DebtPosition"
       },
       "libraryName": "LoanLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "LoanLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "AccountingLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "RiskLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "FunctionDefinition",
       "name": "validateRepay",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "RepayParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "getLoanStatus"
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "params"
              },
              "memberName": "debtPositionId"
             }
            ],
            "names": [],
            "identifiers": []
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "LoanStatus"
            },
            "memberName": "REPAID"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "LOAN_ALREADY_REPAID"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "params"
                },
                "memberName": "debtPositionId"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "executeRepay",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "RepayParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "DebtPosition"
            },
            "name": "debtPosition",
            "identifier": {
             "type": "Identifier",
             "name": "debtPosition"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "getDebtPosition"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "debtPositionId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "borrowAToken"
            },
            "memberName": "transferFrom"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "this"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "debtPosition"
             },
             "memberName": "futureValue"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "debtPosition"
            },
            "memberName": "liquidityIndexAtRepayment"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "state"
               },
               "memberName": "data"
              },
              "memberName": "borrowAToken"
             },
             "memberName": "liquidityIndex"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "repayDebt"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "debtPositionId"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "debtPosition"
             },
             "memberName": "futureValue"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "Events"
            },
            "memberName": "Repay"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "debtPositionId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "library"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-06-size/src/libraries/actions/LiquidateWithReplacement.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.23"
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Math.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Math.sol",
      "parts": [
       "@src/libraries/Math.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Math",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Math"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Math.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Math.sol",
      "parts": [
       "@src/libraries/Math.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "PERCENT",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "PERCENT"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/LoanLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/LoanLibrary.sol",
      "parts": [
       "@src/libraries/LoanLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "CreditPosition",
       null
      ],
      [
       "DebtPosition",
       null
      ],
      [
       "LoanLibrary",
       null
      ],
      [
       "LoanStatus",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "CreditPosition"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "DebtPosition"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "LoanLibrary"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "LoanStatus"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/OfferLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/OfferLibrary.sol",
      "parts": [
       "@src/libraries/OfferLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "BorrowOffer",
       null
      ],
      [
       "OfferLibrary",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "BorrowOffer"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "OfferLibrary"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/YieldCurveLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/YieldCurveLibrary.sol",
      "parts": [
       "@src/libraries/YieldCurveLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "VariablePoolBorrowRateParams",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "VariablePoolBorrowRateParams"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/SizeStorage.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/SizeStorage.sol",
      "parts": [
       "@src/SizeStorage.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "State",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "State"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/actions/Liquidate.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/actions/Liquidate.sol",
      "parts": [
       "@src/libraries/actions/Liquidate.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Liquidate",
       null
      ],
      [
       "LiquidateParams",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Liquidate"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "LiquidateParams"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Errors.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Errors.sol",
      "parts": [
       "@src/libraries/Errors.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Errors",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Errors"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Events.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Events.sol",
      "parts": [
       "@src/libraries/Events.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Events",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Events"
       },
       null
      ]
     ]
    },
    {
     "type": "StructDefinition",
     "name": "LiquidateWithReplacementParams",
     "members": [
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "debtPositionId",
       "identifier": {
        "type": "Identifier",
        "name": "debtPositionId"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "address",
        "stateMutability": null
       },
       "name": "borrower",
       "identifier": {
        "type": "Identifier",
        "name": "borrower"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "minimumCollateralProfit",
       "identifier": {
        "type": "Identifier",
        "name": "minimumCollateralProfit"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "deadline",
       "identifier": {
        "type": "Identifier",
        "name": "deadline"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "minAPR",
       "identifier": {
        "type": "Identifier",
        "name": "minAPR"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      }
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "LiquidateWithReplacement",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "CreditPosition"
       },
       "libraryName": "LoanLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "BorrowOffer"
       },
       "libraryName": "OfferLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "LoanLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "Liquidate",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "DebtPosition"
       },
       "libraryName": "LoanLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "FunctionDefinition",
       "name": "validateLiquidateWithReplacement",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "LiquidateWithReplacementParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "DebtPosition"
            },
            "name": "debtPosition",
            "identifier": {
             "type": "Identifier",
             "name": "debtPosition"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "getDebtPosition"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "debtPositionId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "BorrowOffer"
            },
            "name": "borrowOffer",
            "identifier": {
             "type": "Identifier",
             "name": "borrowOffer"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "IndexAccess",
            "base": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "users"
            },
            "index": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "borrower"
            }
           },
           "memberName": "borrowOffer"
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "validateLiquidate"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "LiquidateParams"
             },
             "arguments": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "params"
               },
               "memberName": "debtPositionId"
              },
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "params"
               },
               "memberName": "minimumCollateralProfit"
              }
             ],
             "names": [
              "debtPositionId",
              "minimumCollateralProfit"
             ],
             "identifiers": [
              {
               "type": "Identifier",
               "name": "debtPositionId"
              },
              {
               "type": "Identifier",
               "name": "minimumCollateralProfit"
              }
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "getLoanStatus"
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "params"
              },
              "memberName": "debtPositionId"
             }
            ],
            "names": [],
            "identifiers": []
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "LoanStatus"
            },
            "memberName": "ACTIVE"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "LOAN_NOT_ACTIVE"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "params"
                },
                "memberName": "debtPositionId"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "tenor",
            "identifier": {
             "type": "Identifier",
             "name": "tenor"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "BinaryOperation",
           "operator": "-",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "debtPosition"
            },
            "memberName": "dueDate"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "block"
            },
            "memberName": "timestamp"
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "||",
           "left": {
            "type": "BinaryOperation",
            "operator": "<",
            "left": {
             "type": "Identifier",
             "name": "tenor"
            },
            "right": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "riskConfig"
             },
             "memberName": "minTenor"
            }
           },
           "right": {
            "type": "BinaryOperation",
            "operator": ">",
            "left": {
             "type": "Identifier",
             "name": "tenor"
            },
            "right": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "riskConfig"
             },
             "memberName": "maxTenor"
            }
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "TENOR_OUT_OF_RANGE"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "tenor"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "state"
                 },
                 "memberName": "riskConfig"
                },
                "memberName": "minTenor"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "state"
                 },
                 "memberName": "riskConfig"
                },
                "memberName": "maxTenor"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "borrowOffer"
            },
            "memberName": "isNull"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "INVALID_BORROW_OFFER"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "params"
                },
                "memberName": "borrower"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "params"
            },
            "memberName": "deadline"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "block"
            },
            "memberName": "timestamp"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "PAST_DEADLINE"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "params"
                },
                "memberName": "deadline"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "apr",
            "identifier": {
             "type": "Identifier",
             "name": "apr"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "borrowOffer"
            },
            "memberName": "getAPRByTenor"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "VariablePoolBorrowRateParams"
             },
             "arguments": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "oracle"
               },
               "memberName": "variablePoolBorrowRate"
              },
              {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "oracle"
               },
               "memberName": "variablePoolBorrowRateUpdatedAt"
              },
              {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "oracle"
               },
               "memberName": "variablePoolBorrowRateStaleRateInterval"
              }
             ],
             "names": [
              "variablePoolBorrowRate",
              "variablePoolBorrowRateUpdatedAt",
              "variablePoolBorrowRateStaleRateInterval"
             ],
             "identifiers": [
              {
               "type": "Identifier",
               "name": "variablePoolBorrowRate"
              },
              {
               "type": "Identifier",
               "name": "variablePoolBorrowRateUpdatedAt"
              },
              {
               "type": "Identifier",
               "name": "variablePoolBorrowRateStaleRateInterval"
              }
             ]
            },
            {
             "type": "Identifier",
             "name": "tenor"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "apr"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "params"
            },
            "memberName": "minAPR"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "APR_LOWER_THAN_MIN_APR"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "apr"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "params"
                },
                "memberName": "minAPR"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "validateMinimumCollateralProfit",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "LiquidateWithReplacementParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "liquidatorProfitCollateralToken",
         "identifier": {
          "type": "Identifier",
          "name": "liquidatorProfitCollateralToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "Liquidate"
            },
            "memberName": "validateMinimumCollateralProfit"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "state"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "LiquidateParams"
             },
             "arguments": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "params"
               },
               "memberName": "debtPositionId"
              },
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "params"
               },
               "memberName": "minimumCollateralProfit"
              }
             ],
             "names": [
              "debtPositionId",
              "minimumCollateralProfit"
             ],
             "identifiers": [
              {
               "type": "Identifier",
               "name": "debtPositionId"
              },
              {
               "type": "Identifier",
               "name": "minimumCollateralProfit"
              }
             ]
            },
            {
             "type": "Identifier",
             "name": "liquidatorProfitCollateralToken"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "executeLiquidateWithReplacement",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "LiquidateWithReplacementParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "issuanceValue",
         "identifier": {
          "type": "Identifier",
          "name": "issuanceValue"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "liquidatorProfitCollateralToken",
         "identifier": {
          "type": "Identifier",
          "name": "liquidatorProfitCollateralToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "liquidatorProfitBorrowToken",
         "identifier": {
          "type": "Identifier",
          "name": "liquidatorProfitBorrowToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "Events"
            },
            "memberName": "LiquidateWithReplacement"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "debtPositionId"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "borrower"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "minimumCollateralProfit"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "DebtPosition"
            },
            "name": "debtPosition",
            "identifier": {
             "type": "Identifier",
             "name": "debtPosition"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "getDebtPosition"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "debtPositionId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "DebtPosition"
            },
            "name": "debtPositionCopy",
            "identifier": {
             "type": "Identifier",
             "name": "debtPositionCopy"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "Identifier",
           "name": "debtPosition"
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "BorrowOffer"
            },
            "name": "borrowOffer",
            "identifier": {
             "type": "Identifier",
             "name": "borrowOffer"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "IndexAccess",
            "base": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "users"
            },
            "index": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "borrower"
            }
           },
           "memberName": "borrowOffer"
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "tenor",
            "identifier": {
             "type": "Identifier",
             "name": "tenor"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "BinaryOperation",
           "operator": "-",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "debtPositionCopy"
            },
            "memberName": "dueDate"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "block"
            },
            "memberName": "timestamp"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "liquidatorProfitCollateralToken"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "executeLiquidate"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "LiquidateParams"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "params"
                },
                "memberName": "debtPositionId"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "params"
                },
                "memberName": "minimumCollateralProfit"
               }
              ],
              "names": [
               "debtPositionId",
               "minimumCollateralProfit"
              ],
              "identifiers": [
               {
                "type": "Identifier",
                "name": "debtPositionId"
               },
               {
                "type": "Identifier",
                "name": "minimumCollateralProfit"
               }
              ]
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "ratePerTenor",
            "identifier": {
             "type": "Identifier",
             "name": "ratePerTenor"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "borrowOffer"
            },
            "memberName": "getRatePerTenor"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "VariablePoolBorrowRateParams"
             },
             "arguments": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "oracle"
               },
               "memberName": "variablePoolBorrowRate"
              },
              {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "oracle"
               },
               "memberName": "variablePoolBorrowRateUpdatedAt"
              },
              {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "oracle"
               },
               "memberName": "variablePoolBorrowRateStaleRateInterval"
              }
             ],
             "names": [
              "variablePoolBorrowRate",
              "variablePoolBorrowRateUpdatedAt",
              "variablePoolBorrowRateStaleRateInterval"
             ],
             "identifiers": [
              {
               "type": "Identifier",
               "name": "variablePoolBorrowRate"
              },
              {
               "type": "Identifier",
               "name": "variablePoolBorrowRateUpdatedAt"
              },
              {
               "type": "Identifier",
               "name": "variablePoolBorrowRateStaleRateInterval"
              }
             ]
            },
            {
             "type": "Identifier",
             "name": "tenor"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "issuanceValue"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "Math"
             },
             "memberName": "mulDivDown"
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "debtPositionCopy"
              },
              "memberName": "futureValue"
             },
             {
              "type": "Identifier",
              "name": "PERCENT"
             },
             {
              "type": "BinaryOperation",
              "operator": "+",
              "left": {
               "type": "Identifier",
               "name": "PERCENT"
              },
              "right": {
               "type": "Identifier",
               "name": "ratePerTenor"
              }
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "liquidatorProfitBorrowToken"
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "-",
            "left": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "debtPositionCopy"
             },
             "memberName": "futureValue"
            },
            "right": {
             "type": "Identifier",
             "name": "issuanceValue"
            }
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "debtPosition"
            },
            "memberName": "borrower"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "params"
            },
            "memberName": "borrower"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "debtPosition"
            },
            "memberName": "futureValue"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "debtPositionCopy"
            },
            "memberName": "futureValue"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "debtPosition"
            },
            "memberName": "liquidityIndexAtRepayment"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "Events"
            },
            "memberName": "UpdateDebtPosition"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "debtPositionId"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "debtPosition"
             },
             "memberName": "borrower"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "debtPosition"
             },
             "memberName": "futureValue"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "debtPosition"
             },
             "memberName": "liquidityIndexAtRepayment"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "debtToken"
            },
            "memberName": "mint"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "borrower"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "debtPosition"
             },
             "memberName": "futureValue"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "borrowAToken"
            },
            "memberName": "transferFrom"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "this"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "borrower"
            },
            {
             "type": "Identifier",
             "name": "issuanceValue"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "borrowAToken"
            },
            "memberName": "transferFrom"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "this"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "feeConfig"
             },
             "memberName": "feeRecipient"
            },
            {
             "type": "Identifier",
             "name": "liquidatorProfitBorrowToken"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "library"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-06-size/src/libraries/actions/Liquidate.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.23"
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Math.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Math.sol",
      "parts": [
       "@src/libraries/Math.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Math",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Math"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Math.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Math.sol",
      "parts": [
       "@src/libraries/Math.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "PERCENT",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "PERCENT"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/LoanLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/LoanLibrary.sol",
      "parts": [
       "@src/libraries/LoanLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "DebtPosition",
       null
      ],
      [
       "LoanLibrary",
       null
      ],
      [
       "LoanStatus",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "DebtPosition"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "LoanLibrary"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "LoanStatus"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/AccountingLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/AccountingLibrary.sol",
      "parts": [
       "@src/libraries/AccountingLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "AccountingLibrary",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "AccountingLibrary"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/RiskLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/RiskLibrary.sol",
      "parts": [
       "@src/libraries/RiskLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "RiskLibrary",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "RiskLibrary"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/SizeStorage.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/SizeStorage.sol",
      "parts": [
       "@src/SizeStorage.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "State",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "State"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Errors.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Errors.sol",
      "parts": [
       "@src/libraries/Errors.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Errors",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Errors"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Events.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Events.sol",
      "parts": [
       "@src/libraries/Events.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Events",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Events"
       },
       null
      ]
     ]
    },
    {
     "type": "StructDefinition",
     "name": "LiquidateParams",
     "members": [
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "debtPositionId",
       "identifier": {
        "type": "Identifier",
        "name": "debtPositionId"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "minimumCollateralProfit",
       "identifier": {
        "type": "Identifier",
        "name": "minimumCollateralProfit"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      }
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "Liquidate",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "DebtPosition"
       },
       "libraryName": "LoanLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "LoanLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "RiskLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "AccountingLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "FunctionDefinition",
       "name": "validateLiquidate",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "LiquidateParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "DebtPosition"
            },
            "name": "debtPosition",
            "identifier": {
             "type": "Identifier",
             "name": "debtPosition"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "getDebtPosition"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "debtPositionId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "UnaryOperation",
           "operator": "!",
           "subExpression": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "isDebtPositionLiquidatable"
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "params"
              },
              "memberName": "debtPositionId"
             }
            ],
            "names": [],
            "identifiers": []
           },
           "isPrefix": true
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "LOAN_NOT_LIQUIDATABLE"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "params"
                },
                "memberName": "debtPositionId"
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "state"
                 },
                 "memberName": "collateralRatio"
                },
                "arguments": [
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "debtPosition"
                  },
                  "memberName": "borrower"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "state"
                 },
                 "memberName": "getLoanStatus"
                },
                "arguments": [
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "params"
                  },
                  "memberName": "debtPositionId"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "validateMinimumCollateralProfit",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": null,
         "identifier": null,
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "LiquidateParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "liquidatorProfitCollateralToken",
         "identifier": {
          "type": "Identifier",
          "name": "liquidatorProfitCollateralToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "liquidatorProfitCollateralToken"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "params"
            },
            "memberName": "minimumCollateralProfit"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "LIQUIDATE_PROFIT_BELOW_MINIMUM_COLLATERAL_PROFIT"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "liquidatorProfitCollateralToken"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "params"
                },
                "memberName": "minimumCollateralProfit"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "executeLiquidate",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "LiquidateParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "liquidatorProfitCollateralToken",
         "identifier": {
          "type": "Identifier",
          "name": "liquidatorProfitCollateralToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "DebtPosition"
            },
            "name": "debtPosition",
            "identifier": {
             "type": "Identifier",
             "name": "debtPosition"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "getDebtPosition"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "debtPositionId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "LoanStatus"
            },
            "name": "loanStatus",
            "identifier": {
             "type": "Identifier",
             "name": "loanStatus"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "getLoanStatus"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "debtPositionId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "collateralRatio",
            "identifier": {
             "type": "Identifier",
             "name": "collateralRatio"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "collateralRatio"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "debtPosition"
             },
             "memberName": "borrower"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "Events"
            },
            "memberName": "Liquidate"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "debtPositionId"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "minimumCollateralProfit"
            },
            {
             "type": "Identifier",
             "name": "collateralRatio"
            },
            {
             "type": "Identifier",
             "name": "loanStatus"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "collateralProtocolPercent",
            "identifier": {
             "type": "Identifier",
             "name": "collateralProtocolPercent"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "Conditional",
           "condition": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "isUserUnderwater"
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "debtPosition"
              },
              "memberName": "borrower"
             }
            ],
            "names": [],
            "identifiers": []
           },
           "trueExpression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "feeConfig"
            },
            "memberName": "collateralProtocolPercent"
           },
           "falseExpression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "feeConfig"
            },
            "memberName": "overdueCollateralProtocolPercent"
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "assignedCollateral",
            "identifier": {
             "type": "Identifier",
             "name": "assignedCollateral"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "getDebtPositionAssignedCollateral"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "debtPosition"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "debtInCollateralToken",
            "identifier": {
             "type": "Identifier",
             "name": "debtInCollateralToken"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "debtTokenAmountToCollateralTokenAmount"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "debtPosition"
             },
             "memberName": "futureValue"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "protocolProfitCollateralToken",
            "identifier": {
             "type": "Identifier",
             "name": "protocolProfitCollateralToken"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "NumberLiteral",
           "number": "0",
           "subdenomination": null
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "assignedCollateral"
           },
           "right": {
            "type": "Identifier",
            "name": "debtInCollateralToken"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "liquidatorReward",
               "identifier": {
                "type": "Identifier",
                "name": "liquidatorReward"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Math"
               },
               "memberName": "min"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "-",
                "left": {
                 "type": "Identifier",
                 "name": "assignedCollateral"
                },
                "right": {
                 "type": "Identifier",
                 "name": "debtInCollateralToken"
                }
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "Math"
                 },
                 "memberName": "mulDivUp"
                },
                "arguments": [
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "debtPosition"
                  },
                  "memberName": "futureValue"
                 },
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "state"
                   },
                   "memberName": "feeConfig"
                  },
                  "memberName": "liquidationRewardPercent"
                 },
                 {
                  "type": "Identifier",
                  "name": "PERCENT"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "liquidatorProfitCollateralToken"
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "+",
               "left": {
                "type": "Identifier",
                "name": "debtInCollateralToken"
               },
               "right": {
                "type": "Identifier",
                "name": "liquidatorReward"
               }
              }
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "collateralRemainder",
               "identifier": {
                "type": "Identifier",
                "name": "collateralRemainder"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "BinaryOperation",
              "operator": "-",
              "left": {
               "type": "Identifier",
               "name": "assignedCollateral"
              },
              "right": {
               "type": "Identifier",
               "name": "liquidatorProfitCollateralToken"
              }
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "collateralRemainderCap",
               "identifier": {
                "type": "Identifier",
                "name": "collateralRemainderCap"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Math"
               },
               "memberName": "mulDivDown"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "debtInCollateralToken"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "state"
                 },
                 "memberName": "riskConfig"
                },
                "memberName": "crLiquidation"
               },
               {
                "type": "Identifier",
                "name": "PERCENT"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "collateralRemainder"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "Math"
                },
                "memberName": "min"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "collateralRemainder"
                },
                {
                 "type": "Identifier",
                 "name": "collateralRemainderCap"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "protocolProfitCollateralToken"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "Math"
                },
                "memberName": "mulDivDown"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "collateralRemainder"
                },
                {
                 "type": "Identifier",
                 "name": "collateralProtocolPercent"
                },
                {
                 "type": "Identifier",
                 "name": "PERCENT"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "liquidatorProfitCollateralToken"
              },
              "right": {
               "type": "Identifier",
               "name": "assignedCollateral"
              }
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "borrowAToken"
            },
            "memberName": "transferFrom"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "this"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "debtPosition"
             },
             "memberName": "futureValue"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "collateralToken"
            },
            "memberName": "transferFrom"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "debtPosition"
             },
             "memberName": "borrower"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "liquidatorProfitCollateralToken"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "collateralToken"
            },
            "memberName": "transferFrom"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "debtPosition"
             },
             "memberName": "borrower"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "feeConfig"
             },
             "memberName": "feeRecipient"
            },
            {
             "type": "Identifier",
             "name": "protocolProfitCollateralToken"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "debtPosition"
            },
            "memberName": "liquidityIndexAtRepayment"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "state"
               },
               "memberName": "data"
              },
              "memberName": "borrowAToken"
             },
             "memberName": "liquidityIndex"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "repayDebt"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "debtPositionId"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "debtPosition"
             },
             "memberName": "futureValue"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "library"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-06-size/src/libraries/actions/Initialize.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.23"
    },
    {
     "type": "ImportDirective",
     "path": "@aave/interfaces/IPool.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@aave/interfaces/IPool.sol",
      "parts": [
       "@aave/interfaces/IPool.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IPool",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IPool"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
      "parts": [
       "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IERC20Metadata",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IERC20Metadata"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/interfaces/IWETH.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/interfaces/IWETH.sol",
      "parts": [
       "@src/interfaces/IWETH.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IWETH",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IWETH"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Math.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Math.sol",
      "parts": [
       "@src/libraries/Math.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Math",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Math"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/LoanLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/LoanLibrary.sol",
      "parts": [
       "@src/libraries/LoanLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "CREDIT_POSITION_ID_START",
       null
      ],
      [
       "DEBT_POSITION_ID_START",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "CREDIT_POSITION_ID_START"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "DEBT_POSITION_ID_START"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Math.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Math.sol",
      "parts": [
       "@src/libraries/Math.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "PERCENT",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "PERCENT"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/oracle/IPriceFeed.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/oracle/IPriceFeed.sol",
      "parts": [
       "@src/oracle/IPriceFeed.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IPriceFeed",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IPriceFeed"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/token/NonTransferrableScaledToken.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/token/NonTransferrableScaledToken.sol",
      "parts": [
       "@src/token/NonTransferrableScaledToken.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "NonTransferrableScaledToken",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "NonTransferrableScaledToken"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/token/NonTransferrableToken.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/token/NonTransferrableToken.sol",
      "parts": [
       "@src/token/NonTransferrableToken.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "NonTransferrableToken",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "NonTransferrableToken"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/SizeStorage.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/SizeStorage.sol",
      "parts": [
       "@src/SizeStorage.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "State",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "State"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Errors.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Errors.sol",
      "parts": [
       "@src/libraries/Errors.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Errors",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Errors"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Events.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Events.sol",
      "parts": [
       "@src/libraries/Events.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Events",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Events"
       },
       null
      ]
     ]
    },
    {
     "type": "StructDefinition",
     "name": "InitializeFeeConfigParams",
     "members": [
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "swapFeeAPR",
       "identifier": {
        "type": "Identifier",
        "name": "swapFeeAPR"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "fragmentationFee",
       "identifier": {
        "type": "Identifier",
        "name": "fragmentationFee"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "liquidationRewardPercent",
       "identifier": {
        "type": "Identifier",
        "name": "liquidationRewardPercent"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "overdueCollateralProtocolPercent",
       "identifier": {
        "type": "Identifier",
        "name": "overdueCollateralProtocolPercent"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "collateralProtocolPercent",
       "identifier": {
        "type": "Identifier",
        "name": "collateralProtocolPercent"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "address",
        "stateMutability": null
       },
       "name": "feeRecipient",
       "identifier": {
        "type": "Identifier",
        "name": "feeRecipient"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      }
     ]
    },
    {
     "type": "StructDefinition",
     "name": "InitializeRiskConfigParams",
     "members": [
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "crOpening",
       "identifier": {
        "type": "Identifier",
        "name": "crOpening"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "crLiquidation",
       "identifier": {
        "type": "Identifier",
        "name": "crLiquidation"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "minimumCreditBorrowAToken",
       "identifier": {
        "type": "Identifier",
        "name": "minimumCreditBorrowAToken"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "borrowATokenCap",
       "identifier": {
        "type": "Identifier",
        "name": "borrowATokenCap"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "minTenor",
       "identifier": {
        "type": "Identifier",
        "name": "minTenor"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "maxTenor",
       "identifier": {
        "type": "Identifier",
        "name": "maxTenor"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      }
     ]
    },
    {
     "type": "StructDefinition",
     "name": "InitializeOracleParams",
     "members": [
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "address",
        "stateMutability": null
       },
       "name": "priceFeed",
       "identifier": {
        "type": "Identifier",
        "name": "priceFeed"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint64",
        "stateMutability": null
       },
       "name": "variablePoolBorrowRateStaleRateInterval",
       "identifier": {
        "type": "Identifier",
        "name": "variablePoolBorrowRateStaleRateInterval"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      }
     ]
    },
    {
     "type": "StructDefinition",
     "name": "InitializeDataParams",
     "members": [
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "address",
        "stateMutability": null
       },
       "name": "weth",
       "identifier": {
        "type": "Identifier",
        "name": "weth"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "address",
        "stateMutability": null
       },
       "name": "underlyingCollateralToken",
       "identifier": {
        "type": "Identifier",
        "name": "underlyingCollateralToken"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "address",
        "stateMutability": null
       },
       "name": "underlyingBorrowToken",
       "identifier": {
        "type": "Identifier",
        "name": "underlyingBorrowToken"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "address",
        "stateMutability": null
       },
       "name": "variablePool",
       "identifier": {
        "type": "Identifier",
        "name": "variablePool"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      }
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "Initialize",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "validateOwner",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "owner",
         "identifier": {
          "type": "Identifier",
          "name": "owner"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "owner"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "address"
            },
            "arguments": [
             {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "NULL_ADDRESS"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "validateInitializeFeeConfigParams",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "InitializeFeeConfigParams"
         },
         "name": "f",
         "identifier": {
          "type": "Identifier",
          "name": "f"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "f"
            },
            "memberName": "overdueCollateralProtocolPercent"
           },
           "right": {
            "type": "Identifier",
            "name": "PERCENT"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "INVALID_COLLATERAL_PERCENTAGE_PREMIUM"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "f"
                },
                "memberName": "overdueCollateralProtocolPercent"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "f"
            },
            "memberName": "collateralProtocolPercent"
           },
           "right": {
            "type": "Identifier",
            "name": "PERCENT"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "INVALID_COLLATERAL_PERCENTAGE_PREMIUM"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "f"
                },
                "memberName": "collateralProtocolPercent"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "f"
            },
            "memberName": "feeRecipient"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "address"
            },
            "arguments": [
             {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "NULL_ADDRESS"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "validateInitializeRiskConfigParams",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "InitializeRiskConfigParams"
         },
         "name": "r",
         "identifier": {
          "type": "Identifier",
          "name": "r"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "r"
            },
            "memberName": "crOpening"
           },
           "right": {
            "type": "Identifier",
            "name": "PERCENT"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "INVALID_COLLATERAL_RATIO"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "r"
                },
                "memberName": "crOpening"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "r"
            },
            "memberName": "crLiquidation"
           },
           "right": {
            "type": "Identifier",
            "name": "PERCENT"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "INVALID_COLLATERAL_RATIO"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "r"
                },
                "memberName": "crLiquidation"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "<=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "r"
            },
            "memberName": "crOpening"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "r"
            },
            "memberName": "crLiquidation"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "INVALID_LIQUIDATION_COLLATERAL_RATIO"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "r"
                },
                "memberName": "crOpening"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "r"
                },
                "memberName": "crLiquidation"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "r"
            },
            "memberName": "minimumCreditBorrowAToken"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "NULL_AMOUNT"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "r"
            },
            "memberName": "minTenor"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "NULL_AMOUNT"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "<=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "r"
            },
            "memberName": "maxTenor"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "r"
            },
            "memberName": "minTenor"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "INVALID_MAXIMUM_TENOR"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "r"
                },
                "memberName": "maxTenor"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "validateInitializeOracleParams",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "InitializeOracleParams"
         },
         "name": "o",
         "identifier": {
          "type": "Identifier",
          "name": "o"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "o"
            },
            "memberName": "priceFeed"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "address"
            },
            "arguments": [
             {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "NULL_ADDRESS"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "IPriceFeed"
             },
             "arguments": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "o"
               },
               "memberName": "priceFeed"
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "getPrice"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "validateInitializeDataParams",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "InitializeDataParams"
         },
         "name": "d",
         "identifier": {
          "type": "Identifier",
          "name": "d"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "d"
            },
            "memberName": "underlyingCollateralToken"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "address"
            },
            "arguments": [
             {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "NULL_ADDRESS"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "IERC20Metadata"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "d"
                },
                "memberName": "underlyingCollateralToken"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "memberName": "decimals"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           },
           "right": {
            "type": "NumberLiteral",
            "number": "18",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "INVALID_DECIMALS"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "Identifier",
                   "name": "IERC20Metadata"
                  },
                  "arguments": [
                   {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "d"
                    },
                    "memberName": "underlyingCollateralToken"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 },
                 "memberName": "decimals"
                },
                "arguments": [],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "d"
            },
            "memberName": "underlyingBorrowToken"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "address"
            },
            "arguments": [
             {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "NULL_ADDRESS"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "IERC20Metadata"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "d"
                },
                "memberName": "underlyingBorrowToken"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "memberName": "decimals"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           },
           "right": {
            "type": "NumberLiteral",
            "number": "18",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "INVALID_DECIMALS"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "Identifier",
                   "name": "IERC20Metadata"
                  },
                  "arguments": [
                   {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "d"
                    },
                    "memberName": "underlyingBorrowToken"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 },
                 "memberName": "decimals"
                },
                "arguments": [],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "d"
            },
            "memberName": "variablePool"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "address"
            },
            "arguments": [
             {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "NULL_ADDRESS"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "validateInitialize",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": null,
         "identifier": null,
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "owner",
         "identifier": {
          "type": "Identifier",
          "name": "owner"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "InitializeFeeConfigParams"
         },
         "name": "f",
         "identifier": {
          "type": "Identifier",
          "name": "f"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "InitializeRiskConfigParams"
         },
         "name": "r",
         "identifier": {
          "type": "Identifier",
          "name": "r"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "InitializeOracleParams"
         },
         "name": "o",
         "identifier": {
          "type": "Identifier",
          "name": "o"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "InitializeDataParams"
         },
         "name": "d",
         "identifier": {
          "type": "Identifier",
          "name": "d"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "validateOwner"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "owner"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "validateInitializeFeeConfigParams"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "f"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "validateInitializeRiskConfigParams"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "r"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "validateInitializeOracleParams"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "o"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "validateInitializeDataParams"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "d"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "executeInitializeFeeConfig",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "InitializeFeeConfigParams"
         },
         "name": "f",
         "identifier": {
          "type": "Identifier",
          "name": "f"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "feeConfig"
            },
            "memberName": "swapFeeAPR"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "f"
            },
            "memberName": "swapFeeAPR"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "feeConfig"
            },
            "memberName": "fragmentationFee"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "f"
            },
            "memberName": "fragmentationFee"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "feeConfig"
            },
            "memberName": "liquidationRewardPercent"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "f"
            },
            "memberName": "liquidationRewardPercent"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "feeConfig"
            },
            "memberName": "overdueCollateralProtocolPercent"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "f"
            },
            "memberName": "overdueCollateralProtocolPercent"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "feeConfig"
            },
            "memberName": "collateralProtocolPercent"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "f"
            },
            "memberName": "collateralProtocolPercent"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "feeConfig"
            },
            "memberName": "feeRecipient"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "f"
            },
            "memberName": "feeRecipient"
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "executeInitializeRiskConfig",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "InitializeRiskConfigParams"
         },
         "name": "r",
         "identifier": {
          "type": "Identifier",
          "name": "r"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "riskConfig"
            },
            "memberName": "crOpening"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "r"
            },
            "memberName": "crOpening"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "riskConfig"
            },
            "memberName": "crLiquidation"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "r"
            },
            "memberName": "crLiquidation"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "riskConfig"
            },
            "memberName": "minimumCreditBorrowAToken"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "r"
            },
            "memberName": "minimumCreditBorrowAToken"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "riskConfig"
            },
            "memberName": "borrowATokenCap"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "r"
            },
            "memberName": "borrowATokenCap"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "riskConfig"
            },
            "memberName": "minTenor"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "r"
            },
            "memberName": "minTenor"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "riskConfig"
            },
            "memberName": "maxTenor"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "r"
            },
            "memberName": "maxTenor"
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "executeInitializeOracle",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "InitializeOracleParams"
         },
         "name": "o",
         "identifier": {
          "type": "Identifier",
          "name": "o"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "oracle"
            },
            "memberName": "priceFeed"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "IPriceFeed"
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "o"
              },
              "memberName": "priceFeed"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "oracle"
            },
            "memberName": "variablePoolBorrowRateStaleRateInterval"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "o"
            },
            "memberName": "variablePoolBorrowRateStaleRateInterval"
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "executeInitializeData",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "InitializeDataParams"
         },
         "name": "d",
         "identifier": {
          "type": "Identifier",
          "name": "d"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "data"
            },
            "memberName": "nextDebtPositionId"
           },
           "right": {
            "type": "Identifier",
            "name": "DEBT_POSITION_ID_START"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "data"
            },
            "memberName": "nextCreditPositionId"
           },
           "right": {
            "type": "Identifier",
            "name": "CREDIT_POSITION_ID_START"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "data"
            },
            "memberName": "weth"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "IWETH"
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "d"
              },
              "memberName": "weth"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "data"
            },
            "memberName": "underlyingCollateralToken"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "IERC20Metadata"
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "d"
              },
              "memberName": "underlyingCollateralToken"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "data"
            },
            "memberName": "underlyingBorrowToken"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "IERC20Metadata"
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "d"
              },
              "memberName": "underlyingBorrowToken"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "data"
            },
            "memberName": "variablePool"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "IPool"
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "d"
              },
              "memberName": "variablePool"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "data"
            },
            "memberName": "collateralToken"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "NewExpression",
             "typeName": {
              "type": "UserDefinedTypeName",
              "namePath": "NonTransferrableToken"
             }
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "this"
               }
              ],
              "names": [],
              "identifiers": []
             },
             {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "string",
                "stateMutability": null
               },
               "memberName": "concat"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "Size ",
                "parts": [
                 "Size "
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "Identifier",
                   "name": "IERC20Metadata"
                  },
                  "arguments": [
                   {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "state"
                     },
                     "memberName": "data"
                    },
                    "memberName": "underlyingCollateralToken"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 },
                 "memberName": "name"
                },
                "arguments": [],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             },
             {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "string",
                "stateMutability": null
               },
               "memberName": "concat"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "sz",
                "parts": [
                 "sz"
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "Identifier",
                   "name": "IERC20Metadata"
                  },
                  "arguments": [
                   {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "state"
                     },
                     "memberName": "data"
                    },
                    "memberName": "underlyingCollateralToken"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 },
                 "memberName": "symbol"
                },
                "arguments": [],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             },
             {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "IERC20Metadata"
                },
                "arguments": [
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "state"
                   },
                   "memberName": "data"
                  },
                  "memberName": "underlyingCollateralToken"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "memberName": "decimals"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "data"
            },
            "memberName": "borrowAToken"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "NewExpression",
             "typeName": {
              "type": "UserDefinedTypeName",
              "namePath": "NonTransferrableScaledToken"
             }
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "state"
               },
               "memberName": "data"
              },
              "memberName": "variablePool"
             },
             {
              "type": "MemberAccess",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "state"
               },
               "memberName": "data"
              },
              "memberName": "underlyingBorrowToken"
             },
             {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "this"
               }
              ],
              "names": [],
              "identifiers": []
             },
             {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "string",
                "stateMutability": null
               },
               "memberName": "concat"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "Size Scaled ",
                "parts": [
                 "Size Scaled "
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "Identifier",
                   "name": "IERC20Metadata"
                  },
                  "arguments": [
                   {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "state"
                     },
                     "memberName": "data"
                    },
                    "memberName": "underlyingBorrowToken"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 },
                 "memberName": "name"
                },
                "arguments": [],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             },
             {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "string",
                "stateMutability": null
               },
               "memberName": "concat"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "sza",
                "parts": [
                 "sza"
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "Identifier",
                   "name": "IERC20Metadata"
                  },
                  "arguments": [
                   {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "state"
                     },
                     "memberName": "data"
                    },
                    "memberName": "underlyingBorrowToken"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 },
                 "memberName": "symbol"
                },
                "arguments": [],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             },
             {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "IERC20Metadata"
                },
                "arguments": [
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "state"
                   },
                   "memberName": "data"
                  },
                  "memberName": "underlyingBorrowToken"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "memberName": "decimals"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "data"
            },
            "memberName": "debtToken"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "NewExpression",
             "typeName": {
              "type": "UserDefinedTypeName",
              "namePath": "NonTransferrableToken"
             }
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "this"
               }
              ],
              "names": [],
              "identifiers": []
             },
             {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "string",
                "stateMutability": null
               },
               "memberName": "concat"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "Size Debt ",
                "parts": [
                 "Size Debt "
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "Identifier",
                   "name": "IERC20Metadata"
                  },
                  "arguments": [
                   {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "state"
                     },
                     "memberName": "data"
                    },
                    "memberName": "underlyingBorrowToken"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 },
                 "memberName": "name"
                },
                "arguments": [],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             },
             {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "string",
                "stateMutability": null
               },
               "memberName": "concat"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "szDebt",
                "parts": [
                 "szDebt"
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "Identifier",
                   "name": "IERC20Metadata"
                  },
                  "arguments": [
                   {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "state"
                     },
                     "memberName": "data"
                    },
                    "memberName": "underlyingBorrowToken"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 },
                 "memberName": "symbol"
                },
                "arguments": [],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             },
             {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "IERC20Metadata"
                },
                "arguments": [
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "state"
                   },
                   "memberName": "data"
                  },
                  "memberName": "underlyingBorrowToken"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "memberName": "decimals"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "executeInitialize",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "InitializeFeeConfigParams"
         },
         "name": "f",
         "identifier": {
          "type": "Identifier",
          "name": "f"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "InitializeRiskConfigParams"
         },
         "name": "r",
         "identifier": {
          "type": "Identifier",
          "name": "r"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "InitializeOracleParams"
         },
         "name": "o",
         "identifier": {
          "type": "Identifier",
          "name": "o"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "InitializeDataParams"
         },
         "name": "d",
         "identifier": {
          "type": "Identifier",
          "name": "d"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "executeInitializeFeeConfig"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "state"
            },
            {
             "type": "Identifier",
             "name": "f"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "executeInitializeRiskConfig"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "state"
            },
            {
             "type": "Identifier",
             "name": "r"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "executeInitializeOracle"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "state"
            },
            {
             "type": "Identifier",
             "name": "o"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "executeInitializeData"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "state"
            },
            {
             "type": "Identifier",
             "name": "d"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "Events"
            },
            "memberName": "Initialize"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "f"
            },
            {
             "type": "Identifier",
             "name": "r"
            },
            {
             "type": "Identifier",
             "name": "o"
            },
            {
             "type": "Identifier",
             "name": "d"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "library"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-06-size/src/libraries/actions/Deposit.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.23"
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
      "parts": [
       "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IERC20Metadata",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IERC20Metadata"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
      "parts": [
       "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "SafeERC20",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "SafeERC20"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/interfaces/IWETH.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/interfaces/IWETH.sol",
      "parts": [
       "@src/interfaces/IWETH.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IWETH",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IWETH"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/CapsLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/CapsLibrary.sol",
      "parts": [
       "@src/libraries/CapsLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "CapsLibrary",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "CapsLibrary"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/SizeStorage.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/SizeStorage.sol",
      "parts": [
       "@src/SizeStorage.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "State",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "State"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/DepositTokenLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/DepositTokenLibrary.sol",
      "parts": [
       "@src/libraries/DepositTokenLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "DepositTokenLibrary",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "DepositTokenLibrary"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Errors.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Errors.sol",
      "parts": [
       "@src/libraries/Errors.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Errors",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Errors"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Events.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Events.sol",
      "parts": [
       "@src/libraries/Events.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Events",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Events"
       },
       null
      ]
     ]
    },
    {
     "type": "StructDefinition",
     "name": "DepositParams",
     "members": [
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "address",
        "stateMutability": null
       },
       "name": "token",
       "identifier": {
        "type": "Identifier",
        "name": "token"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "amount",
       "identifier": {
        "type": "Identifier",
        "name": "amount"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "address",
        "stateMutability": null
       },
       "name": "to",
       "identifier": {
        "type": "Identifier",
        "name": "to"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      }
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "Deposit",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "IERC20Metadata"
       },
       "libraryName": "SafeERC20",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "IWETH"
       },
       "libraryName": "SafeERC20",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "DepositTokenLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "CapsLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "FunctionDefinition",
       "name": "validateDeposit",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "DepositParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "&&",
           "left": {
            "type": "BinaryOperation",
            "operator": "!=",
            "left": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "value"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           },
           "right": {
            "type": "TupleExpression",
            "components": [
             {
              "type": "BinaryOperation",
              "operator": "||",
              "left": {
               "type": "BinaryOperation",
               "operator": "!=",
               "left": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "msg"
                },
                "memberName": "value"
               },
               "right": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "params"
                },
                "memberName": "amount"
               }
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "!=",
               "left": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "params"
                },
                "memberName": "token"
               },
               "right": {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "address"
                },
                "arguments": [
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "state"
                   },
                   "memberName": "data"
                  },
                  "memberName": "weth"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              }
             }
            ],
            "isArray": false
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "INVALID_MSG_VALUE"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "msg"
                },
                "memberName": "value"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "&&",
           "left": {
            "type": "BinaryOperation",
            "operator": "!=",
            "left": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "token"
            },
            "right": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "data"
               },
               "memberName": "underlyingCollateralToken"
              }
             ],
             "names": [],
             "identifiers": []
            }
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "!=",
            "left": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "token"
            },
            "right": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "data"
               },
               "memberName": "underlyingBorrowToken"
              }
             ],
             "names": [],
             "identifiers": []
            }
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "INVALID_TOKEN"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "params"
                },
                "memberName": "token"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "params"
            },
            "memberName": "amount"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "NULL_AMOUNT"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "params"
            },
            "memberName": "to"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "address"
            },
            "arguments": [
             {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "NULL_ADDRESS"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "executeDeposit",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "DepositParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "from",
            "identifier": {
             "type": "Identifier",
             "name": "from"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "sender"
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "amount",
            "identifier": {
             "type": "Identifier",
             "name": "amount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "params"
           },
           "memberName": "amount"
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "msg"
            },
            "memberName": "value"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "amount"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "address"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "this"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "memberName": "balance"
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "NameValueExpression",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "state"
                  },
                  "memberName": "data"
                 },
                 "memberName": "weth"
                },
                "memberName": "deposit"
               },
               "arguments": {
                "type": "NameValueList",
                "names": [
                 "value"
                ],
                "identifiers": [
                 {
                  "type": "Identifier",
                  "name": "value"
                 }
                ],
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "amount"
                 }
                ]
               }
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "state"
                 },
                 "memberName": "data"
                },
                "memberName": "weth"
               },
               "memberName": "forceApprove"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "address"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "this"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "Identifier",
                "name": "amount"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "from"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "address"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "this"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "params"
            },
            "memberName": "token"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "address"
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "state"
               },
               "memberName": "data"
              },
              "memberName": "underlyingBorrowToken"
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "state"
               },
               "memberName": "depositUnderlyingBorrowTokenToVariablePool"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "from"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "params"
                },
                "memberName": "to"
               },
               {
                "type": "Identifier",
                "name": "amount"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "UnaryOperation",
              "operator": "!",
              "subExpression": {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "data"
               },
               "memberName": "isMulticall"
              },
              "isPrefix": true
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "state"
                  },
                  "memberName": "validateBorrowATokenCap"
                 },
                 "arguments": [],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": null
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "state"
               },
               "memberName": "depositUnderlyingCollateralToken"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "from"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "params"
                },
                "memberName": "to"
               },
               {
                "type": "Identifier",
                "name": "amount"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "Events"
            },
            "memberName": "Deposit"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "token"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "to"
            },
            {
             "type": "Identifier",
             "name": "amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "library"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-06-size/src/libraries/actions/Compensate.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.23"
    },
    {
     "type": "ImportDirective",
     "path": "@src/SizeStorage.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/SizeStorage.sol",
      "parts": [
       "@src/SizeStorage.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "State",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "State"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Math.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Math.sol",
      "parts": [
       "@src/libraries/Math.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Math",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Math"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/AccountingLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/AccountingLibrary.sol",
      "parts": [
       "@src/libraries/AccountingLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "AccountingLibrary",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "AccountingLibrary"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Errors.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Errors.sol",
      "parts": [
       "@src/libraries/Errors.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Errors",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Errors"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Events.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Events.sol",
      "parts": [
       "@src/libraries/Events.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Events",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Events"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/LoanLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/LoanLibrary.sol",
      "parts": [
       "@src/libraries/LoanLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "CreditPosition",
       null
      ],
      [
       "DebtPosition",
       null
      ],
      [
       "LoanLibrary",
       null
      ],
      [
       "LoanStatus",
       null
      ],
      [
       "RESERVED_ID",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "CreditPosition"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "DebtPosition"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "LoanLibrary"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "LoanStatus"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "RESERVED_ID"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/RiskLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/RiskLibrary.sol",
      "parts": [
       "@src/libraries/RiskLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "RiskLibrary",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "RiskLibrary"
       },
       null
      ]
     ]
    },
    {
     "type": "StructDefinition",
     "name": "CompensateParams",
     "members": [
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "creditPositionWithDebtToRepayId",
       "identifier": {
        "type": "Identifier",
        "name": "creditPositionWithDebtToRepayId"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "creditPositionToCompensateId",
       "identifier": {
        "type": "Identifier",
        "name": "creditPositionToCompensateId"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "amount",
       "identifier": {
        "type": "Identifier",
        "name": "amount"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      }
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "Compensate",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "AccountingLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "LoanLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "DebtPosition"
       },
       "libraryName": "LoanLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "CreditPosition"
       },
       "libraryName": "LoanLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "RiskLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "FunctionDefinition",
       "name": "validateCompensate",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "CompensateParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "CreditPosition"
            },
            "name": "creditPositionWithDebtToRepay",
            "identifier": {
             "type": "Identifier",
             "name": "creditPositionWithDebtToRepay"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "getCreditPosition"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "creditPositionWithDebtToRepayId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "DebtPosition"
            },
            "name": "debtPositionToRepay",
            "identifier": {
             "type": "Identifier",
             "name": "debtPositionToRepay"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "getDebtPositionByCreditPositionId"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "creditPositionWithDebtToRepayId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "amountToCompensate",
            "identifier": {
             "type": "Identifier",
             "name": "amountToCompensate"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "Math"
            },
            "memberName": "min"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "amount"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "creditPositionWithDebtToRepay"
             },
             "memberName": "credit"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "getLoanStatus"
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "params"
              },
              "memberName": "creditPositionWithDebtToRepayId"
             }
            ],
            "names": [],
            "identifiers": []
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "LoanStatus"
            },
            "memberName": "ACTIVE"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "LOAN_NOT_ACTIVE"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "params"
                },
                "memberName": "creditPositionWithDebtToRepayId"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "params"
            },
            "memberName": "creditPositionToCompensateId"
           },
           "right": {
            "type": "Identifier",
            "name": "RESERVED_ID"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "tenor",
               "identifier": {
                "type": "Identifier",
                "name": "tenor"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "BinaryOperation",
              "operator": "-",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "debtPositionToRepay"
               },
               "memberName": "dueDate"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "block"
               },
               "memberName": "timestamp"
              }
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "||",
              "left": {
               "type": "BinaryOperation",
               "operator": "<",
               "left": {
                "type": "Identifier",
                "name": "tenor"
               },
               "right": {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "state"
                 },
                 "memberName": "riskConfig"
                },
                "memberName": "minTenor"
               }
              },
              "right": {
               "type": "BinaryOperation",
               "operator": ">",
               "left": {
                "type": "Identifier",
                "name": "tenor"
               },
               "right": {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "state"
                 },
                 "memberName": "riskConfig"
                },
                "memberName": "maxTenor"
               }
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "RevertStatement",
                "revertCall": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "Errors"
                  },
                  "memberName": "TENOR_OUT_OF_RANGE"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "tenor"
                  },
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "state"
                    },
                    "memberName": "riskConfig"
                   },
                   "memberName": "minTenor"
                  },
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "state"
                    },
                    "memberName": "riskConfig"
                   },
                   "memberName": "maxTenor"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": null
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "UserDefinedTypeName",
                "namePath": "CreditPosition"
               },
               "name": "creditPositionToCompensate",
               "identifier": {
                "type": "Identifier",
                "name": "creditPositionToCompensate"
               },
               "storageLocation": "storage",
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "state"
               },
               "memberName": "getCreditPosition"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "params"
                },
                "memberName": "creditPositionToCompensateId"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "UserDefinedTypeName",
                "namePath": "DebtPosition"
               },
               "name": "debtPositionToCompensate",
               "identifier": {
                "type": "Identifier",
                "name": "debtPositionToCompensate"
               },
               "storageLocation": "storage",
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "state"
               },
               "memberName": "getDebtPositionByCreditPositionId"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "params"
                },
                "memberName": "creditPositionToCompensateId"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "UnaryOperation",
              "operator": "!",
              "subExpression": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "isCreditPositionTransferrable"
               },
               "arguments": [
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "params"
                 },
                 "memberName": "creditPositionToCompensateId"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "isPrefix": true
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "RevertStatement",
                "revertCall": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "Errors"
                  },
                  "memberName": "CREDIT_POSITION_NOT_TRANSFERRABLE"
                 },
                 "arguments": [
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "params"
                   },
                   "memberName": "creditPositionToCompensateId"
                  },
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "state"
                    },
                    "memberName": "getLoanStatus"
                   },
                   "arguments": [
                    {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "params"
                     },
                     "memberName": "creditPositionToCompensateId"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  },
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "state"
                    },
                    "memberName": "collateralRatio"
                   },
                   "arguments": [
                    {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "debtPositionToCompensate"
                     },
                     "memberName": "borrower"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": null
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "debtPositionToRepay"
               },
               "memberName": "dueDate"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "state"
                 },
                 "memberName": "getDebtPositionByCreditPositionId"
                },
                "arguments": [
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "params"
                  },
                  "memberName": "creditPositionToCompensateId"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "memberName": "dueDate"
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "RevertStatement",
                "revertCall": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "Errors"
                  },
                  "memberName": "DUE_DATE_NOT_COMPATIBLE"
                 },
                 "arguments": [
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "params"
                   },
                   "memberName": "creditPositionWithDebtToRepayId"
                  },
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "params"
                   },
                   "memberName": "creditPositionToCompensateId"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": null
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "!=",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "creditPositionToCompensate"
               },
               "memberName": "lender"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "debtPositionToRepay"
               },
               "memberName": "borrower"
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "RevertStatement",
                "revertCall": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "Errors"
                  },
                  "memberName": "INVALID_LENDER"
                 },
                 "arguments": [
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "creditPositionToCompensate"
                   },
                   "memberName": "lender"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": null
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "params"
               },
               "memberName": "creditPositionToCompensateId"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "params"
               },
               "memberName": "creditPositionWithDebtToRepayId"
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "RevertStatement",
                "revertCall": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "Errors"
                  },
                  "memberName": "INVALID_CREDIT_POSITION_ID"
                 },
                 "arguments": [
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "params"
                   },
                   "memberName": "creditPositionToCompensateId"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": null
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "amountToCompensate"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "Math"
                },
                "memberName": "min"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "amountToCompensate"
                },
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "creditPositionToCompensate"
                 },
                 "memberName": "credit"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "msg"
            },
            "memberName": "sender"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "debtPositionToRepay"
            },
            "memberName": "borrower"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "COMPENSATOR_IS_NOT_BORROWER"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "msg"
                },
                "memberName": "sender"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "debtPositionToRepay"
                },
                "memberName": "borrower"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "amountToCompensate"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "NULL_AMOUNT"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "executeCompensate",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "CompensateParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "Events"
            },
            "memberName": "Compensate"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "creditPositionWithDebtToRepayId"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "creditPositionToCompensateId"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "CreditPosition"
            },
            "name": "creditPositionWithDebtToRepay",
            "identifier": {
             "type": "Identifier",
             "name": "creditPositionWithDebtToRepay"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "getCreditPosition"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "creditPositionWithDebtToRepayId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "DebtPosition"
            },
            "name": "debtPositionToRepay",
            "identifier": {
             "type": "Identifier",
             "name": "debtPositionToRepay"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "getDebtPositionByCreditPositionId"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "creditPositionWithDebtToRepayId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "amountToCompensate",
            "identifier": {
             "type": "Identifier",
             "name": "amountToCompensate"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "Math"
            },
            "memberName": "min"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "amount"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "creditPositionWithDebtToRepay"
             },
             "memberName": "credit"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "CreditPosition"
            },
            "name": "creditPositionToCompensate",
            "identifier": {
             "type": "Identifier",
             "name": "creditPositionToCompensate"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "params"
            },
            "memberName": "creditPositionToCompensateId"
           },
           "right": {
            "type": "Identifier",
            "name": "RESERVED_ID"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "creditPositionToCompensate"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "createDebtAndCreditPositions"
               },
               "arguments": [
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "msg"
                 },
                 "memberName": "sender"
                },
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "msg"
                 },
                 "memberName": "sender"
                },
                {
                 "type": "Identifier",
                 "name": "amountToCompensate"
                },
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "debtPositionToRepay"
                 },
                 "memberName": "dueDate"
                }
               ],
               "names": [
                "lender",
                "borrower",
                "futureValue",
                "dueDate"
               ],
               "identifiers": [
                {
                 "type": "Identifier",
                 "name": "lender"
                },
                {
                 "type": "Identifier",
                 "name": "borrower"
                },
                {
                 "type": "Identifier",
                 "name": "futureValue"
                },
                {
                 "type": "Identifier",
                 "name": "dueDate"
                }
               ]
              }
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "creditPositionToCompensate"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "getCreditPosition"
               },
               "arguments": [
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "params"
                 },
                 "memberName": "creditPositionToCompensateId"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "amountToCompensate"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "Math"
                },
                "memberName": "min"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "amountToCompensate"
                },
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "creditPositionToCompensate"
                 },
                 "memberName": "credit"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "reduceDebtAndCredit"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "creditPositionWithDebtToRepay"
             },
             "memberName": "debtPositionId"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "creditPositionWithDebtToRepayId"
            },
            {
             "type": "Identifier",
             "name": "amountToCompensate"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "exiterCreditRemaining",
            "identifier": {
             "type": "Identifier",
             "name": "exiterCreditRemaining"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "BinaryOperation",
           "operator": "-",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "creditPositionToCompensate"
            },
            "memberName": "credit"
           },
           "right": {
            "type": "Identifier",
            "name": "amountToCompensate"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "createCreditPosition"
           },
           "arguments": [
            {
             "type": "Conditional",
             "condition": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "params"
               },
               "memberName": "creditPositionToCompensateId"
              },
              "right": {
               "type": "Identifier",
               "name": "RESERVED_ID"
              }
             },
             "trueExpression": {
              "type": "BinaryOperation",
              "operator": "-",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "data"
               },
               "memberName": "nextCreditPositionId"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              }
             },
             "falseExpression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "params"
              },
              "memberName": "creditPositionToCompensateId"
             }
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "creditPositionWithDebtToRepay"
             },
             "memberName": "lender"
            },
            {
             "type": "Identifier",
             "name": "amountToCompensate"
            }
           ],
           "names": [
            "exitCreditPositionId",
            "lender",
            "credit"
           ],
           "identifiers": [
            {
             "type": "Identifier",
             "name": "exitCreditPositionId"
            },
            {
             "type": "Identifier",
             "name": "lender"
            },
            {
             "type": "Identifier",
             "name": "credit"
            }
           ]
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "exiterCreditRemaining"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "fragmentationFeeInCollateral",
               "identifier": {
                "type": "Identifier",
                "name": "fragmentationFeeInCollateral"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Math"
               },
               "memberName": "min"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "state"
                 },
                 "memberName": "debtTokenAmountToCollateralTokenAmount"
                },
                "arguments": [
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "state"
                   },
                   "memberName": "feeConfig"
                  },
                  "memberName": "fragmentationFee"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "state"
                   },
                   "memberName": "data"
                  },
                  "memberName": "collateralToken"
                 },
                 "memberName": "balanceOf"
                },
                "arguments": [
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "msg"
                  },
                  "memberName": "sender"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "state"
                 },
                 "memberName": "data"
                },
                "memberName": "collateralToken"
               },
               "memberName": "transferFrom"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "msg"
                },
                "memberName": "sender"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "state"
                 },
                 "memberName": "feeConfig"
                },
                "memberName": "feeRecipient"
               },
               {
                "type": "Identifier",
                "name": "fragmentationFeeInCollateral"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "library"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-06-size/src/libraries/actions/Claim.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.23"
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/LoanLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/LoanLibrary.sol",
      "parts": [
       "@src/libraries/LoanLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "CreditPosition",
       null
      ],
      [
       "DebtPosition",
       null
      ],
      [
       "LoanLibrary",
       null
      ],
      [
       "LoanStatus",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "CreditPosition"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "DebtPosition"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "LoanLibrary"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "LoanStatus"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Math.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Math.sol",
      "parts": [
       "@src/libraries/Math.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Math",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Math"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/SizeStorage.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/SizeStorage.sol",
      "parts": [
       "@src/SizeStorage.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "State",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "State"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/AccountingLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/AccountingLibrary.sol",
      "parts": [
       "@src/libraries/AccountingLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "AccountingLibrary",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "AccountingLibrary"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Errors.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Errors.sol",
      "parts": [
       "@src/libraries/Errors.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Errors",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Errors"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Events.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Events.sol",
      "parts": [
       "@src/libraries/Events.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Events",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Events"
       },
       null
      ]
     ]
    },
    {
     "type": "StructDefinition",
     "name": "ClaimParams",
     "members": [
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "creditPositionId",
       "identifier": {
        "type": "Identifier",
        "name": "creditPositionId"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      }
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "Claim",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "CreditPosition"
       },
       "libraryName": "LoanLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "LoanLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "AccountingLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "FunctionDefinition",
       "name": "validateClaim",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "ClaimParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "CreditPosition"
            },
            "name": "creditPosition",
            "identifier": {
             "type": "Identifier",
             "name": "creditPosition"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "getCreditPosition"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "creditPositionId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "getLoanStatus"
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "params"
              },
              "memberName": "creditPositionId"
             }
            ],
            "names": [],
            "identifiers": []
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "LoanStatus"
            },
            "memberName": "REPAID"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "LOAN_NOT_REPAID"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "params"
                },
                "memberName": "creditPositionId"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "creditPosition"
            },
            "memberName": "credit"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "CREDIT_POSITION_ALREADY_CLAIMED"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "params"
                },
                "memberName": "creditPositionId"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "executeClaim",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "ClaimParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "CreditPosition"
            },
            "name": "creditPosition",
            "identifier": {
             "type": "Identifier",
             "name": "creditPosition"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "getCreditPosition"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "creditPositionId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "DebtPosition"
            },
            "name": "debtPosition",
            "identifier": {
             "type": "Identifier",
             "name": "debtPosition"
            },
            "storageLocation": "storage",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "getDebtPositionByCreditPositionId"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "creditPositionId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "claimAmount",
            "identifier": {
             "type": "Identifier",
             "name": "claimAmount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "Math"
            },
            "memberName": "mulDivDown"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "creditPosition"
             },
             "memberName": "credit"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "data"
               },
               "memberName": "borrowAToken"
              },
              "memberName": "liquidityIndex"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "debtPosition"
             },
             "memberName": "liquidityIndexAtRepayment"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "reduceCredit"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "creditPositionId"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "creditPosition"
             },
             "memberName": "credit"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "borrowAToken"
            },
            "memberName": "transferFrom"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "this"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "creditPosition"
             },
             "memberName": "lender"
            },
            {
             "type": "Identifier",
             "name": "claimAmount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "Events"
            },
            "memberName": "Claim"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "creditPositionId"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "creditPosition"
             },
             "memberName": "debtPositionId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "library"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-06-size/src/libraries/actions/BuyCreditMarket.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.23"
    },
    {
     "type": "ImportDirective",
     "path": "@src/SizeStorage.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/SizeStorage.sol",
      "parts": [
       "@src/SizeStorage.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "State",
       null
      ],
      [
       "User",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "State"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "User"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/AccountingLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/AccountingLibrary.sol",
      "parts": [
       "@src/libraries/AccountingLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "AccountingLibrary",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "AccountingLibrary"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Errors.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Errors.sol",
      "parts": [
       "@src/libraries/Errors.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Errors",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Errors"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Events.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Events.sol",
      "parts": [
       "@src/libraries/Events.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Events",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Events"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/LoanLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/LoanLibrary.sol",
      "parts": [
       "@src/libraries/LoanLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "CreditPosition",
       null
      ],
      [
       "DebtPosition",
       null
      ],
      [
       "LoanLibrary",
       null
      ],
      [
       "RESERVED_ID",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "CreditPosition"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "DebtPosition"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "LoanLibrary"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "RESERVED_ID"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Math.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Math.sol",
      "parts": [
       "@src/libraries/Math.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Math",
       null
      ],
      [
       "PERCENT",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Math"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "PERCENT"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/OfferLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/OfferLibrary.sol",
      "parts": [
       "@src/libraries/OfferLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "BorrowOffer",
       null
      ],
      [
       "OfferLibrary",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "BorrowOffer"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "OfferLibrary"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/RiskLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/RiskLibrary.sol",
      "parts": [
       "@src/libraries/RiskLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "RiskLibrary",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "RiskLibrary"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/YieldCurveLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/YieldCurveLibrary.sol",
      "parts": [
       "@src/libraries/YieldCurveLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "VariablePoolBorrowRateParams",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "VariablePoolBorrowRateParams"
       },
       null
      ]
     ]
    },
    {
     "type": "StructDefinition",
     "name": "BuyCreditMarketParams",
     "members": [
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "address",
        "stateMutability": null
       },
       "name": "borrower",
       "identifier": {
        "type": "Identifier",
        "name": "borrower"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "creditPositionId",
       "identifier": {
        "type": "Identifier",
        "name": "creditPositionId"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "amount",
       "identifier": {
        "type": "Identifier",
        "name": "amount"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "tenor",
       "identifier": {
        "type": "Identifier",
        "name": "tenor"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "deadline",
       "identifier": {
        "type": "Identifier",
        "name": "deadline"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "minAPR",
       "identifier": {
        "type": "Identifier",
        "name": "minAPR"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "bool",
        "stateMutability": null
       },
       "name": "exactAmountIn",
       "identifier": {
        "type": "Identifier",
        "name": "exactAmountIn"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      }
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "BuyCreditMarket",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "BorrowOffer"
       },
       "libraryName": "OfferLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "AccountingLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "LoanLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "DebtPosition"
       },
       "libraryName": "LoanLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "CreditPosition"
       },
       "libraryName": "LoanLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "RiskLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "FunctionDefinition",
       "name": "validateBuyCreditMarket",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "BuyCreditMarketParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "borrower",
            "identifier": {
             "type": "Identifier",
             "name": "borrower"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "tenor",
            "identifier": {
             "type": "Identifier",
             "name": "tenor"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "params"
            },
            "memberName": "creditPositionId"
           },
           "right": {
            "type": "Identifier",
            "name": "RESERVED_ID"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "borrower"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "params"
               },
               "memberName": "borrower"
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "tenor"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "params"
               },
               "memberName": "tenor"
              }
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "||",
              "left": {
               "type": "BinaryOperation",
               "operator": "<",
               "left": {
                "type": "Identifier",
                "name": "tenor"
               },
               "right": {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "state"
                 },
                 "memberName": "riskConfig"
                },
                "memberName": "minTenor"
               }
              },
              "right": {
               "type": "BinaryOperation",
               "operator": ">",
               "left": {
                "type": "Identifier",
                "name": "tenor"
               },
               "right": {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "state"
                 },
                 "memberName": "riskConfig"
                },
                "memberName": "maxTenor"
               }
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "RevertStatement",
                "revertCall": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "Errors"
                  },
                  "memberName": "TENOR_OUT_OF_RANGE"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "tenor"
                  },
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "state"
                    },
                    "memberName": "riskConfig"
                   },
                   "memberName": "minTenor"
                  },
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "state"
                    },
                    "memberName": "riskConfig"
                   },
                   "memberName": "maxTenor"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": null
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "UserDefinedTypeName",
                "namePath": "CreditPosition"
               },
               "name": "creditPosition",
               "identifier": {
                "type": "Identifier",
                "name": "creditPosition"
               },
               "storageLocation": "storage",
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "state"
               },
               "memberName": "getCreditPosition"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "params"
                },
                "memberName": "creditPositionId"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "UserDefinedTypeName",
                "namePath": "DebtPosition"
               },
               "name": "debtPosition",
               "identifier": {
                "type": "Identifier",
                "name": "debtPosition"
               },
               "storageLocation": "storage",
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "state"
               },
               "memberName": "getDebtPositionByCreditPositionId"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "params"
                },
                "memberName": "creditPositionId"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "UnaryOperation",
              "operator": "!",
              "subExpression": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "isCreditPositionTransferrable"
               },
               "arguments": [
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "params"
                 },
                 "memberName": "creditPositionId"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "isPrefix": true
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "RevertStatement",
                "revertCall": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "Errors"
                  },
                  "memberName": "CREDIT_POSITION_NOT_TRANSFERRABLE"
                 },
                 "arguments": [
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "params"
                   },
                   "memberName": "creditPositionId"
                  },
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "state"
                    },
                    "memberName": "getLoanStatus"
                   },
                   "arguments": [
                    {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "params"
                     },
                     "memberName": "creditPositionId"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  },
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "state"
                    },
                    "memberName": "collateralRatio"
                   },
                   "arguments": [
                    {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "debtPosition"
                     },
                     "memberName": "borrower"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": null
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "UserDefinedTypeName",
                "namePath": "User"
               },
               "name": "user",
               "identifier": {
                "type": "Identifier",
                "name": "user"
               },
               "storageLocation": "storage",
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "IndexAccess",
              "base": {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "data"
               },
               "memberName": "users"
              },
              "index": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "creditPosition"
               },
               "memberName": "lender"
              }
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "||",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "user"
               },
               "memberName": "allCreditPositionsForSaleDisabled"
              },
              "right": {
               "type": "UnaryOperation",
               "operator": "!",
               "subExpression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "creditPosition"
                },
                "memberName": "forSale"
               },
               "isPrefix": true
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "RevertStatement",
                "revertCall": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "Errors"
                  },
                  "memberName": "CREDIT_NOT_FOR_SALE"
                 },
                 "arguments": [
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "params"
                   },
                   "memberName": "creditPositionId"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": null
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "borrower"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "creditPosition"
               },
               "memberName": "lender"
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "tenor"
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "-",
               "left": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "debtPosition"
                },
                "memberName": "dueDate"
               },
               "right": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "block"
                },
                "memberName": "timestamp"
               }
              }
             }
            }
           ]
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "BorrowOffer"
            },
            "name": "borrowOffer",
            "identifier": {
             "type": "Identifier",
             "name": "borrowOffer"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "IndexAccess",
            "base": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "users"
            },
            "index": {
             "type": "Identifier",
             "name": "borrower"
            }
           },
           "memberName": "borrowOffer"
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "borrowOffer"
            },
            "memberName": "isNull"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "INVALID_BORROW_OFFER"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "borrower"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "params"
            },
            "memberName": "amount"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "riskConfig"
            },
            "memberName": "minimumCreditBorrowAToken"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "CREDIT_LOWER_THAN_MINIMUM_CREDIT"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "params"
                },
                "memberName": "amount"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "state"
                 },
                 "memberName": "riskConfig"
                },
                "memberName": "minimumCreditBorrowAToken"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "params"
            },
            "memberName": "deadline"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "block"
            },
            "memberName": "timestamp"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "PAST_DEADLINE"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "params"
                },
                "memberName": "deadline"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "apr",
            "identifier": {
             "type": "Identifier",
             "name": "apr"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "borrowOffer"
            },
            "memberName": "getAPRByTenor"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "VariablePoolBorrowRateParams"
             },
             "arguments": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "oracle"
               },
               "memberName": "variablePoolBorrowRate"
              },
              {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "oracle"
               },
               "memberName": "variablePoolBorrowRateUpdatedAt"
              },
              {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "oracle"
               },
               "memberName": "variablePoolBorrowRateStaleRateInterval"
              }
             ],
             "names": [
              "variablePoolBorrowRate",
              "variablePoolBorrowRateUpdatedAt",
              "variablePoolBorrowRateStaleRateInterval"
             ],
             "identifiers": [
              {
               "type": "Identifier",
               "name": "variablePoolBorrowRate"
              },
              {
               "type": "Identifier",
               "name": "variablePoolBorrowRateUpdatedAt"
              },
              {
               "type": "Identifier",
               "name": "variablePoolBorrowRateStaleRateInterval"
              }
             ]
            },
            {
             "type": "Identifier",
             "name": "tenor"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "apr"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "params"
            },
            "memberName": "minAPR"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "APR_LOWER_THAN_MIN_APR"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "apr"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "params"
                },
                "memberName": "minAPR"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "executeBuyCreditMarket",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "BuyCreditMarketParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "cashAmountIn",
         "identifier": {
          "type": "Identifier",
          "name": "cashAmountIn"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "Events"
            },
            "memberName": "BuyCreditMarket"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "borrower"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "creditPositionId"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "tenor"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "amount"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "exactAmountIn"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "CreditPosition"
            },
            "name": "creditPosition",
            "identifier": {
             "type": "Identifier",
             "name": "creditPosition"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "tenor",
            "identifier": {
             "type": "Identifier",
             "name": "tenor"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "borrower",
            "identifier": {
             "type": "Identifier",
             "name": "borrower"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "params"
            },
            "memberName": "creditPositionId"
           },
           "right": {
            "type": "Identifier",
            "name": "RESERVED_ID"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "borrower"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "params"
               },
               "memberName": "borrower"
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "tenor"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "params"
               },
               "memberName": "tenor"
              }
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "UserDefinedTypeName",
                "namePath": "DebtPosition"
               },
               "name": "debtPosition",
               "identifier": {
                "type": "Identifier",
                "name": "debtPosition"
               },
               "storageLocation": "storage",
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "state"
               },
               "memberName": "getDebtPositionByCreditPositionId"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "params"
                },
                "memberName": "creditPositionId"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "creditPosition"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "getCreditPosition"
               },
               "arguments": [
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "params"
                 },
                 "memberName": "creditPositionId"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "borrower"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "creditPosition"
               },
               "memberName": "lender"
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "tenor"
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "-",
               "left": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "debtPosition"
                },
                "memberName": "dueDate"
               },
               "right": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "block"
                },
                "memberName": "timestamp"
               }
              }
             }
            }
           ]
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "ratePerTenor",
            "identifier": {
             "type": "Identifier",
             "name": "ratePerTenor"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "IndexAccess",
              "base": {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "data"
               },
               "memberName": "users"
              },
              "index": {
               "type": "Identifier",
               "name": "borrower"
              }
             },
             "memberName": "borrowOffer"
            },
            "memberName": "getRatePerTenor"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "VariablePoolBorrowRateParams"
             },
             "arguments": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "oracle"
               },
               "memberName": "variablePoolBorrowRate"
              },
              {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "oracle"
               },
               "memberName": "variablePoolBorrowRateUpdatedAt"
              },
              {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "oracle"
               },
               "memberName": "variablePoolBorrowRateStaleRateInterval"
              }
             ],
             "names": [
              "variablePoolBorrowRate",
              "variablePoolBorrowRateUpdatedAt",
              "variablePoolBorrowRateStaleRateInterval"
             ],
             "identifiers": [
              {
               "type": "Identifier",
               "name": "variablePoolBorrowRate"
              },
              {
               "type": "Identifier",
               "name": "variablePoolBorrowRateUpdatedAt"
              },
              {
               "type": "Identifier",
               "name": "variablePoolBorrowRateStaleRateInterval"
              }
             ]
            },
            {
             "type": "Identifier",
             "name": "tenor"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "creditAmountOut",
            "identifier": {
             "type": "Identifier",
             "name": "creditAmountOut"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "fees",
            "identifier": {
             "type": "Identifier",
             "name": "fees"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "params"
           },
           "memberName": "exactAmountIn"
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "cashAmountIn"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "params"
               },
               "memberName": "amount"
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "TupleExpression",
               "components": [
                {
                 "type": "Identifier",
                 "name": "creditAmountOut"
                },
                {
                 "type": "Identifier",
                 "name": "fees"
                }
               ],
               "isArray": false
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "getCreditAmountOut"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "cashAmountIn"
                },
                {
                 "type": "Conditional",
                 "condition": {
                  "type": "BinaryOperation",
                  "operator": "==",
                  "left": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "params"
                   },
                   "memberName": "creditPositionId"
                  },
                  "right": {
                   "type": "Identifier",
                   "name": "RESERVED_ID"
                  }
                 },
                 "trueExpression": {
                  "type": "Identifier",
                  "name": "cashAmountIn"
                 },
                 "falseExpression": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "Math"
                   },
                   "memberName": "mulDivUp"
                  },
                  "arguments": [
                   {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "creditPosition"
                    },
                    "memberName": "credit"
                   },
                   {
                    "type": "Identifier",
                    "name": "PERCENT"
                   },
                   {
                    "type": "BinaryOperation",
                    "operator": "+",
                    "left": {
                     "type": "Identifier",
                     "name": "PERCENT"
                    },
                    "right": {
                     "type": "Identifier",
                     "name": "ratePerTenor"
                    }
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                },
                {
                 "type": "Conditional",
                 "condition": {
                  "type": "BinaryOperation",
                  "operator": "==",
                  "left": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "params"
                   },
                   "memberName": "creditPositionId"
                  },
                  "right": {
                   "type": "Identifier",
                   "name": "RESERVED_ID"
                  }
                 },
                 "trueExpression": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "Math"
                   },
                   "memberName": "mulDivDown"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "cashAmountIn"
                   },
                   {
                    "type": "BinaryOperation",
                    "operator": "+",
                    "left": {
                     "type": "Identifier",
                     "name": "PERCENT"
                    },
                    "right": {
                     "type": "Identifier",
                     "name": "ratePerTenor"
                    }
                   },
                   {
                    "type": "Identifier",
                    "name": "PERCENT"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 },
                 "falseExpression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "creditPosition"
                  },
                  "memberName": "credit"
                 }
                },
                {
                 "type": "Identifier",
                 "name": "ratePerTenor"
                },
                {
                 "type": "Identifier",
                 "name": "tenor"
                }
               ],
               "names": [
                "cashAmountIn",
                "maxCashAmountIn",
                "maxCredit",
                "ratePerTenor",
                "tenor"
               ],
               "identifiers": [
                {
                 "type": "Identifier",
                 "name": "cashAmountIn"
                },
                {
                 "type": "Identifier",
                 "name": "maxCashAmountIn"
                },
                {
                 "type": "Identifier",
                 "name": "maxCredit"
                },
                {
                 "type": "Identifier",
                 "name": "ratePerTenor"
                },
                {
                 "type": "Identifier",
                 "name": "tenor"
                }
               ]
              }
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "creditAmountOut"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "params"
               },
               "memberName": "amount"
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "TupleExpression",
               "components": [
                {
                 "type": "Identifier",
                 "name": "cashAmountIn"
                },
                {
                 "type": "Identifier",
                 "name": "fees"
                }
               ],
               "isArray": false
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "getCashAmountIn"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "creditAmountOut"
                },
                {
                 "type": "Conditional",
                 "condition": {
                  "type": "BinaryOperation",
                  "operator": "==",
                  "left": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "params"
                   },
                   "memberName": "creditPositionId"
                  },
                  "right": {
                   "type": "Identifier",
                   "name": "RESERVED_ID"
                  }
                 },
                 "trueExpression": {
                  "type": "Identifier",
                  "name": "creditAmountOut"
                 },
                 "falseExpression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "creditPosition"
                  },
                  "memberName": "credit"
                 }
                },
                {
                 "type": "Identifier",
                 "name": "ratePerTenor"
                },
                {
                 "type": "Identifier",
                 "name": "tenor"
                }
               ],
               "names": [
                "creditAmountOut",
                "maxCredit",
                "ratePerTenor",
                "tenor"
               ],
               "identifiers": [
                {
                 "type": "Identifier",
                 "name": "creditAmountOut"
                },
                {
                 "type": "Identifier",
                 "name": "maxCredit"
                },
                {
                 "type": "Identifier",
                 "name": "ratePerTenor"
                },
                {
                 "type": "Identifier",
                 "name": "tenor"
                }
               ]
              }
             }
            }
           ]
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "params"
            },
            "memberName": "creditPositionId"
           },
           "right": {
            "type": "Identifier",
            "name": "RESERVED_ID"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "state"
               },
               "memberName": "createDebtAndCreditPositions"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "msg"
                },
                "memberName": "sender"
               },
               {
                "type": "Identifier",
                "name": "borrower"
               },
               {
                "type": "Identifier",
                "name": "creditAmountOut"
               },
               {
                "type": "BinaryOperation",
                "operator": "+",
                "left": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "block"
                 },
                 "memberName": "timestamp"
                },
                "right": {
                 "type": "Identifier",
                 "name": "tenor"
                }
               }
              ],
              "names": [
               "lender",
               "borrower",
               "futureValue",
               "dueDate"
              ],
              "identifiers": [
               {
                "type": "Identifier",
                "name": "lender"
               },
               {
                "type": "Identifier",
                "name": "borrower"
               },
               {
                "type": "Identifier",
                "name": "futureValue"
               },
               {
                "type": "Identifier",
                "name": "dueDate"
               }
              ]
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "state"
               },
               "memberName": "createCreditPosition"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "params"
                },
                "memberName": "creditPositionId"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "msg"
                },
                "memberName": "sender"
               },
               {
                "type": "Identifier",
                "name": "creditAmountOut"
               }
              ],
              "names": [
               "exitCreditPositionId",
               "lender",
               "credit"
              ],
              "identifiers": [
               {
                "type": "Identifier",
                "name": "exitCreditPositionId"
               },
               {
                "type": "Identifier",
                "name": "lender"
               },
               {
                "type": "Identifier",
                "name": "credit"
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "borrowAToken"
            },
            "memberName": "transferFrom"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "borrower"
            },
            {
             "type": "BinaryOperation",
             "operator": "-",
             "left": {
              "type": "Identifier",
              "name": "cashAmountIn"
             },
             "right": {
              "type": "Identifier",
              "name": "fees"
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "borrowAToken"
            },
            "memberName": "transferFrom"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "feeConfig"
             },
             "memberName": "feeRecipient"
            },
            {
             "type": "Identifier",
             "name": "fees"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "library"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-06-size/src/libraries/actions/BuyCreditLimit.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.23"
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/OfferLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/OfferLibrary.sol",
      "parts": [
       "@src/libraries/OfferLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "LoanOffer",
       null
      ],
      [
       "OfferLibrary",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "LoanOffer"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "OfferLibrary"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/YieldCurveLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/YieldCurveLibrary.sol",
      "parts": [
       "@src/libraries/YieldCurveLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "YieldCurve",
       null
      ],
      [
       "YieldCurveLibrary",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "YieldCurve"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "YieldCurveLibrary"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/SizeStorage.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/SizeStorage.sol",
      "parts": [
       "@src/SizeStorage.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "State",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "State"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Errors.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Errors.sol",
      "parts": [
       "@src/libraries/Errors.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Errors",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Errors"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Events.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Events.sol",
      "parts": [
       "@src/libraries/Events.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Events",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Events"
       },
       null
      ]
     ]
    },
    {
     "type": "StructDefinition",
     "name": "BuyCreditLimitParams",
     "members": [
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "maxDueDate",
       "identifier": {
        "type": "Identifier",
        "name": "maxDueDate"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "YieldCurve"
       },
       "name": "curveRelativeTime",
       "identifier": {
        "type": "Identifier",
        "name": "curveRelativeTime"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      }
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "BuyCreditLimit",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "LoanOffer"
       },
       "libraryName": "OfferLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "FunctionDefinition",
       "name": "validateBuyCreditLimit",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "BuyCreditLimitParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "LoanOffer"
            },
            "name": "loanOffer",
            "identifier": {
             "type": "Identifier",
             "name": "loanOffer"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "LoanOffer"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "maxDueDate"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "curveRelativeTime"
            }
           ],
           "names": [
            "maxDueDate",
            "curveRelativeTime"
           ],
           "identifiers": [
            {
             "type": "Identifier",
             "name": "maxDueDate"
            },
            {
             "type": "Identifier",
             "name": "curveRelativeTime"
            }
           ]
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "UnaryOperation",
           "operator": "!",
           "subExpression": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "loanOffer"
             },
             "memberName": "isNull"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           },
           "isPrefix": true
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "params"
               },
               "memberName": "maxDueDate"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "RevertStatement",
                "revertCall": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "Errors"
                  },
                  "memberName": "NULL_MAX_DUE_DATE"
                 },
                 "arguments": [],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": null
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "params"
               },
               "memberName": "maxDueDate"
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "+",
               "left": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "block"
                },
                "memberName": "timestamp"
               },
               "right": {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "state"
                 },
                 "memberName": "riskConfig"
                },
                "memberName": "minTenor"
               }
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "RevertStatement",
                "revertCall": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "Errors"
                  },
                  "memberName": "PAST_MAX_DUE_DATE"
                 },
                 "arguments": [
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "params"
                   },
                   "memberName": "maxDueDate"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": null
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "YieldCurveLibrary"
               },
               "memberName": "validateYieldCurve"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "params"
                },
                "memberName": "curveRelativeTime"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "state"
                 },
                 "memberName": "riskConfig"
                },
                "memberName": "minTenor"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "state"
                 },
                 "memberName": "riskConfig"
                },
                "memberName": "maxTenor"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "executeBuyCreditLimit",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "storageLocation": "storage",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "BuyCreditLimitParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "IndexAccess",
             "base": {
              "type": "MemberAccess",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "state"
               },
               "memberName": "data"
              },
              "memberName": "users"
             },
             "index": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "sender"
             }
            },
            "memberName": "loanOffer"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "LoanOffer"
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "params"
              },
              "memberName": "maxDueDate"
             },
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "params"
              },
              "memberName": "curveRelativeTime"
             }
            ],
            "names": [
             "maxDueDate",
             "curveRelativeTime"
            ],
            "identifiers": [
             {
              "type": "Identifier",
              "name": "maxDueDate"
             },
             {
              "type": "Identifier",
              "name": "curveRelativeTime"
             }
            ]
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "Events"
            },
            "memberName": "BuyCreditLimit"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "maxDueDate"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "params"
              },
              "memberName": "curveRelativeTime"
             },
             "memberName": "tenors"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "params"
              },
              "memberName": "curveRelativeTime"
             },
             "memberName": "aprs"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "params"
              },
              "memberName": "curveRelativeTime"
             },
             "memberName": "marketRateMultipliers"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "library"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-06-size/src/interfaces/IWETH.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.23"
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
      "parts": [
       "@openzeppelin/contracts/token/ERC20/IERC20.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IERC20",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IERC20"
       },
       null
      ]
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "IWETH",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "IERC20"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "deposit",
       "parameters": [],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "withdraw",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-06-size/src/interfaces/ISizeView.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.23"
    },
    {
     "type": "ImportDirective",
     "path": "@src/SizeViewData.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/SizeViewData.sol",
      "parts": [
       "@src/SizeViewData.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "DataView",
       null
      ],
      [
       "UserView",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "DataView"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "UserView"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/LoanLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/LoanLibrary.sol",
      "parts": [
       "@src/libraries/LoanLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "CreditPosition",
       null
      ],
      [
       "DebtPosition",
       null
      ],
      [
       "LoanStatus",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "CreditPosition"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "DebtPosition"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "LoanStatus"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/actions/Initialize.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/actions/Initialize.sol",
      "parts": [
       "@src/libraries/actions/Initialize.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "InitializeFeeConfigParams",
       null
      ],
      [
       "InitializeOracleParams",
       null
      ],
      [
       "InitializeRiskConfigParams",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "InitializeFeeConfigParams"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "InitializeOracleParams"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "InitializeRiskConfigParams"
       },
       null
      ]
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "ISizeView",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "collateralRatio",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "user",
         "identifier": {
          "type": "Identifier",
          "name": "user"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "isUserUnderwater",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "user",
         "identifier": {
          "type": "Identifier",
          "name": "user"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "isDebtPositionLiquidatable",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "debtPositionId",
         "identifier": {
          "type": "Identifier",
          "name": "debtPositionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "debtTokenAmountToCollateralTokenAmount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "borrowATokenAmount",
         "identifier": {
          "type": "Identifier",
          "name": "borrowATokenAmount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "feeConfig",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "InitializeFeeConfigParams"
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "riskConfig",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "InitializeRiskConfigParams"
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "oracle",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "InitializeOracleParams"
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "data",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "DataView"
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getUserView",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "user",
         "identifier": {
          "type": "Identifier",
          "name": "user"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "UserView"
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "isDebtPositionId",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "debtPositionId",
         "identifier": {
          "type": "Identifier",
          "name": "debtPositionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "isCreditPositionId",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "creditPositionId",
         "identifier": {
          "type": "Identifier",
          "name": "creditPositionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getDebtPosition",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "debtPositionId",
         "identifier": {
          "type": "Identifier",
          "name": "debtPositionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "DebtPosition"
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getCreditPosition",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "creditPositionId",
         "identifier": {
          "type": "Identifier",
          "name": "creditPositionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "CreditPosition"
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getLoanStatus",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "positionId",
         "identifier": {
          "type": "Identifier",
          "name": "positionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "LoanStatus"
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getPositionsCount",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getBorrowOfferAPR",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "borrower",
         "identifier": {
          "type": "Identifier",
          "name": "borrower"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "tenor",
         "identifier": {
          "type": "Identifier",
          "name": "tenor"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getLoanOfferAPR",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "lender",
         "identifier": {
          "type": "Identifier",
          "name": "lender"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "tenor",
         "identifier": {
          "type": "Identifier",
          "name": "tenor"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getDebtPositionAssignedCollateral",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "debtPositionId",
         "identifier": {
          "type": "Identifier",
          "name": "debtPositionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getSwapFee",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "cash",
         "identifier": {
          "type": "Identifier",
          "name": "cash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "tenor",
         "identifier": {
          "type": "Identifier",
          "name": "tenor"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-06-size/src/interfaces/ISizeAdmin.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.23"
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/actions/UpdateConfig.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/actions/UpdateConfig.sol",
      "parts": [
       "@src/libraries/actions/UpdateConfig.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "UpdateConfigParams",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "UpdateConfigParams"
       },
       null
      ]
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "ISizeAdmin",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "updateConfig",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "UpdateConfigParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setVariablePoolBorrowRate",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint128",
          "stateMutability": null
         },
         "name": "borrowRate",
         "identifier": {
          "type": "Identifier",
          "name": "borrowRate"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "pause",
       "parameters": [],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "unpause",
       "parameters": [],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-06-size/src/interfaces/ISize.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.23"
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/actions/SellCreditLimit.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/actions/SellCreditLimit.sol",
      "parts": [
       "@src/libraries/actions/SellCreditLimit.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "SellCreditLimitParams",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "SellCreditLimitParams"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/actions/SellCreditMarket.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/actions/SellCreditMarket.sol",
      "parts": [
       "@src/libraries/actions/SellCreditMarket.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "SellCreditMarketParams",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "SellCreditMarketParams"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/actions/Claim.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/actions/Claim.sol",
      "parts": [
       "@src/libraries/actions/Claim.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "ClaimParams",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "ClaimParams"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/actions/BuyCreditLimit.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/actions/BuyCreditLimit.sol",
      "parts": [
       "@src/libraries/actions/BuyCreditLimit.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "BuyCreditLimitParams",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "BuyCreditLimitParams"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/actions/Liquidate.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/actions/Liquidate.sol",
      "parts": [
       "@src/libraries/actions/Liquidate.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "LiquidateParams",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "LiquidateParams"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/actions/Deposit.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/actions/Deposit.sol",
      "parts": [
       "@src/libraries/actions/Deposit.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "DepositParams",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "DepositParams"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/actions/Withdraw.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/actions/Withdraw.sol",
      "parts": [
       "@src/libraries/actions/Withdraw.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "WithdrawParams",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "WithdrawParams"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/actions/LiquidateWithReplacement.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/actions/LiquidateWithReplacement.sol",
      "parts": [
       "@src/libraries/actions/LiquidateWithReplacement.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "LiquidateWithReplacementParams",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "LiquidateWithReplacementParams"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/actions/Repay.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/actions/Repay.sol",
      "parts": [
       "@src/libraries/actions/Repay.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "RepayParams",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "RepayParams"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/actions/SelfLiquidate.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/actions/SelfLiquidate.sol",
      "parts": [
       "@src/libraries/actions/SelfLiquidate.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "SelfLiquidateParams",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "SelfLiquidateParams"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/actions/Compensate.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/actions/Compensate.sol",
      "parts": [
       "@src/libraries/actions/Compensate.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "CompensateParams",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "CompensateParams"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/actions/Initialize.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/actions/Initialize.sol",
      "parts": [
       "@src/libraries/actions/Initialize.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "InitializeFeeConfigParams",
       null
      ],
      [
       "InitializeOracleParams",
       null
      ],
      [
       "InitializeRiskConfigParams",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "InitializeFeeConfigParams"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "InitializeOracleParams"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "InitializeRiskConfigParams"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/interfaces/IMulticall.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/interfaces/IMulticall.sol",
      "parts": [
       "@src/interfaces/IMulticall.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IMulticall",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IMulticall"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/interfaces/ISizeView.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/interfaces/ISizeView.sol",
      "parts": [
       "@src/interfaces/ISizeView.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "ISizeView",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "ISizeView"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/actions/BuyCreditMarket.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/actions/BuyCreditMarket.sol",
      "parts": [
       "@src/libraries/actions/BuyCreditMarket.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "BuyCreditMarketParams",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "BuyCreditMarketParams"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/actions/SetUserConfiguration.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/actions/SetUserConfiguration.sol",
      "parts": [
       "@src/libraries/actions/SetUserConfiguration.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "SetUserConfigurationParams",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "SetUserConfigurationParams"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/interfaces/ISizeAdmin.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/interfaces/ISizeAdmin.sol",
      "parts": [
       "@src/interfaces/ISizeAdmin.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "ISizeAdmin",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "ISizeAdmin"
       },
       null
      ]
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "ISize",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ISizeView"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ISizeAdmin"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "IMulticall"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "deposit",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "DepositParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "withdraw",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "WithdrawParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "buyCreditLimit",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "BuyCreditLimitParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "sellCreditLimit",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "SellCreditLimitParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "buyCreditMarket",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "BuyCreditMarketParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "sellCreditMarket",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "SellCreditMarketParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "repay",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "RepayParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "claim",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "ClaimParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "liquidate",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "LiquidateParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "liquidatorProfitCollateralToken",
         "identifier": {
          "type": "Identifier",
          "name": "liquidatorProfitCollateralToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "selfLiquidate",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "SelfLiquidateParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "liquidateWithReplacement",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "LiquidateWithReplacementParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "liquidatorProfitCollateralToken",
         "identifier": {
          "type": "Identifier",
          "name": "liquidatorProfitCollateralToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "liquidatorProfitBorrowToken",
         "identifier": {
          "type": "Identifier",
          "name": "liquidatorProfitBorrowToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "compensate",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "CompensateParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "setUserConfiguration",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "SetUserConfigurationParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-06-size/src/interfaces/IMulticall.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.23"
    },
    {
     "type": "ContractDefinition",
     "name": "IMulticall",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "multicall",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "bytes",
           "stateMutability": null
          },
          "length": null
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "bytes",
           "stateMutability": null
          },
          "length": null
         },
         "name": "results",
         "identifier": {
          "type": "Identifier",
          "name": "results"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-06-size/src/SizeViewData.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.23"
    },
    {
     "type": "ImportDirective",
     "path": "@aave/interfaces/IPool.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@aave/interfaces/IPool.sol",
      "parts": [
       "@aave/interfaces/IPool.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IPool",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IPool"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
      "parts": [
       "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IERC20Metadata",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IERC20Metadata"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/SizeStorage.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/SizeStorage.sol",
      "parts": [
       "@src/SizeStorage.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "User",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "User"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/token/NonTransferrableScaledToken.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/token/NonTransferrableScaledToken.sol",
      "parts": [
       "@src/token/NonTransferrableScaledToken.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "NonTransferrableScaledToken",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "NonTransferrableScaledToken"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/token/NonTransferrableToken.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/token/NonTransferrableToken.sol",
      "parts": [
       "@src/token/NonTransferrableToken.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "NonTransferrableToken",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "NonTransferrableToken"
       },
       null
      ]
     ]
    },
    {
     "type": "StructDefinition",
     "name": "UserView",
     "members": [
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "User"
       },
       "name": "user",
       "identifier": {
        "type": "Identifier",
        "name": "user"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "address",
        "stateMutability": null
       },
       "name": "account",
       "identifier": {
        "type": "Identifier",
        "name": "account"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "collateralTokenBalance",
       "identifier": {
        "type": "Identifier",
        "name": "collateralTokenBalance"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "borrowATokenBalance",
       "identifier": {
        "type": "Identifier",
        "name": "borrowATokenBalance"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "debtBalance",
       "identifier": {
        "type": "Identifier",
        "name": "debtBalance"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      }
     ]
    },
    {
     "type": "StructDefinition",
     "name": "DataView",
     "members": [
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "nextDebtPositionId",
       "identifier": {
        "type": "Identifier",
        "name": "nextDebtPositionId"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "nextCreditPositionId",
       "identifier": {
        "type": "Identifier",
        "name": "nextCreditPositionId"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "IERC20Metadata"
       },
       "name": "underlyingCollateralToken",
       "identifier": {
        "type": "Identifier",
        "name": "underlyingCollateralToken"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "IERC20Metadata"
       },
       "name": "underlyingBorrowToken",
       "identifier": {
        "type": "Identifier",
        "name": "underlyingBorrowToken"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "NonTransferrableToken"
       },
       "name": "collateralToken",
       "identifier": {
        "type": "Identifier",
        "name": "collateralToken"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "NonTransferrableScaledToken"
       },
       "name": "borrowAToken",
       "identifier": {
        "type": "Identifier",
        "name": "borrowAToken"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "NonTransferrableToken"
       },
       "name": "debtToken",
       "identifier": {
        "type": "Identifier",
        "name": "debtToken"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "IPool"
       },
       "name": "variablePool",
       "identifier": {
        "type": "Identifier",
        "name": "variablePool"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      }
     ]
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-06-size/src/SizeView.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.23"
    },
    {
     "type": "ImportDirective",
     "path": "@src/SizeStorage.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/SizeStorage.sol",
      "parts": [
       "@src/SizeStorage.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "SizeStorage",
       null
      ],
      [
       "State",
       null
      ],
      [
       "User",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "SizeStorage"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "State"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "User"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/YieldCurveLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/YieldCurveLibrary.sol",
      "parts": [
       "@src/libraries/YieldCurveLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "VariablePoolBorrowRateParams",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "VariablePoolBorrowRateParams"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/LoanLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/LoanLibrary.sol",
      "parts": [
       "@src/libraries/LoanLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "CREDIT_POSITION_ID_START",
       null
      ],
      [
       "CreditPosition",
       null
      ],
      [
       "DEBT_POSITION_ID_START",
       null
      ],
      [
       "DebtPosition",
       null
      ],
      [
       "LoanLibrary",
       null
      ],
      [
       "LoanStatus",
       null
      ],
      [
       "RESERVED_ID",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "CREDIT_POSITION_ID_START"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "CreditPosition"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "DEBT_POSITION_ID_START"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "DebtPosition"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "LoanLibrary"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "LoanStatus"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "RESERVED_ID"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/actions/UpdateConfig.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/actions/UpdateConfig.sol",
      "parts": [
       "@src/libraries/actions/UpdateConfig.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "UpdateConfig",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "UpdateConfig"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/AccountingLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/AccountingLibrary.sol",
      "parts": [
       "@src/libraries/AccountingLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "AccountingLibrary",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "AccountingLibrary"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/RiskLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/RiskLibrary.sol",
      "parts": [
       "@src/libraries/RiskLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "RiskLibrary",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "RiskLibrary"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/SizeViewData.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/SizeViewData.sol",
      "parts": [
       "@src/SizeViewData.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "DataView",
       null
      ],
      [
       "UserView",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "DataView"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "UserView"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/interfaces/ISizeView.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/interfaces/ISizeView.sol",
      "parts": [
       "@src/interfaces/ISizeView.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "ISizeView",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "ISizeView"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Errors.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Errors.sol",
      "parts": [
       "@src/libraries/Errors.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Errors",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Errors"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/OfferLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/OfferLibrary.sol",
      "parts": [
       "@src/libraries/OfferLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "BorrowOffer",
       null
      ],
      [
       "LoanOffer",
       null
      ],
      [
       "OfferLibrary",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "BorrowOffer"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "LoanOffer"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "OfferLibrary"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/actions/Initialize.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/actions/Initialize.sol",
      "parts": [
       "@src/libraries/actions/Initialize.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "InitializeDataParams",
       null
      ],
      [
       "InitializeFeeConfigParams",
       null
      ],
      [
       "InitializeOracleParams",
       null
      ],
      [
       "InitializeRiskConfigParams",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "InitializeDataParams"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "InitializeFeeConfigParams"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "InitializeOracleParams"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "InitializeRiskConfigParams"
       },
       null
      ]
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "SizeView",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "SizeStorage"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ISizeView"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "LoanOffer"
       },
       "libraryName": "OfferLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "BorrowOffer"
       },
       "libraryName": "OfferLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "DebtPosition"
       },
       "libraryName": "LoanLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "CreditPosition"
       },
       "libraryName": "LoanLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "LoanLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "RiskLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "AccountingLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "UpdateConfig",
       "functions": [],
       "operators": []
      },
      {
       "type": "FunctionDefinition",
       "name": "collateralRatio",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "user",
         "identifier": {
          "type": "Identifier",
          "name": "user"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "collateralRatio"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "user"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "isUserUnderwater",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "user",
         "identifier": {
          "type": "Identifier",
          "name": "user"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "isUserUnderwater"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "user"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "isDebtPositionLiquidatable",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "debtPositionId",
         "identifier": {
          "type": "Identifier",
          "name": "debtPositionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "isDebtPositionLiquidatable"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "debtPositionId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "debtTokenAmountToCollateralTokenAmount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "borrowATokenAmount",
         "identifier": {
          "type": "Identifier",
          "name": "borrowATokenAmount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "debtTokenAmountToCollateralTokenAmount"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "borrowATokenAmount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "feeConfig",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "InitializeFeeConfigParams"
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "feeConfigParams"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "riskConfig",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "InitializeRiskConfigParams"
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "riskConfigParams"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "oracle",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "InitializeOracleParams"
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "oracleParams"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "data",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "DataView"
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "DataView"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "nextDebtPositionId"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "nextCreditPositionId"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "underlyingCollateralToken"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "underlyingBorrowToken"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "variablePool"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "collateralToken"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "borrowAToken"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "debtToken"
            }
           ],
           "names": [
            "nextDebtPositionId",
            "nextCreditPositionId",
            "underlyingCollateralToken",
            "underlyingBorrowToken",
            "variablePool",
            "collateralToken",
            "borrowAToken",
            "debtToken"
           ],
           "identifiers": [
            {
             "type": "Identifier",
             "name": "nextDebtPositionId"
            },
            {
             "type": "Identifier",
             "name": "nextCreditPositionId"
            },
            {
             "type": "Identifier",
             "name": "underlyingCollateralToken"
            },
            {
             "type": "Identifier",
             "name": "underlyingBorrowToken"
            },
            {
             "type": "Identifier",
             "name": "variablePool"
            },
            {
             "type": "Identifier",
             "name": "collateralToken"
            },
            {
             "type": "Identifier",
             "name": "borrowAToken"
            },
            {
             "type": "Identifier",
             "name": "debtToken"
            }
           ]
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getUserView",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "user",
         "identifier": {
          "type": "Identifier",
          "name": "user"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "UserView"
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "UserView"
           },
           "arguments": [
            {
             "type": "IndexAccess",
             "base": {
              "type": "MemberAccess",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "state"
               },
               "memberName": "data"
              },
              "memberName": "users"
             },
             "index": {
              "type": "Identifier",
              "name": "user"
             }
            },
            {
             "type": "Identifier",
             "name": "user"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "data"
               },
               "memberName": "collateralToken"
              },
              "memberName": "balanceOf"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "user"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "data"
               },
               "memberName": "borrowAToken"
              },
              "memberName": "balanceOf"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "user"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "data"
               },
               "memberName": "debtToken"
              },
              "memberName": "balanceOf"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "user"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [
            "user",
            "account",
            "collateralTokenBalance",
            "borrowATokenBalance",
            "debtBalance"
           ],
           "identifiers": [
            {
             "type": "Identifier",
             "name": "user"
            },
            {
             "type": "Identifier",
             "name": "account"
            },
            {
             "type": "Identifier",
             "name": "collateralTokenBalance"
            },
            {
             "type": "Identifier",
             "name": "borrowATokenBalance"
            },
            {
             "type": "Identifier",
             "name": "debtBalance"
            }
           ]
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "isDebtPositionId",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "debtPositionId",
         "identifier": {
          "type": "Identifier",
          "name": "debtPositionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "isDebtPositionId"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "debtPositionId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "isCreditPositionId",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "creditPositionId",
         "identifier": {
          "type": "Identifier",
          "name": "creditPositionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "isCreditPositionId"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "creditPositionId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getDebtPosition",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "debtPositionId",
         "identifier": {
          "type": "Identifier",
          "name": "debtPositionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "DebtPosition"
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "getDebtPosition"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "debtPositionId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getCreditPosition",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "creditPositionId",
         "identifier": {
          "type": "Identifier",
          "name": "creditPositionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "CreditPosition"
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "getCreditPosition"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "creditPositionId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getLoanStatus",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "positionId",
         "identifier": {
          "type": "Identifier",
          "name": "positionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "LoanStatus"
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "getLoanStatus"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "positionId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getPositionsCount",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "TupleExpression",
           "components": [
            {
             "type": "BinaryOperation",
             "operator": "-",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "state"
               },
               "memberName": "data"
              },
              "memberName": "nextDebtPositionId"
             },
             "right": {
              "type": "Identifier",
              "name": "DEBT_POSITION_ID_START"
             }
            },
            {
             "type": "BinaryOperation",
             "operator": "-",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "state"
               },
               "memberName": "data"
              },
              "memberName": "nextCreditPositionId"
             },
             "right": {
              "type": "Identifier",
              "name": "CREDIT_POSITION_ID_START"
             }
            }
           ],
           "isArray": false
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getBorrowOfferAPR",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "borrower",
         "identifier": {
          "type": "Identifier",
          "name": "borrower"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "tenor",
         "identifier": {
          "type": "Identifier",
          "name": "tenor"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "BorrowOffer"
            },
            "name": "offer",
            "identifier": {
             "type": "Identifier",
             "name": "offer"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "IndexAccess",
            "base": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "users"
            },
            "index": {
             "type": "Identifier",
             "name": "borrower"
            }
           },
           "memberName": "borrowOffer"
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "offer"
            },
            "memberName": "isNull"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "NULL_OFFER"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "offer"
            },
            "memberName": "getAPRByTenor"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "VariablePoolBorrowRateParams"
             },
             "arguments": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "oracle"
               },
               "memberName": "variablePoolBorrowRate"
              },
              {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "oracle"
               },
               "memberName": "variablePoolBorrowRateUpdatedAt"
              },
              {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "oracle"
               },
               "memberName": "variablePoolBorrowRateStaleRateInterval"
              }
             ],
             "names": [
              "variablePoolBorrowRate",
              "variablePoolBorrowRateUpdatedAt",
              "variablePoolBorrowRateStaleRateInterval"
             ],
             "identifiers": [
              {
               "type": "Identifier",
               "name": "variablePoolBorrowRate"
              },
              {
               "type": "Identifier",
               "name": "variablePoolBorrowRateUpdatedAt"
              },
              {
               "type": "Identifier",
               "name": "variablePoolBorrowRateStaleRateInterval"
              }
             ]
            },
            {
             "type": "Identifier",
             "name": "tenor"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getLoanOfferAPR",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "lender",
         "identifier": {
          "type": "Identifier",
          "name": "lender"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "tenor",
         "identifier": {
          "type": "Identifier",
          "name": "tenor"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "LoanOffer"
            },
            "name": "offer",
            "identifier": {
             "type": "Identifier",
             "name": "offer"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "IndexAccess",
            "base": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "state"
              },
              "memberName": "data"
             },
             "memberName": "users"
            },
            "index": {
             "type": "Identifier",
             "name": "lender"
            }
           },
           "memberName": "loanOffer"
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "offer"
            },
            "memberName": "isNull"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "NULL_OFFER"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "offer"
            },
            "memberName": "getAPRByTenor"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "VariablePoolBorrowRateParams"
             },
             "arguments": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "oracle"
               },
               "memberName": "variablePoolBorrowRate"
              },
              {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "oracle"
               },
               "memberName": "variablePoolBorrowRateUpdatedAt"
              },
              {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "state"
                },
                "memberName": "oracle"
               },
               "memberName": "variablePoolBorrowRateStaleRateInterval"
              }
             ],
             "names": [
              "variablePoolBorrowRate",
              "variablePoolBorrowRateUpdatedAt",
              "variablePoolBorrowRateStaleRateInterval"
             ],
             "identifiers": [
              {
               "type": "Identifier",
               "name": "variablePoolBorrowRate"
              },
              {
               "type": "Identifier",
               "name": "variablePoolBorrowRateUpdatedAt"
              },
              {
               "type": "Identifier",
               "name": "variablePoolBorrowRateStaleRateInterval"
              }
             ]
            },
            {
             "type": "Identifier",
             "name": "tenor"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getDebtPositionAssignedCollateral",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "debtPositionId",
         "identifier": {
          "type": "Identifier",
          "name": "debtPositionId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "DebtPosition"
            },
            "name": "debtPosition",
            "identifier": {
             "type": "Identifier",
             "name": "debtPosition"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "getDebtPosition"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "debtPositionId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "getDebtPositionAssignedCollateral"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "debtPosition"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getSwapFee",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "cash",
         "identifier": {
          "type": "Identifier",
          "name": "cash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "tenor",
         "identifier": {
          "type": "Identifier",
          "name": "tenor"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "tenor"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "Errors"
               },
               "memberName": "NULL_TENOR"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "getSwapFee"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "cash"
            },
            {
             "type": "Identifier",
             "name": "tenor"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "abstract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-06-size/src/SizeStorage.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.23"
    },
    {
     "type": "ImportDirective",
     "path": "@aave/interfaces/IPool.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@aave/interfaces/IPool.sol",
      "parts": [
       "@aave/interfaces/IPool.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IPool",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IPool"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
      "parts": [
       "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IERC20Metadata",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IERC20Metadata"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/interfaces/IWETH.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/interfaces/IWETH.sol",
      "parts": [
       "@src/interfaces/IWETH.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IWETH",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IWETH"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/LoanLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/LoanLibrary.sol",
      "parts": [
       "@src/libraries/LoanLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "CreditPosition",
       null
      ],
      [
       "DebtPosition",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "CreditPosition"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "DebtPosition"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/OfferLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/OfferLibrary.sol",
      "parts": [
       "@src/libraries/OfferLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "BorrowOffer",
       null
      ],
      [
       "LoanOffer",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "BorrowOffer"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "LoanOffer"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/oracle/IPriceFeed.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/oracle/IPriceFeed.sol",
      "parts": [
       "@src/oracle/IPriceFeed.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IPriceFeed",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IPriceFeed"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/token/NonTransferrableScaledToken.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/token/NonTransferrableScaledToken.sol",
      "parts": [
       "@src/token/NonTransferrableScaledToken.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "NonTransferrableScaledToken",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "NonTransferrableScaledToken"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/token/NonTransferrableToken.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/token/NonTransferrableToken.sol",
      "parts": [
       "@src/token/NonTransferrableToken.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "NonTransferrableToken",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "NonTransferrableToken"
       },
       null
      ]
     ]
    },
    {
     "type": "StructDefinition",
     "name": "User",
     "members": [
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "LoanOffer"
       },
       "name": "loanOffer",
       "identifier": {
        "type": "Identifier",
        "name": "loanOffer"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "BorrowOffer"
       },
       "name": "borrowOffer",
       "identifier": {
        "type": "Identifier",
        "name": "borrowOffer"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "openingLimitBorrowCR",
       "identifier": {
        "type": "Identifier",
        "name": "openingLimitBorrowCR"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "bool",
        "stateMutability": null
       },
       "name": "allCreditPositionsForSaleDisabled",
       "identifier": {
        "type": "Identifier",
        "name": "allCreditPositionsForSaleDisabled"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      }
     ]
    },
    {
     "type": "StructDefinition",
     "name": "FeeConfig",
     "members": [
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "swapFeeAPR",
       "identifier": {
        "type": "Identifier",
        "name": "swapFeeAPR"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "fragmentationFee",
       "identifier": {
        "type": "Identifier",
        "name": "fragmentationFee"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "liquidationRewardPercent",
       "identifier": {
        "type": "Identifier",
        "name": "liquidationRewardPercent"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "overdueCollateralProtocolPercent",
       "identifier": {
        "type": "Identifier",
        "name": "overdueCollateralProtocolPercent"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "collateralProtocolPercent",
       "identifier": {
        "type": "Identifier",
        "name": "collateralProtocolPercent"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "address",
        "stateMutability": null
       },
       "name": "feeRecipient",
       "identifier": {
        "type": "Identifier",
        "name": "feeRecipient"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      }
     ]
    },
    {
     "type": "StructDefinition",
     "name": "RiskConfig",
     "members": [
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "crOpening",
       "identifier": {
        "type": "Identifier",
        "name": "crOpening"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "crLiquidation",
       "identifier": {
        "type": "Identifier",
        "name": "crLiquidation"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "minimumCreditBorrowAToken",
       "identifier": {
        "type": "Identifier",
        "name": "minimumCreditBorrowAToken"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "borrowATokenCap",
       "identifier": {
        "type": "Identifier",
        "name": "borrowATokenCap"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "minTenor",
       "identifier": {
        "type": "Identifier",
        "name": "minTenor"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "maxTenor",
       "identifier": {
        "type": "Identifier",
        "name": "maxTenor"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      }
     ]
    },
    {
     "type": "StructDefinition",
     "name": "Oracle",
     "members": [
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "IPriceFeed"
       },
       "name": "priceFeed",
       "identifier": {
        "type": "Identifier",
        "name": "priceFeed"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint128",
        "stateMutability": null
       },
       "name": "variablePoolBorrowRate",
       "identifier": {
        "type": "Identifier",
        "name": "variablePoolBorrowRate"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint64",
        "stateMutability": null
       },
       "name": "variablePoolBorrowRateUpdatedAt",
       "identifier": {
        "type": "Identifier",
        "name": "variablePoolBorrowRateUpdatedAt"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint64",
        "stateMutability": null
       },
       "name": "variablePoolBorrowRateStaleRateInterval",
       "identifier": {
        "type": "Identifier",
        "name": "variablePoolBorrowRateStaleRateInterval"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      }
     ]
    },
    {
     "type": "StructDefinition",
     "name": "Data",
     "members": [
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "Mapping",
        "keyType": {
         "type": "ElementaryTypeName",
         "name": "address",
         "stateMutability": null
        },
        "keyName": null,
        "valueType": {
         "type": "UserDefinedTypeName",
         "namePath": "User"
        },
        "valueName": null
       },
       "name": "users",
       "identifier": {
        "type": "Identifier",
        "name": "users"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "Mapping",
        "keyType": {
         "type": "ElementaryTypeName",
         "name": "uint256",
         "stateMutability": null
        },
        "keyName": null,
        "valueType": {
         "type": "UserDefinedTypeName",
         "namePath": "DebtPosition"
        },
        "valueName": null
       },
       "name": "debtPositions",
       "identifier": {
        "type": "Identifier",
        "name": "debtPositions"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "Mapping",
        "keyType": {
         "type": "ElementaryTypeName",
         "name": "uint256",
         "stateMutability": null
        },
        "keyName": null,
        "valueType": {
         "type": "UserDefinedTypeName",
         "namePath": "CreditPosition"
        },
        "valueName": null
       },
       "name": "creditPositions",
       "identifier": {
        "type": "Identifier",
        "name": "creditPositions"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "nextDebtPositionId",
       "identifier": {
        "type": "Identifier",
        "name": "nextDebtPositionId"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "nextCreditPositionId",
       "identifier": {
        "type": "Identifier",
        "name": "nextCreditPositionId"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "IWETH"
       },
       "name": "weth",
       "identifier": {
        "type": "Identifier",
        "name": "weth"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "IERC20Metadata"
       },
       "name": "underlyingCollateralToken",
       "identifier": {
        "type": "Identifier",
        "name": "underlyingCollateralToken"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "IERC20Metadata"
       },
       "name": "underlyingBorrowToken",
       "identifier": {
        "type": "Identifier",
        "name": "underlyingBorrowToken"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "NonTransferrableToken"
       },
       "name": "collateralToken",
       "identifier": {
        "type": "Identifier",
        "name": "collateralToken"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "NonTransferrableScaledToken"
       },
       "name": "borrowAToken",
       "identifier": {
        "type": "Identifier",
        "name": "borrowAToken"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "NonTransferrableToken"
       },
       "name": "debtToken",
       "identifier": {
        "type": "Identifier",
        "name": "debtToken"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "IPool"
       },
       "name": "variablePool",
       "identifier": {
        "type": "Identifier",
        "name": "variablePool"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "bool",
        "stateMutability": null
       },
       "name": "isMulticall",
       "identifier": {
        "type": "Identifier",
        "name": "isMulticall"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      }
     ]
    },
    {
     "type": "StructDefinition",
     "name": "State",
     "members": [
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "FeeConfig"
       },
       "name": "feeConfig",
       "identifier": {
        "type": "Identifier",
        "name": "feeConfig"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "RiskConfig"
       },
       "name": "riskConfig",
       "identifier": {
        "type": "Identifier",
        "name": "riskConfig"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "Oracle"
       },
       "name": "oracle",
       "identifier": {
        "type": "Identifier",
        "name": "oracle"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "Data"
       },
       "name": "data",
       "identifier": {
        "type": "Identifier",
        "name": "data"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      }
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "SizeStorage",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "State"
         },
         "name": "state",
         "identifier": {
          "type": "Identifier",
          "name": "state"
         },
         "expression": null,
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      }
     ],
     "kind": "abstract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/code4renas/projects/2024-06-size/src/Size.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.23"
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
      "parts": [
       "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "AccessControlUpgradeable",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "AccessControlUpgradeable"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
      "parts": [
       "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Initializable",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Initializable"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
      "parts": [
       "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "UUPSUpgradeable",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "UUPSUpgradeable"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
      "parts": [
       "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "PausableUpgradeable",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "PausableUpgradeable"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/LoanLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/LoanLibrary.sol",
      "parts": [
       "@src/libraries/LoanLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "RESERVED_ID",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "RESERVED_ID"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/actions/Initialize.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/actions/Initialize.sol",
      "parts": [
       "@src/libraries/actions/Initialize.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Initialize",
       null
      ],
      [
       "InitializeDataParams",
       null
      ],
      [
       "InitializeFeeConfigParams",
       null
      ],
      [
       "InitializeOracleParams",
       null
      ],
      [
       "InitializeRiskConfigParams",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Initialize"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "InitializeDataParams"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "InitializeFeeConfigParams"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "InitializeOracleParams"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "InitializeRiskConfigParams"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/actions/UpdateConfig.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/actions/UpdateConfig.sol",
      "parts": [
       "@src/libraries/actions/UpdateConfig.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "UpdateConfig",
       null
      ],
      [
       "UpdateConfigParams",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "UpdateConfig"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "UpdateConfigParams"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/actions/SellCreditLimit.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/actions/SellCreditLimit.sol",
      "parts": [
       "@src/libraries/actions/SellCreditLimit.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "SellCreditLimit",
       null
      ],
      [
       "SellCreditLimitParams",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "SellCreditLimit"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "SellCreditLimitParams"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/actions/SellCreditMarket.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/actions/SellCreditMarket.sol",
      "parts": [
       "@src/libraries/actions/SellCreditMarket.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "SellCreditMarket",
       null
      ],
      [
       "SellCreditMarketParams",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "SellCreditMarket"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "SellCreditMarketParams"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/actions/Claim.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/actions/Claim.sol",
      "parts": [
       "@src/libraries/actions/Claim.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Claim",
       null
      ],
      [
       "ClaimParams",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Claim"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "ClaimParams"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/actions/Deposit.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/actions/Deposit.sol",
      "parts": [
       "@src/libraries/actions/Deposit.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Deposit",
       null
      ],
      [
       "DepositParams",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Deposit"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "DepositParams"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/actions/BuyCreditMarket.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/actions/BuyCreditMarket.sol",
      "parts": [
       "@src/libraries/actions/BuyCreditMarket.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "BuyCreditMarket",
       null
      ],
      [
       "BuyCreditMarketParams",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "BuyCreditMarket"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "BuyCreditMarketParams"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/actions/SetUserConfiguration.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/actions/SetUserConfiguration.sol",
      "parts": [
       "@src/libraries/actions/SetUserConfiguration.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "SetUserConfiguration",
       null
      ],
      [
       "SetUserConfigurationParams",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "SetUserConfiguration"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "SetUserConfigurationParams"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/actions/BuyCreditLimit.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/actions/BuyCreditLimit.sol",
      "parts": [
       "@src/libraries/actions/BuyCreditLimit.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "BuyCreditLimit",
       null
      ],
      [
       "BuyCreditLimitParams",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "BuyCreditLimit"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "BuyCreditLimitParams"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/actions/Liquidate.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/actions/Liquidate.sol",
      "parts": [
       "@src/libraries/actions/Liquidate.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Liquidate",
       null
      ],
      [
       "LiquidateParams",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Liquidate"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "LiquidateParams"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Multicall.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Multicall.sol",
      "parts": [
       "@src/libraries/Multicall.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Multicall",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Multicall"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/actions/Compensate.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/actions/Compensate.sol",
      "parts": [
       "@src/libraries/actions/Compensate.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Compensate",
       null
      ],
      [
       "CompensateParams",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Compensate"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "CompensateParams"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/actions/LiquidateWithReplacement.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/actions/LiquidateWithReplacement.sol",
      "parts": [
       "@src/libraries/actions/LiquidateWithReplacement.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "LiquidateWithReplacement",
       null
      ],
      [
       "LiquidateWithReplacementParams",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "LiquidateWithReplacement"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "LiquidateWithReplacementParams"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/actions/Repay.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/actions/Repay.sol",
      "parts": [
       "@src/libraries/actions/Repay.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Repay",
       null
      ],
      [
       "RepayParams",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Repay"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "RepayParams"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/actions/SelfLiquidate.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/actions/SelfLiquidate.sol",
      "parts": [
       "@src/libraries/actions/SelfLiquidate.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "SelfLiquidate",
       null
      ],
      [
       "SelfLiquidateParams",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "SelfLiquidate"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "SelfLiquidateParams"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/actions/Withdraw.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/actions/Withdraw.sol",
      "parts": [
       "@src/libraries/actions/Withdraw.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Withdraw",
       null
      ],
      [
       "WithdrawParams",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Withdraw"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "WithdrawParams"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/SizeStorage.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/SizeStorage.sol",
      "parts": [
       "@src/SizeStorage.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "State",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "State"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/CapsLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/CapsLibrary.sol",
      "parts": [
       "@src/libraries/CapsLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "CapsLibrary",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "CapsLibrary"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/RiskLibrary.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/RiskLibrary.sol",
      "parts": [
       "@src/libraries/RiskLibrary.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "RiskLibrary",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "RiskLibrary"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/SizeView.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/SizeView.sol",
      "parts": [
       "@src/SizeView.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "SizeView",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "SizeView"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/libraries/Events.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/libraries/Events.sol",
      "parts": [
       "@src/libraries/Events.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Events",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Events"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/interfaces/IMulticall.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/interfaces/IMulticall.sol",
      "parts": [
       "@src/interfaces/IMulticall.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "IMulticall",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "IMulticall"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/interfaces/ISize.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/interfaces/ISize.sol",
      "parts": [
       "@src/interfaces/ISize.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "ISize",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "ISize"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "@src/interfaces/ISizeAdmin.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@src/interfaces/ISizeAdmin.sol",
      "parts": [
       "@src/interfaces/ISizeAdmin.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "ISizeAdmin",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "ISizeAdmin"
       },
       null
      ]
     ]
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "bytes32",
      "stateMutability": null
     },
     "name": "KEEPER_ROLE",
     "initialValue": {
      "type": "FunctionCall",
      "expression": {
       "type": "Identifier",
       "name": "keccak256"
      },
      "arguments": [
       {
        "type": "StringLiteral",
        "value": "KEEPER_ROLE",
        "parts": [
         "KEEPER_ROLE"
        ],
        "isUnicode": [
         false
        ]
       }
      ],
      "names": [],
      "identifiers": []
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "bytes32",
      "stateMutability": null
     },
     "name": "PAUSER_ROLE",
     "initialValue": {
      "type": "FunctionCall",
      "expression": {
       "type": "Identifier",
       "name": "keccak256"
      },
      "arguments": [
       {
        "type": "StringLiteral",
        "value": "PAUSER_ROLE",
        "parts": [
         "PAUSER_ROLE"
        ],
        "isUnicode": [
         false
        ]
       }
      ],
      "names": [],
      "identifiers": []
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "bytes32",
      "stateMutability": null
     },
     "name": "BORROW_RATE_UPDATER_ROLE",
     "initialValue": {
      "type": "FunctionCall",
      "expression": {
       "type": "Identifier",
       "name": "keccak256"
      },
      "arguments": [
       {
        "type": "StringLiteral",
        "value": "BORROW_RATE_UPDATER_ROLE",
        "parts": [
         "BORROW_RATE_UPDATER_ROLE"
        ],
        "isUnicode": [
         false
        ]
       }
      ],
      "names": [],
      "identifiers": []
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "ContractDefinition",
     "name": "Size",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ISize"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "SizeView"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "Initializable"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "AccessControlUpgradeable"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "PausableUpgradeable"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "UUPSUpgradeable"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "Initialize",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "UpdateConfig",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "Deposit",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "Withdraw",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "SellCreditMarket",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "SellCreditLimit",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "BuyCreditMarket",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "BuyCreditLimit",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "Repay",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "Claim",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "Liquidate",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "SelfLiquidate",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "LiquidateWithReplacement",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "Compensate",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "SetUserConfiguration",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "RiskLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "CapsLibrary",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "State"
       },
       "libraryName": "Multicall",
       "functions": [],
       "operators": []
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_disableInitializers"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "default",
       "modifiers": [],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "initialize",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "owner",
         "identifier": {
          "type": "Identifier",
          "name": "owner"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "InitializeFeeConfigParams"
         },
         "name": "f",
         "identifier": {
          "type": "Identifier",
          "name": "f"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "InitializeRiskConfigParams"
         },
         "name": "r",
         "identifier": {
          "type": "Identifier",
          "name": "r"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "InitializeOracleParams"
         },
         "name": "o",
         "identifier": {
          "type": "Identifier",
          "name": "o"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "InitializeDataParams"
         },
         "name": "d",
         "identifier": {
          "type": "Identifier",
          "name": "d"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "validateInitialize"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "owner"
            },
            {
             "type": "Identifier",
             "name": "f"
            },
            {
             "type": "Identifier",
             "name": "r"
            },
            {
             "type": "Identifier",
             "name": "o"
            },
            {
             "type": "Identifier",
             "name": "d"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "__AccessControl_init"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "__Pausable_init"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "__UUPSUpgradeable_init"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "executeInitialize"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "f"
            },
            {
             "type": "Identifier",
             "name": "r"
            },
            {
             "type": "Identifier",
             "name": "o"
            },
            {
             "type": "Identifier",
             "name": "d"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_grantRole"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "DEFAULT_ADMIN_ROLE"
            },
            {
             "type": "Identifier",
             "name": "owner"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_grantRole"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "PAUSER_ROLE"
            },
            {
             "type": "Identifier",
             "name": "owner"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_grantRole"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "KEEPER_ROLE"
            },
            {
             "type": "Identifier",
             "name": "owner"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_grantRole"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "BORROW_RATE_UPDATER_ROLE"
            },
            {
             "type": "Identifier",
             "name": "owner"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "initializer",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_authorizeUpgrade",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "newImplementation",
         "identifier": {
          "type": "Identifier",
          "name": "newImplementation"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": []
       },
       "visibility": "internal",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyRole",
         "arguments": [
          {
           "type": "Identifier",
           "name": "DEFAULT_ADMIN_ROLE"
          }
         ]
        }
       ],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "updateConfig",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "UpdateConfigParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "validateUpdateConfig"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "params"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "executeUpdateConfig"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "params"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyRole",
         "arguments": [
          {
           "type": "Identifier",
           "name": "DEFAULT_ADMIN_ROLE"
          }
         ]
        }
       ],
       "override": [
        {
         "type": "UserDefinedTypeName",
         "namePath": "ISizeAdmin"
        }
       ],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setVariablePoolBorrowRate",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint128",
          "stateMutability": null
         },
         "name": "borrowRate",
         "identifier": {
          "type": "Identifier",
          "name": "borrowRate"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint128",
             "stateMutability": null
            },
            "name": "oldBorrowRate",
            "identifier": {
             "type": "Identifier",
             "name": "oldBorrowRate"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "oracle"
           },
           "memberName": "variablePoolBorrowRate"
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "oracle"
            },
            "memberName": "variablePoolBorrowRate"
           },
           "right": {
            "type": "Identifier",
            "name": "borrowRate"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "oracle"
            },
            "memberName": "variablePoolBorrowRateUpdatedAt"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "ElementaryTypeName",
             "name": "uint64",
             "stateMutability": null
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "block"
              },
              "memberName": "timestamp"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "Events"
            },
            "memberName": "VariablePoolBorrowRateUpdated"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "oldBorrowRate"
            },
            {
             "type": "Identifier",
             "name": "borrowRate"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyRole",
         "arguments": [
          {
           "type": "Identifier",
           "name": "BORROW_RATE_UPDATER_ROLE"
          }
         ]
        }
       ],
       "override": [
        {
         "type": "UserDefinedTypeName",
         "namePath": "ISizeAdmin"
        }
       ],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "pause",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_pause"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyRole",
         "arguments": [
          {
           "type": "Identifier",
           "name": "PAUSER_ROLE"
          }
         ]
        }
       ],
       "override": [
        {
         "type": "UserDefinedTypeName",
         "namePath": "ISizeAdmin"
        }
       ],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "unpause",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_unpause"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyRole",
         "arguments": [
          {
           "type": "Identifier",
           "name": "PAUSER_ROLE"
          }
         ]
        }
       ],
       "override": [
        {
         "type": "UserDefinedTypeName",
         "namePath": "ISizeAdmin"
        }
       ],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "multicall",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "bytes",
           "stateMutability": null
          },
          "length": null
         },
         "name": "_data",
         "identifier": {
          "type": "Identifier",
          "name": "_data"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "bytes",
           "stateMutability": null
          },
          "length": null
         },
         "name": "results",
         "identifier": {
          "type": "Identifier",
          "name": "results"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "results"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "multicall"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_data"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "whenNotPaused",
         "arguments": null
        }
       ],
       "override": [
        {
         "type": "UserDefinedTypeName",
         "namePath": "IMulticall"
        }
       ],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "deposit",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "DepositParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "validateDeposit"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "params"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "executeDeposit"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "params"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "whenNotPaused",
         "arguments": null
        }
       ],
       "override": [
        {
         "type": "UserDefinedTypeName",
         "namePath": "ISize"
        }
       ],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "withdraw",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "WithdrawParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "validateWithdraw"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "params"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "executeWithdraw"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "params"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "validateUserIsNotBelowOpeningLimitBorrowCR"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "whenNotPaused",
         "arguments": null
        }
       ],
       "override": [
        {
         "type": "UserDefinedTypeName",
         "namePath": "ISize"
        }
       ],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "buyCreditLimit",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "BuyCreditLimitParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "validateBuyCreditLimit"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "params"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "executeBuyCreditLimit"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "params"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "whenNotPaused",
         "arguments": null
        }
       ],
       "override": [
        {
         "type": "UserDefinedTypeName",
         "namePath": "ISize"
        }
       ],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "sellCreditLimit",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "SellCreditLimitParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "validateSellCreditLimit"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "params"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "executeSellCreditLimit"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "params"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "whenNotPaused",
         "arguments": null
        }
       ],
       "override": [
        {
         "type": "UserDefinedTypeName",
         "namePath": "ISize"
        }
       ],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "buyCreditMarket",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "BuyCreditMarketParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "validateBuyCreditMarket"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "params"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "amount",
            "identifier": {
             "type": "Identifier",
             "name": "amount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "executeBuyCreditMarket"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "params"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "params"
            },
            "memberName": "creditPositionId"
           },
           "right": {
            "type": "Identifier",
            "name": "RESERVED_ID"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "state"
               },
               "memberName": "validateUserIsNotBelowOpeningLimitBorrowCR"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "params"
                },
                "memberName": "borrower"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "validateVariablePoolHasEnoughLiquidity"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "whenNotPaused",
         "arguments": null
        }
       ],
       "override": [
        {
         "type": "UserDefinedTypeName",
         "namePath": "ISize"
        }
       ],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "sellCreditMarket",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "SellCreditMarketParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "validateSellCreditMarket"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "params"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "amount",
            "identifier": {
             "type": "Identifier",
             "name": "amount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "executeSellCreditMarket"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "params"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "params"
            },
            "memberName": "creditPositionId"
           },
           "right": {
            "type": "Identifier",
            "name": "RESERVED_ID"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "state"
               },
               "memberName": "validateUserIsNotBelowOpeningLimitBorrowCR"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "msg"
                },
                "memberName": "sender"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "validateVariablePoolHasEnoughLiquidity"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "whenNotPaused",
         "arguments": null
        }
       ],
       "override": [
        {
         "type": "UserDefinedTypeName",
         "namePath": "ISize"
        }
       ],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "repay",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "RepayParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "validateRepay"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "params"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "executeRepay"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "params"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "whenNotPaused",
         "arguments": null
        }
       ],
       "override": [
        {
         "type": "UserDefinedTypeName",
         "namePath": "ISize"
        }
       ],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "claim",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "ClaimParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "validateClaim"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "params"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "executeClaim"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "params"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "whenNotPaused",
         "arguments": null
        }
       ],
       "override": [
        {
         "type": "UserDefinedTypeName",
         "namePath": "ISize"
        }
       ],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "liquidate",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "LiquidateParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "liquidatorProfitCollateralToken",
         "identifier": {
          "type": "Identifier",
          "name": "liquidatorProfitCollateralToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "validateLiquidate"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "params"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "liquidatorProfitCollateralToken"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "executeLiquidate"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "params"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "validateMinimumCollateralProfit"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "params"
            },
            {
             "type": "Identifier",
             "name": "liquidatorProfitCollateralToken"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "whenNotPaused",
         "arguments": null
        }
       ],
       "override": [
        {
         "type": "UserDefinedTypeName",
         "namePath": "ISize"
        }
       ],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "selfLiquidate",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "SelfLiquidateParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "validateSelfLiquidate"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "params"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "executeSelfLiquidate"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "params"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "whenNotPaused",
         "arguments": null
        }
       ],
       "override": [
        {
         "type": "UserDefinedTypeName",
         "namePath": "ISize"
        }
       ],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "liquidateWithReplacement",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "LiquidateWithReplacementParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "liquidatorProfitCollateralToken",
         "identifier": {
          "type": "Identifier",
          "name": "liquidatorProfitCollateralToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "liquidatorProfitBorrowToken",
         "identifier": {
          "type": "Identifier",
          "name": "liquidatorProfitBorrowToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "validateLiquidateWithReplacement"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "params"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "amount",
            "identifier": {
             "type": "Identifier",
             "name": "amount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "TupleExpression",
            "components": [
             {
              "type": "Identifier",
              "name": "amount"
             },
             {
              "type": "Identifier",
              "name": "liquidatorProfitCollateralToken"
             },
             {
              "type": "Identifier",
              "name": "liquidatorProfitBorrowToken"
             }
            ],
            "isArray": false
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "state"
             },
             "memberName": "executeLiquidateWithReplacement"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "params"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "validateUserIsNotBelowOpeningLimitBorrowCR"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "params"
             },
             "memberName": "borrower"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "validateMinimumCollateralProfit"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "params"
            },
            {
             "type": "Identifier",
             "name": "liquidatorProfitCollateralToken"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "validateVariablePoolHasEnoughLiquidity"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "whenNotPaused",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "onlyRole",
         "arguments": [
          {
           "type": "Identifier",
           "name": "KEEPER_ROLE"
          }
         ]
        }
       ],
       "override": [
        {
         "type": "UserDefinedTypeName",
         "namePath": "ISize"
        }
       ],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "compensate",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "CompensateParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "validateCompensate"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "params"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "executeCompensate"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "params"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "validateUserIsNotUnderwater"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "whenNotPaused",
         "arguments": null
        }
       ],
       "override": [
        {
         "type": "UserDefinedTypeName",
         "namePath": "ISize"
        }
       ],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "setUserConfiguration",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "SetUserConfigurationParams"
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "validateSetUserConfiguration"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "params"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "state"
            },
            "memberName": "executeSetUserConfiguration"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "params"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "whenNotPaused",
         "arguments": null
        }
       ],
       "override": [
        {
         "type": "UserDefinedTypeName",
         "namePath": "ISize"
        }
       ],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 }
]