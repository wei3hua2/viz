[
    {
        "id": "arXiv:2407.07922",
        "title": "Vulnerability Detection in Smart Contracts: A Comprehensive Survey",
        "year": 2024,
        "tags": ["survey"]
    },
    {
        "id":"10.1145/3597503.3639173", 
        "title":"Improving Smart Contract Security with Contrastive Learning-based Vulnerability Detection",
        "year": 2024,
        "tags":["cl"],
        "source_code": "https://github.com/chenpp1881/Clear"
    },
    {
        "id":"10.1016/j.bcra.2024.100209",
        "title":"An interpretable model for large-scale smart contract vulnerability detection",
        "year": 2024,
        "tags":[]
    },
    {
        "id":"10.1155/2021/5798033",
        "title":"A novel machine learning‚Äêbased analysis model for smart contract vulnerability",
        "year":2021,
        "tags":[]
    },
    {
        "id":"10.24963/ijcai.2020/454",
        "name":"DR-GCN + TMP",
        "title":"Smart contract vulnerability detection using graph neural networks",
        "year":2020,
        "source_code":"https://github.com/Messi-Q/GraphDeeSmartContract",
        "tags":["gnn"]
    },
    {
        "id":"10.1109/TKDE.2021.3095196",
        "name":"DR-GCN + TMP + expert knowledge",
        "title":"Combining graph neural networks with expert knowledge for smart contract vulnerability detection",
        "year":2021,
        "tags":["gnn"]
    },
    {
        "id":"10.1109/DSAA54385.2022.10032337",
        "name":"Mando",
        "title":"Mando: Multi-level heterogeneous graph embeddings for fine-grained detection of smart contract vulnerabilities",
        "year":2022,
        "tags":["gnn"]
    },
    {
        "id":"10.1155/2023/9212269",
        "title":"A smart contract vulnerability detection model based on syntactic and semantic fusion learning",
        "year":2023,
        "tags":["gnn"]
    },
    {
        "id":"10.1109/TR.2023.3233999", 
        "title":"Detect defects of solidity smart contract based on the knowledge graph",
        "year":2024,
        "tags":["kg"],
        "source_code":"https://github.com/1052445594/SoliDetector",
        "methods":{
            "implementations":[
                "Step 1: Define a subject name and select its class.",
                "Step 2: Add the restriction for the subject (if any).",
                "Step 3: Add the object property between the current subject and existing subjects (if any).",
                "Step 4: Add the data property for the current subject and define the attribute name (if any).",
                "Step 5: Modify the generated SPARQL if needed"
            ]
        },
        "experiments":{
            "dataset":""
        },
        "ref":{
            "22":"Soldetector: Detect defects based on knowledge graph of solidity smart contract"
        }
    },
    {
        "id":"10.1145/3643734",
        "title":"Efficiently detecting reentrancy vulnerabilities in complex smart contracts",
        "year":2024,
        "tags":[],
        "source_code":"https://github.com/SliSE-SC/SliSE"
    },
    {
        "id":"10.1109/TSE.2024.3383422", 
        "title":"Dappscan: building large-scale datasets for smart contract weaknesses in dapp projects",
        "year":2024,
        "tags":["dataset"],
        "notes":[
            "the aim of this study is to construct a dataset that contains a substantial number of vulnerable contracts from real-world DApps."
        ],
        "source_code":"https://github.com/InPlusLab/DAppSCAN/",
        "methods":{
            "datasets":["DAPPSCAN-SOURCE","DAPPSCAN-BYTECODE"]
        },
        "experiments":{
            "dataset":""
        }
    },
    {
        "id":"10.1145/3695864", 
        "title":"Survey on Quality Assurance of Smart Contracts",
        "year":2024,
        "tags":["survey"],
        "source_code":"https://github.com/WeiZ-boot/survey-on-smart-contract-vulnerability"
    }
]