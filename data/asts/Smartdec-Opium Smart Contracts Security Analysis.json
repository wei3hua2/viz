[
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Smartdec-Opium Smart Contracts Security Analysis/opium-contracts-60ff6f80996b83f6ad19c35b74480fef34f7dc03/contracts/TokenSpender.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.5.4"
    },
    {
     "type": "ImportDirective",
     "path": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
      "parts": [
       "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol",
      "parts": [
       "openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "erc721o/contracts/Interfaces/IERC721O.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "erc721o/contracts/Interfaces/IERC721O.sol",
      "parts": [
       "erc721o/contracts/Interfaces/IERC721O.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./Lib/WhitelistedWithGovernanceAndChangableTimelock.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./Lib/WhitelistedWithGovernanceAndChangableTimelock.sol",
      "parts": [
       "./Lib/WhitelistedWithGovernanceAndChangableTimelock.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "TokenSpender",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "WhitelistedWithGovernanceAndChangableTimelock"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "IERC20"
       },
       "libraryName": "SafeERC20",
       "functions": [],
       "operators": []
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "WHITELIST_TIMELOCK",
         "identifier": {
          "type": "Identifier",
          "name": "WHITELIST_TIMELOCK"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "1",
          "subdenomination": "hours"
         },
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "1",
        "subdenomination": "hours"
       }
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_governor",
         "identifier": {
          "type": "Identifier",
          "name": "_governor"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": []
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "WhitelistedWithGovernance",
         "arguments": [
          {
           "type": "Identifier",
           "name": "WHITELIST_TIMELOCK"
          },
          {
           "type": "Identifier",
           "name": "_governor"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "claimTokens",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "token",
         "identifier": {
          "type": "Identifier",
          "name": "token"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "from",
         "identifier": {
          "type": "Identifier",
          "name": "from"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "to",
         "identifier": {
          "type": "Identifier",
          "name": "to"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "token"
            },
            "memberName": "safeTransferFrom"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "from"
            },
            {
             "type": "Identifier",
             "name": "to"
            },
            {
             "type": "Identifier",
             "name": "amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyWhitelisted",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "claimPositions",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC721O"
         },
         "name": "token",
         "identifier": {
          "type": "Identifier",
          "name": "token"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "from",
         "identifier": {
          "type": "Identifier",
          "name": "from"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "to",
         "identifier": {
          "type": "Identifier",
          "name": "to"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "tokenId",
         "identifier": {
          "type": "Identifier",
          "name": "tokenId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "token"
            },
            "memberName": "safeTransferFrom"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "from"
            },
            {
             "type": "Identifier",
             "name": "to"
            },
            {
             "type": "Identifier",
             "name": "tokenId"
            },
            {
             "type": "Identifier",
             "name": "amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyWhitelisted",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Smartdec-Opium Smart Contracts Security Analysis/opium-contracts-60ff6f80996b83f6ad19c35b74480fef34f7dc03/contracts/TokenMinter.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.5.4"
    },
    {
     "type": "ImportDirective",
     "path": "erc721o/contracts/ERC721OBackwardCompatible.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "erc721o/contracts/ERC721OBackwardCompatible.sol",
      "parts": [
       "erc721o/contracts/ERC721OBackwardCompatible.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./Lib/usingRegistry.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./Lib/usingRegistry.sol",
      "parts": [
       "./Lib/usingRegistry.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "TokenMinter",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ERC721OBackwardCompatible"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "usingRegistry"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_baseTokenURI",
         "identifier": {
          "type": "Identifier",
          "name": "_baseTokenURI"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_registry",
         "identifier": {
          "type": "Identifier",
          "name": "_registry"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": []
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "ERC721OBackwardCompatible",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_baseTokenURI"
          }
         ]
        },
        {
         "type": "ModifierInvocation",
         "name": "usingRegistry",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_registry"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "mint",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_buyer",
         "identifier": {
          "type": "Identifier",
          "name": "_buyer"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_seller",
         "identifier": {
          "type": "Identifier",
          "name": "_seller"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_derivativeHash",
         "identifier": {
          "type": "Identifier",
          "name": "_derivativeHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_quantity",
         "identifier": {
          "type": "Identifier",
          "name": "_quantity"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_mint"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_buyer"
            },
            {
             "type": "Identifier",
             "name": "_seller"
            },
            {
             "type": "Identifier",
             "name": "_derivativeHash"
            },
            {
             "type": "Identifier",
             "name": "_quantity"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyCore",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "mint",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_buyer",
         "identifier": {
          "type": "Identifier",
          "name": "_buyer"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_derivativeHash",
         "identifier": {
          "type": "Identifier",
          "name": "_derivativeHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_quantity",
         "identifier": {
          "type": "Identifier",
          "name": "_quantity"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_mintLong"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_buyer"
            },
            {
             "type": "Identifier",
             "name": "_derivativeHash"
            },
            {
             "type": "Identifier",
             "name": "_quantity"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyCore",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "burn",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_tokenOwner",
         "identifier": {
          "type": "Identifier",
          "name": "_tokenOwner"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_tokenId",
         "identifier": {
          "type": "Identifier",
          "name": "_tokenId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_quantity",
         "identifier": {
          "type": "Identifier",
          "name": "_quantity"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_burn"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_tokenOwner"
            },
            {
             "type": "Identifier",
             "name": "_tokenId"
            },
            {
             "type": "Identifier",
             "name": "_quantity"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyCore",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "name",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "StringLiteral",
           "value": "Opium Network Position Token",
           "parts": [
            "Opium Network Position Token"
           ],
           "isUnicode": [
            false
           ]
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "symbol",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "StringLiteral",
           "value": "ONP",
           "parts": [
            "ONP"
           ],
           "isUnicode": [
            false
           ]
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "isApprovedOrOwner",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_spender",
         "identifier": {
          "type": "Identifier",
          "name": "_spender"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_owner",
         "identifier": {
          "type": "Identifier",
          "name": "_owner"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_tokenId",
         "identifier": {
          "type": "Identifier",
          "name": "_tokenId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "TupleExpression",
           "components": [
            {
             "type": "BinaryOperation",
             "operator": "||",
             "left": {
              "type": "BinaryOperation",
              "operator": "||",
              "left": {
               "type": "BinaryOperation",
               "operator": "||",
               "left": {
                "type": "BinaryOperation",
                "operator": "==",
                "left": {
                 "type": "Identifier",
                 "name": "_spender"
                },
                "right": {
                 "type": "Identifier",
                 "name": "_owner"
                }
               },
               "right": {
                "type": "BinaryOperation",
                "operator": "==",
                "left": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "getApproved"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "_tokenId"
                  },
                  {
                   "type": "Identifier",
                   "name": "_owner"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                },
                "right": {
                 "type": "Identifier",
                 "name": "_spender"
                }
               }
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "isApprovedForAll"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_owner"
                },
                {
                 "type": "Identifier",
                 "name": "_spender"
                }
               ],
               "names": [],
               "identifiers": []
              }
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "isOpiumSpender"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_spender"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ],
           "isArray": false
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "isOpiumSpender",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_spender",
         "identifier": {
          "type": "Identifier",
          "name": "_spender"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "_spender"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "registry"
             },
             "memberName": "getTokenSpender"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Smartdec-Opium Smart Contracts Security Analysis/opium-contracts-60ff6f80996b83f6ad19c35b74480fef34f7dc03/contracts/SyntheticAggregator.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.5.4"
    },
    {
     "type": "PragmaDirective",
     "name": "experimental",
     "value": "ABIEncoderV2"
    },
    {
     "type": "ImportDirective",
     "path": "openzeppelin-solidity/contracts/utils/ReentrancyGuard.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "openzeppelin-solidity/contracts/utils/ReentrancyGuard.sol",
      "parts": [
       "openzeppelin-solidity/contracts/utils/ReentrancyGuard.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./Lib/LibDerivative.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./Lib/LibDerivative.sol",
      "parts": [
       "./Lib/LibDerivative.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./Lib/LibCommission.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./Lib/LibCommission.sol",
      "parts": [
       "./Lib/LibCommission.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./Errors/SyntheticAggregatorErrors.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./Errors/SyntheticAggregatorErrors.sol",
      "parts": [
       "./Errors/SyntheticAggregatorErrors.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./Interface/IOracleId.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./Interface/IOracleId.sol",
      "parts": [
       "./Interface/IOracleId.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./Interface/IDerivativeLogic.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./Interface/IDerivativeLogic.sol",
      "parts": [
       "./Interface/IDerivativeLogic.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "SyntheticAggregator",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "SyntheticAggregatorErrors"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "LibDerivative"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "LibCommission"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ReentrancyGuard"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "EventDefinition",
       "name": "Create",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Derivative"
         },
         "name": "derivative",
         "identifier": {
          "type": "Identifier",
          "name": "derivative"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "derivativeHash",
         "identifier": {
          "type": "Identifier",
          "name": "derivativeHash"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EnumDefinition",
       "name": "SyntheticTypes",
       "members": [
        {
         "type": "EnumValue",
         "name": "Invalid"
        },
        {
         "type": "EnumValue",
         "name": "NotPool"
        },
        {
         "type": "EnumValue",
         "name": "Pool"
        }
       ]
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "bytes32",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "buyerMarginByHash",
         "identifier": {
          "type": "Identifier",
          "name": "buyerMarginByHash"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "bytes32",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "sellerMarginByHash",
         "identifier": {
          "type": "Identifier",
          "name": "sellerMarginByHash"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "bytes32",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "UserDefinedTypeName",
           "namePath": "SyntheticTypes"
          },
          "valueName": null
         },
         "name": "typeByHash",
         "identifier": {
          "type": "Identifier",
          "name": "typeByHash"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "bytes32",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "commissionByHash",
         "identifier": {
          "type": "Identifier",
          "name": "commissionByHash"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "bytes32",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "authorAddressByHash",
         "identifier": {
          "type": "Identifier",
          "name": "authorAddressByHash"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getAuthorCommission",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_derivativeHash",
         "identifier": {
          "type": "Identifier",
          "name": "_derivativeHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Derivative"
         },
         "name": "_derivative",
         "identifier": {
          "type": "Identifier",
          "name": "_derivative"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "commission",
         "identifier": {
          "type": "Identifier",
          "name": "commission"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_initDerivative"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_derivativeHash"
            },
            {
             "type": "Identifier",
             "name": "_derivative"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "commission"
           },
           "right": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "commissionByHash"
            },
            "index": {
             "type": "Identifier",
             "name": "_derivativeHash"
            }
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "nonReentrant",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getAuthorAddress",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_derivativeHash",
         "identifier": {
          "type": "Identifier",
          "name": "_derivativeHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Derivative"
         },
         "name": "_derivative",
         "identifier": {
          "type": "Identifier",
          "name": "_derivative"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "authorAddress",
         "identifier": {
          "type": "Identifier",
          "name": "authorAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_initDerivative"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_derivativeHash"
            },
            {
             "type": "Identifier",
             "name": "_derivative"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "authorAddress"
           },
           "right": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "authorAddressByHash"
            },
            "index": {
             "type": "Identifier",
             "name": "_derivativeHash"
            }
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "nonReentrant",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getMargin",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_derivativeHash",
         "identifier": {
          "type": "Identifier",
          "name": "_derivativeHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Derivative"
         },
         "name": "_derivative",
         "identifier": {
          "type": "Identifier",
          "name": "_derivative"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "buyerMargin",
         "identifier": {
          "type": "Identifier",
          "name": "buyerMargin"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "sellerMargin",
         "identifier": {
          "type": "Identifier",
          "name": "sellerMargin"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_isPool"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_derivativeHash"
            },
            {
             "type": "Identifier",
             "name": "_derivative"
            }
           ],
           "names": [],
           "identifiers": []
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "IDerivativeLogic"
                },
                "arguments": [
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "_derivative"
                  },
                  "memberName": "syntheticId"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "memberName": "getMargin"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_derivative"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_initDerivative"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_derivativeHash"
            },
            {
             "type": "Identifier",
             "name": "_derivative"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "buyerMargin"
           },
           "right": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "buyerMarginByHash"
            },
            "index": {
             "type": "Identifier",
             "name": "_derivativeHash"
            }
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "sellerMargin"
           },
           "right": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "sellerMarginByHash"
            },
            "index": {
             "type": "Identifier",
             "name": "_derivativeHash"
            }
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "nonReentrant",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "isPool",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_derivativeHash",
         "identifier": {
          "type": "Identifier",
          "name": "_derivativeHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Derivative"
         },
         "name": "_derivative",
         "identifier": {
          "type": "Identifier",
          "name": "_derivative"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "result",
         "identifier": {
          "type": "Identifier",
          "name": "result"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "result"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_isPool"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_derivativeHash"
             },
             {
              "type": "Identifier",
              "name": "_derivative"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "nonReentrant",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_isPool",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_derivativeHash",
         "identifier": {
          "type": "Identifier",
          "name": "_derivativeHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Derivative"
         },
         "name": "_derivative",
         "identifier": {
          "type": "Identifier",
          "name": "_derivative"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "result",
         "identifier": {
          "type": "Identifier",
          "name": "result"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_initDerivative"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_derivativeHash"
            },
            {
             "type": "Identifier",
             "name": "_derivative"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "result"
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "==",
            "left": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "typeByHash"
             },
             "index": {
              "type": "Identifier",
              "name": "_derivativeHash"
             }
            },
            "right": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "SyntheticTypes"
             },
             "memberName": "Pool"
            }
           }
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_initDerivative",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_derivativeHash",
         "identifier": {
          "type": "Identifier",
          "name": "_derivativeHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Derivative"
         },
         "name": "_derivative",
         "identifier": {
          "type": "Identifier",
          "name": "_derivative"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "SyntheticTypes"
            },
            "name": "syntheticType",
            "identifier": {
             "type": "Identifier",
             "name": "syntheticType"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "typeByHash"
           },
           "index": {
            "type": "Identifier",
            "name": "_derivativeHash"
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "Identifier",
            "name": "syntheticType"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "SyntheticTypes"
            },
            "memberName": "Invalid"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": null
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "derivativeHash",
            "identifier": {
             "type": "Identifier",
             "name": "derivativeHash"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getDerivativeHash"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_derivative"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "Identifier",
              "name": "derivativeHash"
             },
             "right": {
              "type": "Identifier",
              "name": "_derivativeHash"
             }
            },
            {
             "type": "Identifier",
             "name": "ERROR_SYNTHETIC_AGGREGATOR_DERIVATIVE_HASH_NOT_MATCH"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bool",
             "stateMutability": null
            },
            "name": "result",
            "identifier": {
             "type": "Identifier",
             "name": "result"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "IDerivativeLogic"
             },
             "arguments": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_derivative"
               },
               "memberName": "syntheticId"
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "isPool"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "typeByHash"
            },
            "index": {
             "type": "Identifier",
             "name": "derivativeHash"
            }
           },
           "right": {
            "type": "Conditional",
            "condition": {
             "type": "Identifier",
             "name": "result"
            },
            "trueExpression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "SyntheticTypes"
             },
             "memberName": "Pool"
            },
            "falseExpression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "SyntheticTypes"
             },
             "memberName": "NotPool"
            }
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "name": "buyerMargin",
            "identifier": {
             "type": "Identifier",
             "name": "buyerMargin"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "sellerMargin",
            "identifier": {
             "type": "Identifier",
             "name": "sellerMargin"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "IDerivativeLogic"
             },
             "arguments": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_derivative"
               },
               "memberName": "syntheticId"
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "getMargin"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_derivative"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "||",
             "left": {
              "type": "BinaryOperation",
              "operator": "!=",
              "left": {
               "type": "Identifier",
               "name": "buyerMargin"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "right": {
              "type": "BinaryOperation",
              "operator": "!=",
              "left": {
               "type": "Identifier",
               "name": "sellerMargin"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             }
            },
            {
             "type": "Identifier",
             "name": "ERROR_SYNTHETIC_AGGREGATOR_WRONG_MARGIN"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "buyerMarginByHash"
            },
            "index": {
             "type": "Identifier",
             "name": "derivativeHash"
            }
           },
           "right": {
            "type": "Identifier",
            "name": "buyerMargin"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "sellerMarginByHash"
            },
            "index": {
             "type": "Identifier",
             "name": "derivativeHash"
            }
           },
           "right": {
            "type": "Identifier",
            "name": "sellerMargin"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "authorAddressByHash"
            },
            "index": {
             "type": "Identifier",
             "name": "derivativeHash"
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "IDerivativeLogic"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_derivative"
                },
                "memberName": "syntheticId"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "memberName": "getAuthorAddress"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "commission",
            "identifier": {
             "type": "Identifier",
             "name": "commission"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "IDerivativeLogic"
             },
             "arguments": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_derivative"
               },
               "memberName": "syntheticId"
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "getAuthorCommission"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<=",
             "left": {
              "type": "Identifier",
              "name": "commission"
             },
             "right": {
              "type": "Identifier",
              "name": "COMMISSION_BASE"
             }
            },
            {
             "type": "Identifier",
             "name": "ERROR_SYNTHETIC_AGGREGATOR_COMMISSION_TOO_BIG"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "commissionByHash"
            },
            "index": {
             "type": "Identifier",
             "name": "derivativeHash"
            }
           },
           "right": {
            "type": "Identifier",
            "name": "commission"
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "Create"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_derivative"
            },
            {
             "type": "Identifier",
             "name": "derivativeHash"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Smartdec-Opium Smart Contracts Security Analysis/opium-contracts-60ff6f80996b83f6ad19c35b74480fef34f7dc03/contracts/Registry.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.5.4"
    },
    {
     "type": "ImportDirective",
     "path": "./Errors/RegistryErrors.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./Errors/RegistryErrors.sol",
      "parts": [
       "./Errors/RegistryErrors.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "Registry",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "RegistryErrors"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "minter",
         "identifier": {
          "type": "Identifier",
          "name": "minter"
         },
         "expression": null,
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "core",
         "identifier": {
          "type": "Identifier",
          "name": "core"
         },
         "expression": null,
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "oracleAggregator",
         "identifier": {
          "type": "Identifier",
          "name": "oracleAggregator"
         },
         "expression": null,
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "syntheticAggregator",
         "identifier": {
          "type": "Identifier",
          "name": "syntheticAggregator"
         },
         "expression": null,
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "opiumAddress",
         "identifier": {
          "type": "Identifier",
          "name": "opiumAddress"
         },
         "expression": null,
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "tokenSpender",
         "identifier": {
          "type": "Identifier",
          "name": "tokenSpender"
         },
         "expression": null,
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "initializer",
         "identifier": {
          "type": "Identifier",
          "name": "initializer"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "ModifierDefinition",
       "name": "onlyInitializer",
       "parameters": [],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "sender"
             },
             "right": {
              "type": "Identifier",
              "name": "initializer"
             }
            },
            {
             "type": "Identifier",
             "name": "ERROR_REGISTRY_ONLY_INITIALIZER"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "_"
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "initializer"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "msg"
            },
            "memberName": "sender"
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setMinter",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_minter",
         "identifier": {
          "type": "Identifier",
          "name": "_minter"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "Identifier",
              "name": "minter"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "Identifier",
             "name": "ERROR_REGISTRY_ALREADY_SET"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "minter"
           },
           "right": {
            "type": "Identifier",
            "name": "_minter"
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyInitializer",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setCore",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_core",
         "identifier": {
          "type": "Identifier",
          "name": "_core"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "Identifier",
              "name": "core"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "Identifier",
             "name": "ERROR_REGISTRY_ALREADY_SET"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "core"
           },
           "right": {
            "type": "Identifier",
            "name": "_core"
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyInitializer",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setOracleAggregator",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_oracleAggregator",
         "identifier": {
          "type": "Identifier",
          "name": "_oracleAggregator"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "Identifier",
              "name": "oracleAggregator"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "Identifier",
             "name": "ERROR_REGISTRY_ALREADY_SET"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "oracleAggregator"
           },
           "right": {
            "type": "Identifier",
            "name": "_oracleAggregator"
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyInitializer",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setSyntheticAggregator",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_syntheticAggregator",
         "identifier": {
          "type": "Identifier",
          "name": "_syntheticAggregator"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "Identifier",
              "name": "syntheticAggregator"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "Identifier",
             "name": "ERROR_REGISTRY_ALREADY_SET"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "syntheticAggregator"
           },
           "right": {
            "type": "Identifier",
            "name": "_syntheticAggregator"
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyInitializer",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setOpiumAddress",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_opiumAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_opiumAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "Identifier",
              "name": "opiumAddress"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "Identifier",
             "name": "ERROR_REGISTRY_ALREADY_SET"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "opiumAddress"
           },
           "right": {
            "type": "Identifier",
            "name": "_opiumAddress"
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyInitializer",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setTokenSpender",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_tokenSpender",
         "identifier": {
          "type": "Identifier",
          "name": "_tokenSpender"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "Identifier",
              "name": "tokenSpender"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "Identifier",
             "name": "ERROR_REGISTRY_ALREADY_SET"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "tokenSpender"
           },
           "right": {
            "type": "Identifier",
            "name": "_tokenSpender"
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyInitializer",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "changeOpiumAddress",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_opiumAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_opiumAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "Identifier",
              "name": "opiumAddress"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "sender"
             }
            },
            {
             "type": "Identifier",
             "name": "ERROR_REGISTRY_ONLY_OPIUM_ADDRESS_ALLOWED"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "opiumAddress"
           },
           "right": {
            "type": "Identifier",
            "name": "_opiumAddress"
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getCore",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "result",
         "identifier": {
          "type": "Identifier",
          "name": "result"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "core"
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getMinter",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "result",
         "identifier": {
          "type": "Identifier",
          "name": "result"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "minter"
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getOracleAggregator",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "result",
         "identifier": {
          "type": "Identifier",
          "name": "result"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "oracleAggregator"
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getSyntheticAggregator",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "result",
         "identifier": {
          "type": "Identifier",
          "name": "result"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "syntheticAggregator"
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getOpiumAddress",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "result",
         "identifier": {
          "type": "Identifier",
          "name": "result"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "opiumAddress"
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getTokenSpender",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "result",
         "identifier": {
          "type": "Identifier",
          "name": "result"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "tokenSpender"
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Smartdec-Opium Smart Contracts Security Analysis/opium-contracts-60ff6f80996b83f6ad19c35b74480fef34f7dc03/contracts/OracleAggregator.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.5.4"
    },
    {
     "type": "ImportDirective",
     "path": "openzeppelin-solidity/contracts/utils/ReentrancyGuard.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "openzeppelin-solidity/contracts/utils/ReentrancyGuard.sol",
      "parts": [
       "openzeppelin-solidity/contracts/utils/ReentrancyGuard.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "openzeppelin-solidity/contracts/math/SafeMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "openzeppelin-solidity/contracts/math/SafeMath.sol",
      "parts": [
       "openzeppelin-solidity/contracts/math/SafeMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./Errors/OracleAggregatorErrors.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./Errors/OracleAggregatorErrors.sol",
      "parts": [
       "./Errors/OracleAggregatorErrors.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./Interface/IOracleId.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./Interface/IOracleId.sol",
      "parts": [
       "./Interface/IOracleId.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "OracleAggregator",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "OracleAggregatorErrors"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ReentrancyGuard"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "libraryName": "SafeMath",
       "functions": [],
       "operators": []
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "Mapping",
           "keyType": {
            "type": "ElementaryTypeName",
            "name": "uint256",
            "stateMutability": null
           },
           "keyName": null,
           "valueType": {
            "type": "ElementaryTypeName",
            "name": "uint256",
            "stateMutability": null
           },
           "valueName": null
          },
          "valueName": null
         },
         "name": "dataCache",
         "identifier": {
          "type": "Identifier",
          "name": "dataCache"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "Mapping",
           "keyType": {
            "type": "ElementaryTypeName",
            "name": "uint256",
            "stateMutability": null
           },
           "keyName": null,
           "valueType": {
            "type": "ElementaryTypeName",
            "name": "bool",
            "stateMutability": null
           },
           "valueName": null
          },
          "valueName": null
         },
         "name": "dataExist",
         "identifier": {
          "type": "Identifier",
          "name": "dataExist"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "Mapping",
           "keyType": {
            "type": "ElementaryTypeName",
            "name": "uint256",
            "stateMutability": null
           },
           "keyName": null,
           "valueType": {
            "type": "ElementaryTypeName",
            "name": "bool",
            "stateMutability": null
           },
           "valueName": null
          },
          "valueName": null
         },
         "name": "dataRequested",
         "identifier": {
          "type": "Identifier",
          "name": "dataRequested"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "ModifierDefinition",
       "name": "enoughEtherProvided",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "oracleId",
         "identifier": {
          "type": "Identifier",
          "name": "oracleId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "times",
         "identifier": {
          "type": "Identifier",
          "name": "times"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "oneTimePrice",
            "identifier": {
             "type": "Identifier",
             "name": "oneTimePrice"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "calculateFetchPrice"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "oracleId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">=",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "value"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "oneTimePrice"
               },
               "memberName": "mul"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "times"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "Identifier",
             "name": "ERROR_ORACLE_AGGREGATOR_NOT_ENOUGH_ETHER"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "_"
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "FunctionDefinition",
       "name": "fetchData",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "oracleId",
         "identifier": {
          "type": "Identifier",
          "name": "oracleId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "timestamp",
         "identifier": {
          "type": "Identifier",
          "name": "timestamp"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_registerQuery"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "oracleId"
            },
            {
             "type": "Identifier",
             "name": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "IOracleId"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "oracleId"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "memberName": "fetchData"
             },
             "memberName": "value"
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "value"
             }
            ],
            "names": [],
            "identifiers": []
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "timestamp"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "nonReentrant",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "enoughEtherProvided",
         "arguments": [
          {
           "type": "Identifier",
           "name": "oracleId"
          },
          {
           "type": "NumberLiteral",
           "number": "1",
           "subdenomination": null
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "recursivelyFetchData",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "oracleId",
         "identifier": {
          "type": "Identifier",
          "name": "oracleId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "timestamp",
         "identifier": {
          "type": "Identifier",
          "name": "timestamp"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "period",
         "identifier": {
          "type": "Identifier",
          "name": "period"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "times",
         "identifier": {
          "type": "Identifier",
          "name": "times"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "Identifier",
            "name": "times"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "_registerQuery"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "oracleId"
               },
               {
                "type": "BinaryOperation",
                "operator": "+",
                "left": {
                 "type": "Identifier",
                 "name": "timestamp"
                },
                "right": {
                 "type": "BinaryOperation",
                 "operator": "*",
                 "left": {
                  "type": "Identifier",
                  "name": "period"
                 },
                 "right": {
                  "type": "Identifier",
                  "name": "i"
                 }
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "IOracleId"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "oracleId"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "memberName": "recursivelyFetchData"
             },
             "memberName": "value"
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "value"
             }
            ],
            "names": [],
            "identifiers": []
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "timestamp"
            },
            {
             "type": "Identifier",
             "name": "period"
            },
            {
             "type": "Identifier",
             "name": "times"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "nonReentrant",
         "arguments": null
        },
        {
         "type": "ModifierInvocation",
         "name": "enoughEtherProvided",
         "arguments": [
          {
           "type": "Identifier",
           "name": "oracleId"
          },
          {
           "type": "Identifier",
           "name": "times"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "__callback",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "timestamp",
         "identifier": {
          "type": "Identifier",
          "name": "timestamp"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "UnaryOperation",
             "operator": "!",
             "subExpression": {
              "type": "IndexAccess",
              "base": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "dataExist"
               },
               "index": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "msg"
                },
                "memberName": "sender"
               }
              },
              "index": {
               "type": "Identifier",
               "name": "timestamp"
              }
             },
             "isPrefix": true
            },
            {
             "type": "Identifier",
             "name": "ERROR_ORACLE_AGGREGATOR_DATA_ALREADY_EXIST"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "dataCache"
             },
             "index": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "sender"
             }
            },
            "index": {
             "type": "Identifier",
             "name": "timestamp"
            }
           },
           "right": {
            "type": "Identifier",
            "name": "data"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "dataExist"
             },
             "index": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "sender"
             }
            },
            "index": {
             "type": "Identifier",
             "name": "timestamp"
            }
           },
           "right": {
            "type": "BooleanLiteral",
            "value": true
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "calculateFetchPrice",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "oracleId",
         "identifier": {
          "type": "Identifier",
          "name": "oracleId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "fetchPrice",
         "identifier": {
          "type": "Identifier",
          "name": "fetchPrice"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "fetchPrice"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "IOracleId"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "oracleId"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "memberName": "calculateFetchPrice"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_registerQuery",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "oracleId",
         "identifier": {
          "type": "Identifier",
          "name": "oracleId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "timestamp",
         "identifier": {
          "type": "Identifier",
          "name": "timestamp"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "&&",
             "left": {
              "type": "UnaryOperation",
              "operator": "!",
              "subExpression": {
               "type": "IndexAccess",
               "base": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "dataRequested"
                },
                "index": {
                 "type": "Identifier",
                 "name": "oracleId"
                }
               },
               "index": {
                "type": "Identifier",
                "name": "timestamp"
               }
              },
              "isPrefix": true
             },
             "right": {
              "type": "UnaryOperation",
              "operator": "!",
              "subExpression": {
               "type": "IndexAccess",
               "base": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "dataExist"
                },
                "index": {
                 "type": "Identifier",
                 "name": "oracleId"
                }
               },
               "index": {
                "type": "Identifier",
                "name": "timestamp"
               }
              },
              "isPrefix": true
             }
            },
            {
             "type": "Identifier",
             "name": "ERROR_ORACLE_AGGREGATOR_QUERY_WAS_ALREADY_MADE"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "dataRequested"
             },
             "index": {
              "type": "Identifier",
              "name": "oracleId"
             }
            },
            "index": {
             "type": "Identifier",
             "name": "timestamp"
            }
           },
           "right": {
            "type": "BooleanLiteral",
            "value": true
           }
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getData",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "oracleId",
         "identifier": {
          "type": "Identifier",
          "name": "oracleId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "timestamp",
         "identifier": {
          "type": "Identifier",
          "name": "timestamp"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "dataResult",
         "identifier": {
          "type": "Identifier",
          "name": "dataResult"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "hasData"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "oracleId"
              },
              {
               "type": "Identifier",
               "name": "timestamp"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "ERROR_ORACLE_AGGREGATOR_DATA_DOESNT_EXIST"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "dataResult"
           },
           "right": {
            "type": "IndexAccess",
            "base": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "dataCache"
             },
             "index": {
              "type": "Identifier",
              "name": "oracleId"
             }
            },
            "index": {
             "type": "Identifier",
             "name": "timestamp"
            }
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "hasData",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "oracleId",
         "identifier": {
          "type": "Identifier",
          "name": "oracleId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "timestamp",
         "identifier": {
          "type": "Identifier",
          "name": "timestamp"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "result",
         "identifier": {
          "type": "Identifier",
          "name": "result"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "IndexAccess",
           "base": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "dataExist"
            },
            "index": {
             "type": "Identifier",
             "name": "oracleId"
            }
           },
           "index": {
            "type": "Identifier",
            "name": "timestamp"
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Smartdec-Opium Smart Contracts Security Analysis/opium-contracts-60ff6f80996b83f6ad19c35b74480fef34f7dc03/contracts/Migrations.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": ">=0.4.21 <0.6.0"
    },
    {
     "type": "ContractDefinition",
     "name": "Migrations",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "owner",
         "identifier": {
          "type": "Identifier",
          "name": "owner"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "last_completed_migration",
         "identifier": {
          "type": "Identifier",
          "name": "last_completed_migration"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "owner"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "msg"
            },
            "memberName": "sender"
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "ModifierDefinition",
       "name": "restricted",
       "parameters": [],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "msg"
            },
            "memberName": "sender"
           },
           "right": {
            "type": "Identifier",
            "name": "owner"
           }
          },
          "trueBody": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "Identifier",
            "name": "_"
           }
          },
          "falseBody": null
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setCompleted",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "completed",
         "identifier": {
          "type": "Identifier",
          "name": "completed"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "last_completed_migration"
           },
           "right": {
            "type": "Identifier",
            "name": "completed"
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "restricted",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "upgrade",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "new_address",
         "identifier": {
          "type": "Identifier",
          "name": "new_address"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "Migrations"
            },
            "name": "upgraded",
            "identifier": {
             "type": "Identifier",
             "name": "upgraded"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "Migrations"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "new_address"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "upgraded"
            },
            "memberName": "setCompleted"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "last_completed_migration"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "restricted",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Smartdec-Opium Smart Contracts Security Analysis/opium-contracts-60ff6f80996b83f6ad19c35b74480fef34f7dc03/contracts/Core.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.5.4"
    },
    {
     "type": "PragmaDirective",
     "name": "experimental",
     "value": "ABIEncoderV2"
    },
    {
     "type": "ImportDirective",
     "path": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
      "parts": [
       "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol",
      "parts": [
       "openzeppelin-solidity/contracts/token/ERC20/SafeERC20.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "openzeppelin-solidity/contracts/utils/ReentrancyGuard.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "openzeppelin-solidity/contracts/utils/ReentrancyGuard.sol",
      "parts": [
       "openzeppelin-solidity/contracts/utils/ReentrancyGuard.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "openzeppelin-solidity/contracts/math/SafeMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "openzeppelin-solidity/contracts/math/SafeMath.sol",
      "parts": [
       "openzeppelin-solidity/contracts/math/SafeMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "erc721o/contracts/Libs/LibPosition.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "erc721o/contracts/Libs/LibPosition.sol",
      "parts": [
       "erc721o/contracts/Libs/LibPosition.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./Interface/IDerivativeLogic.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./Interface/IDerivativeLogic.sol",
      "parts": [
       "./Interface/IDerivativeLogic.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./Errors/CoreErrors.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./Errors/CoreErrors.sol",
      "parts": [
       "./Errors/CoreErrors.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./Lib/usingRegistry.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./Lib/usingRegistry.sol",
      "parts": [
       "./Lib/usingRegistry.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./Lib/LibDerivative.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./Lib/LibDerivative.sol",
      "parts": [
       "./Lib/LibDerivative.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./Lib/LibCommission.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./Lib/LibCommission.sol",
      "parts": [
       "./Lib/LibCommission.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./Registry.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./Registry.sol",
      "parts": [
       "./Registry.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./TokenMinter.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./TokenMinter.sol",
      "parts": [
       "./TokenMinter.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./OracleAggregator.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./OracleAggregator.sol",
      "parts": [
       "./OracleAggregator.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./SyntheticAggregator.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./SyntheticAggregator.sol",
      "parts": [
       "./SyntheticAggregator.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./TokenSpender.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./TokenSpender.sol",
      "parts": [
       "./TokenSpender.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "Core",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "LibDerivative"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "LibCommission"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "usingRegistry"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "CoreErrors"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ReentrancyGuard"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "libraryName": "SafeMath",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "bytes32",
        "stateMutability": null
       },
       "libraryName": "LibPosition",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "IERC20"
       },
       "libraryName": "SafeERC20",
       "functions": [],
       "operators": []
      },
      {
       "type": "EventDefinition",
       "name": "Created",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "buyer",
         "identifier": {
          "type": "Identifier",
          "name": "buyer"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "seller",
         "identifier": {
          "type": "Identifier",
          "name": "seller"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "derivativeHash",
         "identifier": {
          "type": "Identifier",
          "name": "derivativeHash"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "quantity",
         "identifier": {
          "type": "Identifier",
          "name": "quantity"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "Executed",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "tokenOwner",
         "identifier": {
          "type": "Identifier",
          "name": "tokenOwner"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "tokenId",
         "identifier": {
          "type": "Identifier",
          "name": "tokenId"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "quantity",
         "identifier": {
          "type": "Identifier",
          "name": "quantity"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "Canceled",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "derivativeHash",
         "identifier": {
          "type": "Identifier",
          "name": "derivativeHash"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "NO_DATA_CANCELLATION_PERIOD",
         "identifier": {
          "type": "Identifier",
          "name": "NO_DATA_CANCELLATION_PERIOD"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "2",
          "subdenomination": "weeks"
         },
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "2",
        "subdenomination": "weeks"
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "Mapping",
           "keyType": {
            "type": "ElementaryTypeName",
            "name": "address",
            "stateMutability": null
           },
           "keyName": null,
           "valueType": {
            "type": "ElementaryTypeName",
            "name": "uint256",
            "stateMutability": null
           },
           "valueName": null
          },
          "valueName": null
         },
         "name": "poolVaults",
         "identifier": {
          "type": "Identifier",
          "name": "poolVaults"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "Mapping",
           "keyType": {
            "type": "ElementaryTypeName",
            "name": "address",
            "stateMutability": null
           },
           "keyName": null,
           "valueType": {
            "type": "ElementaryTypeName",
            "name": "uint256",
            "stateMutability": null
           },
           "valueName": null
          },
          "valueName": null
         },
         "name": "feesVaults",
         "identifier": {
          "type": "Identifier",
          "name": "feesVaults"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "bytes32",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "bool",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "cancelled",
         "identifier": {
          "type": "Identifier",
          "name": "cancelled"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_registry",
         "identifier": {
          "type": "Identifier",
          "name": "_registry"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": []
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "usingRegistry",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_registry"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "withdrawFee",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_tokenAddress",
         "identifier": {
          "type": "Identifier",
          "name": "_tokenAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "balance",
            "identifier": {
             "type": "Identifier",
             "name": "balance"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "feesVaults"
            },
            "index": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            }
           },
           "index": {
            "type": "Identifier",
            "name": "_tokenAddress"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "feesVaults"
             },
             "index": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "sender"
             }
            },
            "index": {
             "type": "Identifier",
             "name": "_tokenAddress"
            }
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "IERC20"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "_tokenAddress"
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "transfer"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "balance"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "nonReentrant",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "create",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Derivative"
         },
         "name": "_derivative",
         "identifier": {
          "type": "Identifier",
          "name": "_derivative"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_quantity",
         "identifier": {
          "type": "Identifier",
          "name": "_quantity"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "length": {
           "type": "NumberLiteral",
           "number": "2",
           "subdenomination": null
          }
         },
         "name": "_addresses",
         "identifier": {
          "type": "Identifier",
          "name": "_addresses"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "_addresses"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "address"
            },
            "arguments": [
             {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "_createPooled"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_derivative"
               },
               {
                "type": "Identifier",
                "name": "_quantity"
               },
               {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "_addresses"
                },
                "index": {
                 "type": "NumberLiteral",
                 "number": "0",
                 "subdenomination": null
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "_create"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_derivative"
               },
               {
                "type": "Identifier",
                "name": "_quantity"
               },
               {
                "type": "Identifier",
                "name": "_addresses"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "nonReentrant",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "execute",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_tokenId",
         "identifier": {
          "type": "Identifier",
          "name": "_tokenId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_quantity",
         "identifier": {
          "type": "Identifier",
          "name": "_quantity"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Derivative"
         },
         "name": "_derivative",
         "identifier": {
          "type": "Identifier",
          "name": "_derivative"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "tokenIds",
            "identifier": {
             "type": "Identifier",
             "name": "tokenIds"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "NewExpression",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            }
           },
           "arguments": [
            {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "quantities",
            "identifier": {
             "type": "Identifier",
             "name": "quantities"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "NewExpression",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            }
           },
           "arguments": [
            {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "Derivative"
             },
             "length": null
            },
            "name": "derivatives",
            "identifier": {
             "type": "Identifier",
             "name": "derivatives"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "NewExpression",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "Derivative"
             },
             "length": null
            }
           },
           "arguments": [
            {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "tokenIds"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           },
           "right": {
            "type": "Identifier",
            "name": "_tokenId"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "quantities"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           },
           "right": {
            "type": "Identifier",
            "name": "_quantity"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "derivatives"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           },
           "right": {
            "type": "Identifier",
            "name": "_derivative"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_execute"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "tokenIds"
            },
            {
             "type": "Identifier",
             "name": "quantities"
            },
            {
             "type": "Identifier",
             "name": "derivatives"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "nonReentrant",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "execute",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_tokenOwner",
         "identifier": {
          "type": "Identifier",
          "name": "_tokenOwner"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_tokenId",
         "identifier": {
          "type": "Identifier",
          "name": "_tokenId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_quantity",
         "identifier": {
          "type": "Identifier",
          "name": "_quantity"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Derivative"
         },
         "name": "_derivative",
         "identifier": {
          "type": "Identifier",
          "name": "_derivative"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "tokenIds",
            "identifier": {
             "type": "Identifier",
             "name": "tokenIds"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "NewExpression",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            }
           },
           "arguments": [
            {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "quantities",
            "identifier": {
             "type": "Identifier",
             "name": "quantities"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "NewExpression",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            }
           },
           "arguments": [
            {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "Derivative"
             },
             "length": null
            },
            "name": "derivatives",
            "identifier": {
             "type": "Identifier",
             "name": "derivatives"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "NewExpression",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "Derivative"
             },
             "length": null
            }
           },
           "arguments": [
            {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "tokenIds"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           },
           "right": {
            "type": "Identifier",
            "name": "_tokenId"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "quantities"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           },
           "right": {
            "type": "Identifier",
            "name": "_quantity"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "derivatives"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           },
           "right": {
            "type": "Identifier",
            "name": "_derivative"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_execute"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_tokenOwner"
            },
            {
             "type": "Identifier",
             "name": "tokenIds"
            },
            {
             "type": "Identifier",
             "name": "quantities"
            },
            {
             "type": "Identifier",
             "name": "derivatives"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "nonReentrant",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "execute",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "_tokenIds",
         "identifier": {
          "type": "Identifier",
          "name": "_tokenIds"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "_quantities",
         "identifier": {
          "type": "Identifier",
          "name": "_quantities"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "Derivative"
          },
          "length": null
         },
         "name": "_derivatives",
         "identifier": {
          "type": "Identifier",
          "name": "_derivatives"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_execute"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "_tokenIds"
            },
            {
             "type": "Identifier",
             "name": "_quantities"
            },
            {
             "type": "Identifier",
             "name": "_derivatives"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "nonReentrant",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "execute",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_tokenOwner",
         "identifier": {
          "type": "Identifier",
          "name": "_tokenOwner"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "_tokenIds",
         "identifier": {
          "type": "Identifier",
          "name": "_tokenIds"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "_quantities",
         "identifier": {
          "type": "Identifier",
          "name": "_quantities"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "Derivative"
          },
          "length": null
         },
         "name": "_derivatives",
         "identifier": {
          "type": "Identifier",
          "name": "_derivatives"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_execute"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_tokenOwner"
            },
            {
             "type": "Identifier",
             "name": "_tokenIds"
            },
            {
             "type": "Identifier",
             "name": "_quantities"
            },
            {
             "type": "Identifier",
             "name": "_derivatives"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "nonReentrant",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "cancel",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_tokenId",
         "identifier": {
          "type": "Identifier",
          "name": "_tokenId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_quantity",
         "identifier": {
          "type": "Identifier",
          "name": "_quantity"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Derivative"
         },
         "name": "_derivative",
         "identifier": {
          "type": "Identifier",
          "name": "_derivative"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "tokenIds",
            "identifier": {
             "type": "Identifier",
             "name": "tokenIds"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "NewExpression",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            }
           },
           "arguments": [
            {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "quantities",
            "identifier": {
             "type": "Identifier",
             "name": "quantities"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "NewExpression",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            }
           },
           "arguments": [
            {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "Derivative"
             },
             "length": null
            },
            "name": "derivatives",
            "identifier": {
             "type": "Identifier",
             "name": "derivatives"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "NewExpression",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "Derivative"
             },
             "length": null
            }
           },
           "arguments": [
            {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "tokenIds"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           },
           "right": {
            "type": "Identifier",
            "name": "_tokenId"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "quantities"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           },
           "right": {
            "type": "Identifier",
            "name": "_quantity"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "derivatives"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           },
           "right": {
            "type": "Identifier",
            "name": "_derivative"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_cancel"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "tokenIds"
            },
            {
             "type": "Identifier",
             "name": "quantities"
            },
            {
             "type": "Identifier",
             "name": "derivatives"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "nonReentrant",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "cancel",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "_tokenIds",
         "identifier": {
          "type": "Identifier",
          "name": "_tokenIds"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "_quantities",
         "identifier": {
          "type": "Identifier",
          "name": "_quantities"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "Derivative"
          },
          "length": null
         },
         "name": "_derivatives",
         "identifier": {
          "type": "Identifier",
          "name": "_derivatives"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_cancel"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_tokenIds"
            },
            {
             "type": "Identifier",
             "name": "_quantities"
            },
            {
             "type": "Identifier",
             "name": "_derivatives"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "nonReentrant",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "StructDefinition",
       "name": "CreatePooledLocalVars",
       "members": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "SyntheticAggregator"
         },
         "name": "syntheticAggregator",
         "identifier": {
          "type": "Identifier",
          "name": "syntheticAggregator"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IDerivativeLogic"
         },
         "name": "derivativeLogic",
         "identifier": {
          "type": "Identifier",
          "name": "derivativeLogic"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "marginToken",
         "identifier": {
          "type": "Identifier",
          "name": "marginToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "TokenSpender"
         },
         "name": "tokenSpender",
         "identifier": {
          "type": "Identifier",
          "name": "tokenSpender"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "TokenMinter"
         },
         "name": "tokenMinter",
         "identifier": {
          "type": "Identifier",
          "name": "tokenMinter"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "FunctionDefinition",
       "name": "_createPooled",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Derivative"
         },
         "name": "_derivative",
         "identifier": {
          "type": "Identifier",
          "name": "_derivative"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_quantity",
         "identifier": {
          "type": "Identifier",
          "name": "_quantity"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_address",
         "identifier": {
          "type": "Identifier",
          "name": "_address"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "CreatePooledLocalVars"
            },
            "name": "vars",
            "identifier": {
             "type": "Identifier",
             "name": "vars"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "vars"
            },
            "memberName": "syntheticAggregator"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "SyntheticAggregator"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "registry"
               },
               "memberName": "getSyntheticAggregator"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "vars"
            },
            "memberName": "derivativeLogic"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "IDerivativeLogic"
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_derivative"
              },
              "memberName": "syntheticId"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "vars"
            },
            "memberName": "marginToken"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "IERC20"
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_derivative"
              },
              "memberName": "token"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "vars"
            },
            "memberName": "tokenSpender"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "TokenSpender"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "registry"
               },
               "memberName": "getTokenSpender"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "vars"
            },
            "memberName": "tokenMinter"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "TokenMinter"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "registry"
               },
               "memberName": "getMinter"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "derivativeHash",
            "identifier": {
             "type": "Identifier",
             "name": "derivativeHash"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getDerivativeHash"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_derivative"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "vars"
               },
               "memberName": "syntheticAggregator"
              },
              "memberName": "isPool"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "derivativeHash"
              },
              {
               "type": "Identifier",
               "name": "_derivative"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "ERROR_CORE_NOT_POOL"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "UnaryOperation",
             "operator": "!",
             "subExpression": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "cancelled"
              },
              "index": {
               "type": "Identifier",
               "name": "derivativeHash"
              }
             },
             "isPrefix": true
            },
            {
             "type": "Identifier",
             "name": "ERROR_CORE_TICKER_WAS_CANCELLED"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "vars"
               },
               "memberName": "derivativeLogic"
              },
              "memberName": "validateInput"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "_derivative"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "ERROR_CORE_SYNTHETIC_VALIDATION_ERROR"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "name": "margin",
            "identifier": {
             "type": "Identifier",
             "name": "margin"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           null
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "vars"
             },
             "memberName": "syntheticAggregator"
            },
            "memberName": "getMargin"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "derivativeHash"
            },
            {
             "type": "Identifier",
             "name": "_derivative"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">=",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "vars"
                },
                "memberName": "marginToken"
               },
               "memberName": "allowance"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "msg"
                },
                "memberName": "sender"
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "address"
                },
                "arguments": [
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "vars"
                  },
                  "memberName": "tokenSpender"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "margin"
               },
               "memberName": "mul"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_quantity"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "Identifier",
             "name": "ERROR_CORE_NOT_ENOUGH_TOKEN_ALLOWANCE"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "vars"
             },
             "memberName": "tokenSpender"
            },
            "memberName": "claimTokens"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "vars"
             },
             "memberName": "marginToken"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "this"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "margin"
              },
              "memberName": "mul"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "_quantity"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "poolVaults"
             },
             "index": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_derivative"
              },
              "memberName": "syntheticId"
             }
            },
            "index": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_derivative"
             },
             "memberName": "token"
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "IndexAccess",
              "base": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "poolVaults"
               },
               "index": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_derivative"
                },
                "memberName": "syntheticId"
               }
              },
              "index": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_derivative"
               },
               "memberName": "token"
              }
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "margin"
               },
               "memberName": "mul"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_quantity"
               }
              ],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "vars"
             },
             "memberName": "tokenMinter"
            },
            "memberName": "mint"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_address"
            },
            {
             "type": "Identifier",
             "name": "derivativeHash"
            },
            {
             "type": "Identifier",
             "name": "_quantity"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "Created"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_address"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "derivativeHash"
            },
            {
             "type": "Identifier",
             "name": "_quantity"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "StructDefinition",
       "name": "CreateLocalVars",
       "members": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "SyntheticAggregator"
         },
         "name": "syntheticAggregator",
         "identifier": {
          "type": "Identifier",
          "name": "syntheticAggregator"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IDerivativeLogic"
         },
         "name": "derivativeLogic",
         "identifier": {
          "type": "Identifier",
          "name": "derivativeLogic"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "marginToken",
         "identifier": {
          "type": "Identifier",
          "name": "marginToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "TokenSpender"
         },
         "name": "tokenSpender",
         "identifier": {
          "type": "Identifier",
          "name": "tokenSpender"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "TokenMinter"
         },
         "name": "tokenMinter",
         "identifier": {
          "type": "Identifier",
          "name": "tokenMinter"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "FunctionDefinition",
       "name": "_create",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Derivative"
         },
         "name": "_derivative",
         "identifier": {
          "type": "Identifier",
          "name": "_derivative"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_quantity",
         "identifier": {
          "type": "Identifier",
          "name": "_quantity"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "length": {
           "type": "NumberLiteral",
           "number": "2",
           "subdenomination": null
          }
         },
         "name": "_addresses",
         "identifier": {
          "type": "Identifier",
          "name": "_addresses"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "CreateLocalVars"
            },
            "name": "vars",
            "identifier": {
             "type": "Identifier",
             "name": "vars"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "vars"
            },
            "memberName": "syntheticAggregator"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "SyntheticAggregator"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "registry"
               },
               "memberName": "getSyntheticAggregator"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "vars"
            },
            "memberName": "derivativeLogic"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "IDerivativeLogic"
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_derivative"
              },
              "memberName": "syntheticId"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "vars"
            },
            "memberName": "marginToken"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "IERC20"
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_derivative"
              },
              "memberName": "token"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "vars"
            },
            "memberName": "tokenSpender"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "TokenSpender"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "registry"
               },
               "memberName": "getTokenSpender"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "vars"
            },
            "memberName": "tokenMinter"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "TokenMinter"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "registry"
               },
               "memberName": "getMinter"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "derivativeHash",
            "identifier": {
             "type": "Identifier",
             "name": "derivativeHash"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getDerivativeHash"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_derivative"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "UnaryOperation",
             "operator": "!",
             "subExpression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "vars"
                },
                "memberName": "syntheticAggregator"
               },
               "memberName": "isPool"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "derivativeHash"
               },
               {
                "type": "Identifier",
                "name": "_derivative"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "isPrefix": true
            },
            {
             "type": "Identifier",
             "name": "ERROR_CORE_CANT_BE_POOL"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "UnaryOperation",
             "operator": "!",
             "subExpression": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "cancelled"
              },
              "index": {
               "type": "Identifier",
               "name": "derivativeHash"
              }
             },
             "isPrefix": true
            },
            {
             "type": "Identifier",
             "name": "ERROR_CORE_TICKER_WAS_CANCELLED"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "vars"
               },
               "memberName": "derivativeLogic"
              },
              "memberName": "validateInput"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "_derivative"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "ERROR_CORE_SYNTHETIC_VALIDATION_ERROR"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": {
              "type": "NumberLiteral",
              "number": "2",
              "subdenomination": null
             }
            },
            "name": "margins",
            "identifier": {
             "type": "Identifier",
             "name": "margins"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "TupleExpression",
            "components": [
             {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "margins"
              },
              "index": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "margins"
              },
              "index": {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              }
             }
            ],
            "isArray": false
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "vars"
              },
              "memberName": "syntheticAggregator"
             },
             "memberName": "getMargin"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "derivativeHash"
             },
             {
              "type": "Identifier",
              "name": "_derivative"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">=",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "vars"
                },
                "memberName": "marginToken"
               },
               "memberName": "allowance"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "msg"
                },
                "memberName": "sender"
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "address"
                },
                "arguments": [
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "vars"
                  },
                  "memberName": "tokenSpender"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "margins"
                  },
                  "index": {
                   "type": "NumberLiteral",
                   "number": "0",
                   "subdenomination": null
                  }
                 },
                 "memberName": "add"
                },
                "arguments": [
                 {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "margins"
                  },
                  "index": {
                   "type": "NumberLiteral",
                   "number": "1",
                   "subdenomination": null
                  }
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "memberName": "mul"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_quantity"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "Identifier",
             "name": "ERROR_CORE_NOT_ENOUGH_TOKEN_ALLOWANCE"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "vars"
             },
             "memberName": "tokenSpender"
            },
            "memberName": "claimTokens"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "vars"
             },
             "memberName": "marginToken"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "this"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "margins"
                 },
                 "index": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                 }
                },
                "memberName": "add"
               },
               "arguments": [
                {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "margins"
                 },
                 "index": {
                  "type": "NumberLiteral",
                  "number": "1",
                  "subdenomination": null
                 }
                }
               ],
               "names": [],
               "identifiers": []
              },
              "memberName": "mul"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "_quantity"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "vars"
             },
             "memberName": "tokenMinter"
            },
            "memberName": "mint"
           },
           "arguments": [
            {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "_addresses"
             },
             "index": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "_addresses"
             },
             "index": {
              "type": "NumberLiteral",
              "number": "1",
              "subdenomination": null
             }
            },
            {
             "type": "Identifier",
             "name": "derivativeHash"
            },
            {
             "type": "Identifier",
             "name": "_quantity"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "Created"
           },
           "arguments": [
            {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "_addresses"
             },
             "index": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "_addresses"
             },
             "index": {
              "type": "NumberLiteral",
              "number": "1",
              "subdenomination": null
             }
            },
            {
             "type": "Identifier",
             "name": "derivativeHash"
            },
            {
             "type": "Identifier",
             "name": "_quantity"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "StructDefinition",
       "name": "ExecuteAndCancelLocalVars",
       "members": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "TokenMinter"
         },
         "name": "tokenMinter",
         "identifier": {
          "type": "Identifier",
          "name": "tokenMinter"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "OracleAggregator"
         },
         "name": "oracleAggregator",
         "identifier": {
          "type": "Identifier",
          "name": "oracleAggregator"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "SyntheticAggregator"
         },
         "name": "syntheticAggregator",
         "identifier": {
          "type": "Identifier",
          "name": "syntheticAggregator"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "FunctionDefinition",
       "name": "_execute",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_tokenOwner",
         "identifier": {
          "type": "Identifier",
          "name": "_tokenOwner"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "_tokenIds",
         "identifier": {
          "type": "Identifier",
          "name": "_tokenIds"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "_quantities",
         "identifier": {
          "type": "Identifier",
          "name": "_quantities"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "Derivative"
          },
          "length": null
         },
         "name": "_derivatives",
         "identifier": {
          "type": "Identifier",
          "name": "_derivatives"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_tokenIds"
              },
              "memberName": "length"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_quantities"
              },
              "memberName": "length"
             }
            },
            {
             "type": "Identifier",
             "name": "ERROR_CORE_TOKEN_IDS_AND_QUANTITIES_LENGTH_DOES_NOT_MATCH"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_tokenIds"
              },
              "memberName": "length"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_derivatives"
              },
              "memberName": "length"
             }
            },
            {
             "type": "Identifier",
             "name": "ERROR_CORE_TOKEN_IDS_AND_DERIVATIVES_LENGTH_DOES_NOT_MATCH"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "ExecuteAndCancelLocalVars"
            },
            "name": "vars",
            "identifier": {
             "type": "Identifier",
             "name": "vars"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "vars"
            },
            "memberName": "tokenMinter"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "TokenMinter"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "registry"
               },
               "memberName": "getMinter"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "vars"
            },
            "memberName": "oracleAggregator"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "OracleAggregator"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "registry"
               },
               "memberName": "getOracleAggregator"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "vars"
            },
            "memberName": "syntheticAggregator"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "SyntheticAggregator"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "registry"
               },
               "memberName": "getSyntheticAggregator"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": null
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_tokenIds"
            },
            "memberName": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": ">",
                "left": {
                 "type": "Identifier",
                 "name": "now"
                },
                "right": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "_derivatives"
                  },
                  "index": {
                   "type": "Identifier",
                   "name": "i"
                  }
                 },
                 "memberName": "endTime"
                }
               },
               {
                "type": "Identifier",
                "name": "ERROR_CORE_EXECUTION_BEFORE_MATURITY_NOT_ALLOWED"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "||",
                "left": {
                 "type": "BinaryOperation",
                 "operator": "==",
                 "left": {
                  "type": "Identifier",
                  "name": "_tokenOwner"
                 },
                 "right": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "msg"
                  },
                  "memberName": "sender"
                 }
                },
                "right": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "Identifier",
                    "name": "IDerivativeLogic"
                   },
                   "arguments": [
                    {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "IndexAccess",
                      "base": {
                       "type": "Identifier",
                       "name": "_derivatives"
                      },
                      "index": {
                       "type": "Identifier",
                       "name": "i"
                      }
                     },
                     "memberName": "syntheticId"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  },
                  "memberName": "thirdpartyExecutionAllowed"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "_tokenOwner"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "Identifier",
                "name": "ERROR_CORE_SYNTHETIC_EXECUTION_WAS_NOT_ALLOWED"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "payout",
               "identifier": {
                "type": "Identifier",
                "name": "payout"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "_getPayout"
              },
              "arguments": [
               {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "_derivatives"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               },
               {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "_tokenIds"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               },
               {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "_quantities"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               },
               {
                "type": "Identifier",
                "name": "vars"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": ">",
              "left": {
               "type": "Identifier",
               "name": "payout"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "Identifier",
                    "name": "IERC20"
                   },
                   "arguments": [
                    {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "IndexAccess",
                      "base": {
                       "type": "Identifier",
                       "name": "_derivatives"
                      },
                      "index": {
                       "type": "Identifier",
                       "name": "i"
                      }
                     },
                     "memberName": "token"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  },
                  "memberName": "safeTransfer"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "_tokenOwner"
                  },
                  {
                   "type": "Identifier",
                   "name": "payout"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": null
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "vars"
                },
                "memberName": "tokenMinter"
               },
               "memberName": "burn"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_tokenOwner"
               },
               {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "_tokenIds"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               },
               {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "_quantities"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "EmitStatement",
             "eventCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "Executed"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_tokenOwner"
               },
               {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "_tokenIds"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               },
               {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "_quantities"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_cancel",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "_tokenIds",
         "identifier": {
          "type": "Identifier",
          "name": "_tokenIds"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "_quantities",
         "identifier": {
          "type": "Identifier",
          "name": "_quantities"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "Derivative"
          },
          "length": null
         },
         "name": "_derivatives",
         "identifier": {
          "type": "Identifier",
          "name": "_derivatives"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_tokenIds"
              },
              "memberName": "length"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_quantities"
              },
              "memberName": "length"
             }
            },
            {
             "type": "Identifier",
             "name": "ERROR_CORE_TOKEN_IDS_AND_QUANTITIES_LENGTH_DOES_NOT_MATCH"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_tokenIds"
              },
              "memberName": "length"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_derivatives"
              },
              "memberName": "length"
             }
            },
            {
             "type": "Identifier",
             "name": "ERROR_CORE_TOKEN_IDS_AND_DERIVATIVES_LENGTH_DOES_NOT_MATCH"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "ExecuteAndCancelLocalVars"
            },
            "name": "vars",
            "identifier": {
             "type": "Identifier",
             "name": "vars"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "vars"
            },
            "memberName": "tokenMinter"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "TokenMinter"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "registry"
               },
               "memberName": "getMinter"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "vars"
            },
            "memberName": "oracleAggregator"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "OracleAggregator"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "registry"
               },
               "memberName": "getOracleAggregator"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "vars"
            },
            "memberName": "syntheticAggregator"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "SyntheticAggregator"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "registry"
               },
               "memberName": "getSyntheticAggregator"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": null
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_tokenIds"
            },
            "memberName": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "!=",
                "left": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "_derivatives"
                  },
                  "index": {
                   "type": "Identifier",
                   "name": "i"
                  }
                 },
                 "memberName": "oracleId"
                },
                "right": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "address"
                 },
                 "arguments": [
                  {
                   "type": "NumberLiteral",
                   "number": "0",
                   "subdenomination": null
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "Identifier",
                "name": "ERROR_CORE_CANT_CANCEL_DUMMY_ORACLE_ID"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "&&",
                "left": {
                 "type": "BinaryOperation",
                 "operator": "<=",
                 "left": {
                  "type": "BinaryOperation",
                  "operator": "+",
                  "left": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "IndexAccess",
                    "base": {
                     "type": "Identifier",
                     "name": "_derivatives"
                    },
                    "index": {
                     "type": "Identifier",
                     "name": "i"
                    }
                   },
                   "memberName": "endTime"
                  },
                  "right": {
                   "type": "Identifier",
                   "name": "NO_DATA_CANCELLATION_PERIOD"
                  }
                 },
                 "right": {
                  "type": "Identifier",
                  "name": "now"
                 }
                },
                "right": {
                 "type": "UnaryOperation",
                 "operator": "!",
                 "subExpression": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "vars"
                    },
                    "memberName": "oracleAggregator"
                   },
                   "memberName": "hasData"
                  },
                  "arguments": [
                   {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "IndexAccess",
                     "base": {
                      "type": "Identifier",
                      "name": "_derivatives"
                     },
                     "index": {
                      "type": "Identifier",
                      "name": "i"
                     }
                    },
                    "memberName": "oracleId"
                   },
                   {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "IndexAccess",
                     "base": {
                      "type": "Identifier",
                      "name": "_derivatives"
                     },
                     "index": {
                      "type": "Identifier",
                      "name": "i"
                     }
                    },
                    "memberName": "endTime"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 },
                 "isPrefix": true
                }
               },
               {
                "type": "Identifier",
                "name": "ERROR_CORE_CANCELLATION_IS_NOT_ALLOWED"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "bytes32",
                "stateMutability": null
               },
               "name": "derivativeHash",
               "identifier": {
                "type": "Identifier",
                "name": "derivativeHash"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "getDerivativeHash"
              },
              "arguments": [
               {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "_derivatives"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "UnaryOperation",
              "operator": "!",
              "subExpression": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "cancelled"
               },
               "index": {
                "type": "Identifier",
                "name": "derivativeHash"
               }
              },
              "isPrefix": true
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "cancelled"
                  },
                  "index": {
                   "type": "Identifier",
                   "name": "derivativeHash"
                  }
                 },
                 "right": {
                  "type": "BooleanLiteral",
                  "value": true
                 }
                }
               },
               {
                "type": "EmitStatement",
                "eventCall": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "Canceled"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "derivativeHash"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": null
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ArrayTypeName",
                "baseTypeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "length": {
                 "type": "NumberLiteral",
                 "number": "2",
                 "subdenomination": null
                }
               },
               "name": "margins",
               "identifier": {
                "type": "Identifier",
                "name": "margins"
               },
               "storageLocation": "memory",
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": null
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "TupleExpression",
               "components": [
                {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "margins"
                 },
                 "index": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                 }
                },
                {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "margins"
                 },
                 "index": {
                  "type": "NumberLiteral",
                  "number": "1",
                  "subdenomination": null
                 }
                }
               ],
               "isArray": false
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "vars"
                 },
                 "memberName": "syntheticAggregator"
                },
                "memberName": "getMargin"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "derivativeHash"
                },
                {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "_derivatives"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "i"
                 }
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "payout",
               "identifier": {
                "type": "Identifier",
                "name": "payout"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": null
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "derivativeHash"
                },
                "memberName": "getLongTokenId"
               },
               "arguments": [],
               "names": [],
               "identifiers": []
              },
              "right": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "_tokenIds"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "payout"
                 },
                 "right": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "margins"
                  },
                  "index": {
                   "type": "NumberLiteral",
                   "number": "0",
                   "subdenomination": null
                  }
                 }
                }
               }
              ]
             },
             "falseBody": {
              "type": "IfStatement",
              "condition": {
               "type": "BinaryOperation",
               "operator": "==",
               "left": {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "derivativeHash"
                 },
                 "memberName": "getShortTokenId"
                },
                "arguments": [],
                "names": [],
                "identifiers": []
               },
               "right": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "_tokenIds"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               }
              },
              "trueBody": {
               "type": "Block",
               "statements": [
                {
                 "type": "ExpressionStatement",
                 "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                   "type": "Identifier",
                   "name": "payout"
                  },
                  "right": {
                   "type": "IndexAccess",
                   "base": {
                    "type": "Identifier",
                    "name": "margins"
                   },
                   "index": {
                    "type": "NumberLiteral",
                    "number": "1",
                    "subdenomination": null
                   }
                  }
                 }
                }
               ]
              },
              "falseBody": {
               "type": "Block",
               "statements": [
                {
                 "type": "ExpressionStatement",
                 "expression": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "Identifier",
                   "name": "revert"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "ERROR_CORE_UNKNOWN_POSITION_TYPE"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                }
               ]
              }
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": ">",
              "left": {
               "type": "Identifier",
               "name": "payout"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "Identifier",
                    "name": "IERC20"
                   },
                   "arguments": [
                    {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "IndexAccess",
                      "base": {
                       "type": "Identifier",
                       "name": "_derivatives"
                      },
                      "index": {
                       "type": "Identifier",
                       "name": "i"
                      }
                     },
                     "memberName": "token"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  },
                  "memberName": "safeTransfer"
                 },
                 "arguments": [
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "msg"
                   },
                   "memberName": "sender"
                  },
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "payout"
                    },
                    "memberName": "mul"
                   },
                   "arguments": [
                    {
                     "type": "IndexAccess",
                     "base": {
                      "type": "Identifier",
                      "name": "_quantities"
                     },
                     "index": {
                      "type": "Identifier",
                      "name": "i"
                     }
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": null
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "vars"
                },
                "memberName": "tokenMinter"
               },
               "memberName": "burn"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "msg"
                },
                "memberName": "sender"
               },
               {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "_tokenIds"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               },
               {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "_quantities"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_getPayout",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Derivative"
         },
         "name": "_derivative",
         "identifier": {
          "type": "Identifier",
          "name": "_derivative"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_tokenId",
         "identifier": {
          "type": "Identifier",
          "name": "_tokenId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_quantity",
         "identifier": {
          "type": "Identifier",
          "name": "_quantity"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "ExecuteAndCancelLocalVars"
         },
         "name": "_vars",
         "identifier": {
          "type": "Identifier",
          "name": "_vars"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "payout",
         "identifier": {
          "type": "Identifier",
          "name": "payout"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "data",
            "identifier": {
             "type": "Identifier",
             "name": "data"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_derivative"
            },
            "memberName": "oracleId"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "address"
            },
            "arguments": [
             {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "data"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "_vars"
                 },
                 "memberName": "oracleAggregator"
                },
                "memberName": "getData"
               },
               "arguments": [
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "_derivative"
                 },
                 "memberName": "oracleId"
                },
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "_derivative"
                 },
                 "memberName": "endTime"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "data"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             }
            }
           ]
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": {
              "type": "NumberLiteral",
              "number": "2",
              "subdenomination": null
             }
            },
            "name": "payoutRatio",
            "identifier": {
             "type": "Identifier",
             "name": "payoutRatio"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "TupleExpression",
            "components": [
             {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "payoutRatio"
              },
              "index": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "payoutRatio"
              },
              "index": {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              }
             }
            ],
            "isArray": false
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "IDerivativeLogic"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_derivative"
                },
                "memberName": "syntheticId"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "memberName": "getExecutionPayout"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_derivative"
             },
             {
              "type": "Identifier",
              "name": "data"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "derivativeHash",
            "identifier": {
             "type": "Identifier",
             "name": "derivativeHash"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getDerivativeHash"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_derivative"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "UnaryOperation",
             "operator": "!",
             "subExpression": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "cancelled"
              },
              "index": {
               "type": "Identifier",
               "name": "derivativeHash"
              }
             },
             "isPrefix": true
            },
            {
             "type": "Identifier",
             "name": "ERROR_CORE_TICKER_WAS_CANCELLED"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": {
              "type": "NumberLiteral",
              "number": "2",
              "subdenomination": null
             }
            },
            "name": "margins",
            "identifier": {
             "type": "Identifier",
             "name": "margins"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "TupleExpression",
            "components": [
             {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "margins"
              },
              "index": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "margins"
              },
              "index": {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              }
             }
            ],
            "isArray": false
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_vars"
              },
              "memberName": "syntheticAggregator"
             },
             "memberName": "getMargin"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "derivativeHash"
             },
             {
              "type": "Identifier",
              "name": "_derivative"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": {
              "type": "NumberLiteral",
              "number": "2",
              "subdenomination": null
             }
            },
            "name": "payouts",
            "identifier": {
             "type": "Identifier",
             "name": "payouts"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "payouts"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "margins"
                  },
                  "index": {
                   "type": "NumberLiteral",
                   "number": "0",
                   "subdenomination": null
                  }
                 },
                 "memberName": "add"
                },
                "arguments": [
                 {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "margins"
                  },
                  "index": {
                   "type": "NumberLiteral",
                   "number": "1",
                   "subdenomination": null
                  }
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "memberName": "mul"
              },
              "arguments": [
               {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "payoutRatio"
                },
                "index": {
                 "type": "NumberLiteral",
                 "number": "0",
                 "subdenomination": null
                }
               }
              ],
              "names": [],
              "identifiers": []
             },
             "memberName": "div"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "payoutRatio"
                },
                "index": {
                 "type": "NumberLiteral",
                 "number": "0",
                 "subdenomination": null
                }
               },
               "memberName": "add"
              },
              "arguments": [
               {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "payoutRatio"
                },
                "index": {
                 "type": "NumberLiteral",
                 "number": "1",
                 "subdenomination": null
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "payouts"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "margins"
                  },
                  "index": {
                   "type": "NumberLiteral",
                   "number": "0",
                   "subdenomination": null
                  }
                 },
                 "memberName": "add"
                },
                "arguments": [
                 {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "margins"
                  },
                  "index": {
                   "type": "NumberLiteral",
                   "number": "1",
                   "subdenomination": null
                  }
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "memberName": "mul"
              },
              "arguments": [
               {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "payoutRatio"
                },
                "index": {
                 "type": "NumberLiteral",
                 "number": "1",
                 "subdenomination": null
                }
               }
              ],
              "names": [],
              "identifiers": []
             },
             "memberName": "div"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "payoutRatio"
                },
                "index": {
                 "type": "NumberLiteral",
                 "number": "0",
                 "subdenomination": null
                }
               },
               "memberName": "add"
              },
              "arguments": [
               {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "payoutRatio"
                },
                "index": {
                 "type": "NumberLiteral",
                 "number": "1",
                 "subdenomination": null
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "derivativeHash"
             },
             "memberName": "getLongTokenId"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           },
           "right": {
            "type": "Identifier",
            "name": "_tokenId"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "IfStatement",
             "condition": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_vars"
                },
                "memberName": "syntheticAggregator"
               },
               "memberName": "isPool"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "derivativeHash"
               },
               {
                "type": "Identifier",
                "name": "_derivative"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "payout"
                 },
                 "right": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "payoutRatio"
                  },
                  "index": {
                   "type": "NumberLiteral",
                   "number": "0",
                   "subdenomination": null
                  }
                 }
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "payout"
                 },
                 "right": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "payout"
                   },
                   "memberName": "mul"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "_quantity"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "require"
                 },
                 "arguments": [
                  {
                   "type": "BinaryOperation",
                   "operator": ">=",
                   "left": {
                    "type": "IndexAccess",
                    "base": {
                     "type": "IndexAccess",
                     "base": {
                      "type": "Identifier",
                      "name": "poolVaults"
                     },
                     "index": {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "Identifier",
                       "name": "_derivative"
                      },
                      "memberName": "syntheticId"
                     }
                    },
                    "index": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "_derivative"
                     },
                     "memberName": "token"
                    }
                   },
                   "right": {
                    "type": "Identifier",
                    "name": "payout"
                   }
                  },
                  {
                   "type": "Identifier",
                   "name": "ERROR_CORE_INSUFFICIENT_POOL_BALANCE"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "IndexAccess",
                   "base": {
                    "type": "Identifier",
                    "name": "poolVaults"
                   },
                   "index": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "_derivative"
                    },
                    "memberName": "syntheticId"
                   }
                  },
                  "index": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "_derivative"
                   },
                   "memberName": "token"
                  }
                 },
                 "right": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "IndexAccess",
                    "base": {
                     "type": "IndexAccess",
                     "base": {
                      "type": "Identifier",
                      "name": "poolVaults"
                     },
                     "index": {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "Identifier",
                       "name": "_derivative"
                      },
                      "memberName": "syntheticId"
                     }
                    },
                    "index": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "_derivative"
                     },
                     "memberName": "token"
                    }
                   },
                   "memberName": "sub"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "payout"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                }
               }
              ]
             },
             "falseBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "payout"
                 },
                 "right": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "payouts"
                  },
                  "index": {
                   "type": "NumberLiteral",
                   "number": "0",
                   "subdenomination": null
                  }
                 }
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "payout"
                 },
                 "right": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "payout"
                   },
                   "memberName": "mul"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "_quantity"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                }
               }
              ]
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": ">",
              "left": {
               "type": "Identifier",
               "name": "payout"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "margins"
                 },
                 "index": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                 }
                },
                "memberName": "mul"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_quantity"
                }
               ],
               "names": [],
               "identifiers": []
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "payout"
                 },
                 "right": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "payout"
                   },
                   "memberName": "sub"
                  },
                  "arguments": [
                   {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "Identifier",
                     "name": "_getFees"
                    },
                    "arguments": [
                     {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "Identifier",
                       "name": "_vars"
                      },
                      "memberName": "syntheticAggregator"
                     },
                     {
                      "type": "Identifier",
                      "name": "derivativeHash"
                     },
                     {
                      "type": "Identifier",
                      "name": "_derivative"
                     },
                     {
                      "type": "BinaryOperation",
                      "operator": "-",
                      "left": {
                       "type": "Identifier",
                       "name": "payout"
                      },
                      "right": {
                       "type": "FunctionCall",
                       "expression": {
                        "type": "MemberAccess",
                        "expression": {
                         "type": "IndexAccess",
                         "base": {
                          "type": "Identifier",
                          "name": "margins"
                         },
                         "index": {
                          "type": "NumberLiteral",
                          "number": "0",
                          "subdenomination": null
                         }
                        },
                        "memberName": "mul"
                       },
                       "arguments": [
                        {
                         "type": "Identifier",
                         "name": "_quantity"
                        }
                       ],
                       "names": [],
                       "identifiers": []
                      }
                     }
                    ],
                    "names": [],
                    "identifiers": []
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                }
               }
              ]
             },
             "falseBody": null
            }
           ]
          },
          "falseBody": {
           "type": "IfStatement",
           "condition": {
            "type": "BinaryOperation",
            "operator": "==",
            "left": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "derivativeHash"
              },
              "memberName": "getShortTokenId"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            "right": {
             "type": "Identifier",
             "name": "_tokenId"
            }
           },
           "trueBody": {
            "type": "Block",
            "statements": [
             {
              "type": "ExpressionStatement",
              "expression": {
               "type": "BinaryOperation",
               "operator": "=",
               "left": {
                "type": "Identifier",
                "name": "payout"
               },
               "right": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "payouts"
                },
                "index": {
                 "type": "NumberLiteral",
                 "number": "1",
                 "subdenomination": null
                }
               }
              }
             },
             {
              "type": "ExpressionStatement",
              "expression": {
               "type": "BinaryOperation",
               "operator": "=",
               "left": {
                "type": "Identifier",
                "name": "payout"
               },
               "right": {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "payout"
                 },
                 "memberName": "mul"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "_quantity"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              }
             },
             {
              "type": "IfStatement",
              "condition": {
               "type": "BinaryOperation",
               "operator": ">",
               "left": {
                "type": "Identifier",
                "name": "payout"
               },
               "right": {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "margins"
                  },
                  "index": {
                   "type": "NumberLiteral",
                   "number": "1",
                   "subdenomination": null
                  }
                 },
                 "memberName": "mul"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "_quantity"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              },
              "trueBody": {
               "type": "Block",
               "statements": [
                {
                 "type": "ExpressionStatement",
                 "expression": {
                  "type": "BinaryOperation",
                  "operator": "=",
                  "left": {
                   "type": "Identifier",
                   "name": "payout"
                  },
                  "right": {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "payout"
                    },
                    "memberName": "sub"
                   },
                   "arguments": [
                    {
                     "type": "FunctionCall",
                     "expression": {
                      "type": "Identifier",
                      "name": "_getFees"
                     },
                     "arguments": [
                      {
                       "type": "MemberAccess",
                       "expression": {
                        "type": "Identifier",
                        "name": "_vars"
                       },
                       "memberName": "syntheticAggregator"
                      },
                      {
                       "type": "Identifier",
                       "name": "derivativeHash"
                      },
                      {
                       "type": "Identifier",
                       "name": "_derivative"
                      },
                      {
                       "type": "BinaryOperation",
                       "operator": "-",
                       "left": {
                        "type": "Identifier",
                        "name": "payout"
                       },
                       "right": {
                        "type": "FunctionCall",
                        "expression": {
                         "type": "MemberAccess",
                         "expression": {
                          "type": "IndexAccess",
                          "base": {
                           "type": "Identifier",
                           "name": "margins"
                          },
                          "index": {
                           "type": "NumberLiteral",
                           "number": "1",
                           "subdenomination": null
                          }
                         },
                         "memberName": "mul"
                        },
                        "arguments": [
                         {
                          "type": "Identifier",
                          "name": "_quantity"
                         }
                        ],
                        "names": [],
                        "identifiers": []
                       }
                      }
                     ],
                     "names": [],
                     "identifiers": []
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 }
                }
               ]
              },
              "falseBody": null
             }
            ]
           },
           "falseBody": {
            "type": "Block",
            "statements": [
             {
              "type": "ExpressionStatement",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "revert"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "ERROR_CORE_UNKNOWN_POSITION_TYPE"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            ]
           }
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_getFees",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "SyntheticAggregator"
         },
         "name": "_syntheticAggregator",
         "identifier": {
          "type": "Identifier",
          "name": "_syntheticAggregator"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_derivativeHash",
         "identifier": {
          "type": "Identifier",
          "name": "_derivativeHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Derivative"
         },
         "name": "_derivative",
         "identifier": {
          "type": "Identifier",
          "name": "_derivative"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_profit",
         "identifier": {
          "type": "Identifier",
          "name": "_profit"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "fee",
         "identifier": {
          "type": "Identifier",
          "name": "fee"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "authorAddress",
            "identifier": {
             "type": "Identifier",
             "name": "authorAddress"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_syntheticAggregator"
            },
            "memberName": "getAuthorAddress"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_derivativeHash"
            },
            {
             "type": "Identifier",
             "name": "_derivative"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "commission",
            "identifier": {
             "type": "Identifier",
             "name": "commission"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_syntheticAggregator"
            },
            "memberName": "getAuthorCommission"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_derivativeHash"
            },
            {
             "type": "Identifier",
             "name": "_derivative"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "fee"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_profit"
               },
               "memberName": "mul"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "commission"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "memberName": "div"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "COMMISSION_BASE"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "fee"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "opiumFee",
            "identifier": {
             "type": "Identifier",
             "name": "opiumFee"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "fee"
              },
              "memberName": "mul"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "OPIUM_COMMISSION_PART"
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "div"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "OPIUM_COMMISSION_BASE"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "authorFee",
            "identifier": {
             "type": "Identifier",
             "name": "authorFee"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "fee"
            },
            "memberName": "sub"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "opiumFee"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "feesVaults"
             },
             "index": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "registry"
               },
               "memberName": "getOpiumAddress"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            },
            "index": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_derivative"
             },
             "memberName": "token"
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "IndexAccess",
              "base": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "feesVaults"
               },
               "index": {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "registry"
                 },
                 "memberName": "getOpiumAddress"
                },
                "arguments": [],
                "names": [],
                "identifiers": []
               }
              },
              "index": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_derivative"
               },
               "memberName": "token"
              }
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "opiumFee"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "feesVaults"
             },
             "index": {
              "type": "Identifier",
              "name": "authorAddress"
             }
            },
            "index": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_derivative"
             },
             "memberName": "token"
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "IndexAccess",
              "base": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "feesVaults"
               },
               "index": {
                "type": "Identifier",
                "name": "authorAddress"
               }
              },
              "index": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_derivative"
               },
               "memberName": "token"
              }
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "authorFee"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Smartdec-Opium Smart Contracts Security Analysis/opium-contracts-60ff6f80996b83f6ad19c35b74480fef34f7dc03/contracts/test/WETH.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.5.4"
    },
    {
     "type": "ContractDefinition",
     "name": "WETH",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "name",
         "identifier": {
          "type": "Identifier",
          "name": "name"
         },
         "expression": {
          "type": "StringLiteral",
          "value": "Wrapped Ether",
          "parts": [
           "Wrapped Ether"
          ],
          "isUnicode": [
           false
          ]
         },
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "StringLiteral",
        "value": "Wrapped Ether",
        "parts": [
         "Wrapped Ether"
        ],
        "isUnicode": [
         false
        ]
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "symbol",
         "identifier": {
          "type": "Identifier",
          "name": "symbol"
         },
         "expression": {
          "type": "StringLiteral",
          "value": "WETH",
          "parts": [
           "WETH"
          ],
          "isUnicode": [
           false
          ]
         },
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "StringLiteral",
        "value": "WETH",
        "parts": [
         "WETH"
        ],
        "isUnicode": [
         false
        ]
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "decimals",
         "identifier": {
          "type": "Identifier",
          "name": "decimals"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "18",
          "subdenomination": null
         },
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "18",
        "subdenomination": null
       }
      },
      {
       "type": "EventDefinition",
       "name": "Approval",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "src",
         "identifier": {
          "type": "Identifier",
          "name": "src"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "guy",
         "identifier": {
          "type": "Identifier",
          "name": "guy"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "wad",
         "identifier": {
          "type": "Identifier",
          "name": "wad"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "Transfer",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "src",
         "identifier": {
          "type": "Identifier",
          "name": "src"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "dst",
         "identifier": {
          "type": "Identifier",
          "name": "dst"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "wad",
         "identifier": {
          "type": "Identifier",
          "name": "wad"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "Deposit",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "dst",
         "identifier": {
          "type": "Identifier",
          "name": "dst"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "wad",
         "identifier": {
          "type": "Identifier",
          "name": "wad"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "Withdrawal",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "src",
         "identifier": {
          "type": "Identifier",
          "name": "src"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "wad",
         "identifier": {
          "type": "Identifier",
          "name": "wad"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "uint",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "balanceOf",
         "identifier": {
          "type": "Identifier",
          "name": "balanceOf"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "Mapping",
           "keyType": {
            "type": "ElementaryTypeName",
            "name": "address",
            "stateMutability": null
           },
           "keyName": null,
           "valueType": {
            "type": "ElementaryTypeName",
            "name": "uint",
            "stateMutability": null
           },
           "valueName": null
          },
          "valueName": null
         },
         "name": "allowance",
         "identifier": {
          "type": "Identifier",
          "name": "allowance"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "FunctionDefinition",
       "name": "",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "deposit"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": true,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "deposit",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "+=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "balanceOf"
            },
            "index": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            }
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "msg"
            },
            "memberName": "value"
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "Deposit"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "value"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "withdraw",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "wad",
         "identifier": {
          "type": "Identifier",
          "name": "wad"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">=",
             "left": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "balanceOf"
              },
              "index": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "msg"
               },
               "memberName": "sender"
              }
             },
             "right": {
              "type": "Identifier",
              "name": "wad"
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "-=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "balanceOf"
            },
            "index": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            }
           },
           "right": {
            "type": "Identifier",
            "name": "wad"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            "memberName": "transfer"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "wad"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "Withdrawal"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "wad"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "totalSupply",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "MemberAccess",
           "expression": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "address"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "this"
             }
            ],
            "names": [],
            "identifiers": []
           },
           "memberName": "balance"
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "approve",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "guy",
         "identifier": {
          "type": "Identifier",
          "name": "guy"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "wad",
         "identifier": {
          "type": "Identifier",
          "name": "wad"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "allowance"
             },
             "index": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "sender"
             }
            },
            "index": {
             "type": "Identifier",
             "name": "guy"
            }
           },
           "right": {
            "type": "Identifier",
            "name": "wad"
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "Approval"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "guy"
            },
            {
             "type": "Identifier",
             "name": "wad"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BooleanLiteral",
           "value": true
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "transfer",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "dst",
         "identifier": {
          "type": "Identifier",
          "name": "dst"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "wad",
         "identifier": {
          "type": "Identifier",
          "name": "wad"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "transferFrom"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "dst"
            },
            {
             "type": "Identifier",
             "name": "wad"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "transferFrom",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "src",
         "identifier": {
          "type": "Identifier",
          "name": "src"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "dst",
         "identifier": {
          "type": "Identifier",
          "name": "dst"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "wad",
         "identifier": {
          "type": "Identifier",
          "name": "wad"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">=",
             "left": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "balanceOf"
              },
              "index": {
               "type": "Identifier",
               "name": "src"
              }
             },
             "right": {
              "type": "Identifier",
              "name": "wad"
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "&&",
           "left": {
            "type": "BinaryOperation",
            "operator": "!=",
            "left": {
             "type": "Identifier",
             "name": "src"
            },
            "right": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            }
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "!=",
            "left": {
             "type": "IndexAccess",
             "base": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "allowance"
              },
              "index": {
               "type": "Identifier",
               "name": "src"
              }
             },
             "index": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "sender"
             }
            },
            "right": {
             "type": "FunctionCall",
             "expression": {
              "type": "ElementaryTypeName",
              "name": "uint",
              "stateMutability": null
             },
             "arguments": [
              {
               "type": "UnaryOperation",
               "operator": "-",
               "subExpression": {
                "type": "NumberLiteral",
                "number": "1",
                "subdenomination": null
               },
               "isPrefix": true
              }
             ],
             "names": [],
             "identifiers": []
            }
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": ">=",
                "left": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "allowance"
                  },
                  "index": {
                   "type": "Identifier",
                   "name": "src"
                  }
                 },
                 "index": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "msg"
                  },
                  "memberName": "sender"
                 }
                },
                "right": {
                 "type": "Identifier",
                 "name": "wad"
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "-=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "allowance"
                },
                "index": {
                 "type": "Identifier",
                 "name": "src"
                }
               },
               "index": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "msg"
                },
                "memberName": "sender"
               }
              },
              "right": {
               "type": "Identifier",
               "name": "wad"
              }
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "-=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "balanceOf"
            },
            "index": {
             "type": "Identifier",
             "name": "src"
            }
           },
           "right": {
            "type": "Identifier",
            "name": "wad"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "+=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "balanceOf"
            },
            "index": {
             "type": "Identifier",
             "name": "dst"
            }
           },
           "right": {
            "type": "Identifier",
            "name": "wad"
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "Transfer"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "src"
            },
            {
             "type": "Identifier",
             "name": "dst"
            },
            {
             "type": "Identifier",
             "name": "wad"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BooleanLiteral",
           "value": true
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Smartdec-Opium Smart Contracts Security Analysis/opium-contracts-60ff6f80996b83f6ad19c35b74480fef34f7dc03/contracts/test/TestToken.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.5.4"
    },
    {
     "type": "ContractDefinition",
     "name": "ERC20Basic",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "totalSupply",
         "identifier": {
          "type": "Identifier",
          "name": "totalSupply"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "FunctionDefinition",
       "name": "balanceOf",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "who",
         "identifier": {
          "type": "Identifier",
          "name": "who"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "transfer",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "to",
         "identifier": {
          "type": "Identifier",
          "name": "to"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "value",
         "identifier": {
          "type": "Identifier",
          "name": "value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "EventDefinition",
       "name": "Transfer",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "from",
         "identifier": {
          "type": "Identifier",
          "name": "from"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "to",
         "identifier": {
          "type": "Identifier",
          "name": "to"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "value",
         "identifier": {
          "type": "Identifier",
          "name": "value"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      }
     ],
     "kind": "contract"
    },
    {
     "type": "ContractDefinition",
     "name": "SafeMath",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "mul",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "a",
         "identifier": {
          "type": "Identifier",
          "name": "a"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "b",
         "identifier": {
          "type": "Identifier",
          "name": "b"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "a"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "c",
            "identifier": {
             "type": "Identifier",
             "name": "c"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "BinaryOperation",
           "operator": "*",
           "left": {
            "type": "Identifier",
            "name": "a"
           },
           "right": {
            "type": "Identifier",
            "name": "b"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "assert"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "BinaryOperation",
              "operator": "/",
              "left": {
               "type": "Identifier",
               "name": "c"
              },
              "right": {
               "type": "Identifier",
               "name": "a"
              }
             },
             "right": {
              "type": "Identifier",
              "name": "b"
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "c"
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "div",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "a",
         "identifier": {
          "type": "Identifier",
          "name": "a"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "b",
         "identifier": {
          "type": "Identifier",
          "name": "b"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "c",
            "identifier": {
             "type": "Identifier",
             "name": "c"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "BinaryOperation",
           "operator": "/",
           "left": {
            "type": "Identifier",
            "name": "a"
           },
           "right": {
            "type": "Identifier",
            "name": "b"
           }
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "c"
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "sub",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "a",
         "identifier": {
          "type": "Identifier",
          "name": "a"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "b",
         "identifier": {
          "type": "Identifier",
          "name": "b"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "assert"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<=",
             "left": {
              "type": "Identifier",
              "name": "b"
             },
             "right": {
              "type": "Identifier",
              "name": "a"
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "-",
           "left": {
            "type": "Identifier",
            "name": "a"
           },
           "right": {
            "type": "Identifier",
            "name": "b"
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "add",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "a",
         "identifier": {
          "type": "Identifier",
          "name": "a"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "b",
         "identifier": {
          "type": "Identifier",
          "name": "b"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "c",
            "identifier": {
             "type": "Identifier",
             "name": "c"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "BinaryOperation",
           "operator": "+",
           "left": {
            "type": "Identifier",
            "name": "a"
           },
           "right": {
            "type": "Identifier",
            "name": "b"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "assert"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">=",
             "left": {
              "type": "Identifier",
              "name": "c"
             },
             "right": {
              "type": "Identifier",
              "name": "a"
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "c"
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      }
     ],
     "kind": "library"
    },
    {
     "type": "ContractDefinition",
     "name": "BasicToken",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ERC20Basic"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "libraryName": "SafeMath",
       "functions": [],
       "operators": []
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "balances",
         "identifier": {
          "type": "Identifier",
          "name": "balances"
         },
         "expression": null,
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "FunctionDefinition",
       "name": "transfer",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_to",
         "identifier": {
          "type": "Identifier",
          "name": "_to"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "_to"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<=",
             "left": {
              "type": "Identifier",
              "name": "_value"
             },
             "right": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "balances"
              },
              "index": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "msg"
               },
               "memberName": "sender"
              }
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "balances"
            },
            "index": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "balances"
              },
              "index": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "msg"
               },
               "memberName": "sender"
              }
             },
             "memberName": "sub"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_value"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "balances"
            },
            "index": {
             "type": "Identifier",
             "name": "_to"
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "balances"
              },
              "index": {
               "type": "Identifier",
               "name": "_to"
              }
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_value"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "Transfer"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "_to"
            },
            {
             "type": "Identifier",
             "name": "_value"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BooleanLiteral",
           "value": true
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "balanceOf",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_owner",
         "identifier": {
          "type": "Identifier",
          "name": "_owner"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "balance",
         "identifier": {
          "type": "Identifier",
          "name": "balance"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "balances"
           },
           "index": {
            "type": "Identifier",
            "name": "_owner"
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "contract"
    },
    {
     "type": "ContractDefinition",
     "name": "ERC20",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ERC20Basic"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "allowance",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "owner",
         "identifier": {
          "type": "Identifier",
          "name": "owner"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "spender",
         "identifier": {
          "type": "Identifier",
          "name": "spender"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "transferFrom",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "from",
         "identifier": {
          "type": "Identifier",
          "name": "from"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "to",
         "identifier": {
          "type": "Identifier",
          "name": "to"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "value",
         "identifier": {
          "type": "Identifier",
          "name": "value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "approve",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "spender",
         "identifier": {
          "type": "Identifier",
          "name": "spender"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "value",
         "identifier": {
          "type": "Identifier",
          "name": "value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "EventDefinition",
       "name": "Approval",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "owner",
         "identifier": {
          "type": "Identifier",
          "name": "owner"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "spender",
         "identifier": {
          "type": "Identifier",
          "name": "spender"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "value",
         "identifier": {
          "type": "Identifier",
          "name": "value"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      }
     ],
     "kind": "contract"
    },
    {
     "type": "ContractDefinition",
     "name": "StandardToken",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ERC20"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "BasicToken"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "Mapping",
           "keyType": {
            "type": "ElementaryTypeName",
            "name": "address",
            "stateMutability": null
           },
           "keyName": null,
           "valueType": {
            "type": "ElementaryTypeName",
            "name": "uint256",
            "stateMutability": null
           },
           "valueName": null
          },
          "valueName": null
         },
         "name": "allowed",
         "identifier": {
          "type": "Identifier",
          "name": "allowed"
         },
         "expression": null,
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "FunctionDefinition",
       "name": "transferFrom",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_from",
         "identifier": {
          "type": "Identifier",
          "name": "_from"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_to",
         "identifier": {
          "type": "Identifier",
          "name": "_to"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "_to"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<=",
             "left": {
              "type": "Identifier",
              "name": "_value"
             },
             "right": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "balances"
              },
              "index": {
               "type": "Identifier",
               "name": "_from"
              }
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<=",
             "left": {
              "type": "Identifier",
              "name": "_value"
             },
             "right": {
              "type": "IndexAccess",
              "base": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "allowed"
               },
               "index": {
                "type": "Identifier",
                "name": "_from"
               }
              },
              "index": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "msg"
               },
               "memberName": "sender"
              }
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "balances"
            },
            "index": {
             "type": "Identifier",
             "name": "_from"
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "balances"
              },
              "index": {
               "type": "Identifier",
               "name": "_from"
              }
             },
             "memberName": "sub"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_value"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "balances"
            },
            "index": {
             "type": "Identifier",
             "name": "_to"
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "balances"
              },
              "index": {
               "type": "Identifier",
               "name": "_to"
              }
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_value"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "allowed"
             },
             "index": {
              "type": "Identifier",
              "name": "_from"
             }
            },
            "index": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "IndexAccess",
              "base": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "allowed"
               },
               "index": {
                "type": "Identifier",
                "name": "_from"
               }
              },
              "index": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "msg"
               },
               "memberName": "sender"
              }
             },
             "memberName": "sub"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_value"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "Transfer"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_from"
            },
            {
             "type": "Identifier",
             "name": "_to"
            },
            {
             "type": "Identifier",
             "name": "_value"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BooleanLiteral",
           "value": true
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "approve",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_spender",
         "identifier": {
          "type": "Identifier",
          "name": "_spender"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_value",
         "identifier": {
          "type": "Identifier",
          "name": "_value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "allowed"
             },
             "index": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "sender"
             }
            },
            "index": {
             "type": "Identifier",
             "name": "_spender"
            }
           },
           "right": {
            "type": "Identifier",
            "name": "_value"
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "Approval"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "_spender"
            },
            {
             "type": "Identifier",
             "name": "_value"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BooleanLiteral",
           "value": true
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "allowance",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_owner",
         "identifier": {
          "type": "Identifier",
          "name": "_owner"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_spender",
         "identifier": {
          "type": "Identifier",
          "name": "_spender"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "IndexAccess",
           "base": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "allowed"
            },
            "index": {
             "type": "Identifier",
             "name": "_owner"
            }
           },
           "index": {
            "type": "Identifier",
            "name": "_spender"
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "increaseApproval",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_spender",
         "identifier": {
          "type": "Identifier",
          "name": "_spender"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "_addedValue",
         "identifier": {
          "type": "Identifier",
          "name": "_addedValue"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "allowed"
             },
             "index": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "sender"
             }
            },
            "index": {
             "type": "Identifier",
             "name": "_spender"
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "IndexAccess",
              "base": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "allowed"
               },
               "index": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "msg"
                },
                "memberName": "sender"
               }
              },
              "index": {
               "type": "Identifier",
               "name": "_spender"
              }
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_addedValue"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "Approval"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "_spender"
            },
            {
             "type": "IndexAccess",
             "base": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "allowed"
              },
              "index": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "msg"
               },
               "memberName": "sender"
              }
             },
             "index": {
              "type": "Identifier",
              "name": "_spender"
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BooleanLiteral",
           "value": true
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "decreaseApproval",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_spender",
         "identifier": {
          "type": "Identifier",
          "name": "_spender"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "_subtractedValue",
         "identifier": {
          "type": "Identifier",
          "name": "_subtractedValue"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint",
             "stateMutability": null
            },
            "name": "oldValue",
            "identifier": {
             "type": "Identifier",
             "name": "oldValue"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "allowed"
            },
            "index": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            }
           },
           "index": {
            "type": "Identifier",
            "name": "_spender"
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "_subtractedValue"
           },
           "right": {
            "type": "Identifier",
            "name": "oldValue"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "allowed"
                },
                "index": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "msg"
                 },
                 "memberName": "sender"
                }
               },
               "index": {
                "type": "Identifier",
                "name": "_spender"
               }
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "allowed"
                },
                "index": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "msg"
                 },
                 "memberName": "sender"
                }
               },
               "index": {
                "type": "Identifier",
                "name": "_spender"
               }
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "oldValue"
                },
                "memberName": "sub"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "_subtractedValue"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "Approval"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "_spender"
            },
            {
             "type": "IndexAccess",
             "base": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "allowed"
              },
              "index": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "msg"
               },
               "memberName": "sender"
              }
             },
             "index": {
              "type": "Identifier",
              "name": "_spender"
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BooleanLiteral",
           "value": true
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    },
    {
     "type": "ContractDefinition",
     "name": "TestToken",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "StandardToken"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "name",
         "identifier": {
          "type": "Identifier",
          "name": "name"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "symbol",
         "identifier": {
          "type": "Identifier",
          "name": "symbol"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "decimals",
         "identifier": {
          "type": "Identifier",
          "name": "decimals"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "18",
          "subdenomination": null
         },
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "18",
        "subdenomination": null
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint",
          "stateMutability": null
         },
         "name": "totalSupply",
         "identifier": {
          "type": "Identifier",
          "name": "totalSupply"
         },
         "expression": {
          "type": "BinaryOperation",
          "operator": "*",
          "left": {
           "type": "NumberLiteral",
           "number": "1000000",
           "subdenomination": null
          },
          "right": {
           "type": "BinaryOperation",
           "operator": "**",
           "left": {
            "type": "NumberLiteral",
            "number": "10",
            "subdenomination": null
           },
           "right": {
            "type": "NumberLiteral",
            "number": "18",
            "subdenomination": null
           }
          }
         },
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "BinaryOperation",
        "operator": "*",
        "left": {
         "type": "NumberLiteral",
         "number": "1000000",
         "subdenomination": null
        },
        "right": {
         "type": "BinaryOperation",
         "operator": "**",
         "left": {
          "type": "NumberLiteral",
          "number": "10",
          "subdenomination": null
         },
         "right": {
          "type": "NumberLiteral",
          "number": "18",
          "subdenomination": null
         }
        }
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "owner",
         "identifier": {
          "type": "Identifier",
          "name": "owner"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_name",
         "identifier": {
          "type": "Identifier",
          "name": "_name"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_symbol",
         "identifier": {
          "type": "Identifier",
          "name": "_symbol"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "_decimals",
         "identifier": {
          "type": "Identifier",
          "name": "_decimals"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "name"
           },
           "right": {
            "type": "Identifier",
            "name": "_name"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "symbol"
           },
           "right": {
            "type": "Identifier",
            "name": "_symbol"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "decimals"
           },
           "right": {
            "type": "Identifier",
            "name": "_decimals"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "balances"
            },
            "index": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            }
           },
           "right": {
            "type": "Identifier",
            "name": "totalSupply"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "owner"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "msg"
            },
            "memberName": "sender"
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "mint",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_to",
         "identifier": {
          "type": "Identifier",
          "name": "_to"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_amount",
         "identifier": {
          "type": "Identifier",
          "name": "_amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "sender"
             },
             "right": {
              "type": "Identifier",
              "name": "owner"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Only owner can mint",
             "parts": [
              "Only owner can mint"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "+=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "balances"
            },
            "index": {
             "type": "Identifier",
             "name": "_to"
            }
           },
           "right": {
            "type": "Identifier",
            "name": "_amount"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "+=",
           "left": {
            "type": "Identifier",
            "name": "totalSupply"
           },
           "right": {
            "type": "Identifier",
            "name": "_amount"
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Smartdec-Opium Smart Contracts Security Analysis/opium-contracts-60ff6f80996b83f6ad19c35b74480fef34f7dc03/contracts/test/OracleIdMock.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.5.4"
    },
    {
     "type": "ImportDirective",
     "path": "../Interface/IOracleId.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../Interface/IOracleId.sol",
      "parts": [
       "../Interface/IOracleId.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../Lib/usingRegistry.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../Lib/usingRegistry.sol",
      "parts": [
       "../Lib/usingRegistry.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../OracleAggregator.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../OracleAggregator.sol",
      "parts": [
       "../OracleAggregator.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "OracleIdMock",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "IOracleId"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "usingRegistry"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "fetchPrice",
         "identifier": {
          "type": "Identifier",
          "name": "fetchPrice"
         },
         "expression": null,
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_fetchPrice",
         "identifier": {
          "type": "Identifier",
          "name": "_fetchPrice"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_registry",
         "identifier": {
          "type": "Identifier",
          "name": "_registry"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "fetchPrice"
           },
           "right": {
            "type": "Identifier",
            "name": "_fetchPrice"
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "usingRegistry",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_registry"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "triggerCallback",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "timestamp",
         "identifier": {
          "type": "Identifier",
          "name": "timestamp"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "returnData",
         "identifier": {
          "type": "Identifier",
          "name": "returnData"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "OracleAggregator"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "registry"
                },
                "memberName": "getOracleAggregator"
               },
               "arguments": [],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "__callback"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "timestamp"
            },
            {
             "type": "Identifier",
             "name": "returnData"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "fetchData",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "timestamp",
         "identifier": {
          "type": "Identifier",
          "name": "timestamp"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": []
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "recursivelyFetchData",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "timestamp",
         "identifier": {
          "type": "Identifier",
          "name": "timestamp"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "period",
         "identifier": {
          "type": "Identifier",
          "name": "period"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "times",
         "identifier": {
          "type": "Identifier",
          "name": "times"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": []
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "calculateFetchPrice",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "fetchPrice"
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Smartdec-Opium Smart Contracts Security Analysis/opium-contracts-60ff6f80996b83f6ad19c35b74480fef34f7dc03/contracts/test/OptionCallSyntheticIdMock.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.5.4"
    },
    {
     "type": "PragmaDirective",
     "name": "experimental",
     "value": "ABIEncoderV2"
    },
    {
     "type": "ImportDirective",
     "path": "openzeppelin-solidity/contracts/math/SafeMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "openzeppelin-solidity/contracts/math/SafeMath.sol",
      "parts": [
       "openzeppelin-solidity/contracts/math/SafeMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../Interface/IDerivativeLogic.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../Interface/IDerivativeLogic.sol",
      "parts": [
       "../Interface/IDerivativeLogic.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../Helpers/ExecutableByThirdParty.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../Helpers/ExecutableByThirdParty.sol",
      "parts": [
       "../Helpers/ExecutableByThirdParty.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../Helpers/HasCommission.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../Helpers/HasCommission.sol",
      "parts": [
       "../Helpers/HasCommission.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "OptionCallSyntheticIdMock",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "IDerivativeLogic"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ExecutableByThirdParty"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "HasCommission"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "libraryName": "SafeMath",
       "functions": [],
       "operators": []
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "BASE_PPT",
         "identifier": {
          "type": "Identifier",
          "name": "BASE_PPT"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "1",
          "subdenomination": "ether"
         },
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "1",
        "subdenomination": "ether"
       }
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "MetadataSet"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "{\"author\":\"DIB.ONE\",\"type\":\"option\",\"subtype\":\"call\",\"description\":\"Option Call logic contract\"}",
             "parts": [
              "{\"author\":\"DIB.ONE\",\"type\":\"option\",\"subtype\":\"call\",\"description\":\"Option Call logic contract\"}"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "validateInput",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Derivative"
         },
         "name": "_derivative",
         "identifier": {
          "type": "Identifier",
          "name": "_derivative"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_derivative"
             },
             "memberName": "params"
            },
            "memberName": "length"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "BooleanLiteral",
              "value": false
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "ppt",
            "identifier": {
             "type": "Identifier",
             "name": "ppt"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_derivative"
             },
             "memberName": "params"
            },
            "memberName": "length"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "2",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "ppt"
              },
              "right": {
               "type": "IndexAccess",
               "base": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_derivative"
                },
                "memberName": "params"
               },
               "index": {
                "type": "NumberLiteral",
                "number": "1",
                "subdenomination": null
               }
              }
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "ppt"
              },
              "right": {
               "type": "Identifier",
               "name": "BASE_PPT"
              }
             }
            }
           ]
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "strikePrice",
            "identifier": {
             "type": "Identifier",
             "name": "strikePrice"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_derivative"
            },
            "memberName": "params"
           },
           "index": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "TupleExpression",
           "components": [
            {
             "type": "BinaryOperation",
             "operator": "&&",
             "left": {
              "type": "BinaryOperation",
              "operator": "&&",
              "left": {
               "type": "BinaryOperation",
               "operator": "&&",
               "left": {
                "type": "BinaryOperation",
                "operator": ">",
                "left": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "_derivative"
                 },
                 "memberName": "margin"
                },
                "right": {
                 "type": "NumberLiteral",
                 "number": "0",
                 "subdenomination": null
                }
               },
               "right": {
                "type": "BinaryOperation",
                "operator": ">",
                "left": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "_derivative"
                 },
                 "memberName": "endTime"
                },
                "right": {
                 "type": "Identifier",
                 "name": "now"
                }
               }
              },
              "right": {
               "type": "BinaryOperation",
               "operator": ">",
               "left": {
                "type": "Identifier",
                "name": "strikePrice"
               },
               "right": {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              }
             },
             "right": {
              "type": "BinaryOperation",
              "operator": ">",
              "left": {
               "type": "Identifier",
               "name": "ppt"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             }
            }
           ],
           "isArray": false
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getMargin",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Derivative"
         },
         "name": "_derivative",
         "identifier": {
          "type": "Identifier",
          "name": "_derivative"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "buyerMargin",
         "identifier": {
          "type": "Identifier",
          "name": "buyerMargin"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "sellerMargin",
         "identifier": {
          "type": "Identifier",
          "name": "sellerMargin"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "buyerMargin"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "sellerMargin"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_derivative"
            },
            "memberName": "margin"
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getExecutionPayout",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Derivative"
         },
         "name": "_derivative",
         "identifier": {
          "type": "Identifier",
          "name": "_derivative"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_result",
         "identifier": {
          "type": "Identifier",
          "name": "_result"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "buyerPayout",
         "identifier": {
          "type": "Identifier",
          "name": "buyerPayout"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "sellerPayout",
         "identifier": {
          "type": "Identifier",
          "name": "sellerPayout"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "ppt",
            "identifier": {
             "type": "Identifier",
             "name": "ppt"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "strikePrice",
            "identifier": {
             "type": "Identifier",
             "name": "strikePrice"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_derivative"
            },
            "memberName": "params"
           },
           "index": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_derivative"
             },
             "memberName": "params"
            },
            "memberName": "length"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "2",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "ppt"
              },
              "right": {
               "type": "IndexAccess",
               "base": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_derivative"
                },
                "memberName": "params"
               },
               "index": {
                "type": "NumberLiteral",
                "number": "1",
                "subdenomination": null
               }
              }
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "ppt"
              },
              "right": {
               "type": "Identifier",
               "name": "BASE_PPT"
              }
             }
            }
           ]
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "_result"
           },
           "right": {
            "type": "Identifier",
            "name": "strikePrice"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "profit",
               "identifier": {
                "type": "Identifier",
                "name": "profit"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_result"
               },
               "memberName": "sub"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "strikePrice"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "profit"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "profit"
                  },
                  "memberName": "mul"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "ppt"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                },
                "memberName": "div"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "BASE_PPT"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "profit"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_derivative"
               },
               "memberName": "margin"
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "buyerPayout"
                 },
                 "right": {
                  "type": "Identifier",
                  "name": "profit"
                 }
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "sellerPayout"
                 },
                 "right": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "_derivative"
                    },
                    "memberName": "margin"
                   },
                   "memberName": "sub"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "profit"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                }
               }
              ]
             },
             "falseBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "buyerPayout"
                 },
                 "right": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "_derivative"
                  },
                  "memberName": "margin"
                 }
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "sellerPayout"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                 }
                }
               }
              ]
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "buyerPayout"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "sellerPayout"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_derivative"
               },
               "memberName": "margin"
              }
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "isPool",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BooleanLiteral",
           "value": false
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Smartdec-Opium Smart Contracts Security Analysis/opium-contracts-60ff6f80996b83f6ad19c35b74480fef34f7dc03/contracts/Matching/SwaprateMatch/SwaprateMatchBase.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.5.4"
    },
    {
     "type": "PragmaDirective",
     "name": "experimental",
     "value": "ABIEncoderV2"
    },
    {
     "type": "ImportDirective",
     "path": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
      "parts": [
       "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "openzeppelin-solidity/contracts/utils/ReentrancyGuard.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "openzeppelin-solidity/contracts/utils/ReentrancyGuard.sol",
      "parts": [
       "openzeppelin-solidity/contracts/utils/ReentrancyGuard.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "openzeppelin-solidity/contracts/math/SafeMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "openzeppelin-solidity/contracts/math/SafeMath.sol",
      "parts": [
       "openzeppelin-solidity/contracts/math/SafeMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "erc721o/contracts/Libs/LibPosition.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "erc721o/contracts/Libs/LibPosition.sol",
      "parts": [
       "erc721o/contracts/Libs/LibPosition.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../Lib/usingRegistry.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../Lib/usingRegistry.sol",
      "parts": [
       "../../Lib/usingRegistry.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../Errors/MatchingErrors.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../Errors/MatchingErrors.sol",
      "parts": [
       "../../Errors/MatchingErrors.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./LibSwaprateOrder.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./LibSwaprateOrder.sol",
      "parts": [
       "./LibSwaprateOrder.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../Registry.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../Registry.sol",
      "parts": [
       "../../Registry.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../Core.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../Core.sol",
      "parts": [
       "../../Core.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../SyntheticAggregator.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../SyntheticAggregator.sol",
      "parts": [
       "../../SyntheticAggregator.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "SwaprateMatchBase",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "MatchingErrors"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "LibSwaprateOrder"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "usingRegistry"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ReentrancyGuard"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "libraryName": "SafeMath",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "bytes32",
        "stateMutability": null
       },
       "libraryName": "LibPosition",
       "functions": [],
       "operators": []
      },
      {
       "type": "EventDefinition",
       "name": "Canceled",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "orderHash",
         "identifier": {
          "type": "Identifier",
          "name": "orderHash"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "bytes32",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "bool",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "canceled",
         "identifier": {
          "type": "Identifier",
          "name": "canceled"
         },
         "expression": null,
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "bytes32",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "bool",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "verified",
         "identifier": {
          "type": "Identifier",
          "name": "verified"
         },
         "expression": null,
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "Mapping",
           "keyType": {
            "type": "ElementaryTypeName",
            "name": "address",
            "stateMutability": null
           },
           "keyName": null,
           "valueType": {
            "type": "ElementaryTypeName",
            "name": "uint256",
            "stateMutability": null
           },
           "valueName": null
          },
          "valueName": null
         },
         "name": "balances",
         "identifier": {
          "type": "Identifier",
          "name": "balances"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "bytes32",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "bool",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "feeTaken",
         "identifier": {
          "type": "Identifier",
          "name": "feeTaken"
         },
         "expression": null,
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "FunctionDefinition",
       "name": "cancel",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "SwaprateOrder"
         },
         "name": "_order",
         "identifier": {
          "type": "Identifier",
          "name": "_order"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "sender"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_order"
              },
              "memberName": "makerAddress"
             }
            },
            {
             "type": "Identifier",
             "name": "ERROR_MATCH_CANCELLATION_NOT_ALLOWED"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "orderHash",
            "identifier": {
             "type": "Identifier",
             "name": "orderHash"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "hashOrder"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_order"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "UnaryOperation",
             "operator": "!",
             "subExpression": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "canceled"
              },
              "index": {
               "type": "Identifier",
               "name": "orderHash"
              }
             },
             "isPrefix": true
            },
            {
             "type": "Identifier",
             "name": "ERROR_MATCH_ALREADY_CANCELED"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "canceled"
            },
            "index": {
             "type": "Identifier",
             "name": "orderHash"
            }
           },
           "right": {
            "type": "BooleanLiteral",
            "value": true
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "Canceled"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "orderHash"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "withdraw",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "_token",
         "identifier": {
          "type": "Identifier",
          "name": "_token"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "balance",
            "identifier": {
             "type": "Identifier",
             "name": "balance"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "balances"
            },
            "index": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            }
           },
           "index": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "address"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_token"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "balances"
             },
             "index": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "sender"
             }
            },
            "index": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "_token"
              }
             ],
             "names": [],
             "identifiers": []
            }
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "IERC20"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "address"
               },
               "arguments": [
                {
                 "type": "NumberLiteral",
                 "number": "0",
                 "subdenomination": null
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "transfer"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "balance"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "nonReentrant",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "validateCanceled",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_hash",
         "identifier": {
          "type": "Identifier",
          "name": "_hash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "UnaryOperation",
             "operator": "!",
             "subExpression": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "canceled"
              },
              "index": {
               "type": "Identifier",
               "name": "_hash"
              }
             },
             "isPrefix": true
            },
            {
             "type": "Identifier",
             "name": "ERROR_MATCH_ORDER_WAS_CANCELED"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "validateTakerAddress",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "SwaprateOrder"
         },
         "name": "_leftOrder",
         "identifier": {
          "type": "Identifier",
          "name": "_leftOrder"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "SwaprateOrder"
         },
         "name": "_rightOrder",
         "identifier": {
          "type": "Identifier",
          "name": "_rightOrder"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "||",
             "left": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_leftOrder"
               },
               "memberName": "takerAddress"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "address"
               },
               "arguments": [
                {
                 "type": "NumberLiteral",
                 "number": "0",
                 "subdenomination": null
                }
               ],
               "names": [],
               "identifiers": []
              }
             },
             "right": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_leftOrder"
               },
               "memberName": "takerAddress"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_rightOrder"
               },
               "memberName": "makerAddress"
              }
             }
            },
            {
             "type": "Identifier",
             "name": "ERROR_MATCH_TAKER_ADDRESS_WRONG"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "validateSenderAddress",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "SwaprateOrder"
         },
         "name": "_order",
         "identifier": {
          "type": "Identifier",
          "name": "_order"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "||",
             "left": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_order"
               },
               "memberName": "senderAddress"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "address"
               },
               "arguments": [
                {
                 "type": "NumberLiteral",
                 "number": "0",
                 "subdenomination": null
                }
               ],
               "names": [],
               "identifiers": []
              }
             },
             "right": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_order"
               },
               "memberName": "senderAddress"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "msg"
               },
               "memberName": "sender"
              }
             }
            },
            {
             "type": "Identifier",
             "name": "ERROR_MATCH_SENDER_ADDRESS_WRONG"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "validateSignature",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "orderHash",
         "identifier": {
          "type": "Identifier",
          "name": "orderHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "SwaprateOrder"
         },
         "name": "_order",
         "identifier": {
          "type": "Identifier",
          "name": "_order"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "verified"
           },
           "index": {
            "type": "Identifier",
            "name": "orderHash"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": null
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bool",
             "stateMutability": null
            },
            "name": "result",
            "identifier": {
             "type": "Identifier",
             "name": "result"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "verifySignature"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "orderHash"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_order"
             },
             "memberName": "signature"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_order"
             },
             "memberName": "makerAddress"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "result"
            },
            {
             "type": "Identifier",
             "name": "ERROR_MATCH_SIGNATURE_NOT_VERIFIED"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "verified"
            },
            "index": {
             "type": "Identifier",
             "name": "orderHash"
            }
           },
           "right": {
            "type": "BooleanLiteral",
            "value": true
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "takeFees",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_orderHash",
         "identifier": {
          "type": "Identifier",
          "name": "_orderHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "SwaprateOrder"
         },
         "name": "_order",
         "identifier": {
          "type": "Identifier",
          "name": "_order"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "feeTaken"
           },
           "index": {
            "type": "Identifier",
            "name": "_orderHash"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": null
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_order"
            },
            "memberName": "feeTokenAddress"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "address"
            },
            "arguments": [
             {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": null
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "fees",
            "identifier": {
             "type": "Identifier",
             "name": "fees"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_order"
             },
             "memberName": "relayerFee"
            },
            "memberName": "add"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_order"
             },
             "memberName": "affiliateFee"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "fees"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": null
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "IERC20"
            },
            "name": "feeToken",
            "identifier": {
             "type": "Identifier",
             "name": "feeToken"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "IERC20"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_order"
             },
             "memberName": "feeTokenAddress"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">=",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "feeToken"
               },
               "memberName": "allowance"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_order"
                },
                "memberName": "makerAddress"
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "registry"
                 },
                 "memberName": "getTokenSpender"
                },
                "arguments": [],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "Identifier",
              "name": "fees"
             }
            },
            {
             "type": "Identifier",
             "name": "ERROR_MATCH_NOT_ENOUGH_ALLOWED_FEES"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "TokenSpender"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "registry"
                },
                "memberName": "getTokenSpender"
               },
               "arguments": [],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "claimTokens"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "feeToken"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_order"
             },
             "memberName": "makerAddress"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "this"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "fees"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_order"
            },
            "memberName": "relayerAddress"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "address"
            },
            "arguments": [
             {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "balances"
                },
                "index": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "_order"
                 },
                 "memberName": "relayerAddress"
                }
               },
               "index": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_order"
                },
                "memberName": "feeTokenAddress"
               }
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "balances"
                  },
                  "index": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "_order"
                   },
                   "memberName": "relayerAddress"
                  }
                 },
                 "index": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "_order"
                  },
                  "memberName": "feeTokenAddress"
                 }
                },
                "memberName": "add"
               },
               "arguments": [
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "_order"
                 },
                 "memberName": "relayerFee"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "balances"
                },
                "index": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "registry"
                  },
                  "memberName": "getOpiumAddress"
                 },
                 "arguments": [],
                 "names": [],
                 "identifiers": []
                }
               },
               "index": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_order"
                },
                "memberName": "feeTokenAddress"
               }
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "balances"
                  },
                  "index": {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "registry"
                    },
                    "memberName": "getOpiumAddress"
                   },
                   "arguments": [],
                   "names": [],
                   "identifiers": []
                  }
                 },
                 "index": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "_order"
                  },
                  "memberName": "feeTokenAddress"
                 }
                },
                "memberName": "add"
               },
               "arguments": [
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "_order"
                 },
                 "memberName": "relayerFee"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_order"
            },
            "memberName": "affiliateAddress"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "address"
            },
            "arguments": [
             {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "balances"
                },
                "index": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "_order"
                 },
                 "memberName": "affiliateAddress"
                }
               },
               "index": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_order"
                },
                "memberName": "feeTokenAddress"
               }
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "balances"
                  },
                  "index": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "_order"
                   },
                   "memberName": "affiliateAddress"
                  }
                 },
                 "index": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "_order"
                  },
                  "memberName": "feeTokenAddress"
                 }
                },
                "memberName": "add"
               },
               "arguments": [
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "_order"
                 },
                 "memberName": "affiliateFee"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "balances"
                },
                "index": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "registry"
                  },
                  "memberName": "getOpiumAddress"
                 },
                 "arguments": [],
                 "names": [],
                 "identifiers": []
                }
               },
               "index": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_order"
                },
                "memberName": "feeTokenAddress"
               }
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "balances"
                  },
                  "index": {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "registry"
                    },
                    "memberName": "getOpiumAddress"
                   },
                   "arguments": [],
                   "names": [],
                   "identifiers": []
                  }
                 },
                 "index": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "_order"
                  },
                  "memberName": "feeTokenAddress"
                 }
                },
                "memberName": "add"
               },
               "arguments": [
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "_order"
                 },
                 "memberName": "affiliateFee"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "feeTaken"
            },
            "index": {
             "type": "Identifier",
             "name": "_orderHash"
            }
           },
           "right": {
            "type": "BooleanLiteral",
            "value": true
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "min",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_a",
         "identifier": {
          "type": "Identifier",
          "name": "_a"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_b",
         "identifier": {
          "type": "Identifier",
          "name": "_b"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Conditional",
           "condition": {
            "type": "BinaryOperation",
            "operator": "<",
            "left": {
             "type": "Identifier",
             "name": "_a"
            },
            "right": {
             "type": "Identifier",
             "name": "_b"
            }
           },
           "trueExpression": {
            "type": "Identifier",
            "name": "_a"
           },
           "falseExpression": {
            "type": "Identifier",
            "name": "_b"
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Smartdec-Opium Smart Contracts Security Analysis/opium-contracts-60ff6f80996b83f6ad19c35b74480fef34f7dc03/contracts/Matching/SwaprateMatch/SwaprateMatch.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.5.4"
    },
    {
     "type": "PragmaDirective",
     "name": "experimental",
     "value": "ABIEncoderV2"
    },
    {
     "type": "ImportDirective",
     "path": "../../Lib/LibDerivative.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../Lib/LibDerivative.sol",
      "parts": [
       "../../Lib/LibDerivative.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../Core.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../Core.sol",
      "parts": [
       "../../Core.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../SyntheticAggregator.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../SyntheticAggregator.sol",
      "parts": [
       "../../SyntheticAggregator.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./SwaprateMatchBase.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./SwaprateMatchBase.sol",
      "parts": [
       "./SwaprateMatchBase.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "SwaprateMatch",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "SwaprateMatchBase"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "LibDerivative"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "bytes32",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "filled",
         "identifier": {
          "type": "Identifier",
          "name": "filled"
         },
         "expression": null,
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_registry",
         "identifier": {
          "type": "Identifier",
          "name": "_registry"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": []
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "usingRegistry",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_registry"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "create",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "SwaprateOrder"
         },
         "name": "_leftOrder",
         "identifier": {
          "type": "Identifier",
          "name": "_leftOrder"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "SwaprateOrder"
         },
         "name": "_rightOrder",
         "identifier": {
          "type": "Identifier",
          "name": "_rightOrder"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Derivative"
         },
         "name": "_derivative",
         "identifier": {
          "type": "Identifier",
          "name": "_derivative"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_leftOrder"
              },
              "memberName": "syntheticId"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_rightOrder"
              },
              "memberName": "syntheticId"
             }
            },
            {
             "type": "StringLiteral",
             "value": "MATCH:NOT_CREATION",
             "parts": [
              "MATCH:NOT_CREATION"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "UnaryOperation",
             "operator": "!",
             "subExpression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "IDerivativeLogic"
                },
                "arguments": [
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "_derivative"
                  },
                  "memberName": "syntheticId"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "memberName": "isPool"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             },
             "isPrefix": true
            },
            {
             "type": "StringLiteral",
             "value": "MATCH:CANT_BE_POOL",
             "parts": [
              "MATCH:CANT_BE_POOL"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "validateTakerAddress"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_leftOrder"
            },
            {
             "type": "Identifier",
             "name": "_rightOrder"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "validateTakerAddress"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_rightOrder"
            },
            {
             "type": "Identifier",
             "name": "_leftOrder"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "validateSenderAddress"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_leftOrder"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "validateSenderAddress"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_rightOrder"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "bytes32",
              "stateMutability": null
             },
             "length": {
              "type": "NumberLiteral",
              "number": "2",
              "subdenomination": null
             }
            },
            "name": "orderHashes",
            "identifier": {
             "type": "Identifier",
             "name": "orderHashes"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "orderHashes"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "hashOrder"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_leftOrder"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "validateCanceled"
           },
           "arguments": [
            {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "orderHashes"
             },
             "index": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "validateSignature"
           },
           "arguments": [
            {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "orderHashes"
             },
             "index": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "Identifier",
             "name": "_leftOrder"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "orderHashes"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "hashOrder"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_rightOrder"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "validateCanceled"
           },
           "arguments": [
            {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "orderHashes"
             },
             "index": {
              "type": "NumberLiteral",
              "number": "1",
              "subdenomination": null
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "validateSignature"
           },
           "arguments": [
            {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "orderHashes"
             },
             "index": {
              "type": "NumberLiteral",
              "number": "1",
              "subdenomination": null
             }
            },
            {
             "type": "Identifier",
             "name": "_rightOrder"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "name": "margins",
            "identifier": {
             "type": "Identifier",
             "name": "margins"
            },
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": {
              "type": "NumberLiteral",
              "number": "2",
              "subdenomination": null
             }
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           null
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_calculateDerivativeAndGetMargin"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_derivative"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "fillable",
            "identifier": {
             "type": "Identifier",
             "name": "fillable"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_checkFillability"
           },
           "arguments": [
            {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "orderHashes"
             },
             "index": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "Identifier",
             "name": "_leftOrder"
            },
            {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "orderHashes"
             },
             "index": {
              "type": "NumberLiteral",
              "number": "1",
              "subdenomination": null
             }
            },
            {
             "type": "Identifier",
             "name": "_rightOrder"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_verifyDerivative"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_leftOrder"
            },
            {
             "type": "Identifier",
             "name": "_rightOrder"
            },
            {
             "type": "Identifier",
             "name": "_derivative"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "takeFees"
           },
           "arguments": [
            {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "orderHashes"
             },
             "index": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "Identifier",
             "name": "_leftOrder"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "takeFees"
           },
           "arguments": [
            {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "orderHashes"
             },
             "index": {
              "type": "NumberLiteral",
              "number": "1",
              "subdenomination": null
             }
            },
            {
             "type": "Identifier",
             "name": "_rightOrder"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_distributeFunds"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_leftOrder"
            },
            {
             "type": "Identifier",
             "name": "_rightOrder"
            },
            {
             "type": "Identifier",
             "name": "_derivative"
            },
            {
             "type": "Identifier",
             "name": "margins"
            },
            {
             "type": "Identifier",
             "name": "fillable"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "Core"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "registry"
                },
                "memberName": "getCore"
               },
               "arguments": [],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "create"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_derivative"
            },
            {
             "type": "Identifier",
             "name": "fillable"
            },
            {
             "type": "TupleExpression",
             "components": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_leftOrder"
               },
               "memberName": "makerAddress"
              },
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_rightOrder"
               },
               "memberName": "makerAddress"
              }
             ],
             "isArray": true
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "nonReentrant",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_calculateDerivativeAndGetMargin",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Derivative"
         },
         "name": "_derivative",
         "identifier": {
          "type": "Identifier",
          "name": "_derivative"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": {
           "type": "NumberLiteral",
           "number": "2",
           "subdenomination": null
          }
         },
         "name": "margins",
         "identifier": {
          "type": "Identifier",
          "name": "margins"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "derivativeHash",
         "identifier": {
          "type": "Identifier",
          "name": "derivativeHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "derivativeHash"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "getDerivativeHash"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_derivative"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "TupleExpression",
            "components": [
             {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "margins"
              },
              "index": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "margins"
              },
              "index": {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              }
             }
            ],
            "isArray": false
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "SyntheticAggregator"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "registry"
                 },
                 "memberName": "getSyntheticAggregator"
                },
                "arguments": [],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             },
             "memberName": "getMargin"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "derivativeHash"
             },
             {
              "type": "Identifier",
              "name": "_derivative"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_checkFillability",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_leftOrderHash",
         "identifier": {
          "type": "Identifier",
          "name": "_leftOrderHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "SwaprateOrder"
         },
         "name": "_leftOrder",
         "identifier": {
          "type": "Identifier",
          "name": "_leftOrder"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_rightOrderHash",
         "identifier": {
          "type": "Identifier",
          "name": "_rightOrderHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "SwaprateOrder"
         },
         "name": "_rightOrder",
         "identifier": {
          "type": "Identifier",
          "name": "_rightOrder"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "fillable",
         "identifier": {
          "type": "Identifier",
          "name": "fillable"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "leftAvailable",
            "identifier": {
             "type": "Identifier",
             "name": "leftAvailable"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_leftOrder"
             },
             "memberName": "quantity"
            },
            "memberName": "sub"
           },
           "arguments": [
            {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "filled"
             },
             "index": {
              "type": "Identifier",
              "name": "_leftOrderHash"
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "rightAvailable",
            "identifier": {
             "type": "Identifier",
             "name": "rightAvailable"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_rightOrder"
             },
             "memberName": "quantity"
            },
            "memberName": "sub"
           },
           "arguments": [
            {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "filled"
             },
             "index": {
              "type": "Identifier",
              "name": "_rightOrderHash"
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "&&",
             "left": {
              "type": "BinaryOperation",
              "operator": "!=",
              "left": {
               "type": "Identifier",
               "name": "leftAvailable"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "right": {
              "type": "BinaryOperation",
              "operator": "!=",
              "left": {
               "type": "Identifier",
               "name": "rightAvailable"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             }
            },
            {
             "type": "StringLiteral",
             "value": "MATCH:NO_AVAILABLE",
             "parts": [
              "MATCH:NO_AVAILABLE"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "fillable"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "min"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "leftAvailable"
             },
             {
              "type": "Identifier",
              "name": "rightAvailable"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "&&",
           "left": {
            "type": "BinaryOperation",
            "operator": "==",
            "left": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_leftOrder"
             },
             "memberName": "partialFill"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "==",
            "left": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_rightOrder"
             },
             "memberName": "partialFill"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "==",
                "left": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "_leftOrder"
                 },
                 "memberName": "quantity"
                },
                "right": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "_rightOrder"
                 },
                 "memberName": "quantity"
                }
               },
               {
                "type": "StringLiteral",
                "value": "MATCH:FULL_FILL_NOT_POSSIBLE",
                "parts": [
                 "MATCH:FULL_FILL_NOT_POSSIBLE"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": {
           "type": "IfStatement",
           "condition": {
            "type": "BinaryOperation",
            "operator": "&&",
            "left": {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_leftOrder"
              },
              "memberName": "partialFill"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            "right": {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_rightOrder"
              },
              "memberName": "partialFill"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "1",
              "subdenomination": null
             }
            }
           },
           "trueBody": {
            "type": "Block",
            "statements": [
             {
              "type": "ExpressionStatement",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "require"
               },
               "arguments": [
                {
                 "type": "BinaryOperation",
                 "operator": "<=",
                 "left": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "_leftOrder"
                  },
                  "memberName": "quantity"
                 },
                 "right": {
                  "type": "Identifier",
                  "name": "rightAvailable"
                 }
                },
                {
                 "type": "StringLiteral",
                 "value": "MATCH:FULL_FILL_NOT_POSSIBLE",
                 "parts": [
                  "MATCH:FULL_FILL_NOT_POSSIBLE"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            ]
           },
           "falseBody": {
            "type": "IfStatement",
            "condition": {
             "type": "BinaryOperation",
             "operator": "&&",
             "left": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_leftOrder"
               },
               "memberName": "partialFill"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              }
             },
             "right": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_rightOrder"
               },
               "memberName": "partialFill"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             }
            },
            "trueBody": {
             "type": "Block",
             "statements": [
              {
               "type": "ExpressionStatement",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "require"
                },
                "arguments": [
                 {
                  "type": "BinaryOperation",
                  "operator": ">=",
                  "left": {
                   "type": "Identifier",
                   "name": "leftAvailable"
                  },
                  "right": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "_rightOrder"
                   },
                   "memberName": "quantity"
                  }
                 },
                 {
                  "type": "StringLiteral",
                  "value": "MATCH:FULL_FILL_NOT_POSSIBLE",
                  "parts": [
                   "MATCH:FULL_FILL_NOT_POSSIBLE"
                  ],
                  "isUnicode": [
                   false
                  ]
                 }
                ],
                "names": [],
                "identifiers": []
               }
              }
             ]
            },
            "falseBody": null
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "filled"
            },
            "index": {
             "type": "Identifier",
             "name": "_leftOrderHash"
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "filled"
              },
              "index": {
               "type": "Identifier",
               "name": "_leftOrderHash"
              }
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "fillable"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "filled"
            },
            "index": {
             "type": "Identifier",
             "name": "_rightOrderHash"
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "filled"
              },
              "index": {
               "type": "Identifier",
               "name": "_rightOrderHash"
              }
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "fillable"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_verifyDerivative",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "SwaprateOrder"
         },
         "name": "_leftOrder",
         "identifier": {
          "type": "Identifier",
          "name": "_leftOrder"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "SwaprateOrder"
         },
         "name": "_rightOrder",
         "identifier": {
          "type": "Identifier",
          "name": "_rightOrder"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Derivative"
         },
         "name": "_derivative",
         "identifier": {
          "type": "Identifier",
          "name": "_derivative"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "string",
             "stateMutability": null
            },
            "name": "orderError",
            "identifier": {
             "type": "Identifier",
             "name": "orderError"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "StringLiteral",
           "value": "MATCH:DERIVATIVE_PARAM_IS_WRONG",
           "parts": [
            "MATCH:DERIVATIVE_PARAM_IS_WRONG"
           ],
           "isUnicode": [
            false
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "&&",
             "left": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_derivative"
               },
               "memberName": "endTime"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_leftOrder"
               },
               "memberName": "endTime"
              }
             },
             "right": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_derivative"
               },
               "memberName": "endTime"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_rightOrder"
               },
               "memberName": "endTime"
              }
             }
            },
            {
             "type": "Identifier",
             "name": "orderError"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "&&",
             "left": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_derivative"
               },
               "memberName": "syntheticId"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_leftOrder"
               },
               "memberName": "syntheticId"
              }
             },
             "right": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_derivative"
               },
               "memberName": "syntheticId"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_rightOrder"
               },
               "memberName": "syntheticId"
              }
             }
            },
            {
             "type": "Identifier",
             "name": "orderError"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "&&",
             "left": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_derivative"
               },
               "memberName": "oracleId"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_leftOrder"
               },
               "memberName": "oracleId"
              }
             },
             "right": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_derivative"
               },
               "memberName": "oracleId"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_rightOrder"
               },
               "memberName": "oracleId"
              }
             }
            },
            {
             "type": "Identifier",
             "name": "orderError"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "&&",
             "left": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_derivative"
               },
               "memberName": "token"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_leftOrder"
               },
               "memberName": "token"
              }
             },
             "right": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_derivative"
               },
               "memberName": "token"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_rightOrder"
               },
               "memberName": "token"
              }
             }
            },
            {
             "type": "Identifier",
             "name": "orderError"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">=",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_derivative"
               },
               "memberName": "params"
              },
              "memberName": "length"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "20",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "MATCH:DERIVATIVE_PARAMS_LENGTH_IS_WRONG",
             "parts": [
              "MATCH:DERIVATIVE_PARAMS_LENGTH_IS_WRONG"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_leftOrder"
              },
              "memberName": "param0"
             },
             "right": {
              "type": "IndexAccess",
              "base": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_derivative"
               },
               "memberName": "params"
              },
              "index": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             }
            },
            {
             "type": "Identifier",
             "name": "orderError"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_leftOrder"
              },
              "memberName": "param1"
             },
             "right": {
              "type": "IndexAccess",
              "base": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_derivative"
               },
               "memberName": "params"
              },
              "index": {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              }
             }
            },
            {
             "type": "Identifier",
             "name": "orderError"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_leftOrder"
              },
              "memberName": "param2"
             },
             "right": {
              "type": "IndexAccess",
              "base": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_derivative"
               },
               "memberName": "params"
              },
              "index": {
               "type": "NumberLiteral",
               "number": "2",
               "subdenomination": null
              }
             }
            },
            {
             "type": "Identifier",
             "name": "orderError"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_leftOrder"
              },
              "memberName": "param3"
             },
             "right": {
              "type": "IndexAccess",
              "base": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_derivative"
               },
               "memberName": "params"
              },
              "index": {
               "type": "NumberLiteral",
               "number": "3",
               "subdenomination": null
              }
             }
            },
            {
             "type": "Identifier",
             "name": "orderError"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_leftOrder"
              },
              "memberName": "param4"
             },
             "right": {
              "type": "IndexAccess",
              "base": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_derivative"
               },
               "memberName": "params"
              },
              "index": {
               "type": "NumberLiteral",
               "number": "4",
               "subdenomination": null
              }
             }
            },
            {
             "type": "Identifier",
             "name": "orderError"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_leftOrder"
              },
              "memberName": "param5"
             },
             "right": {
              "type": "IndexAccess",
              "base": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_derivative"
               },
               "memberName": "params"
              },
              "index": {
               "type": "NumberLiteral",
               "number": "5",
               "subdenomination": null
              }
             }
            },
            {
             "type": "Identifier",
             "name": "orderError"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_leftOrder"
              },
              "memberName": "param6"
             },
             "right": {
              "type": "IndexAccess",
              "base": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_derivative"
               },
               "memberName": "params"
              },
              "index": {
               "type": "NumberLiteral",
               "number": "6",
               "subdenomination": null
              }
             }
            },
            {
             "type": "Identifier",
             "name": "orderError"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_leftOrder"
              },
              "memberName": "param7"
             },
             "right": {
              "type": "IndexAccess",
              "base": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_derivative"
               },
               "memberName": "params"
              },
              "index": {
               "type": "NumberLiteral",
               "number": "7",
               "subdenomination": null
              }
             }
            },
            {
             "type": "Identifier",
             "name": "orderError"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_leftOrder"
              },
              "memberName": "param8"
             },
             "right": {
              "type": "IndexAccess",
              "base": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_derivative"
               },
               "memberName": "params"
              },
              "index": {
               "type": "NumberLiteral",
               "number": "8",
               "subdenomination": null
              }
             }
            },
            {
             "type": "Identifier",
             "name": "orderError"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_leftOrder"
              },
              "memberName": "param9"
             },
             "right": {
              "type": "IndexAccess",
              "base": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_derivative"
               },
               "memberName": "params"
              },
              "index": {
               "type": "NumberLiteral",
               "number": "9",
               "subdenomination": null
              }
             }
            },
            {
             "type": "Identifier",
             "name": "orderError"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_rightOrder"
              },
              "memberName": "param0"
             },
             "right": {
              "type": "IndexAccess",
              "base": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_derivative"
               },
               "memberName": "params"
              },
              "index": {
               "type": "NumberLiteral",
               "number": "10",
               "subdenomination": null
              }
             }
            },
            {
             "type": "Identifier",
             "name": "orderError"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_rightOrder"
              },
              "memberName": "param1"
             },
             "right": {
              "type": "IndexAccess",
              "base": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_derivative"
               },
               "memberName": "params"
              },
              "index": {
               "type": "NumberLiteral",
               "number": "11",
               "subdenomination": null
              }
             }
            },
            {
             "type": "Identifier",
             "name": "orderError"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_rightOrder"
              },
              "memberName": "param2"
             },
             "right": {
              "type": "IndexAccess",
              "base": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_derivative"
               },
               "memberName": "params"
              },
              "index": {
               "type": "NumberLiteral",
               "number": "12",
               "subdenomination": null
              }
             }
            },
            {
             "type": "Identifier",
             "name": "orderError"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_rightOrder"
              },
              "memberName": "param3"
             },
             "right": {
              "type": "IndexAccess",
              "base": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_derivative"
               },
               "memberName": "params"
              },
              "index": {
               "type": "NumberLiteral",
               "number": "13",
               "subdenomination": null
              }
             }
            },
            {
             "type": "Identifier",
             "name": "orderError"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_rightOrder"
              },
              "memberName": "param4"
             },
             "right": {
              "type": "IndexAccess",
              "base": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_derivative"
               },
               "memberName": "params"
              },
              "index": {
               "type": "NumberLiteral",
               "number": "14",
               "subdenomination": null
              }
             }
            },
            {
             "type": "Identifier",
             "name": "orderError"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_rightOrder"
              },
              "memberName": "param5"
             },
             "right": {
              "type": "IndexAccess",
              "base": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_derivative"
               },
               "memberName": "params"
              },
              "index": {
               "type": "NumberLiteral",
               "number": "15",
               "subdenomination": null
              }
             }
            },
            {
             "type": "Identifier",
             "name": "orderError"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_rightOrder"
              },
              "memberName": "param6"
             },
             "right": {
              "type": "IndexAccess",
              "base": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_derivative"
               },
               "memberName": "params"
              },
              "index": {
               "type": "NumberLiteral",
               "number": "16",
               "subdenomination": null
              }
             }
            },
            {
             "type": "Identifier",
             "name": "orderError"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_rightOrder"
              },
              "memberName": "param7"
             },
             "right": {
              "type": "IndexAccess",
              "base": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_derivative"
               },
               "memberName": "params"
              },
              "index": {
               "type": "NumberLiteral",
               "number": "17",
               "subdenomination": null
              }
             }
            },
            {
             "type": "Identifier",
             "name": "orderError"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_rightOrder"
              },
              "memberName": "param8"
             },
             "right": {
              "type": "IndexAccess",
              "base": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_derivative"
               },
               "memberName": "params"
              },
              "index": {
               "type": "NumberLiteral",
               "number": "18",
               "subdenomination": null
              }
             }
            },
            {
             "type": "Identifier",
             "name": "orderError"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_rightOrder"
              },
              "memberName": "param9"
             },
             "right": {
              "type": "IndexAccess",
              "base": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_derivative"
               },
               "memberName": "params"
              },
              "index": {
               "type": "NumberLiteral",
               "number": "19",
               "subdenomination": null
              }
             }
            },
            {
             "type": "Identifier",
             "name": "orderError"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "_distributeFunds",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "SwaprateOrder"
         },
         "name": "_leftOrder",
         "identifier": {
          "type": "Identifier",
          "name": "_leftOrder"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "SwaprateOrder"
         },
         "name": "_rightOrder",
         "identifier": {
          "type": "Identifier",
          "name": "_rightOrder"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Derivative"
         },
         "name": "_derivative",
         "identifier": {
          "type": "Identifier",
          "name": "_derivative"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": {
           "type": "NumberLiteral",
           "number": "2",
           "subdenomination": null
          }
         },
         "name": "margins",
         "identifier": {
          "type": "Identifier",
          "name": "margins"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_fillable",
         "identifier": {
          "type": "Identifier",
          "name": "_fillable"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "IERC20"
            },
            "name": "marginToken",
            "identifier": {
             "type": "Identifier",
             "name": "marginToken"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "IERC20"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_derivative"
             },
             "memberName": "token"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "TokenSpender"
            },
            "name": "tokenSpender",
            "identifier": {
             "type": "Identifier",
             "name": "tokenSpender"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "TokenSpender"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "registry"
              },
              "memberName": "getTokenSpender"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "margins"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": ">=",
                "left": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "marginToken"
                  },
                  "memberName": "allowance"
                 },
                 "arguments": [
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "_leftOrder"
                   },
                   "memberName": "makerAddress"
                  },
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "Identifier",
                    "name": "address"
                   },
                   "arguments": [
                    {
                     "type": "Identifier",
                     "name": "tokenSpender"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 ],
                 "names": [],
                 "identifiers": []
                },
                "right": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "IndexAccess",
                   "base": {
                    "type": "Identifier",
                    "name": "margins"
                   },
                   "index": {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  },
                  "memberName": "mul"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "_fillable"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "StringLiteral",
                "value": "MATCH:NOT_ENOUGH_ALLOWED_MARGIN",
                "parts": [
                 "MATCH:NOT_ENOUGH_ALLOWED_MARGIN"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "tokenSpender"
               },
               "memberName": "claimTokens"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "marginToken"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_leftOrder"
                },
                "memberName": "makerAddress"
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "address"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "this"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "margins"
                  },
                  "index": {
                   "type": "NumberLiteral",
                   "number": "0",
                   "subdenomination": null
                  }
                 },
                 "memberName": "mul"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "_fillable"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "margins"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": ">=",
                "left": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "marginToken"
                  },
                  "memberName": "allowance"
                 },
                 "arguments": [
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "_rightOrder"
                   },
                   "memberName": "makerAddress"
                  },
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "Identifier",
                    "name": "address"
                   },
                   "arguments": [
                    {
                     "type": "Identifier",
                     "name": "tokenSpender"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 ],
                 "names": [],
                 "identifiers": []
                },
                "right": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "IndexAccess",
                   "base": {
                    "type": "Identifier",
                    "name": "margins"
                   },
                   "index": {
                    "type": "NumberLiteral",
                    "number": "1",
                    "subdenomination": null
                   }
                  },
                  "memberName": "mul"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "_fillable"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "StringLiteral",
                "value": "MATCH:NOT_ENOUGH_ALLOWED_MARGIN",
                "parts": [
                 "MATCH:NOT_ENOUGH_ALLOWED_MARGIN"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "tokenSpender"
               },
               "memberName": "claimTokens"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "marginToken"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_rightOrder"
                },
                "memberName": "makerAddress"
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "address"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "this"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "margins"
                  },
                  "index": {
                   "type": "NumberLiteral",
                   "number": "1",
                   "subdenomination": null
                  }
                 },
                 "memberName": "mul"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "_fillable"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "margins"
              },
              "index": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "margins"
              },
              "index": {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              }
             }
            ],
            "names": [],
            "identifiers": []
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "marginToken"
                 },
                 "memberName": "approve"
                },
                "arguments": [
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "Identifier",
                   "name": "address"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "tokenSpender"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 },
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "IndexAccess",
                      "base": {
                       "type": "Identifier",
                       "name": "margins"
                      },
                      "index": {
                       "type": "NumberLiteral",
                       "number": "0",
                       "subdenomination": null
                      }
                     },
                     "memberName": "add"
                    },
                    "arguments": [
                     {
                      "type": "IndexAccess",
                      "base": {
                       "type": "Identifier",
                       "name": "margins"
                      },
                      "index": {
                       "type": "NumberLiteral",
                       "number": "1",
                       "subdenomination": null
                      }
                     }
                    ],
                    "names": [],
                    "identifiers": []
                   },
                   "memberName": "mul"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "_fillable"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "StringLiteral",
                "value": "MATCH:COULDNT_APPROVE_MARGIN_FOR_CORE",
                "parts": [
                 "MATCH:COULDNT_APPROVE_MARGIN_FOR_CORE"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Smartdec-Opium Smart Contracts Security Analysis/opium-contracts-60ff6f80996b83f6ad19c35b74480fef34f7dc03/contracts/Matching/SwaprateMatch/LibSwaprateOrder.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.5.4"
    },
    {
     "type": "PragmaDirective",
     "name": "experimental",
     "value": "ABIEncoderV2"
    },
    {
     "type": "ImportDirective",
     "path": "../../Lib/LibEIP712.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../Lib/LibEIP712.sol",
      "parts": [
       "../../Lib/LibEIP712.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "LibSwaprateOrder",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "LibEIP712"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "StructDefinition",
       "name": "SwaprateOrder",
       "members": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "syntheticId",
         "identifier": {
          "type": "Identifier",
          "name": "syntheticId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "oracleId",
         "identifier": {
          "type": "Identifier",
          "name": "oracleId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "token",
         "identifier": {
          "type": "Identifier",
          "name": "token"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "makerAddress",
         "identifier": {
          "type": "Identifier",
          "name": "makerAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "takerAddress",
         "identifier": {
          "type": "Identifier",
          "name": "takerAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "senderAddress",
         "identifier": {
          "type": "Identifier",
          "name": "senderAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "relayerAddress",
         "identifier": {
          "type": "Identifier",
          "name": "relayerAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "affiliateAddress",
         "identifier": {
          "type": "Identifier",
          "name": "affiliateAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "feeTokenAddress",
         "identifier": {
          "type": "Identifier",
          "name": "feeTokenAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "endTime",
         "identifier": {
          "type": "Identifier",
          "name": "endTime"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "quantity",
         "identifier": {
          "type": "Identifier",
          "name": "quantity"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "partialFill",
         "identifier": {
          "type": "Identifier",
          "name": "partialFill"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "param0",
         "identifier": {
          "type": "Identifier",
          "name": "param0"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "param1",
         "identifier": {
          "type": "Identifier",
          "name": "param1"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "param2",
         "identifier": {
          "type": "Identifier",
          "name": "param2"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "param3",
         "identifier": {
          "type": "Identifier",
          "name": "param3"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "param4",
         "identifier": {
          "type": "Identifier",
          "name": "param4"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "param5",
         "identifier": {
          "type": "Identifier",
          "name": "param5"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "param6",
         "identifier": {
          "type": "Identifier",
          "name": "param6"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "param7",
         "identifier": {
          "type": "Identifier",
          "name": "param7"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "param8",
         "identifier": {
          "type": "Identifier",
          "name": "param8"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "param9",
         "identifier": {
          "type": "Identifier",
          "name": "param9"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "relayerFee",
         "identifier": {
          "type": "Identifier",
          "name": "relayerFee"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "affiliateFee",
         "identifier": {
          "type": "Identifier",
          "name": "affiliateFee"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "nonce",
         "identifier": {
          "type": "Identifier",
          "name": "nonce"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "signature",
         "identifier": {
          "type": "Identifier",
          "name": "signature"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "EIP712_ORDER_TYPEHASH",
         "identifier": {
          "type": "Identifier",
          "name": "EIP712_ORDER_TYPEHASH"
         },
         "expression": {
          "type": "FunctionCall",
          "expression": {
           "type": "Identifier",
           "name": "keccak256"
          },
          "arguments": [
           {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "abi"
             },
             "memberName": "encodePacked"
            },
            "arguments": [
             {
              "type": "StringLiteral",
              "value": "Order(",
              "parts": [
               "Order("
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": "address syntheticId,",
              "parts": [
               "address syntheticId,"
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": "address oracleId,",
              "parts": [
               "address oracleId,"
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": "address token,",
              "parts": [
               "address token,"
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": "address makerAddress,",
              "parts": [
               "address makerAddress,"
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": "address takerAddress,",
              "parts": [
               "address takerAddress,"
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": "address senderAddress,",
              "parts": [
               "address senderAddress,"
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": "address relayerAddress,",
              "parts": [
               "address relayerAddress,"
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": "address affiliateAddress,",
              "parts": [
               "address affiliateAddress,"
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": "address feeTokenAddress,",
              "parts": [
               "address feeTokenAddress,"
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": "uint256 endTime,",
              "parts": [
               "uint256 endTime,"
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": "uint256 quantity,",
              "parts": [
               "uint256 quantity,"
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": "uint256 partialFill,",
              "parts": [
               "uint256 partialFill,"
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": "uint256 param0,",
              "parts": [
               "uint256 param0,"
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": "uint256 param1,",
              "parts": [
               "uint256 param1,"
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": "uint256 param2,",
              "parts": [
               "uint256 param2,"
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": "uint256 param3,",
              "parts": [
               "uint256 param3,"
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": "uint256 param4,",
              "parts": [
               "uint256 param4,"
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": "uint256 param5,",
              "parts": [
               "uint256 param5,"
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": "uint256 param6,",
              "parts": [
               "uint256 param6,"
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": "uint256 param7,",
              "parts": [
               "uint256 param7,"
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": "uint256 param8,",
              "parts": [
               "uint256 param8,"
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": "uint256 param9,",
              "parts": [
               "uint256 param9,"
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": "uint256 relayerFee,",
              "parts": [
               "uint256 relayerFee,"
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": "uint256 affiliateFee,",
              "parts": [
               "uint256 affiliateFee,"
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": "uint256 nonce",
              "parts": [
               "uint256 nonce"
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": ")",
              "parts": [
               ")"
              ],
              "isUnicode": [
               false
              ]
             }
            ],
            "names": [],
            "identifiers": []
           }
          ],
          "names": [],
          "identifiers": []
         },
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "FunctionCall",
        "expression": {
         "type": "Identifier",
         "name": "keccak256"
        },
        "arguments": [
         {
          "type": "FunctionCall",
          "expression": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "abi"
           },
           "memberName": "encodePacked"
          },
          "arguments": [
           {
            "type": "StringLiteral",
            "value": "Order(",
            "parts": [
             "Order("
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": "address syntheticId,",
            "parts": [
             "address syntheticId,"
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": "address oracleId,",
            "parts": [
             "address oracleId,"
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": "address token,",
            "parts": [
             "address token,"
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": "address makerAddress,",
            "parts": [
             "address makerAddress,"
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": "address takerAddress,",
            "parts": [
             "address takerAddress,"
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": "address senderAddress,",
            "parts": [
             "address senderAddress,"
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": "address relayerAddress,",
            "parts": [
             "address relayerAddress,"
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": "address affiliateAddress,",
            "parts": [
             "address affiliateAddress,"
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": "address feeTokenAddress,",
            "parts": [
             "address feeTokenAddress,"
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": "uint256 endTime,",
            "parts": [
             "uint256 endTime,"
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": "uint256 quantity,",
            "parts": [
             "uint256 quantity,"
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": "uint256 partialFill,",
            "parts": [
             "uint256 partialFill,"
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": "uint256 param0,",
            "parts": [
             "uint256 param0,"
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": "uint256 param1,",
            "parts": [
             "uint256 param1,"
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": "uint256 param2,",
            "parts": [
             "uint256 param2,"
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": "uint256 param3,",
            "parts": [
             "uint256 param3,"
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": "uint256 param4,",
            "parts": [
             "uint256 param4,"
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": "uint256 param5,",
            "parts": [
             "uint256 param5,"
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": "uint256 param6,",
            "parts": [
             "uint256 param6,"
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": "uint256 param7,",
            "parts": [
             "uint256 param7,"
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": "uint256 param8,",
            "parts": [
             "uint256 param8,"
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": "uint256 param9,",
            "parts": [
             "uint256 param9,"
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": "uint256 relayerFee,",
            "parts": [
             "uint256 relayerFee,"
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": "uint256 affiliateFee,",
            "parts": [
             "uint256 affiliateFee,"
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": "uint256 nonce",
            "parts": [
             "uint256 nonce"
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": ")",
            "parts": [
             ")"
            ],
            "isUnicode": [
             false
            ]
           }
          ],
          "names": [],
          "identifiers": []
         }
        ],
        "names": [],
        "identifiers": []
       }
      },
      {
       "type": "FunctionDefinition",
       "name": "hashOrder",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "SwaprateOrder"
         },
         "name": "_order",
         "identifier": {
          "type": "Identifier",
          "name": "_order"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "hash",
         "identifier": {
          "type": "Identifier",
          "name": "hash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "hash"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "keccak256"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "abi"
               },
               "memberName": "encodePacked"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "abi"
                 },
                 "memberName": "encodePacked"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "EIP712_ORDER_TYPEHASH"
                 },
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "ElementaryTypeName",
                   "name": "uint256",
                   "stateMutability": null
                  },
                  "arguments": [
                   {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "_order"
                    },
                    "memberName": "syntheticId"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 },
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "ElementaryTypeName",
                   "name": "uint256",
                   "stateMutability": null
                  },
                  "arguments": [
                   {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "_order"
                    },
                    "memberName": "oracleId"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 },
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "ElementaryTypeName",
                   "name": "uint256",
                   "stateMutability": null
                  },
                  "arguments": [
                   {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "_order"
                    },
                    "memberName": "token"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 },
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "ElementaryTypeName",
                   "name": "uint256",
                   "stateMutability": null
                  },
                  "arguments": [
                   {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "_order"
                    },
                    "memberName": "makerAddress"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 },
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "ElementaryTypeName",
                   "name": "uint256",
                   "stateMutability": null
                  },
                  "arguments": [
                   {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "_order"
                    },
                    "memberName": "takerAddress"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 },
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "ElementaryTypeName",
                   "name": "uint256",
                   "stateMutability": null
                  },
                  "arguments": [
                   {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "_order"
                    },
                    "memberName": "senderAddress"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 },
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "ElementaryTypeName",
                   "name": "uint256",
                   "stateMutability": null
                  },
                  "arguments": [
                   {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "_order"
                    },
                    "memberName": "relayerAddress"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 },
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "ElementaryTypeName",
                   "name": "uint256",
                   "stateMutability": null
                  },
                  "arguments": [
                   {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "_order"
                    },
                    "memberName": "affiliateAddress"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 },
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "ElementaryTypeName",
                   "name": "uint256",
                   "stateMutability": null
                  },
                  "arguments": [
                   {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "_order"
                    },
                    "memberName": "feeTokenAddress"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "abi"
                 },
                 "memberName": "encodePacked"
                },
                "arguments": [
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "_order"
                  },
                  "memberName": "endTime"
                 },
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "_order"
                  },
                  "memberName": "quantity"
                 },
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "_order"
                  },
                  "memberName": "partialFill"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "abi"
                 },
                 "memberName": "encodePacked"
                },
                "arguments": [
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "_order"
                  },
                  "memberName": "param0"
                 },
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "_order"
                  },
                  "memberName": "param1"
                 },
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "_order"
                  },
                  "memberName": "param2"
                 },
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "_order"
                  },
                  "memberName": "param3"
                 },
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "_order"
                  },
                  "memberName": "param4"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "abi"
                 },
                 "memberName": "encodePacked"
                },
                "arguments": [
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "_order"
                  },
                  "memberName": "param5"
                 },
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "_order"
                  },
                  "memberName": "param6"
                 },
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "_order"
                  },
                  "memberName": "param7"
                 },
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "_order"
                  },
                  "memberName": "param8"
                 },
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "_order"
                  },
                  "memberName": "param9"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "abi"
                 },
                 "memberName": "encodePacked"
                },
                "arguments": [
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "_order"
                  },
                  "memberName": "relayerFee"
                 },
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "_order"
                  },
                  "memberName": "affiliateFee"
                 },
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "_order"
                  },
                  "memberName": "nonce"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "verifySignature",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_hash",
         "identifier": {
          "type": "Identifier",
          "name": "_hash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_signature",
         "identifier": {
          "type": "Identifier",
          "name": "_signature"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_address",
         "identifier": {
          "type": "Identifier",
          "name": "_address"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_signature"
              },
              "memberName": "length"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "65",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "ORDER:INVALID_SIGNATURE_LENGTH",
             "parts": [
              "ORDER:INVALID_SIGNATURE_LENGTH"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "digest",
            "identifier": {
             "type": "Identifier",
             "name": "digest"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "hashEIP712Message"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_hash"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "recovered",
            "identifier": {
             "type": "Identifier",
             "name": "recovered"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "retrieveAddress"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "digest"
            },
            {
             "type": "Identifier",
             "name": "_signature"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "_address"
           },
           "right": {
            "type": "Identifier",
            "name": "recovered"
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "retrieveAddress",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_hash",
         "identifier": {
          "type": "Identifier",
          "name": "_hash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_signature",
         "identifier": {
          "type": "Identifier",
          "name": "_signature"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "r",
            "identifier": {
             "type": "Identifier",
             "name": "r"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "s",
            "identifier": {
             "type": "Identifier",
             "name": "s"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint8",
             "stateMutability": null
            },
            "name": "v",
            "identifier": {
             "type": "Identifier",
             "name": "v"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "r"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "add",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "_signature",
                  "arguments": []
                 },
                 {
                  "type": "DecimalNumber",
                  "value": "32"
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "s"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "add",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "_signature",
                  "arguments": []
                 },
                 {
                  "type": "DecimalNumber",
                  "value": "64"
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "v"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "byte",
              "arguments": [
               {
                "type": "DecimalNumber",
                "value": "0"
               },
               {
                "type": "AssemblyCall",
                "functionName": "mload",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "_signature",
                    "arguments": []
                   },
                   {
                    "type": "DecimalNumber",
                    "value": "96"
                   }
                  ]
                 }
                ]
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "v"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "27",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "+=",
              "left": {
               "type": "Identifier",
               "name": "v"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "27",
               "subdenomination": null
              }
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "&&",
           "left": {
            "type": "BinaryOperation",
            "operator": "!=",
            "left": {
             "type": "Identifier",
             "name": "v"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "27",
             "subdenomination": null
            }
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "!=",
            "left": {
             "type": "Identifier",
             "name": "v"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "28",
             "subdenomination": null
            }
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "TupleExpression",
              "components": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "address"
                },
                "arguments": [
                 {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "isArray": false
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "ecrecover"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_hash"
               },
               {
                "type": "Identifier",
                "name": "v"
               },
               {
                "type": "Identifier",
                "name": "r"
               },
               {
                "type": "Identifier",
                "name": "s"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Smartdec-Opium Smart Contracts Security Analysis/opium-contracts-60ff6f80996b83f6ad19c35b74480fef34f7dc03/contracts/Matching/Match/MatchSwap.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.5.4"
    },
    {
     "type": "PragmaDirective",
     "name": "experimental",
     "value": "ABIEncoderV2"
    },
    {
     "type": "ImportDirective",
     "path": "./MatchLogic.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./MatchLogic.sol",
      "parts": [
       "./MatchLogic.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../TokenMinter.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../TokenMinter.sol",
      "parts": [
       "../../TokenMinter.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "MatchSwap",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "MatchLogic"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "EventDefinition",
       "name": "Swap",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "leftMakerTokenId",
         "identifier": {
          "type": "Identifier",
          "name": "leftMakerTokenId"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "leftMakerTokenAmount",
         "identifier": {
          "type": "Identifier",
          "name": "leftMakerTokenAmount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "leftMakerMarginAddress",
         "identifier": {
          "type": "Identifier",
          "name": "leftMakerMarginAddress"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "leftMakerMarginAmount",
         "identifier": {
          "type": "Identifier",
          "name": "leftMakerMarginAmount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "rightMakerTokenId",
         "identifier": {
          "type": "Identifier",
          "name": "rightMakerTokenId"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "rightMakerTokenAmount",
         "identifier": {
          "type": "Identifier",
          "name": "rightMakerTokenAmount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "rightMakerMarginAddress",
         "identifier": {
          "type": "Identifier",
          "name": "rightMakerMarginAddress"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "rightMakerMarginAmount",
         "identifier": {
          "type": "Identifier",
          "name": "rightMakerMarginAmount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "FunctionDefinition",
       "name": "swap",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Order"
         },
         "name": "_leftOrder",
         "identifier": {
          "type": "Identifier",
          "name": "_leftOrder"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Order"
         },
         "name": "_rightOrder",
         "identifier": {
          "type": "Identifier",
          "name": "_rightOrder"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "validateTakerAddress"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_leftOrder"
            },
            {
             "type": "Identifier",
             "name": "_rightOrder"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "validateTakerAddress"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_rightOrder"
            },
            {
             "type": "Identifier",
             "name": "_leftOrder"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "validateSenderAddress"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_leftOrder"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "validateSenderAddress"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_rightOrder"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "validateExpiration"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_leftOrder"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "validateExpiration"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_rightOrder"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "bytes32",
              "stateMutability": null
             },
             "length": {
              "type": "NumberLiteral",
              "number": "2",
              "subdenomination": null
             }
            },
            "name": "orderHashes",
            "identifier": {
             "type": "Identifier",
             "name": "orderHashes"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "orderHashes"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "hashOrder"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_leftOrder"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "validateCanceled"
           },
           "arguments": [
            {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "orderHashes"
             },
             "index": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "validateSignature"
           },
           "arguments": [
            {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "orderHashes"
             },
             "index": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "Identifier",
             "name": "_leftOrder"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "orderHashes"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "hashOrder"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_rightOrder"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "validateCanceled"
           },
           "arguments": [
            {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "orderHashes"
             },
             "index": {
              "type": "NumberLiteral",
              "number": "1",
              "subdenomination": null
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "validateSignature"
           },
           "arguments": [
            {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "orderHashes"
             },
             "index": {
              "type": "NumberLiteral",
              "number": "1",
              "subdenomination": null
             }
            },
            {
             "type": "Identifier",
             "name": "_rightOrder"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "name": "leftFill",
            "identifier": {
             "type": "Identifier",
             "name": "leftFill"
            },
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": {
              "type": "NumberLiteral",
              "number": "2",
              "subdenomination": null
             }
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "rightFill",
            "identifier": {
             "type": "Identifier",
             "name": "rightFill"
            },
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": {
              "type": "NumberLiteral",
              "number": "2",
              "subdenomination": null
             }
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_validateOffersAndFillSwap"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_leftOrder"
            },
            {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "orderHashes"
             },
             "index": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "Identifier",
             "name": "_rightOrder"
            },
            {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "orderHashes"
             },
             "index": {
              "type": "NumberLiteral",
              "number": "1",
              "subdenomination": null
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "takeFees"
           },
           "arguments": [
            {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "orderHashes"
             },
             "index": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "Identifier",
             "name": "_leftOrder"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "takeFees"
           },
           "arguments": [
            {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "orderHashes"
             },
             "index": {
              "type": "NumberLiteral",
              "number": "1",
              "subdenomination": null
             }
            },
            {
             "type": "Identifier",
             "name": "_rightOrder"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_validateAndMakeSwap"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_leftOrder"
            },
            {
             "type": "Identifier",
             "name": "leftFill"
            },
            {
             "type": "Identifier",
             "name": "_rightOrder"
            },
            {
             "type": "Identifier",
             "name": "rightFill"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "nonReentrant",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_validateOffersAndFillSwap",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Order"
         },
         "name": "_leftOrder",
         "identifier": {
          "type": "Identifier",
          "name": "_leftOrder"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_leftOrderHash",
         "identifier": {
          "type": "Identifier",
          "name": "_leftOrderHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Order"
         },
         "name": "_rightOrder",
         "identifier": {
          "type": "Identifier",
          "name": "_rightOrder"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_rightOrderHash",
         "identifier": {
          "type": "Identifier",
          "name": "_rightOrderHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": {
           "type": "NumberLiteral",
           "number": "2",
           "subdenomination": null
          }
         },
         "name": "leftFill",
         "identifier": {
          "type": "Identifier",
          "name": "leftFill"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": {
           "type": "NumberLiteral",
           "number": "2",
           "subdenomination": null
          }
         },
         "name": "rightFill",
         "identifier": {
          "type": "Identifier",
          "name": "rightFill"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": {
              "type": "NumberLiteral",
              "number": "2",
              "subdenomination": null
             }
            },
            "name": "leftInitial",
            "identifier": {
             "type": "Identifier",
             "name": "leftInitial"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": {
              "type": "NumberLiteral",
              "number": "2",
              "subdenomination": null
             }
            },
            "name": "rightInitial",
            "identifier": {
             "type": "Identifier",
             "name": "rightInitial"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "leftInitial"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_leftOrder"
            },
            "memberName": "takerTokenAmount"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "leftInitial"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_leftOrder"
            },
            "memberName": "takerMarginAmount"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "rightInitial"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_rightOrder"
            },
            "memberName": "takerTokenAmount"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "rightInitial"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_rightOrder"
            },
            "memberName": "takerMarginAmount"
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": {
              "type": "NumberLiteral",
              "number": "2",
              "subdenomination": null
             }
            },
            "name": "leftAlreadyFilled",
            "identifier": {
             "type": "Identifier",
             "name": "leftAlreadyFilled"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "leftAlreadyFilled"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "getInitialPercentageValue"
            },
            "arguments": [
             {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "filled"
              },
              "index": {
               "type": "Identifier",
               "name": "_leftOrderHash"
              }
             },
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_leftOrder"
              },
              "memberName": "takerTokenAmount"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "leftAlreadyFilled"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "getInitialPercentageValue"
            },
            "arguments": [
             {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "filled"
              },
              "index": {
               "type": "Identifier",
               "name": "_leftOrderHash"
              }
             },
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_leftOrder"
              },
              "memberName": "takerMarginAmount"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_leftOrder"
            },
            "memberName": "takerTokenAmount"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_leftOrder"
              },
              "memberName": "takerTokenAmount"
             },
             "memberName": "sub"
            },
            "arguments": [
             {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "leftAlreadyFilled"
              },
              "index": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_leftOrder"
            },
            "memberName": "takerMarginAmount"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_leftOrder"
              },
              "memberName": "takerMarginAmount"
             },
             "memberName": "sub"
            },
            "arguments": [
             {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "leftAlreadyFilled"
              },
              "index": {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              }
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": {
              "type": "NumberLiteral",
              "number": "2",
              "subdenomination": null
             }
            },
            "name": "rightAlreadyFilled",
            "identifier": {
             "type": "Identifier",
             "name": "rightAlreadyFilled"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "rightAlreadyFilled"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "getInitialPercentageValue"
            },
            "arguments": [
             {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "filled"
              },
              "index": {
               "type": "Identifier",
               "name": "_rightOrderHash"
              }
             },
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_rightOrder"
              },
              "memberName": "takerTokenAmount"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "rightAlreadyFilled"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "getInitialPercentageValue"
            },
            "arguments": [
             {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "filled"
              },
              "index": {
               "type": "Identifier",
               "name": "_rightOrderHash"
              }
             },
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_rightOrder"
              },
              "memberName": "takerMarginAmount"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_rightOrder"
            },
            "memberName": "takerTokenAmount"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_rightOrder"
              },
              "memberName": "takerTokenAmount"
             },
             "memberName": "sub"
            },
            "arguments": [
             {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "rightAlreadyFilled"
              },
              "index": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_rightOrder"
            },
            "memberName": "takerMarginAmount"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_rightOrder"
              },
              "memberName": "takerMarginAmount"
             },
             "memberName": "sub"
            },
            "arguments": [
             {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "rightAlreadyFilled"
              },
              "index": {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              }
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": {
              "type": "NumberLiteral",
              "number": "4",
              "subdenomination": null
             }
            },
            "name": "left",
            "identifier": {
             "type": "Identifier",
             "name": "left"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": {
              "type": "NumberLiteral",
              "number": "4",
              "subdenomination": null
             }
            },
            "name": "right",
            "identifier": {
             "type": "Identifier",
             "name": "right"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "left"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_leftOrder"
              },
              "memberName": "makerTokenAmount"
             },
             "memberName": "mul"
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_rightOrder"
              },
              "memberName": "makerTokenAmount"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "right"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_leftOrder"
              },
              "memberName": "takerTokenAmount"
             },
             "memberName": "mul"
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_rightOrder"
              },
              "memberName": "takerTokenAmount"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "left"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_leftOrder"
              },
              "memberName": "makerTokenAmount"
             },
             "memberName": "mul"
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_rightOrder"
              },
              "memberName": "makerMarginAmount"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "right"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_leftOrder"
              },
              "memberName": "takerMarginAmount"
             },
             "memberName": "mul"
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_rightOrder"
              },
              "memberName": "takerTokenAmount"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "left"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "2",
             "subdenomination": null
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_leftOrder"
              },
              "memberName": "makerMarginAmount"
             },
             "memberName": "mul"
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_rightOrder"
              },
              "memberName": "makerTokenAmount"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "right"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "2",
             "subdenomination": null
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_leftOrder"
              },
              "memberName": "takerTokenAmount"
             },
             "memberName": "mul"
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_rightOrder"
              },
              "memberName": "takerMarginAmount"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "left"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "3",
             "subdenomination": null
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_leftOrder"
              },
              "memberName": "makerMarginAmount"
             },
             "memberName": "mul"
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_rightOrder"
              },
              "memberName": "makerMarginAmount"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "right"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "3",
             "subdenomination": null
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_leftOrder"
              },
              "memberName": "takerMarginAmount"
             },
             "memberName": "mul"
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_rightOrder"
              },
              "memberName": "takerMarginAmount"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "&&",
             "left": {
              "type": "BinaryOperation",
              "operator": "&&",
              "left": {
               "type": "BinaryOperation",
               "operator": "&&",
               "left": {
                "type": "BinaryOperation",
                "operator": ">=",
                "left": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "left"
                 },
                 "index": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                 }
                },
                "right": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "right"
                 },
                 "index": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                 }
                }
               },
               "right": {
                "type": "BinaryOperation",
                "operator": ">=",
                "left": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "left"
                 },
                 "index": {
                  "type": "NumberLiteral",
                  "number": "1",
                  "subdenomination": null
                 }
                },
                "right": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "right"
                 },
                 "index": {
                  "type": "NumberLiteral",
                  "number": "1",
                  "subdenomination": null
                 }
                }
               }
              },
              "right": {
               "type": "BinaryOperation",
               "operator": ">=",
               "left": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "left"
                },
                "index": {
                 "type": "NumberLiteral",
                 "number": "2",
                 "subdenomination": null
                }
               },
               "right": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "right"
                },
                "index": {
                 "type": "NumberLiteral",
                 "number": "2",
                 "subdenomination": null
                }
               }
              }
             },
             "right": {
              "type": "BinaryOperation",
              "operator": ">=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "left"
               },
               "index": {
                "type": "NumberLiteral",
                "number": "3",
                "subdenomination": null
               }
              },
              "right": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "right"
               },
               "index": {
                "type": "NumberLiteral",
                "number": "3",
                "subdenomination": null
               }
              }
             }
            },
            {
             "type": "StringLiteral",
             "value": "MATCH:OFFERS_CONDITIONS_ARE_NOT_MET",
             "parts": [
              "MATCH:OFFERS_CONDITIONS_ARE_NOT_MET"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "leftFill"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "min"
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_leftOrder"
              },
              "memberName": "makerTokenAmount"
             },
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_rightOrder"
              },
              "memberName": "takerTokenAmount"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "leftFill"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "min"
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_leftOrder"
              },
              "memberName": "makerMarginAmount"
             },
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_rightOrder"
              },
              "memberName": "takerMarginAmount"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "rightFill"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "min"
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_leftOrder"
              },
              "memberName": "takerTokenAmount"
             },
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_rightOrder"
              },
              "memberName": "makerTokenAmount"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "rightFill"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "min"
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_leftOrder"
              },
              "memberName": "takerMarginAmount"
             },
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_rightOrder"
              },
              "memberName": "makerMarginAmount"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "||",
             "left": {
              "type": "BinaryOperation",
              "operator": "||",
              "left": {
               "type": "BinaryOperation",
               "operator": "||",
               "left": {
                "type": "BinaryOperation",
                "operator": "!=",
                "left": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "leftFill"
                 },
                 "index": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                 }
                },
                "right": {
                 "type": "NumberLiteral",
                 "number": "0",
                 "subdenomination": null
                }
               },
               "right": {
                "type": "BinaryOperation",
                "operator": "!=",
                "left": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "leftFill"
                 },
                 "index": {
                  "type": "NumberLiteral",
                  "number": "1",
                  "subdenomination": null
                 }
                },
                "right": {
                 "type": "NumberLiteral",
                 "number": "0",
                 "subdenomination": null
                }
               }
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "!=",
               "left": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "rightFill"
                },
                "index": {
                 "type": "NumberLiteral",
                 "number": "0",
                 "subdenomination": null
                }
               },
               "right": {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              }
             },
             "right": {
              "type": "BinaryOperation",
              "operator": "!=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "rightFill"
               },
               "index": {
                "type": "NumberLiteral",
                "number": "1",
                "subdenomination": null
               }
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             }
            },
            {
             "type": "StringLiteral",
             "value": "MATCH:NO_FILLABLE_POSITIONS",
             "parts": [
              "MATCH:NO_FILLABLE_POSITIONS"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": {
              "type": "NumberLiteral",
              "number": "2",
              "subdenomination": null
             }
            },
            "name": "leftFilledPercents",
            "identifier": {
             "type": "Identifier",
             "name": "leftFilledPercents"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "leftFilledPercents"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           },
           "right": {
            "type": "Conditional",
            "condition": {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "leftInitial"
              },
              "index": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            "trueExpression": {
             "type": "Identifier",
             "name": "PERCENTAGE_BASE"
            },
            "falseExpression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getDivisionPercentage"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "leftAlreadyFilled"
                 },
                 "index": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                 }
                },
                "memberName": "add"
               },
               "arguments": [
                {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "rightFill"
                 },
                 "index": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                 }
                }
               ],
               "names": [],
               "identifiers": []
              },
              {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "leftInitial"
               },
               "index": {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              }
             ],
             "names": [],
             "identifiers": []
            }
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "leftFilledPercents"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           },
           "right": {
            "type": "Conditional",
            "condition": {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "leftInitial"
              },
              "index": {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              }
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            "trueExpression": {
             "type": "Identifier",
             "name": "PERCENTAGE_BASE"
            },
            "falseExpression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getDivisionPercentage"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "leftAlreadyFilled"
                 },
                 "index": {
                  "type": "NumberLiteral",
                  "number": "1",
                  "subdenomination": null
                 }
                },
                "memberName": "add"
               },
               "arguments": [
                {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "rightFill"
                 },
                 "index": {
                  "type": "NumberLiteral",
                  "number": "1",
                  "subdenomination": null
                 }
                }
               ],
               "names": [],
               "identifiers": []
              },
              {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "leftInitial"
               },
               "index": {
                "type": "NumberLiteral",
                "number": "1",
                "subdenomination": null
               }
              }
             ],
             "names": [],
             "identifiers": []
            }
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "filled"
            },
            "index": {
             "type": "Identifier",
             "name": "_leftOrderHash"
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "min"
              },
              "arguments": [
               {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "leftFilledPercents"
                },
                "index": {
                 "type": "NumberLiteral",
                 "number": "0",
                 "subdenomination": null
                }
               },
               {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "leftFilledPercents"
                },
                "index": {
                 "type": "NumberLiteral",
                 "number": "1",
                 "subdenomination": null
                }
               }
              ],
              "names": [],
              "identifiers": []
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "NumberLiteral",
              "number": "1",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": {
              "type": "NumberLiteral",
              "number": "2",
              "subdenomination": null
             }
            },
            "name": "rightFilledPercents",
            "identifier": {
             "type": "Identifier",
             "name": "rightFilledPercents"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "rightFilledPercents"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           },
           "right": {
            "type": "Conditional",
            "condition": {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "rightInitial"
              },
              "index": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            "trueExpression": {
             "type": "Identifier",
             "name": "PERCENTAGE_BASE"
            },
            "falseExpression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getDivisionPercentage"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "rightAlreadyFilled"
                 },
                 "index": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                 }
                },
                "memberName": "add"
               },
               "arguments": [
                {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "leftFill"
                 },
                 "index": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                 }
                }
               ],
               "names": [],
               "identifiers": []
              },
              {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "rightInitial"
               },
               "index": {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              }
             ],
             "names": [],
             "identifiers": []
            }
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "rightFilledPercents"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           },
           "right": {
            "type": "Conditional",
            "condition": {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "rightInitial"
              },
              "index": {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              }
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            "trueExpression": {
             "type": "Identifier",
             "name": "PERCENTAGE_BASE"
            },
            "falseExpression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "getDivisionPercentage"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "rightAlreadyFilled"
                 },
                 "index": {
                  "type": "NumberLiteral",
                  "number": "1",
                  "subdenomination": null
                 }
                },
                "memberName": "add"
               },
               "arguments": [
                {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "leftFill"
                 },
                 "index": {
                  "type": "NumberLiteral",
                  "number": "1",
                  "subdenomination": null
                 }
                }
               ],
               "names": [],
               "identifiers": []
              },
              {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "rightInitial"
               },
               "index": {
                "type": "NumberLiteral",
                "number": "1",
                "subdenomination": null
               }
              }
             ],
             "names": [],
             "identifiers": []
            }
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "filled"
            },
            "index": {
             "type": "Identifier",
             "name": "_rightOrderHash"
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "min"
              },
              "arguments": [
               {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "rightFilledPercents"
                },
                "index": {
                 "type": "NumberLiteral",
                 "number": "0",
                 "subdenomination": null
                }
               },
               {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "rightFilledPercents"
                },
                "index": {
                 "type": "NumberLiteral",
                 "number": "1",
                 "subdenomination": null
                }
               }
              ],
              "names": [],
              "identifiers": []
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "NumberLiteral",
              "number": "1",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_validateAndMakeSwap",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Order"
         },
         "name": "_leftOrder",
         "identifier": {
          "type": "Identifier",
          "name": "_leftOrder"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": {
           "type": "NumberLiteral",
           "number": "2",
           "subdenomination": null
          }
         },
         "name": "leftFill",
         "identifier": {
          "type": "Identifier",
          "name": "leftFill"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Order"
         },
         "name": "_rightOrder",
         "identifier": {
          "type": "Identifier",
          "name": "_rightOrder"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": {
           "type": "NumberLiteral",
           "number": "2",
           "subdenomination": null
          }
         },
         "name": "rightFill",
         "identifier": {
          "type": "Identifier",
          "name": "rightFill"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "TokenMinter"
            },
            "name": "tm",
            "identifier": {
             "type": "Identifier",
             "name": "tm"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "TokenMinter"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "registry"
              },
              "memberName": "getMinter"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "TokenSpender"
            },
            "name": "tokenSpender",
            "identifier": {
             "type": "Identifier",
             "name": "tokenSpender"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "TokenSpender"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "registry"
              },
              "memberName": "getTokenSpender"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "leftFill"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "==",
                "left": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "_leftOrder"
                 },
                 "memberName": "makerTokenId"
                },
                "right": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "_rightOrder"
                 },
                 "memberName": "takerTokenId"
                }
               },
               {
                "type": "StringLiteral",
                "value": "MATCH:NOT_VALID_SWAP",
                "parts": [
                 "MATCH:NOT_VALID_SWAP"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "tm"
                 },
                 "memberName": "isApprovedOrOwner"
                },
                "arguments": [
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "Identifier",
                   "name": "address"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "tokenSpender"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 },
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "_leftOrder"
                  },
                  "memberName": "makerAddress"
                 },
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "_leftOrder"
                  },
                  "memberName": "makerTokenId"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "StringLiteral",
                "value": "MATCH:NOT_ALLOWED_POSITION",
                "parts": [
                 "MATCH:NOT_ALLOWED_POSITION"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "tokenSpender"
               },
               "memberName": "claimPositions"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "tm"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_leftOrder"
                },
                "memberName": "makerAddress"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_rightOrder"
                },
                "memberName": "makerAddress"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_leftOrder"
                },
                "memberName": "makerTokenId"
               },
               {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "leftFill"
                },
                "index": {
                 "type": "NumberLiteral",
                 "number": "0",
                 "subdenomination": null
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "rightFill"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "==",
                "left": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "_leftOrder"
                 },
                 "memberName": "takerTokenId"
                },
                "right": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "_rightOrder"
                 },
                 "memberName": "makerTokenId"
                }
               },
               {
                "type": "StringLiteral",
                "value": "MATCH:NOT_VALID_SWAP",
                "parts": [
                 "MATCH:NOT_VALID_SWAP"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "tm"
                 },
                 "memberName": "isApprovedOrOwner"
                },
                "arguments": [
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "Identifier",
                   "name": "address"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "tokenSpender"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 },
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "_rightOrder"
                  },
                  "memberName": "makerAddress"
                 },
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "_rightOrder"
                  },
                  "memberName": "makerTokenId"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "StringLiteral",
                "value": "MATCH:NOT_ALLOWED_POSITION",
                "parts": [
                 "MATCH:NOT_ALLOWED_POSITION"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "tokenSpender"
               },
               "memberName": "claimPositions"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "tm"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_rightOrder"
                },
                "memberName": "makerAddress"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_leftOrder"
                },
                "memberName": "makerAddress"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_rightOrder"
                },
                "memberName": "makerTokenId"
               },
               {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "rightFill"
                },
                "index": {
                 "type": "NumberLiteral",
                 "number": "0",
                 "subdenomination": null
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "leftFill"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "==",
                "left": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "_leftOrder"
                 },
                 "memberName": "makerMarginAddress"
                },
                "right": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "_rightOrder"
                 },
                 "memberName": "takerMarginAddress"
                }
               },
               {
                "type": "StringLiteral",
                "value": "MATCH:NOT_VALID_SWAP",
                "parts": [
                 "MATCH:NOT_VALID_SWAP"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "UserDefinedTypeName",
                "namePath": "IERC20"
               },
               "name": "makerMarginToken",
               "identifier": {
                "type": "Identifier",
                "name": "makerMarginToken"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "IERC20"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_leftOrder"
                },
                "memberName": "makerMarginAddress"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": ">=",
                "left": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "makerMarginToken"
                  },
                  "memberName": "allowance"
                 },
                 "arguments": [
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "_leftOrder"
                   },
                   "memberName": "makerAddress"
                  },
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "Identifier",
                    "name": "address"
                   },
                   "arguments": [
                    {
                     "type": "Identifier",
                     "name": "tokenSpender"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 ],
                 "names": [],
                 "identifiers": []
                },
                "right": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "leftFill"
                 },
                 "index": {
                  "type": "NumberLiteral",
                  "number": "1",
                  "subdenomination": null
                 }
                }
               },
               {
                "type": "StringLiteral",
                "value": "MATCH:NOT_ENOUGH_ALLOWED_MARGIN",
                "parts": [
                 "MATCH:NOT_ENOUGH_ALLOWED_MARGIN"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "tokenSpender"
               },
               "memberName": "claimTokens"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "makerMarginToken"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_leftOrder"
                },
                "memberName": "makerAddress"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_rightOrder"
                },
                "memberName": "makerAddress"
               },
               {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "leftFill"
                },
                "index": {
                 "type": "NumberLiteral",
                 "number": "1",
                 "subdenomination": null
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "rightFill"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "==",
                "left": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "_leftOrder"
                 },
                 "memberName": "takerMarginAddress"
                },
                "right": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "_rightOrder"
                 },
                 "memberName": "makerMarginAddress"
                }
               },
               {
                "type": "StringLiteral",
                "value": "MATCH:NOT_VALID_SWAP",
                "parts": [
                 "MATCH:NOT_VALID_SWAP"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "UserDefinedTypeName",
                "namePath": "IERC20"
               },
               "name": "takerMarginToken",
               "identifier": {
                "type": "Identifier",
                "name": "takerMarginToken"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "IERC20"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_leftOrder"
                },
                "memberName": "takerMarginAddress"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": ">=",
                "left": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "takerMarginToken"
                  },
                  "memberName": "allowance"
                 },
                 "arguments": [
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "_rightOrder"
                   },
                   "memberName": "makerAddress"
                  },
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "Identifier",
                    "name": "address"
                   },
                   "arguments": [
                    {
                     "type": "Identifier",
                     "name": "tokenSpender"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 ],
                 "names": [],
                 "identifiers": []
                },
                "right": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "rightFill"
                 },
                 "index": {
                  "type": "NumberLiteral",
                  "number": "1",
                  "subdenomination": null
                 }
                }
               },
               {
                "type": "StringLiteral",
                "value": "MATCH:NOT_ENOUGH_ALLOWED_MARGIN",
                "parts": [
                 "MATCH:NOT_ENOUGH_ALLOWED_MARGIN"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "tokenSpender"
               },
               "memberName": "claimTokens"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "takerMarginToken"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_rightOrder"
                },
                "memberName": "makerAddress"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_leftOrder"
                },
                "memberName": "makerAddress"
               },
               {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "rightFill"
                },
                "index": {
                 "type": "NumberLiteral",
                 "number": "1",
                 "subdenomination": null
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "Swap"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_leftOrder"
             },
             "memberName": "makerTokenId"
            },
            {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "leftFill"
             },
             "index": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_leftOrder"
             },
             "memberName": "makerMarginAddress"
            },
            {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "leftFill"
             },
             "index": {
              "type": "NumberLiteral",
              "number": "1",
              "subdenomination": null
             }
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_rightOrder"
             },
             "memberName": "makerTokenId"
            },
            {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "rightFill"
             },
             "index": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_rightOrder"
             },
             "memberName": "makerMarginAddress"
            },
            {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "rightFill"
             },
             "index": {
              "type": "NumberLiteral",
              "number": "1",
              "subdenomination": null
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Smartdec-Opium Smart Contracts Security Analysis/opium-contracts-60ff6f80996b83f6ad19c35b74480fef34f7dc03/contracts/Matching/Match/MatchPool.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.5.4"
    },
    {
     "type": "PragmaDirective",
     "name": "experimental",
     "value": "ABIEncoderV2"
    },
    {
     "type": "ImportDirective",
     "path": "../../Lib/LibDerivative.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../Lib/LibDerivative.sol",
      "parts": [
       "../../Lib/LibDerivative.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../Core.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../Core.sol",
      "parts": [
       "../../Core.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../SyntheticAggregator.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../SyntheticAggregator.sol",
      "parts": [
       "../../SyntheticAggregator.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./MatchLogic.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./MatchLogic.sol",
      "parts": [
       "./MatchLogic.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "MatchPool",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "MatchLogic"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "LibDerivative"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_registry",
         "identifier": {
          "type": "Identifier",
          "name": "_registry"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": []
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "usingRegistry",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_registry"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "create",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Order"
         },
         "name": "_buyOrder",
         "identifier": {
          "type": "Identifier",
          "name": "_buyOrder"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Derivative"
         },
         "name": "_derivative",
         "identifier": {
          "type": "Identifier",
          "name": "_derivative"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_buyOrder"
              },
              "memberName": "makerTokenId"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "MATCH:NOT_CREATION",
             "parts": [
              "MATCH:NOT_CREATION"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "IDerivativeLogic"
               },
               "arguments": [
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "_derivative"
                 },
                 "memberName": "syntheticId"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "memberName": "isPool"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            {
             "type": "StringLiteral",
             "value": "MATCH:NOT_POOL",
             "parts": [
              "MATCH:NOT_POOL"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "validateSenderAddress"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_buyOrder"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "validateExpiration"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_buyOrder"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "orderHash",
            "identifier": {
             "type": "Identifier",
             "name": "orderHash"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "orderHash"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "hashOrder"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_buyOrder"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "validateCanceled"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "orderHash"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "validateSignature"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "orderHash"
            },
            {
             "type": "Identifier",
             "name": "_buyOrder"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "margin",
            "identifier": {
             "type": "Identifier",
             "name": "margin"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "calculatePool"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_buyOrder"
            },
            {
             "type": "Identifier",
             "name": "_derivative"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "takeFees"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "orderHash"
            },
            {
             "type": "Identifier",
             "name": "_buyOrder"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "IERC20"
            },
            "name": "marginToken",
            "identifier": {
             "type": "Identifier",
             "name": "marginToken"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "IERC20"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_derivative"
             },
             "memberName": "token"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "Identifier",
            "name": "margin"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": ">=",
                "left": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "marginToken"
                  },
                  "memberName": "allowance"
                 },
                 "arguments": [
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "_buyOrder"
                   },
                   "memberName": "makerAddress"
                  },
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "registry"
                    },
                    "memberName": "getTokenSpender"
                   },
                   "arguments": [],
                   "names": [],
                   "identifiers": []
                  }
                 ],
                 "names": [],
                 "identifiers": []
                },
                "right": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "margin"
                  },
                  "memberName": "mul"
                 },
                 "arguments": [
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "_buyOrder"
                   },
                   "memberName": "takerTokenAmount"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "StringLiteral",
                "value": "MATCH:NOT_ENOUGH_ALLOWED_MARGIN",
                "parts": [
                 "MATCH:NOT_ENOUGH_ALLOWED_MARGIN"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "TokenSpender"
                },
                "arguments": [
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "registry"
                   },
                   "memberName": "getTokenSpender"
                  },
                  "arguments": [],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "memberName": "claimTokens"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "marginToken"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_buyOrder"
                },
                "memberName": "makerAddress"
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "address"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "this"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "margin"
                 },
                 "memberName": "mul"
                },
                "arguments": [
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "_buyOrder"
                  },
                  "memberName": "takerTokenAmount"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "marginToken"
                 },
                 "memberName": "approve"
                },
                "arguments": [
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "registry"
                   },
                   "memberName": "getTokenSpender"
                  },
                  "arguments": [],
                  "names": [],
                  "identifiers": []
                 },
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "margin"
                   },
                   "memberName": "mul"
                  },
                  "arguments": [
                   {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "_buyOrder"
                    },
                    "memberName": "takerTokenAmount"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "StringLiteral",
                "value": "MATCH:COULDNT_APPROVE_MARGIN_FOR_CORE",
                "parts": [
                 "MATCH:COULDNT_APPROVE_MARGIN_FOR_CORE"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "Core"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "registry"
                },
                "memberName": "getCore"
               },
               "arguments": [],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "create"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_derivative"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_buyOrder"
             },
             "memberName": "takerTokenAmount"
            },
            {
             "type": "TupleExpression",
             "components": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_buyOrder"
               },
               "memberName": "makerAddress"
              },
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "address"
               },
               "arguments": [
                {
                 "type": "NumberLiteral",
                 "number": "0",
                 "subdenomination": null
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "isArray": true
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "nonReentrant",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "calculatePool",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Order"
         },
         "name": "_buyOrder",
         "identifier": {
          "type": "Identifier",
          "name": "_buyOrder"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Derivative"
         },
         "name": "_derivative",
         "identifier": {
          "type": "Identifier",
          "name": "_derivative"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "margin",
         "identifier": {
          "type": "Identifier",
          "name": "margin"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "derivativeHash",
            "identifier": {
             "type": "Identifier",
             "name": "derivativeHash"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getDerivativeHash"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_derivative"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "longTokenId",
            "identifier": {
             "type": "Identifier",
             "name": "longTokenId"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "derivativeHash"
            },
            "memberName": "getLongTokenId"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_buyOrder"
              },
              "memberName": "takerTokenId"
             },
             "right": {
              "type": "Identifier",
              "name": "longTokenId"
             }
            },
            {
             "type": "StringLiteral",
             "value": "MATCH:DERIVATIVE_NOT_MATCH",
             "parts": [
              "MATCH:DERIVATIVE_NOT_MATCH"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "TupleExpression",
            "components": [
             {
              "type": "Identifier",
              "name": "margin"
             },
             null
            ],
            "isArray": false
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "SyntheticAggregator"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "registry"
                 },
                 "memberName": "getSyntheticAggregator"
                },
                "arguments": [],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             },
             "memberName": "getMargin"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "derivativeHash"
             },
             {
              "type": "Identifier",
              "name": "_derivative"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "||",
             "left": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "Identifier",
               "name": "margin"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "right": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_buyOrder"
               },
               "memberName": "makerMarginAddress"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_derivative"
               },
               "memberName": "token"
              }
             }
            },
            {
             "type": "StringLiteral",
             "value": "MATCH:PROVIDED_MARGIN_CURRENCY_WRONG",
             "parts": [
              "MATCH:PROVIDED_MARGIN_CURRENCY_WRONG"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">=",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_buyOrder"
              },
              "memberName": "makerMarginAmount"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_buyOrder"
                },
                "memberName": "takerTokenAmount"
               },
               "memberName": "mul"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "margin"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "StringLiteral",
             "value": "MATCH:PROVIDED_MARGIN_NOT_ENOUGH",
             "parts": [
              "MATCH:PROVIDED_MARGIN_NOT_ENOUGH"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Smartdec-Opium Smart Contracts Security Analysis/opium-contracts-60ff6f80996b83f6ad19c35b74480fef34f7dc03/contracts/Matching/Match/MatchLogic.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.5.4"
    },
    {
     "type": "PragmaDirective",
     "name": "experimental",
     "value": "ABIEncoderV2"
    },
    {
     "type": "ImportDirective",
     "path": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol",
      "parts": [
       "openzeppelin-solidity/contracts/token/ERC20/IERC20.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "openzeppelin-solidity/contracts/utils/ReentrancyGuard.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "openzeppelin-solidity/contracts/utils/ReentrancyGuard.sol",
      "parts": [
       "openzeppelin-solidity/contracts/utils/ReentrancyGuard.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "openzeppelin-solidity/contracts/math/SafeMath.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "openzeppelin-solidity/contracts/math/SafeMath.sol",
      "parts": [
       "openzeppelin-solidity/contracts/math/SafeMath.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "erc721o/contracts/Libs/LibPosition.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "erc721o/contracts/Libs/LibPosition.sol",
      "parts": [
       "erc721o/contracts/Libs/LibPosition.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../Lib/usingRegistry.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../Lib/usingRegistry.sol",
      "parts": [
       "../../Lib/usingRegistry.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../Errors/MatchingErrors.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../Errors/MatchingErrors.sol",
      "parts": [
       "../../Errors/MatchingErrors.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./LibOrder.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./LibOrder.sol",
      "parts": [
       "./LibOrder.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../Registry.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../Registry.sol",
      "parts": [
       "../../Registry.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../Core.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../Core.sol",
      "parts": [
       "../../Core.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../SyntheticAggregator.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../SyntheticAggregator.sol",
      "parts": [
       "../../SyntheticAggregator.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "MatchLogic",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "MatchingErrors"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "LibOrder"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "usingRegistry"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ReentrancyGuard"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "libraryName": "SafeMath",
       "functions": [],
       "operators": []
      },
      {
       "type": "UsingForDeclaration",
       "isGlobal": false,
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "bytes32",
        "stateMutability": null
       },
       "libraryName": "LibPosition",
       "functions": [],
       "operators": []
      },
      {
       "type": "EventDefinition",
       "name": "Canceled",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "orderHash",
         "identifier": {
          "type": "Identifier",
          "name": "orderHash"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "PERCENTAGE_BASE",
         "identifier": {
          "type": "Identifier",
          "name": "PERCENTAGE_BASE"
         },
         "expression": {
          "type": "BinaryOperation",
          "operator": "**",
          "left": {
           "type": "NumberLiteral",
           "number": "10",
           "subdenomination": null
          },
          "right": {
           "type": "NumberLiteral",
           "number": "30",
           "subdenomination": null
          }
         },
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "BinaryOperation",
        "operator": "**",
        "left": {
         "type": "NumberLiteral",
         "number": "10",
         "subdenomination": null
        },
        "right": {
         "type": "NumberLiteral",
         "number": "30",
         "subdenomination": null
        }
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "bytes32",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "bool",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "canceled",
         "identifier": {
          "type": "Identifier",
          "name": "canceled"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "bytes32",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "bool",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "verified",
         "identifier": {
          "type": "Identifier",
          "name": "verified"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "bytes32",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "filled",
         "identifier": {
          "type": "Identifier",
          "name": "filled"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "Mapping",
           "keyType": {
            "type": "ElementaryTypeName",
            "name": "address",
            "stateMutability": null
           },
           "keyName": null,
           "valueType": {
            "type": "ElementaryTypeName",
            "name": "uint256",
            "stateMutability": null
           },
           "valueName": null
          },
          "valueName": null
         },
         "name": "balances",
         "identifier": {
          "type": "Identifier",
          "name": "balances"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "bytes32",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "bool",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "feeTaken",
         "identifier": {
          "type": "Identifier",
          "name": "feeTaken"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "FunctionDefinition",
       "name": "cancel",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Order"
         },
         "name": "_order",
         "identifier": {
          "type": "Identifier",
          "name": "_order"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "sender"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_order"
              },
              "memberName": "makerAddress"
             }
            },
            {
             "type": "Identifier",
             "name": "ERROR_MATCH_CANCELLATION_NOT_ALLOWED"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "orderHash",
            "identifier": {
             "type": "Identifier",
             "name": "orderHash"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "hashOrder"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_order"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "UnaryOperation",
             "operator": "!",
             "subExpression": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "canceled"
              },
              "index": {
               "type": "Identifier",
               "name": "orderHash"
              }
             },
             "isPrefix": true
            },
            {
             "type": "Identifier",
             "name": "ERROR_MATCH_ALREADY_CANCELED"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "canceled"
            },
            "index": {
             "type": "Identifier",
             "name": "orderHash"
            }
           },
           "right": {
            "type": "BooleanLiteral",
            "value": true
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "Canceled"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "orderHash"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "withdraw",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "IERC20"
         },
         "name": "_token",
         "identifier": {
          "type": "Identifier",
          "name": "_token"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "balance",
            "identifier": {
             "type": "Identifier",
             "name": "balance"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "balances"
            },
            "index": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            }
           },
           "index": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "address"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_token"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "balances"
             },
             "index": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "sender"
             }
            },
            "index": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "_token"
              }
             ],
             "names": [],
             "identifiers": []
            }
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_token"
            },
            "memberName": "transfer"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "Identifier",
             "name": "balance"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "nonReentrant",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "validateCanceled",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_hash",
         "identifier": {
          "type": "Identifier",
          "name": "_hash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "UnaryOperation",
             "operator": "!",
             "subExpression": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "canceled"
              },
              "index": {
               "type": "Identifier",
               "name": "_hash"
              }
             },
             "isPrefix": true
            },
            {
             "type": "Identifier",
             "name": "ERROR_MATCH_ORDER_WAS_CANCELED"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "validateTakerAddress",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Order"
         },
         "name": "_leftOrder",
         "identifier": {
          "type": "Identifier",
          "name": "_leftOrder"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Order"
         },
         "name": "_rightOrder",
         "identifier": {
          "type": "Identifier",
          "name": "_rightOrder"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "||",
             "left": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_leftOrder"
               },
               "memberName": "takerAddress"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "address"
               },
               "arguments": [
                {
                 "type": "NumberLiteral",
                 "number": "0",
                 "subdenomination": null
                }
               ],
               "names": [],
               "identifiers": []
              }
             },
             "right": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_leftOrder"
               },
               "memberName": "takerAddress"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_rightOrder"
               },
               "memberName": "makerAddress"
              }
             }
            },
            {
             "type": "Identifier",
             "name": "ERROR_MATCH_TAKER_ADDRESS_WRONG"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "validateExpiration",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Order"
         },
         "name": "_order",
         "identifier": {
          "type": "Identifier",
          "name": "_order"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "||",
             "left": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_order"
               },
               "memberName": "expiresAt"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "right": {
              "type": "BinaryOperation",
              "operator": ">",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_order"
               },
               "memberName": "expiresAt"
              },
              "right": {
               "type": "Identifier",
               "name": "now"
              }
             }
            },
            {
             "type": "Identifier",
             "name": "ERROR_MATCH_ORDER_IS_EXPIRED"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "validateSenderAddress",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Order"
         },
         "name": "_order",
         "identifier": {
          "type": "Identifier",
          "name": "_order"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "||",
             "left": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_order"
               },
               "memberName": "senderAddress"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "address"
               },
               "arguments": [
                {
                 "type": "NumberLiteral",
                 "number": "0",
                 "subdenomination": null
                }
               ],
               "names": [],
               "identifiers": []
              }
             },
             "right": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_order"
               },
               "memberName": "senderAddress"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "msg"
               },
               "memberName": "sender"
              }
             }
            },
            {
             "type": "Identifier",
             "name": "ERROR_MATCH_SENDER_ADDRESS_WRONG"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "validateSignature",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "orderHash",
         "identifier": {
          "type": "Identifier",
          "name": "orderHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Order"
         },
         "name": "_order",
         "identifier": {
          "type": "Identifier",
          "name": "_order"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "verified"
           },
           "index": {
            "type": "Identifier",
            "name": "orderHash"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": null
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bool",
             "stateMutability": null
            },
            "name": "result",
            "identifier": {
             "type": "Identifier",
             "name": "result"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "verifySignature"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "orderHash"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_order"
             },
             "memberName": "signature"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_order"
             },
             "memberName": "makerAddress"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "result"
            },
            {
             "type": "Identifier",
             "name": "ERROR_MATCH_SIGNATURE_NOT_VERIFIED"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "verified"
            },
            "index": {
             "type": "Identifier",
             "name": "orderHash"
            }
           },
           "right": {
            "type": "BooleanLiteral",
            "value": true
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "takeFees",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_orderHash",
         "identifier": {
          "type": "Identifier",
          "name": "_orderHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Order"
         },
         "name": "_order",
         "identifier": {
          "type": "Identifier",
          "name": "_order"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "feeTaken"
           },
           "index": {
            "type": "Identifier",
            "name": "_orderHash"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": null
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_order"
            },
            "memberName": "feeTokenAddress"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "address"
            },
            "arguments": [
             {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": null
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "fees",
            "identifier": {
             "type": "Identifier",
             "name": "fees"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_order"
             },
             "memberName": "relayerFee"
            },
            "memberName": "add"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_order"
             },
             "memberName": "affiliateFee"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "fees"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": null
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "IERC20"
            },
            "name": "feeToken",
            "identifier": {
             "type": "Identifier",
             "name": "feeToken"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "IERC20"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_order"
             },
             "memberName": "feeTokenAddress"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">=",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "feeToken"
               },
               "memberName": "allowance"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_order"
                },
                "memberName": "makerAddress"
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "registry"
                 },
                 "memberName": "getTokenSpender"
                },
                "arguments": [],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "Identifier",
              "name": "fees"
             }
            },
            {
             "type": "Identifier",
             "name": "ERROR_MATCH_NOT_ENOUGH_ALLOWED_FEES"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "TokenSpender"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "registry"
                },
                "memberName": "getTokenSpender"
               },
               "arguments": [],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "claimTokens"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "feeToken"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_order"
             },
             "memberName": "makerAddress"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "this"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "fees"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_order"
            },
            "memberName": "relayerAddress"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "address"
            },
            "arguments": [
             {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "balances"
                },
                "index": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "_order"
                 },
                 "memberName": "relayerAddress"
                }
               },
               "index": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_order"
                },
                "memberName": "feeTokenAddress"
               }
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "balances"
                  },
                  "index": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "_order"
                   },
                   "memberName": "relayerAddress"
                  }
                 },
                 "index": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "_order"
                  },
                  "memberName": "feeTokenAddress"
                 }
                },
                "memberName": "add"
               },
               "arguments": [
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "_order"
                 },
                 "memberName": "relayerFee"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "balances"
                },
                "index": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "registry"
                  },
                  "memberName": "getOpiumAddress"
                 },
                 "arguments": [],
                 "names": [],
                 "identifiers": []
                }
               },
               "index": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_order"
                },
                "memberName": "feeTokenAddress"
               }
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "balances"
                  },
                  "index": {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "registry"
                    },
                    "memberName": "getOpiumAddress"
                   },
                   "arguments": [],
                   "names": [],
                   "identifiers": []
                  }
                 },
                 "index": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "_order"
                  },
                  "memberName": "feeTokenAddress"
                 }
                },
                "memberName": "add"
               },
               "arguments": [
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "_order"
                 },
                 "memberName": "relayerFee"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_order"
            },
            "memberName": "affiliateAddress"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "address"
            },
            "arguments": [
             {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "balances"
                },
                "index": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "_order"
                 },
                 "memberName": "affiliateAddress"
                }
               },
               "index": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_order"
                },
                "memberName": "feeTokenAddress"
               }
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "balances"
                  },
                  "index": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "_order"
                   },
                   "memberName": "affiliateAddress"
                  }
                 },
                 "index": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "_order"
                  },
                  "memberName": "feeTokenAddress"
                 }
                },
                "memberName": "add"
               },
               "arguments": [
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "_order"
                 },
                 "memberName": "affiliateFee"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "balances"
                },
                "index": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "registry"
                  },
                  "memberName": "getOpiumAddress"
                 },
                 "arguments": [],
                 "names": [],
                 "identifiers": []
                }
               },
               "index": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_order"
                },
                "memberName": "feeTokenAddress"
               }
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "balances"
                  },
                  "index": {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "registry"
                    },
                    "memberName": "getOpiumAddress"
                   },
                   "arguments": [],
                   "names": [],
                   "identifiers": []
                  }
                 },
                 "index": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "_order"
                  },
                  "memberName": "feeTokenAddress"
                 }
                },
                "memberName": "add"
               },
               "arguments": [
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "_order"
                 },
                 "memberName": "affiliateFee"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "feeTaken"
            },
            "index": {
             "type": "Identifier",
             "name": "_orderHash"
            }
           },
           "right": {
            "type": "BooleanLiteral",
            "value": true
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "min",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_a",
         "identifier": {
          "type": "Identifier",
          "name": "_a"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_b",
         "identifier": {
          "type": "Identifier",
          "name": "_b"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Conditional",
           "condition": {
            "type": "BinaryOperation",
            "operator": "<",
            "left": {
             "type": "Identifier",
             "name": "_a"
            },
            "right": {
             "type": "Identifier",
             "name": "_b"
            }
           },
           "trueExpression": {
            "type": "Identifier",
            "name": "_a"
           },
           "falseExpression": {
            "type": "Identifier",
            "name": "_b"
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "getDivisionPercentage",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_numerator",
         "identifier": {
          "type": "Identifier",
          "name": "_numerator"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_denominator",
         "identifier": {
          "type": "Identifier",
          "name": "_denominator"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "divisionPercentage",
         "identifier": {
          "type": "Identifier",
          "name": "divisionPercentage"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "divisionPercentage"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_numerator"
               },
               "memberName": "mul"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "PERCENTAGE_BASE"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "memberName": "div"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_denominator"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "getInitialPercentageValue",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_divisionPercentage",
         "identifier": {
          "type": "Identifier",
          "name": "_divisionPercentage"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_denominator",
         "identifier": {
          "type": "Identifier",
          "name": "_denominator"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "numerator",
         "identifier": {
          "type": "Identifier",
          "name": "numerator"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "numerator"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_divisionPercentage"
               },
               "memberName": "mul"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_denominator"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "memberName": "div"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "PERCENTAGE_BASE"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Smartdec-Opium Smart Contracts Security Analysis/opium-contracts-60ff6f80996b83f6ad19c35b74480fef34f7dc03/contracts/Matching/Match/MatchCreate.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.5.4"
    },
    {
     "type": "PragmaDirective",
     "name": "experimental",
     "value": "ABIEncoderV2"
    },
    {
     "type": "ImportDirective",
     "path": "../../Lib/LibDerivative.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../Lib/LibDerivative.sol",
      "parts": [
       "../../Lib/LibDerivative.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../Core.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../Core.sol",
      "parts": [
       "../../Core.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../../SyntheticAggregator.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../SyntheticAggregator.sol",
      "parts": [
       "../../SyntheticAggregator.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./MatchLogic.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./MatchLogic.sol",
      "parts": [
       "./MatchLogic.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "MatchCreate",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "MatchLogic"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "LibDerivative"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "EventDefinition",
       "name": "Create",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "derivativeHash",
         "identifier": {
          "type": "Identifier",
          "name": "derivativeHash"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "buyerPremiumAddress",
         "identifier": {
          "type": "Identifier",
          "name": "buyerPremiumAddress"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "buyerPremiumAmount",
         "identifier": {
          "type": "Identifier",
          "name": "buyerPremiumAmount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "sellerPremiumAddress",
         "identifier": {
          "type": "Identifier",
          "name": "sellerPremiumAddress"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "sellerPremiumAmount",
         "identifier": {
          "type": "Identifier",
          "name": "sellerPremiumAmount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "filled",
         "identifier": {
          "type": "Identifier",
          "name": "filled"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "FunctionDefinition",
       "name": "create",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Order"
         },
         "name": "_buyOrder",
         "identifier": {
          "type": "Identifier",
          "name": "_buyOrder"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Order"
         },
         "name": "_sellOrder",
         "identifier": {
          "type": "Identifier",
          "name": "_sellOrder"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Derivative"
         },
         "name": "_derivative",
         "identifier": {
          "type": "Identifier",
          "name": "_derivative"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "_buyerIsMaker",
         "identifier": {
          "type": "Identifier",
          "name": "_buyerIsMaker"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "&&",
             "left": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_buyOrder"
               },
               "memberName": "makerTokenId"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_sellOrder"
               },
               "memberName": "makerTokenId"
              }
             },
             "right": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_sellOrder"
               },
               "memberName": "makerTokenId"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             }
            },
            {
             "type": "StringLiteral",
             "value": "MATCH:NOT_CREATION",
             "parts": [
              "MATCH:NOT_CREATION"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "UnaryOperation",
             "operator": "!",
             "subExpression": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "IDerivativeLogic"
                },
                "arguments": [
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "_derivative"
                  },
                  "memberName": "syntheticId"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               "memberName": "isPool"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             },
             "isPrefix": true
            },
            {
             "type": "StringLiteral",
             "value": "MATCH:CANT_BE_POOL",
             "parts": [
              "MATCH:CANT_BE_POOL"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "validateTakerAddress"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_buyOrder"
            },
            {
             "type": "Identifier",
             "name": "_sellOrder"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "validateTakerAddress"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_sellOrder"
            },
            {
             "type": "Identifier",
             "name": "_buyOrder"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "validateSenderAddress"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_buyOrder"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "validateSenderAddress"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_sellOrder"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "validateExpiration"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_buyOrder"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "validateExpiration"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_sellOrder"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "bytes32",
              "stateMutability": null
             },
             "length": {
              "type": "NumberLiteral",
              "number": "2",
              "subdenomination": null
             }
            },
            "name": "orderHashes",
            "identifier": {
             "type": "Identifier",
             "name": "orderHashes"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "orderHashes"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "hashOrder"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_buyOrder"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "validateCanceled"
           },
           "arguments": [
            {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "orderHashes"
             },
             "index": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "validateSignature"
           },
           "arguments": [
            {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "orderHashes"
             },
             "index": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "Identifier",
             "name": "_buyOrder"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "orderHashes"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "hashOrder"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_sellOrder"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "validateCanceled"
           },
           "arguments": [
            {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "orderHashes"
             },
             "index": {
              "type": "NumberLiteral",
              "number": "1",
              "subdenomination": null
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "validateSignature"
           },
           "arguments": [
            {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "orderHashes"
             },
             "index": {
              "type": "NumberLiteral",
              "number": "1",
              "subdenomination": null
             }
            },
            {
             "type": "Identifier",
             "name": "_sellOrder"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "name": "margins",
            "identifier": {
             "type": "Identifier",
             "name": "margins"
            },
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": {
              "type": "NumberLiteral",
              "number": "2",
              "subdenomination": null
             }
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "derivativeHash",
            "identifier": {
             "type": "Identifier",
             "name": "derivativeHash"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_validateDerivativeAndCalculateMargin"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_buyOrder"
            },
            {
             "type": "Identifier",
             "name": "_sellOrder"
            },
            {
             "type": "Identifier",
             "name": "_derivative"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": {
              "type": "NumberLiteral",
              "number": "2",
              "subdenomination": null
             }
            },
            "name": "premiums",
            "identifier": {
             "type": "Identifier",
             "name": "premiums"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "premiums"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_validatePremium"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_buyOrder"
             },
             {
              "type": "Identifier",
              "name": "_sellOrder"
             },
             {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "margins"
              },
              "index": {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              }
             },
             {
              "type": "Identifier",
              "name": "_buyerIsMaker"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "premiums"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_validatePremium"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_sellOrder"
             },
             {
              "type": "Identifier",
              "name": "_buyOrder"
             },
             {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "margins"
              },
              "index": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             {
              "type": "UnaryOperation",
              "operator": "!",
              "subExpression": {
               "type": "Identifier",
               "name": "_buyerIsMaker"
              },
              "isPrefix": true
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "fillPositions",
            "identifier": {
             "type": "Identifier",
             "name": "fillPositions"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_fillCreate"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_buyOrder"
            },
            {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "orderHashes"
             },
             "index": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "Identifier",
             "name": "_sellOrder"
            },
            {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "orderHashes"
             },
             "index": {
              "type": "NumberLiteral",
              "number": "1",
              "subdenomination": null
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "takeFees"
           },
           "arguments": [
            {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "orderHashes"
             },
             "index": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "Identifier",
             "name": "_buyOrder"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "takeFees"
           },
           "arguments": [
            {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "orderHashes"
             },
             "index": {
              "type": "NumberLiteral",
              "number": "1",
              "subdenomination": null
             }
            },
            {
             "type": "Identifier",
             "name": "_sellOrder"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_distributeFunds"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_buyOrder"
            },
            {
             "type": "Identifier",
             "name": "_sellOrder"
            },
            {
             "type": "Identifier",
             "name": "_derivative"
            },
            {
             "type": "Identifier",
             "name": "margins"
            },
            {
             "type": "Identifier",
             "name": "premiums"
            },
            {
             "type": "Identifier",
             "name": "fillPositions"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "Core"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "registry"
                },
                "memberName": "getCore"
               },
               "arguments": [],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "create"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_derivative"
            },
            {
             "type": "Identifier",
             "name": "fillPositions"
            },
            {
             "type": "TupleExpression",
             "components": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_buyOrder"
               },
               "memberName": "makerAddress"
              },
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_sellOrder"
               },
               "memberName": "makerAddress"
              }
             ],
             "isArray": true
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "Create"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "derivativeHash"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_buyOrder"
             },
             "memberName": "takerMarginAddress"
            },
            {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "premiums"
             },
             "index": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_sellOrder"
             },
             "memberName": "takerMarginAddress"
            },
            {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "premiums"
             },
             "index": {
              "type": "NumberLiteral",
              "number": "1",
              "subdenomination": null
             }
            },
            {
             "type": "Identifier",
             "name": "fillPositions"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "nonReentrant",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_validateDerivativeAndCalculateMargin",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Order"
         },
         "name": "_buyOrder",
         "identifier": {
          "type": "Identifier",
          "name": "_buyOrder"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Order"
         },
         "name": "_sellOrder",
         "identifier": {
          "type": "Identifier",
          "name": "_sellOrder"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Derivative"
         },
         "name": "_derivative",
         "identifier": {
          "type": "Identifier",
          "name": "_derivative"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": {
           "type": "NumberLiteral",
           "number": "2",
           "subdenomination": null
          }
         },
         "name": "margins",
         "identifier": {
          "type": "Identifier",
          "name": "margins"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "derivativeHash",
         "identifier": {
          "type": "Identifier",
          "name": "derivativeHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "derivativeHash"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "getDerivativeHash"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_derivative"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "longTokenId",
            "identifier": {
             "type": "Identifier",
             "name": "longTokenId"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "derivativeHash"
            },
            "memberName": "getLongTokenId"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "shortTokenId",
            "identifier": {
             "type": "Identifier",
             "name": "shortTokenId"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "derivativeHash"
            },
            "memberName": "getShortTokenId"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "&&",
             "left": {
              "type": "BinaryOperation",
              "operator": "&&",
              "left": {
               "type": "BinaryOperation",
               "operator": "!=",
               "left": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_buyOrder"
                },
                "memberName": "takerTokenId"
               },
               "right": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_sellOrder"
                },
                "memberName": "takerTokenId"
               }
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "==",
               "left": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_buyOrder"
                },
                "memberName": "takerTokenId"
               },
               "right": {
                "type": "Identifier",
                "name": "longTokenId"
               }
              }
             },
             "right": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_sellOrder"
               },
               "memberName": "takerTokenId"
              },
              "right": {
               "type": "Identifier",
               "name": "shortTokenId"
              }
             }
            },
            {
             "type": "StringLiteral",
             "value": "MATCH:DERIVATIVE_NOT_MATCH",
             "parts": [
              "MATCH:DERIVATIVE_NOT_MATCH"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "TupleExpression",
            "components": [
             {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "margins"
              },
              "index": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "margins"
              },
              "index": {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              }
             }
            ],
            "isArray": false
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "SyntheticAggregator"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "registry"
                 },
                 "memberName": "getSyntheticAggregator"
                },
                "arguments": [],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             },
             "memberName": "getMargin"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "derivativeHash"
             },
             {
              "type": "Identifier",
              "name": "_derivative"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "||",
             "left": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "margins"
               },
               "index": {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "right": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_buyOrder"
               },
               "memberName": "makerMarginAddress"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_derivative"
               },
               "memberName": "token"
              }
             }
            },
            {
             "type": "StringLiteral",
             "value": "MATCH:PROVIDED_MARGIN_CURRENCY_WRONG",
             "parts": [
              "MATCH:PROVIDED_MARGIN_CURRENCY_WRONG"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "||",
             "left": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "margins"
               },
               "index": {
                "type": "NumberLiteral",
                "number": "1",
                "subdenomination": null
               }
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "right": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_sellOrder"
               },
               "memberName": "makerMarginAddress"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_derivative"
               },
               "memberName": "token"
              }
             }
            },
            {
             "type": "StringLiteral",
             "value": "MATCH:PROVIDED_MARGIN_CURRENCY_WRONG",
             "parts": [
              "MATCH:PROVIDED_MARGIN_CURRENCY_WRONG"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "&&",
             "left": {
              "type": "BinaryOperation",
              "operator": ">=",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_buyOrder"
               },
               "memberName": "makerMarginAmount"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "_buyOrder"
                 },
                 "memberName": "takerTokenAmount"
                },
                "memberName": "mul"
               },
               "arguments": [
                {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "margins"
                 },
                 "index": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                 }
                }
               ],
               "names": [],
               "identifiers": []
              }
             },
             "right": {
              "type": "BinaryOperation",
              "operator": ">=",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_sellOrder"
               },
               "memberName": "makerMarginAmount"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "_sellOrder"
                 },
                 "memberName": "takerTokenAmount"
                },
                "memberName": "mul"
               },
               "arguments": [
                {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "margins"
                 },
                 "index": {
                  "type": "NumberLiteral",
                  "number": "1",
                  "subdenomination": null
                 }
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "StringLiteral",
             "value": "MATCH:PROVIDED_MARGIN_NOT_ENOUGH",
             "parts": [
              "MATCH:PROVIDED_MARGIN_NOT_ENOUGH"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_validatePremium",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Order"
         },
         "name": "_leftOrder",
         "identifier": {
          "type": "Identifier",
          "name": "_leftOrder"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Order"
         },
         "name": "_rightOrder",
         "identifier": {
          "type": "Identifier",
          "name": "_rightOrder"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_rightOrderMargin",
         "identifier": {
          "type": "Identifier",
          "name": "_rightOrderMargin"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "_leftIsMaker",
         "identifier": {
          "type": "Identifier",
          "name": "_leftIsMaker"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_leftOrder"
            },
            "memberName": "takerMarginAmount"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_leftOrder"
              },
              "memberName": "takerMarginAddress"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_rightOrder"
              },
              "memberName": "makerMarginAddress"
             }
            },
            {
             "type": "StringLiteral",
             "value": "MATCH:MARGIN_ADDRESS_NOT_MATCH",
             "parts": [
              "MATCH:MARGIN_ADDRESS_NOT_MATCH"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "leftWantsPremium",
            "identifier": {
             "type": "Identifier",
             "name": "leftWantsPremium"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_leftOrder"
             },
             "memberName": "takerMarginAmount"
            },
            "memberName": "div"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_leftOrder"
             },
             "memberName": "takerTokenAmount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "rightOffersPremium",
            "identifier": {
             "type": "Identifier",
             "name": "rightOffersPremium"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_rightOrder"
               },
               "memberName": "makerMarginAmount"
              },
              "memberName": "div"
             },
             "arguments": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_rightOrder"
               },
               "memberName": "takerTokenAmount"
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "sub"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_rightOrderMargin"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<=",
             "left": {
              "type": "Identifier",
              "name": "leftWantsPremium"
             },
             "right": {
              "type": "Identifier",
              "name": "rightOffersPremium"
             }
            },
            {
             "type": "StringLiteral",
             "value": "MATCH:PREMIUM_IS_NOT_ENOUGH",
             "parts": [
              "MATCH:PREMIUM_IS_NOT_ENOUGH"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Conditional",
           "condition": {
            "type": "Identifier",
            "name": "_leftIsMaker"
           },
           "trueExpression": {
            "type": "Identifier",
            "name": "leftWantsPremium"
           },
           "falseExpression": {
            "type": "Identifier",
            "name": "rightOffersPremium"
           }
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "_fillCreate",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Order"
         },
         "name": "_leftOrder",
         "identifier": {
          "type": "Identifier",
          "name": "_leftOrder"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_leftOrderHash",
         "identifier": {
          "type": "Identifier",
          "name": "_leftOrderHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Order"
         },
         "name": "_rightOrder",
         "identifier": {
          "type": "Identifier",
          "name": "_rightOrder"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_rightOrderHash",
         "identifier": {
          "type": "Identifier",
          "name": "_rightOrderHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "fillPositions",
         "identifier": {
          "type": "Identifier",
          "name": "fillPositions"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "leftInitial",
            "identifier": {
             "type": "Identifier",
             "name": "leftInitial"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "_leftOrder"
           },
           "memberName": "takerTokenAmount"
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "rightInitial",
            "identifier": {
             "type": "Identifier",
             "name": "rightInitial"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "_rightOrder"
           },
           "memberName": "takerTokenAmount"
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "leftAlreadyFilled",
            "identifier": {
             "type": "Identifier",
             "name": "leftAlreadyFilled"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getInitialPercentageValue"
           },
           "arguments": [
            {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "filled"
             },
             "index": {
              "type": "Identifier",
              "name": "_leftOrderHash"
             }
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_leftOrder"
             },
             "memberName": "takerTokenAmount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "rightAlreadyFilled",
            "identifier": {
             "type": "Identifier",
             "name": "rightAlreadyFilled"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "getInitialPercentageValue"
           },
           "arguments": [
            {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "filled"
             },
             "index": {
              "type": "Identifier",
              "name": "_rightOrderHash"
             }
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_rightOrder"
             },
             "memberName": "takerTokenAmount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "name": "leftAvailable",
            "identifier": {
             "type": "Identifier",
             "name": "leftAvailable"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "rightAvailable",
            "identifier": {
             "type": "Identifier",
             "name": "rightAvailable"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "TupleExpression",
           "components": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_leftOrder"
               },
               "memberName": "takerTokenAmount"
              },
              "memberName": "sub"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "leftAlreadyFilled"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "_rightOrder"
               },
               "memberName": "takerTokenAmount"
              },
              "memberName": "sub"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "rightAlreadyFilled"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "isArray": false
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "fillPositions"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "min"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "leftAvailable"
             },
             {
              "type": "Identifier",
              "name": "rightAvailable"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "Identifier",
              "name": "fillPositions"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "MATCH:NO_FILLABLE_POSITIONS",
             "parts": [
              "MATCH:NO_FILLABLE_POSITIONS"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "filled"
            },
            "index": {
             "type": "Identifier",
             "name": "_leftOrderHash"
            }
           },
           "right": {
            "type": "Conditional",
            "condition": {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "Identifier",
              "name": "leftInitial"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            "trueExpression": {
             "type": "Identifier",
             "name": "PERCENTAGE_BASE"
            },
            "falseExpression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "getDivisionPercentage"
               },
               "arguments": [
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "leftAlreadyFilled"
                  },
                  "memberName": "add"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "fillPositions"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                },
                {
                 "type": "Identifier",
                 "name": "leftInitial"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "memberName": "add"
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            }
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "filled"
            },
            "index": {
             "type": "Identifier",
             "name": "_rightOrderHash"
            }
           },
           "right": {
            "type": "Conditional",
            "condition": {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "Identifier",
              "name": "rightInitial"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            "trueExpression": {
             "type": "Identifier",
             "name": "PERCENTAGE_BASE"
            },
            "falseExpression": {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "getDivisionPercentage"
               },
               "arguments": [
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "rightAlreadyFilled"
                  },
                  "memberName": "add"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "fillPositions"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                },
                {
                 "type": "Identifier",
                 "name": "rightInitial"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "memberName": "add"
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            }
           }
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_distributeFunds",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Order"
         },
         "name": "_buyOrder",
         "identifier": {
          "type": "Identifier",
          "name": "_buyOrder"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Order"
         },
         "name": "_sellOrder",
         "identifier": {
          "type": "Identifier",
          "name": "_sellOrder"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Derivative"
         },
         "name": "_derivative",
         "identifier": {
          "type": "Identifier",
          "name": "_derivative"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": {
           "type": "NumberLiteral",
           "number": "2",
           "subdenomination": null
          }
         },
         "name": "margins",
         "identifier": {
          "type": "Identifier",
          "name": "margins"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": {
           "type": "NumberLiteral",
           "number": "2",
           "subdenomination": null
          }
         },
         "name": "premiums",
         "identifier": {
          "type": "Identifier",
          "name": "premiums"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "fillPositions",
         "identifier": {
          "type": "Identifier",
          "name": "fillPositions"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "IERC20"
            },
            "name": "marginToken",
            "identifier": {
             "type": "Identifier",
             "name": "marginToken"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "IERC20"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "_derivative"
             },
             "memberName": "token"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "TokenSpender"
            },
            "name": "tokenSpender",
            "identifier": {
             "type": "Identifier",
             "name": "tokenSpender"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "TokenSpender"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "registry"
              },
              "memberName": "getTokenSpender"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "margins"
              },
              "index": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "premiums"
              },
              "index": {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              }
             }
            ],
            "names": [],
            "identifiers": []
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": ">=",
                "left": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "marginToken"
                  },
                  "memberName": "allowance"
                 },
                 "arguments": [
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "_buyOrder"
                   },
                   "memberName": "makerAddress"
                  },
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "Identifier",
                    "name": "address"
                   },
                   "arguments": [
                    {
                     "type": "Identifier",
                     "name": "tokenSpender"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 ],
                 "names": [],
                 "identifiers": []
                },
                "right": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "IndexAccess",
                     "base": {
                      "type": "Identifier",
                      "name": "margins"
                     },
                     "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                     }
                    },
                    "memberName": "add"
                   },
                   "arguments": [
                    {
                     "type": "IndexAccess",
                     "base": {
                      "type": "Identifier",
                      "name": "premiums"
                     },
                     "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                     }
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  },
                  "memberName": "mul"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "fillPositions"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "StringLiteral",
                "value": "MATCH:NOT_ENOUGH_ALLOWED_MARGIN",
                "parts": [
                 "MATCH:NOT_ENOUGH_ALLOWED_MARGIN"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "!=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "premiums"
               },
               "index": {
                "type": "NumberLiteral",
                "number": "1",
                "subdenomination": null
               }
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "tokenSpender"
                  },
                  "memberName": "claimTokens"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "marginToken"
                  },
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "_buyOrder"
                   },
                   "memberName": "makerAddress"
                  },
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "_sellOrder"
                   },
                   "memberName": "makerAddress"
                  },
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "IndexAccess",
                     "base": {
                      "type": "Identifier",
                      "name": "premiums"
                     },
                     "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                     }
                    },
                    "memberName": "mul"
                   },
                   "arguments": [
                    {
                     "type": "Identifier",
                     "name": "fillPositions"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": null
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "!=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "margins"
               },
               "index": {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "tokenSpender"
                  },
                  "memberName": "claimTokens"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "marginToken"
                  },
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "_buyOrder"
                   },
                   "memberName": "makerAddress"
                  },
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "Identifier",
                    "name": "address"
                   },
                   "arguments": [
                    {
                     "type": "Identifier",
                     "name": "this"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  },
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "IndexAccess",
                     "base": {
                      "type": "Identifier",
                      "name": "margins"
                     },
                     "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                     }
                    },
                    "memberName": "mul"
                   },
                   "arguments": [
                    {
                     "type": "Identifier",
                     "name": "fillPositions"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": null
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "margins"
              },
              "index": {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              }
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "premiums"
              },
              "index": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             }
            ],
            "names": [],
            "identifiers": []
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": ">=",
                "left": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "marginToken"
                  },
                  "memberName": "allowance"
                 },
                 "arguments": [
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "_sellOrder"
                   },
                   "memberName": "makerAddress"
                  },
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "Identifier",
                    "name": "address"
                   },
                   "arguments": [
                    {
                     "type": "Identifier",
                     "name": "tokenSpender"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 ],
                 "names": [],
                 "identifiers": []
                },
                "right": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "IndexAccess",
                     "base": {
                      "type": "Identifier",
                      "name": "margins"
                     },
                     "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                     }
                    },
                    "memberName": "add"
                   },
                   "arguments": [
                    {
                     "type": "IndexAccess",
                     "base": {
                      "type": "Identifier",
                      "name": "premiums"
                     },
                     "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                     }
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  },
                  "memberName": "mul"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "fillPositions"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "StringLiteral",
                "value": "MATCH:NOT_ENOUGH_ALLOWED_MARGIN",
                "parts": [
                 "MATCH:NOT_ENOUGH_ALLOWED_MARGIN"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "!=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "premiums"
               },
               "index": {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "tokenSpender"
                  },
                  "memberName": "claimTokens"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "marginToken"
                  },
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "_sellOrder"
                   },
                   "memberName": "makerAddress"
                  },
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "_buyOrder"
                   },
                   "memberName": "makerAddress"
                  },
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "IndexAccess",
                     "base": {
                      "type": "Identifier",
                      "name": "premiums"
                     },
                     "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                     }
                    },
                    "memberName": "mul"
                   },
                   "arguments": [
                    {
                     "type": "Identifier",
                     "name": "fillPositions"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": null
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "!=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "margins"
               },
               "index": {
                "type": "NumberLiteral",
                "number": "1",
                "subdenomination": null
               }
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "tokenSpender"
                  },
                  "memberName": "claimTokens"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "marginToken"
                  },
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "_sellOrder"
                   },
                   "memberName": "makerAddress"
                  },
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "Identifier",
                    "name": "address"
                   },
                   "arguments": [
                    {
                     "type": "Identifier",
                     "name": "this"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  },
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "IndexAccess",
                     "base": {
                      "type": "Identifier",
                      "name": "margins"
                     },
                     "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                     }
                    },
                    "memberName": "mul"
                   },
                   "arguments": [
                    {
                     "type": "Identifier",
                     "name": "fillPositions"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": null
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "margins"
              },
              "index": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "memberName": "add"
            },
            "arguments": [
             {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "margins"
              },
              "index": {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              }
             }
            ],
            "names": [],
            "identifiers": []
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "require"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "marginToken"
                 },
                 "memberName": "approve"
                },
                "arguments": [
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "Identifier",
                   "name": "address"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "tokenSpender"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 },
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "IndexAccess",
                      "base": {
                       "type": "Identifier",
                       "name": "margins"
                      },
                      "index": {
                       "type": "NumberLiteral",
                       "number": "0",
                       "subdenomination": null
                      }
                     },
                     "memberName": "add"
                    },
                    "arguments": [
                     {
                      "type": "IndexAccess",
                      "base": {
                       "type": "Identifier",
                       "name": "margins"
                      },
                      "index": {
                       "type": "NumberLiteral",
                       "number": "1",
                       "subdenomination": null
                      }
                     }
                    ],
                    "names": [],
                    "identifiers": []
                   },
                   "memberName": "mul"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "fillPositions"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "StringLiteral",
                "value": "MATCH:COULDNT_APPROVE_MARGIN_FOR_CORE",
                "parts": [
                 "MATCH:COULDNT_APPROVE_MARGIN_FOR_CORE"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Smartdec-Opium Smart Contracts Security Analysis/opium-contracts-60ff6f80996b83f6ad19c35b74480fef34f7dc03/contracts/Matching/Match/Match.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.5.4"
    },
    {
     "type": "PragmaDirective",
     "name": "experimental",
     "value": "ABIEncoderV2"
    },
    {
     "type": "ImportDirective",
     "path": "./MatchCreate.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./MatchCreate.sol",
      "parts": [
       "./MatchCreate.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./MatchSwap.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./MatchSwap.sol",
      "parts": [
       "./MatchSwap.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "Match",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "MatchCreate"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "MatchSwap"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_registry",
         "identifier": {
          "type": "Identifier",
          "name": "_registry"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": []
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "usingRegistry",
         "arguments": [
          {
           "type": "Identifier",
           "name": "_registry"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Smartdec-Opium Smart Contracts Security Analysis/opium-contracts-60ff6f80996b83f6ad19c35b74480fef34f7dc03/contracts/Matching/Match/LibOrder.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.5.4"
    },
    {
     "type": "PragmaDirective",
     "name": "experimental",
     "value": "ABIEncoderV2"
    },
    {
     "type": "ImportDirective",
     "path": "../../Lib/LibEIP712.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../../Lib/LibEIP712.sol",
      "parts": [
       "../../Lib/LibEIP712.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "LibOrder",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "LibEIP712"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "StructDefinition",
       "name": "Order",
       "members": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "makerMarginAddress",
         "identifier": {
          "type": "Identifier",
          "name": "makerMarginAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "takerMarginAddress",
         "identifier": {
          "type": "Identifier",
          "name": "takerMarginAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "makerAddress",
         "identifier": {
          "type": "Identifier",
          "name": "makerAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "takerAddress",
         "identifier": {
          "type": "Identifier",
          "name": "takerAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "senderAddress",
         "identifier": {
          "type": "Identifier",
          "name": "senderAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "relayerAddress",
         "identifier": {
          "type": "Identifier",
          "name": "relayerAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "affiliateAddress",
         "identifier": {
          "type": "Identifier",
          "name": "affiliateAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "feeTokenAddress",
         "identifier": {
          "type": "Identifier",
          "name": "feeTokenAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "makerTokenId",
         "identifier": {
          "type": "Identifier",
          "name": "makerTokenId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "makerTokenAmount",
         "identifier": {
          "type": "Identifier",
          "name": "makerTokenAmount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "makerMarginAmount",
         "identifier": {
          "type": "Identifier",
          "name": "makerMarginAmount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "takerTokenId",
         "identifier": {
          "type": "Identifier",
          "name": "takerTokenId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "takerTokenAmount",
         "identifier": {
          "type": "Identifier",
          "name": "takerTokenAmount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "takerMarginAmount",
         "identifier": {
          "type": "Identifier",
          "name": "takerMarginAmount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "relayerFee",
         "identifier": {
          "type": "Identifier",
          "name": "relayerFee"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "affiliateFee",
         "identifier": {
          "type": "Identifier",
          "name": "affiliateFee"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "nonce",
         "identifier": {
          "type": "Identifier",
          "name": "nonce"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "expiresAt",
         "identifier": {
          "type": "Identifier",
          "name": "expiresAt"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "signature",
         "identifier": {
          "type": "Identifier",
          "name": "signature"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "EIP712_ORDER_TYPEHASH",
         "identifier": {
          "type": "Identifier",
          "name": "EIP712_ORDER_TYPEHASH"
         },
         "expression": {
          "type": "FunctionCall",
          "expression": {
           "type": "Identifier",
           "name": "keccak256"
          },
          "arguments": [
           {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "abi"
             },
             "memberName": "encodePacked"
            },
            "arguments": [
             {
              "type": "StringLiteral",
              "value": "Order(",
              "parts": [
               "Order("
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": "address makerMarginAddress,",
              "parts": [
               "address makerMarginAddress,"
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": "address takerMarginAddress,",
              "parts": [
               "address takerMarginAddress,"
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": "address makerAddress,",
              "parts": [
               "address makerAddress,"
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": "address takerAddress,",
              "parts": [
               "address takerAddress,"
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": "address senderAddress,",
              "parts": [
               "address senderAddress,"
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": "address relayerAddress,",
              "parts": [
               "address relayerAddress,"
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": "address affiliateAddress,",
              "parts": [
               "address affiliateAddress,"
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": "address feeTokenAddress,",
              "parts": [
               "address feeTokenAddress,"
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": "uint256 makerTokenId,",
              "parts": [
               "uint256 makerTokenId,"
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": "uint256 makerTokenAmount,",
              "parts": [
               "uint256 makerTokenAmount,"
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": "uint256 makerMarginAmount,",
              "parts": [
               "uint256 makerMarginAmount,"
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": "uint256 takerTokenId,",
              "parts": [
               "uint256 takerTokenId,"
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": "uint256 takerTokenAmount,",
              "parts": [
               "uint256 takerTokenAmount,"
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": "uint256 takerMarginAmount,",
              "parts": [
               "uint256 takerMarginAmount,"
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": "uint256 relayerFee,",
              "parts": [
               "uint256 relayerFee,"
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": "uint256 affiliateFee,",
              "parts": [
               "uint256 affiliateFee,"
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": "uint256 nonce,",
              "parts": [
               "uint256 nonce,"
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": "uint256 expiresAt",
              "parts": [
               "uint256 expiresAt"
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": ")",
              "parts": [
               ")"
              ],
              "isUnicode": [
               false
              ]
             }
            ],
            "names": [],
            "identifiers": []
           }
          ],
          "names": [],
          "identifiers": []
         },
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "FunctionCall",
        "expression": {
         "type": "Identifier",
         "name": "keccak256"
        },
        "arguments": [
         {
          "type": "FunctionCall",
          "expression": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "abi"
           },
           "memberName": "encodePacked"
          },
          "arguments": [
           {
            "type": "StringLiteral",
            "value": "Order(",
            "parts": [
             "Order("
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": "address makerMarginAddress,",
            "parts": [
             "address makerMarginAddress,"
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": "address takerMarginAddress,",
            "parts": [
             "address takerMarginAddress,"
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": "address makerAddress,",
            "parts": [
             "address makerAddress,"
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": "address takerAddress,",
            "parts": [
             "address takerAddress,"
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": "address senderAddress,",
            "parts": [
             "address senderAddress,"
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": "address relayerAddress,",
            "parts": [
             "address relayerAddress,"
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": "address affiliateAddress,",
            "parts": [
             "address affiliateAddress,"
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": "address feeTokenAddress,",
            "parts": [
             "address feeTokenAddress,"
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": "uint256 makerTokenId,",
            "parts": [
             "uint256 makerTokenId,"
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": "uint256 makerTokenAmount,",
            "parts": [
             "uint256 makerTokenAmount,"
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": "uint256 makerMarginAmount,",
            "parts": [
             "uint256 makerMarginAmount,"
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": "uint256 takerTokenId,",
            "parts": [
             "uint256 takerTokenId,"
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": "uint256 takerTokenAmount,",
            "parts": [
             "uint256 takerTokenAmount,"
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": "uint256 takerMarginAmount,",
            "parts": [
             "uint256 takerMarginAmount,"
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": "uint256 relayerFee,",
            "parts": [
             "uint256 relayerFee,"
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": "uint256 affiliateFee,",
            "parts": [
             "uint256 affiliateFee,"
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": "uint256 nonce,",
            "parts": [
             "uint256 nonce,"
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": "uint256 expiresAt",
            "parts": [
             "uint256 expiresAt"
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": ")",
            "parts": [
             ")"
            ],
            "isUnicode": [
             false
            ]
           }
          ],
          "names": [],
          "identifiers": []
         }
        ],
        "names": [],
        "identifiers": []
       }
      },
      {
       "type": "FunctionDefinition",
       "name": "hashOrder",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Order"
         },
         "name": "_order",
         "identifier": {
          "type": "Identifier",
          "name": "_order"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "hash",
         "identifier": {
          "type": "Identifier",
          "name": "hash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "hash"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "keccak256"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "abi"
               },
               "memberName": "encodePacked"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "abi"
                 },
                 "memberName": "encodePacked"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "EIP712_ORDER_TYPEHASH"
                 },
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "ElementaryTypeName",
                   "name": "uint256",
                   "stateMutability": null
                  },
                  "arguments": [
                   {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "_order"
                    },
                    "memberName": "makerMarginAddress"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 },
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "ElementaryTypeName",
                   "name": "uint256",
                   "stateMutability": null
                  },
                  "arguments": [
                   {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "_order"
                    },
                    "memberName": "takerMarginAddress"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 },
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "ElementaryTypeName",
                   "name": "uint256",
                   "stateMutability": null
                  },
                  "arguments": [
                   {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "_order"
                    },
                    "memberName": "makerAddress"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 },
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "ElementaryTypeName",
                   "name": "uint256",
                   "stateMutability": null
                  },
                  "arguments": [
                   {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "_order"
                    },
                    "memberName": "takerAddress"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 },
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "ElementaryTypeName",
                   "name": "uint256",
                   "stateMutability": null
                  },
                  "arguments": [
                   {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "_order"
                    },
                    "memberName": "senderAddress"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 },
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "ElementaryTypeName",
                   "name": "uint256",
                   "stateMutability": null
                  },
                  "arguments": [
                   {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "_order"
                    },
                    "memberName": "relayerAddress"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 },
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "ElementaryTypeName",
                   "name": "uint256",
                   "stateMutability": null
                  },
                  "arguments": [
                   {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "_order"
                    },
                    "memberName": "affiliateAddress"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 },
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "ElementaryTypeName",
                   "name": "uint256",
                   "stateMutability": null
                  },
                  "arguments": [
                   {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "_order"
                    },
                    "memberName": "feeTokenAddress"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "abi"
                 },
                 "memberName": "encodePacked"
                },
                "arguments": [
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "_order"
                  },
                  "memberName": "makerTokenId"
                 },
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "_order"
                  },
                  "memberName": "makerTokenAmount"
                 },
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "_order"
                  },
                  "memberName": "makerMarginAmount"
                 },
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "_order"
                  },
                  "memberName": "takerTokenId"
                 },
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "_order"
                  },
                  "memberName": "takerTokenAmount"
                 },
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "_order"
                  },
                  "memberName": "takerMarginAmount"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "abi"
                 },
                 "memberName": "encodePacked"
                },
                "arguments": [
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "_order"
                  },
                  "memberName": "relayerFee"
                 },
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "_order"
                  },
                  "memberName": "affiliateFee"
                 },
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "_order"
                  },
                  "memberName": "nonce"
                 },
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "_order"
                  },
                  "memberName": "expiresAt"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "verifySignature",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_hash",
         "identifier": {
          "type": "Identifier",
          "name": "_hash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_signature",
         "identifier": {
          "type": "Identifier",
          "name": "_signature"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_address",
         "identifier": {
          "type": "Identifier",
          "name": "_address"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_signature"
              },
              "memberName": "length"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "65",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "ORDER:INVALID_SIGNATURE_LENGTH",
             "parts": [
              "ORDER:INVALID_SIGNATURE_LENGTH"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "digest",
            "identifier": {
             "type": "Identifier",
             "name": "digest"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "hashEIP712Message"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_hash"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "recovered",
            "identifier": {
             "type": "Identifier",
             "name": "recovered"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "retrieveAddress"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "digest"
            },
            {
             "type": "Identifier",
             "name": "_signature"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "_address"
           },
           "right": {
            "type": "Identifier",
            "name": "recovered"
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "retrieveAddress",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_hash",
         "identifier": {
          "type": "Identifier",
          "name": "_hash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "_signature",
         "identifier": {
          "type": "Identifier",
          "name": "_signature"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "r",
            "identifier": {
             "type": "Identifier",
             "name": "r"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "s",
            "identifier": {
             "type": "Identifier",
             "name": "s"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint8",
             "stateMutability": null
            },
            "name": "v",
            "identifier": {
             "type": "Identifier",
             "name": "v"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "r"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "add",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "_signature",
                  "arguments": []
                 },
                 {
                  "type": "DecimalNumber",
                  "value": "32"
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "s"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "add",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "_signature",
                  "arguments": []
                 },
                 {
                  "type": "DecimalNumber",
                  "value": "64"
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "v"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "byte",
              "arguments": [
               {
                "type": "DecimalNumber",
                "value": "0"
               },
               {
                "type": "AssemblyCall",
                "functionName": "mload",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "_signature",
                    "arguments": []
                   },
                   {
                    "type": "DecimalNumber",
                    "value": "96"
                   }
                  ]
                 }
                ]
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "v"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "27",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "+=",
              "left": {
               "type": "Identifier",
               "name": "v"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "27",
               "subdenomination": null
              }
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "&&",
           "left": {
            "type": "BinaryOperation",
            "operator": "!=",
            "left": {
             "type": "Identifier",
             "name": "v"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "27",
             "subdenomination": null
            }
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "!=",
            "left": {
             "type": "Identifier",
             "name": "v"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "28",
             "subdenomination": null
            }
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "TupleExpression",
              "components": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "address"
                },
                "arguments": [
                 {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "isArray": false
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "ecrecover"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_hash"
               },
               {
                "type": "Identifier",
                "name": "v"
               },
               {
                "type": "Identifier",
                "name": "r"
               },
               {
                "type": "Identifier",
                "name": "s"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "private",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Smartdec-Opium Smart Contracts Security Analysis/opium-contracts-60ff6f80996b83f6ad19c35b74480fef34f7dc03/contracts/Lib/usingRegistry.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.5.4"
    },
    {
     "type": "ImportDirective",
     "path": "../Registry.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../Registry.sol",
      "parts": [
       "../Registry.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "../Errors/usingRegistryErrors.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../Errors/usingRegistryErrors.sol",
      "parts": [
       "../Errors/usingRegistryErrors.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "usingRegistry",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "usingRegistryErrors"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "EventDefinition",
       "name": "RegistrySet",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "registry",
         "identifier": {
          "type": "Identifier",
          "name": "registry"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Registry"
         },
         "name": "registry",
         "identifier": {
          "type": "Identifier",
          "name": "registry"
         },
         "expression": null,
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "ModifierDefinition",
       "name": "onlyCore",
       "parameters": [],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "sender"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "registry"
               },
               "memberName": "getCore"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "Identifier",
             "name": "ERROR_USING_REGISTRY_ONLY_CORE_ALLOWED"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "_"
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_registry",
         "identifier": {
          "type": "Identifier",
          "name": "_registry"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "registry"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "Registry"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "_registry"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "RegistrySet"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_registry"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Smartdec-Opium Smart Contracts Security Analysis/opium-contracts-60ff6f80996b83f6ad19c35b74480fef34f7dc03/contracts/Lib/WhitelistedWithGovernanceAndChangableTimelock.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.5.4"
    },
    {
     "type": "ImportDirective",
     "path": "./WhitelistedWithGovernance.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./WhitelistedWithGovernance.sol",
      "parts": [
       "./WhitelistedWithGovernance.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "WhitelistedWithGovernanceAndChangableTimelock",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "WhitelistedWithGovernance"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "EventDefinition",
       "name": "Proposed",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "timelock",
         "identifier": {
          "type": "Identifier",
          "name": "timelock"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "Committed",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "timelock",
         "identifier": {
          "type": "Identifier",
          "name": "timelock"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "timelockProposalTime",
         "identifier": {
          "type": "Identifier",
          "name": "timelockProposalTime"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "0",
          "subdenomination": null
         },
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "0",
        "subdenomination": null
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "proposedTimelock",
         "identifier": {
          "type": "Identifier",
          "name": "proposedTimelock"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "0",
          "subdenomination": null
         },
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "0",
        "subdenomination": null
       }
      },
      {
       "type": "FunctionDefinition",
       "name": "proposeTimelock",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_timelock",
         "identifier": {
          "type": "Identifier",
          "name": "_timelock"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "timelockProposalTime"
           },
           "right": {
            "type": "Identifier",
            "name": "now"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "proposedTimelock"
           },
           "right": {
            "type": "Identifier",
            "name": "_timelock"
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "Proposed"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "_timelock"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyGovernor",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "commitTimelock",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "timelockProposalTime"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "Didn't proposed yet",
             "parts": [
              "Didn't proposed yet"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<",
             "left": {
              "type": "TupleExpression",
              "components": [
               {
                "type": "BinaryOperation",
                "operator": "+",
                "left": {
                 "type": "Identifier",
                 "name": "timelockProposalTime"
                },
                "right": {
                 "type": "Identifier",
                 "name": "TIME_LOCK_INTERVAL"
                }
               }
              ],
              "isArray": false
             },
             "right": {
              "type": "Identifier",
              "name": "now"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Can't commit yet",
             "parts": [
              "Can't commit yet"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "TIME_LOCK_INTERVAL"
           },
           "right": {
            "type": "Identifier",
            "name": "proposedTimelock"
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "Committed"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "proposedTimelock"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "timelockProposalTime"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyGovernor",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Smartdec-Opium Smart Contracts Security Analysis/opium-contracts-60ff6f80996b83f6ad19c35b74480fef34f7dc03/contracts/Lib/WhitelistedWithGovernance.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.5.4"
    },
    {
     "type": "ImportDirective",
     "path": "./Whitelisted.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./Whitelisted.sol",
      "parts": [
       "./Whitelisted.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "WhitelistedWithGovernance",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "Whitelisted"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "EventDefinition",
       "name": "GovernorSet",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "governor",
         "identifier": {
          "type": "Identifier",
          "name": "governor"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "Proposed",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "length": null
         },
         "name": "whitelist",
         "identifier": {
          "type": "Identifier",
          "name": "whitelist"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "Committed",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "length": null
         },
         "name": "whitelist",
         "identifier": {
          "type": "Identifier",
          "name": "whitelist"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "TIME_LOCK_INTERVAL",
         "identifier": {
          "type": "Identifier",
          "name": "TIME_LOCK_INTERVAL"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "governor",
         "identifier": {
          "type": "Identifier",
          "name": "governor"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "initialized",
         "identifier": {
          "type": "Identifier",
          "name": "initialized"
         },
         "expression": {
          "type": "BooleanLiteral",
          "value": false
         },
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "BooleanLiteral",
        "value": false
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "proposalTime",
         "identifier": {
          "type": "Identifier",
          "name": "proposalTime"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "0",
          "subdenomination": null
         },
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "0",
        "subdenomination": null
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "length": null
         },
         "name": "proposedWhitelist",
         "identifier": {
          "type": "Identifier",
          "name": "proposedWhitelist"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "ModifierDefinition",
       "name": "onlyGovernor",
       "parameters": [],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "sender"
             },
             "right": {
              "type": "Identifier",
              "name": "governor"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Only governor allowed",
             "parts": [
              "Only governor allowed"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "_"
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_timeLockInterval",
         "identifier": {
          "type": "Identifier",
          "name": "_timeLockInterval"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_governor",
         "identifier": {
          "type": "Identifier",
          "name": "_governor"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "TIME_LOCK_INTERVAL"
           },
           "right": {
            "type": "Identifier",
            "name": "_timeLockInterval"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "governor"
           },
           "right": {
            "type": "Identifier",
            "name": "_governor"
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "GovernorSet"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "governor"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "proposeWhitelist",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "length": null
         },
         "name": "_whitelist",
         "identifier": {
          "type": "Identifier",
          "name": "_whitelist"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "_whitelist"
              },
              "memberName": "length"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "Can't be empty",
             "parts": [
              "Can't be empty"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "UnaryOperation",
           "operator": "!",
           "subExpression": {
            "type": "Identifier",
            "name": "initialized"
           },
           "isPrefix": true
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "initialized"
              },
              "right": {
               "type": "BooleanLiteral",
               "value": true
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "whitelist"
              },
              "right": {
               "type": "Identifier",
               "name": "_whitelist"
              }
             }
            },
            {
             "type": "EmitStatement",
             "eventCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "Committed"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "whitelist"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "proposalTime"
              },
              "right": {
               "type": "Identifier",
               "name": "now"
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "proposedWhitelist"
              },
              "right": {
               "type": "Identifier",
               "name": "_whitelist"
              }
             }
            },
            {
             "type": "EmitStatement",
             "eventCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "Proposed"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "proposedWhitelist"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyGovernor",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "commitWhitelist",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "proposalTime"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "StringLiteral",
             "value": "Didn't proposed yet",
             "parts": [
              "Didn't proposed yet"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "<",
             "left": {
              "type": "TupleExpression",
              "components": [
               {
                "type": "BinaryOperation",
                "operator": "+",
                "left": {
                 "type": "Identifier",
                 "name": "proposalTime"
                },
                "right": {
                 "type": "Identifier",
                 "name": "TIME_LOCK_INTERVAL"
                }
               }
              ],
              "isArray": false
             },
             "right": {
              "type": "Identifier",
              "name": "now"
             }
            },
            {
             "type": "StringLiteral",
             "value": "Can't commit yet",
             "parts": [
              "Can't commit yet"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "whitelist"
           },
           "right": {
            "type": "Identifier",
            "name": "proposedWhitelist"
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "Committed"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "whitelist"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "proposalTime"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyGovernor",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setGovernor",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_governor",
         "identifier": {
          "type": "Identifier",
          "name": "_governor"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "governor"
           },
           "right": {
            "type": "Identifier",
            "name": "_governor"
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "GovernorSet"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "governor"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyGovernor",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Smartdec-Opium Smart Contracts Security Analysis/opium-contracts-60ff6f80996b83f6ad19c35b74480fef34f7dc03/contracts/Lib/Whitelisted.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.5.4"
    },
    {
     "type": "ContractDefinition",
     "name": "Whitelisted",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "length": null
         },
         "name": "whitelist",
         "identifier": {
          "type": "Identifier",
          "name": "whitelist"
         },
         "expression": null,
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "ModifierDefinition",
       "name": "onlyWhitelisted",
       "parameters": [],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bool",
             "stateMutability": null
            },
            "name": "allowed",
            "identifier": {
             "type": "Identifier",
             "name": "allowed"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "BooleanLiteral",
           "value": false
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "whitelist"
            },
            "memberName": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": {
            "type": "UnaryOperation",
            "operator": "++",
            "subExpression": {
             "type": "Identifier",
             "name": "i"
            },
            "isPrefix": false
           }
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "whitelist"
               },
               "index": {
                "type": "Identifier",
                "name": "i"
               }
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "msg"
               },
               "memberName": "sender"
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "allowed"
                 },
                 "right": {
                  "type": "BooleanLiteral",
                  "value": true
                 }
                }
               },
               {
                "type": "BreakStatement"
               }
              ]
             },
             "falseBody": null
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "allowed"
            },
            {
             "type": "StringLiteral",
             "value": "Only whitelisted allowed",
             "parts": [
              "Only whitelisted allowed"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "_"
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getWhitelist",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "length": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "whitelist"
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Smartdec-Opium Smart Contracts Security Analysis/opium-contracts-60ff6f80996b83f6ad19c35b74480fef34f7dc03/contracts/Lib/LibEIP712.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.5.4"
    },
    {
     "type": "ContractDefinition",
     "name": "LibEIP712",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "StructDefinition",
       "name": "EIP712Domain",
       "members": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "name",
         "identifier": {
          "type": "Identifier",
          "name": "name"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "version",
         "identifier": {
          "type": "Identifier",
          "name": "version"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "verifyingContract",
         "identifier": {
          "type": "Identifier",
          "name": "verifyingContract"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "EIP712DOMAIN_TYPEHASH",
         "identifier": {
          "type": "Identifier",
          "name": "EIP712DOMAIN_TYPEHASH"
         },
         "expression": {
          "type": "FunctionCall",
          "expression": {
           "type": "Identifier",
           "name": "keccak256"
          },
          "arguments": [
           {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "abi"
             },
             "memberName": "encodePacked"
            },
            "arguments": [
             {
              "type": "StringLiteral",
              "value": "EIP712Domain(",
              "parts": [
               "EIP712Domain("
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": "string name,",
              "parts": [
               "string name,"
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": "string version,",
              "parts": [
               "string version,"
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": "address verifyingContract",
              "parts": [
               "address verifyingContract"
              ],
              "isUnicode": [
               false
              ]
             },
             {
              "type": "StringLiteral",
              "value": ")",
              "parts": [
               ")"
              ],
              "isUnicode": [
               false
              ]
             }
            ],
            "names": [],
            "identifiers": []
           }
          ],
          "names": [],
          "identifiers": []
         },
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "FunctionCall",
        "expression": {
         "type": "Identifier",
         "name": "keccak256"
        },
        "arguments": [
         {
          "type": "FunctionCall",
          "expression": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "abi"
           },
           "memberName": "encodePacked"
          },
          "arguments": [
           {
            "type": "StringLiteral",
            "value": "EIP712Domain(",
            "parts": [
             "EIP712Domain("
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": "string name,",
            "parts": [
             "string name,"
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": "string version,",
            "parts": [
             "string version,"
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": "address verifyingContract",
            "parts": [
             "address verifyingContract"
            ],
            "isUnicode": [
             false
            ]
           },
           {
            "type": "StringLiteral",
            "value": ")",
            "parts": [
             ")"
            ],
            "isUnicode": [
             false
            ]
           }
          ],
          "names": [],
          "identifiers": []
         }
        ],
        "names": [],
        "identifiers": []
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "DOMAIN_SEPARATOR",
         "identifier": {
          "type": "Identifier",
          "name": "DOMAIN_SEPARATOR"
         },
         "expression": null,
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "DOMAIN_SEPARATOR"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "keccak256"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "abi"
               },
               "memberName": "encode"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "EIP712DOMAIN_TYPEHASH"
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "keccak256"
                },
                "arguments": [
                 {
                  "type": "StringLiteral",
                  "value": "Opium Network",
                  "parts": [
                   "Opium Network"
                  ],
                  "isUnicode": [
                   false
                  ]
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "keccak256"
                },
                "arguments": [
                 {
                  "type": "StringLiteral",
                  "value": "1",
                  "parts": [
                   "1"
                  ],
                  "isUnicode": [
                   false
                  ]
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "address"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "this"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "hashEIP712Message",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "hashStruct",
         "identifier": {
          "type": "Identifier",
          "name": "hashStruct"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "result",
         "identifier": {
          "type": "Identifier",
          "name": "result"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "domainSeparator",
            "identifier": {
             "type": "Identifier",
             "name": "domainSeparator"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "Identifier",
           "name": "DOMAIN_SEPARATOR"
          }
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "memPtr"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "DecimalNumber",
                "value": "64"
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "memPtr",
               "arguments": []
              },
              {
               "type": "HexNumber",
               "value": "0x1901000000000000000000000000000000000000000000000000000000000000"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "memPtr",
                 "arguments": []
                },
                {
                 "type": "DecimalNumber",
                 "value": "2"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "domainSeparator",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "memPtr",
                 "arguments": []
                },
                {
                 "type": "DecimalNumber",
                 "value": "34"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "hashStruct",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "result"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "keccak256",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "memPtr",
                "arguments": []
               },
               {
                "type": "DecimalNumber",
                "value": "66"
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "result"
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Smartdec-Opium Smart Contracts Security Analysis/opium-contracts-60ff6f80996b83f6ad19c35b74480fef34f7dc03/contracts/Lib/LibDerivative.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.5.4"
    },
    {
     "type": "PragmaDirective",
     "name": "experimental",
     "value": "ABIEncoderV2"
    },
    {
     "type": "ContractDefinition",
     "name": "LibDerivative",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "StructDefinition",
       "name": "Derivative",
       "members": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "margin",
         "identifier": {
          "type": "Identifier",
          "name": "margin"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "endTime",
         "identifier": {
          "type": "Identifier",
          "name": "endTime"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "params",
         "identifier": {
          "type": "Identifier",
          "name": "params"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "oracleId",
         "identifier": {
          "type": "Identifier",
          "name": "oracleId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "token",
         "identifier": {
          "type": "Identifier",
          "name": "token"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "syntheticId",
         "identifier": {
          "type": "Identifier",
          "name": "syntheticId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "FunctionDefinition",
       "name": "getDerivativeHash",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Derivative"
         },
         "name": "_derivative",
         "identifier": {
          "type": "Identifier",
          "name": "_derivative"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "derivativeHash",
         "identifier": {
          "type": "Identifier",
          "name": "derivativeHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "derivativeHash"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "keccak256"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "abi"
               },
               "memberName": "encodePacked"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_derivative"
                },
                "memberName": "margin"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_derivative"
                },
                "memberName": "endTime"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_derivative"
                },
                "memberName": "params"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_derivative"
                },
                "memberName": "oracleId"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_derivative"
                },
                "memberName": "token"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_derivative"
                },
                "memberName": "syntheticId"
               }
              ],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Smartdec-Opium Smart Contracts Security Analysis/opium-contracts-60ff6f80996b83f6ad19c35b74480fef34f7dc03/contracts/Lib/LibCommission.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.5.4"
    },
    {
     "type": "ContractDefinition",
     "name": "LibCommission",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "COMMISSION_BASE",
         "identifier": {
          "type": "Identifier",
          "name": "COMMISSION_BASE"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "10000",
          "subdenomination": null
         },
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "10000",
        "subdenomination": null
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "OPIUM_COMMISSION_BASE",
         "identifier": {
          "type": "Identifier",
          "name": "OPIUM_COMMISSION_BASE"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "10",
          "subdenomination": null
         },
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "10",
        "subdenomination": null
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "OPIUM_COMMISSION_PART",
         "identifier": {
          "type": "Identifier",
          "name": "OPIUM_COMMISSION_PART"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "1",
          "subdenomination": null
         },
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "1",
        "subdenomination": null
       }
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Smartdec-Opium Smart Contracts Security Analysis/opium-contracts-60ff6f80996b83f6ad19c35b74480fef34f7dc03/contracts/Interface/IOracleId.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.5.4"
    },
    {
     "type": "ContractDefinition",
     "name": "IOracleId",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "fetchData",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "timestamp",
         "identifier": {
          "type": "Identifier",
          "name": "timestamp"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "recursivelyFetchData",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "timestamp",
         "identifier": {
          "type": "Identifier",
          "name": "timestamp"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "period",
         "identifier": {
          "type": "Identifier",
          "name": "period"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "times",
         "identifier": {
          "type": "Identifier",
          "name": "times"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "calculateFetchPrice",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "fetchPrice",
         "identifier": {
          "type": "Identifier",
          "name": "fetchPrice"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "EventDefinition",
       "name": "MetadataSet",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "metadata",
         "identifier": {
          "type": "Identifier",
          "name": "metadata"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Smartdec-Opium Smart Contracts Security Analysis/opium-contracts-60ff6f80996b83f6ad19c35b74480fef34f7dc03/contracts/Interface/IDerivativeLogic.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.5.4"
    },
    {
     "type": "PragmaDirective",
     "name": "experimental",
     "value": "ABIEncoderV2"
    },
    {
     "type": "ImportDirective",
     "path": "../Lib/LibDerivative.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../Lib/LibDerivative.sol",
      "parts": [
       "../Lib/LibDerivative.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "IDerivativeLogic",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "LibDerivative"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "validateInput",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Derivative"
         },
         "name": "_derivative",
         "identifier": {
          "type": "Identifier",
          "name": "_derivative"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getMargin",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Derivative"
         },
         "name": "_derivative",
         "identifier": {
          "type": "Identifier",
          "name": "_derivative"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "buyerMargin",
         "identifier": {
          "type": "Identifier",
          "name": "buyerMargin"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "sellerMargin",
         "identifier": {
          "type": "Identifier",
          "name": "sellerMargin"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getExecutionPayout",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Derivative"
         },
         "name": "_derivative",
         "identifier": {
          "type": "Identifier",
          "name": "_derivative"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_result",
         "identifier": {
          "type": "Identifier",
          "name": "_result"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "buyerPayout",
         "identifier": {
          "type": "Identifier",
          "name": "buyerPayout"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "sellerPayout",
         "identifier": {
          "type": "Identifier",
          "name": "sellerPayout"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getAuthorAddress",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "authorAddress",
         "identifier": {
          "type": "Identifier",
          "name": "authorAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getAuthorCommission",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "commission",
         "identifier": {
          "type": "Identifier",
          "name": "commission"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "thirdpartyExecutionAllowed",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_derivativeOwner",
         "identifier": {
          "type": "Identifier",
          "name": "_derivativeOwner"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "isPool",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "allowThirdpartyExecution",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "_allow",
         "identifier": {
          "type": "Identifier",
          "name": "_allow"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "EventDefinition",
       "name": "MetadataSet",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "metadata",
         "identifier": {
          "type": "Identifier",
          "name": "metadata"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Smartdec-Opium Smart Contracts Security Analysis/opium-contracts-60ff6f80996b83f6ad19c35b74480fef34f7dc03/contracts/Helpers/HasCommission.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.5.4"
    },
    {
     "type": "ContractDefinition",
     "name": "HasCommission",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "author",
         "identifier": {
          "type": "Identifier",
          "name": "author"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "commission",
         "identifier": {
          "type": "Identifier",
          "name": "commission"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "25",
          "subdenomination": null
         },
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "25",
        "subdenomination": null
       }
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "author"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "msg"
            },
            "memberName": "sender"
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getAuthorAddress",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "author"
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getAuthorCommission",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "commission"
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Smartdec-Opium Smart Contracts Security Analysis/opium-contracts-60ff6f80996b83f6ad19c35b74480fef34f7dc03/contracts/Helpers/ExecutableByThirdParty.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.5.4"
    },
    {
     "type": "ContractDefinition",
     "name": "ExecutableByThirdParty",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "bool",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "thirdpartyExecutionAllowance",
         "identifier": {
          "type": "Identifier",
          "name": "thirdpartyExecutionAllowance"
         },
         "expression": null,
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "FunctionDefinition",
       "name": "thirdpartyExecutionAllowed",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "derivativeOwner",
         "identifier": {
          "type": "Identifier",
          "name": "derivativeOwner"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "thirdpartyExecutionAllowance"
           },
           "index": {
            "type": "Identifier",
            "name": "derivativeOwner"
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "allowThirdpartyExecution",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "allow",
         "identifier": {
          "type": "Identifier",
          "name": "allow"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "thirdpartyExecutionAllowance"
            },
            "index": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            }
           },
           "right": {
            "type": "Identifier",
            "name": "allow"
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Smartdec-Opium Smart Contracts Security Analysis/opium-contracts-60ff6f80996b83f6ad19c35b74480fef34f7dc03/contracts/Errors/usingRegistryErrors.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.5.4"
    },
    {
     "type": "ContractDefinition",
     "name": "usingRegistryErrors",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "ERROR_USING_REGISTRY_ONLY_CORE_ALLOWED",
         "identifier": {
          "type": "Identifier",
          "name": "ERROR_USING_REGISTRY_ONLY_CORE_ALLOWED"
         },
         "expression": {
          "type": "StringLiteral",
          "value": "USING_REGISTRY:ONLY_CORE_ALLOWED",
          "parts": [
           "USING_REGISTRY:ONLY_CORE_ALLOWED"
          ],
          "isUnicode": [
           false
          ]
         },
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "StringLiteral",
        "value": "USING_REGISTRY:ONLY_CORE_ALLOWED",
        "parts": [
         "USING_REGISTRY:ONLY_CORE_ALLOWED"
        ],
        "isUnicode": [
         false
        ]
       }
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Smartdec-Opium Smart Contracts Security Analysis/opium-contracts-60ff6f80996b83f6ad19c35b74480fef34f7dc03/contracts/Errors/SyntheticAggregatorErrors.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.5.4"
    },
    {
     "type": "ContractDefinition",
     "name": "SyntheticAggregatorErrors",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "ERROR_SYNTHETIC_AGGREGATOR_DERIVATIVE_HASH_NOT_MATCH",
         "identifier": {
          "type": "Identifier",
          "name": "ERROR_SYNTHETIC_AGGREGATOR_DERIVATIVE_HASH_NOT_MATCH"
         },
         "expression": {
          "type": "StringLiteral",
          "value": "SYNTHETIC_AGGREGATOR:DERIVATIVE_HASH_NOT_MATCH",
          "parts": [
           "SYNTHETIC_AGGREGATOR:DERIVATIVE_HASH_NOT_MATCH"
          ],
          "isUnicode": [
           false
          ]
         },
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "StringLiteral",
        "value": "SYNTHETIC_AGGREGATOR:DERIVATIVE_HASH_NOT_MATCH",
        "parts": [
         "SYNTHETIC_AGGREGATOR:DERIVATIVE_HASH_NOT_MATCH"
        ],
        "isUnicode": [
         false
        ]
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "ERROR_SYNTHETIC_AGGREGATOR_WRONG_MARGIN",
         "identifier": {
          "type": "Identifier",
          "name": "ERROR_SYNTHETIC_AGGREGATOR_WRONG_MARGIN"
         },
         "expression": {
          "type": "StringLiteral",
          "value": "SYNTHETIC_AGGREGATOR:WRONG_MARGIN",
          "parts": [
           "SYNTHETIC_AGGREGATOR:WRONG_MARGIN"
          ],
          "isUnicode": [
           false
          ]
         },
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "StringLiteral",
        "value": "SYNTHETIC_AGGREGATOR:WRONG_MARGIN",
        "parts": [
         "SYNTHETIC_AGGREGATOR:WRONG_MARGIN"
        ],
        "isUnicode": [
         false
        ]
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "ERROR_SYNTHETIC_AGGREGATOR_COMMISSION_TOO_BIG",
         "identifier": {
          "type": "Identifier",
          "name": "ERROR_SYNTHETIC_AGGREGATOR_COMMISSION_TOO_BIG"
         },
         "expression": {
          "type": "StringLiteral",
          "value": "SYNTHETIC_AGGREGATOR:COMMISSION_TOO_BIG",
          "parts": [
           "SYNTHETIC_AGGREGATOR:COMMISSION_TOO_BIG"
          ],
          "isUnicode": [
           false
          ]
         },
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "StringLiteral",
        "value": "SYNTHETIC_AGGREGATOR:COMMISSION_TOO_BIG",
        "parts": [
         "SYNTHETIC_AGGREGATOR:COMMISSION_TOO_BIG"
        ],
        "isUnicode": [
         false
        ]
       }
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Smartdec-Opium Smart Contracts Security Analysis/opium-contracts-60ff6f80996b83f6ad19c35b74480fef34f7dc03/contracts/Errors/RegistryErrors.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.5.4"
    },
    {
     "type": "ContractDefinition",
     "name": "RegistryErrors",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "ERROR_REGISTRY_ONLY_INITIALIZER",
         "identifier": {
          "type": "Identifier",
          "name": "ERROR_REGISTRY_ONLY_INITIALIZER"
         },
         "expression": {
          "type": "StringLiteral",
          "value": "REGISTRY:ONLY_INITIALIZER",
          "parts": [
           "REGISTRY:ONLY_INITIALIZER"
          ],
          "isUnicode": [
           false
          ]
         },
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "StringLiteral",
        "value": "REGISTRY:ONLY_INITIALIZER",
        "parts": [
         "REGISTRY:ONLY_INITIALIZER"
        ],
        "isUnicode": [
         false
        ]
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "ERROR_REGISTRY_ONLY_OPIUM_ADDRESS_ALLOWED",
         "identifier": {
          "type": "Identifier",
          "name": "ERROR_REGISTRY_ONLY_OPIUM_ADDRESS_ALLOWED"
         },
         "expression": {
          "type": "StringLiteral",
          "value": "REGISTRY:ONLY_OPIUM_ADDRESS_ALLOWED",
          "parts": [
           "REGISTRY:ONLY_OPIUM_ADDRESS_ALLOWED"
          ],
          "isUnicode": [
           false
          ]
         },
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "StringLiteral",
        "value": "REGISTRY:ONLY_OPIUM_ADDRESS_ALLOWED",
        "parts": [
         "REGISTRY:ONLY_OPIUM_ADDRESS_ALLOWED"
        ],
        "isUnicode": [
         false
        ]
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "ERROR_REGISTRY_ALREADY_SET",
         "identifier": {
          "type": "Identifier",
          "name": "ERROR_REGISTRY_ALREADY_SET"
         },
         "expression": {
          "type": "StringLiteral",
          "value": "REGISTRY:ALREADY_SET",
          "parts": [
           "REGISTRY:ALREADY_SET"
          ],
          "isUnicode": [
           false
          ]
         },
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "StringLiteral",
        "value": "REGISTRY:ALREADY_SET",
        "parts": [
         "REGISTRY:ALREADY_SET"
        ],
        "isUnicode": [
         false
        ]
       }
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Smartdec-Opium Smart Contracts Security Analysis/opium-contracts-60ff6f80996b83f6ad19c35b74480fef34f7dc03/contracts/Errors/OracleAggregatorErrors.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.5.4"
    },
    {
     "type": "ContractDefinition",
     "name": "OracleAggregatorErrors",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "ERROR_ORACLE_AGGREGATOR_NOT_ENOUGH_ETHER",
         "identifier": {
          "type": "Identifier",
          "name": "ERROR_ORACLE_AGGREGATOR_NOT_ENOUGH_ETHER"
         },
         "expression": {
          "type": "StringLiteral",
          "value": "ORACLE_AGGREGATOR:NOT_ENOUGH_ETHER",
          "parts": [
           "ORACLE_AGGREGATOR:NOT_ENOUGH_ETHER"
          ],
          "isUnicode": [
           false
          ]
         },
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "StringLiteral",
        "value": "ORACLE_AGGREGATOR:NOT_ENOUGH_ETHER",
        "parts": [
         "ORACLE_AGGREGATOR:NOT_ENOUGH_ETHER"
        ],
        "isUnicode": [
         false
        ]
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "ERROR_ORACLE_AGGREGATOR_QUERY_WAS_ALREADY_MADE",
         "identifier": {
          "type": "Identifier",
          "name": "ERROR_ORACLE_AGGREGATOR_QUERY_WAS_ALREADY_MADE"
         },
         "expression": {
          "type": "StringLiteral",
          "value": "ORACLE_AGGREGATOR:QUERY_WAS_ALREADY_MADE",
          "parts": [
           "ORACLE_AGGREGATOR:QUERY_WAS_ALREADY_MADE"
          ],
          "isUnicode": [
           false
          ]
         },
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "StringLiteral",
        "value": "ORACLE_AGGREGATOR:QUERY_WAS_ALREADY_MADE",
        "parts": [
         "ORACLE_AGGREGATOR:QUERY_WAS_ALREADY_MADE"
        ],
        "isUnicode": [
         false
        ]
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "ERROR_ORACLE_AGGREGATOR_DATA_DOESNT_EXIST",
         "identifier": {
          "type": "Identifier",
          "name": "ERROR_ORACLE_AGGREGATOR_DATA_DOESNT_EXIST"
         },
         "expression": {
          "type": "StringLiteral",
          "value": "ORACLE_AGGREGATOR:DATA_DOESNT_EXIST",
          "parts": [
           "ORACLE_AGGREGATOR:DATA_DOESNT_EXIST"
          ],
          "isUnicode": [
           false
          ]
         },
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "StringLiteral",
        "value": "ORACLE_AGGREGATOR:DATA_DOESNT_EXIST",
        "parts": [
         "ORACLE_AGGREGATOR:DATA_DOESNT_EXIST"
        ],
        "isUnicode": [
         false
        ]
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "ERROR_ORACLE_AGGREGATOR_DATA_ALREADY_EXIST",
         "identifier": {
          "type": "Identifier",
          "name": "ERROR_ORACLE_AGGREGATOR_DATA_ALREADY_EXIST"
         },
         "expression": {
          "type": "StringLiteral",
          "value": "ORACLE_AGGREGATOR:DATA_ALREADY_EXIST",
          "parts": [
           "ORACLE_AGGREGATOR:DATA_ALREADY_EXIST"
          ],
          "isUnicode": [
           false
          ]
         },
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "StringLiteral",
        "value": "ORACLE_AGGREGATOR:DATA_ALREADY_EXIST",
        "parts": [
         "ORACLE_AGGREGATOR:DATA_ALREADY_EXIST"
        ],
        "isUnicode": [
         false
        ]
       }
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Smartdec-Opium Smart Contracts Security Analysis/opium-contracts-60ff6f80996b83f6ad19c35b74480fef34f7dc03/contracts/Errors/MatchingErrors.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.5.4"
    },
    {
     "type": "ContractDefinition",
     "name": "MatchingErrors",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "ERROR_MATCH_CANCELLATION_NOT_ALLOWED",
         "identifier": {
          "type": "Identifier",
          "name": "ERROR_MATCH_CANCELLATION_NOT_ALLOWED"
         },
         "expression": {
          "type": "StringLiteral",
          "value": "MATCH:CANCELLATION_NOT_ALLOWED",
          "parts": [
           "MATCH:CANCELLATION_NOT_ALLOWED"
          ],
          "isUnicode": [
           false
          ]
         },
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "StringLiteral",
        "value": "MATCH:CANCELLATION_NOT_ALLOWED",
        "parts": [
         "MATCH:CANCELLATION_NOT_ALLOWED"
        ],
        "isUnicode": [
         false
        ]
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "ERROR_MATCH_ALREADY_CANCELED",
         "identifier": {
          "type": "Identifier",
          "name": "ERROR_MATCH_ALREADY_CANCELED"
         },
         "expression": {
          "type": "StringLiteral",
          "value": "MATCH:ALREADY_CANCELED",
          "parts": [
           "MATCH:ALREADY_CANCELED"
          ],
          "isUnicode": [
           false
          ]
         },
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "StringLiteral",
        "value": "MATCH:ALREADY_CANCELED",
        "parts": [
         "MATCH:ALREADY_CANCELED"
        ],
        "isUnicode": [
         false
        ]
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "ERROR_MATCH_ORDER_WAS_CANCELED",
         "identifier": {
          "type": "Identifier",
          "name": "ERROR_MATCH_ORDER_WAS_CANCELED"
         },
         "expression": {
          "type": "StringLiteral",
          "value": "MATCH:ORDER_WAS_CANCELED",
          "parts": [
           "MATCH:ORDER_WAS_CANCELED"
          ],
          "isUnicode": [
           false
          ]
         },
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "StringLiteral",
        "value": "MATCH:ORDER_WAS_CANCELED",
        "parts": [
         "MATCH:ORDER_WAS_CANCELED"
        ],
        "isUnicode": [
         false
        ]
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "ERROR_MATCH_TAKER_ADDRESS_WRONG",
         "identifier": {
          "type": "Identifier",
          "name": "ERROR_MATCH_TAKER_ADDRESS_WRONG"
         },
         "expression": {
          "type": "StringLiteral",
          "value": "MATCH:TAKER_ADDRESS_WRONG",
          "parts": [
           "MATCH:TAKER_ADDRESS_WRONG"
          ],
          "isUnicode": [
           false
          ]
         },
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "StringLiteral",
        "value": "MATCH:TAKER_ADDRESS_WRONG",
        "parts": [
         "MATCH:TAKER_ADDRESS_WRONG"
        ],
        "isUnicode": [
         false
        ]
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "ERROR_MATCH_ORDER_IS_EXPIRED",
         "identifier": {
          "type": "Identifier",
          "name": "ERROR_MATCH_ORDER_IS_EXPIRED"
         },
         "expression": {
          "type": "StringLiteral",
          "value": "MATCH:ORDER_IS_EXPIRED",
          "parts": [
           "MATCH:ORDER_IS_EXPIRED"
          ],
          "isUnicode": [
           false
          ]
         },
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "StringLiteral",
        "value": "MATCH:ORDER_IS_EXPIRED",
        "parts": [
         "MATCH:ORDER_IS_EXPIRED"
        ],
        "isUnicode": [
         false
        ]
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "ERROR_MATCH_SENDER_ADDRESS_WRONG",
         "identifier": {
          "type": "Identifier",
          "name": "ERROR_MATCH_SENDER_ADDRESS_WRONG"
         },
         "expression": {
          "type": "StringLiteral",
          "value": "MATCH:SENDER_ADDRESS_WRONG",
          "parts": [
           "MATCH:SENDER_ADDRESS_WRONG"
          ],
          "isUnicode": [
           false
          ]
         },
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "StringLiteral",
        "value": "MATCH:SENDER_ADDRESS_WRONG",
        "parts": [
         "MATCH:SENDER_ADDRESS_WRONG"
        ],
        "isUnicode": [
         false
        ]
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "ERROR_MATCH_SIGNATURE_NOT_VERIFIED",
         "identifier": {
          "type": "Identifier",
          "name": "ERROR_MATCH_SIGNATURE_NOT_VERIFIED"
         },
         "expression": {
          "type": "StringLiteral",
          "value": "MATCH:SIGNATURE_NOT_VERIFIED",
          "parts": [
           "MATCH:SIGNATURE_NOT_VERIFIED"
          ],
          "isUnicode": [
           false
          ]
         },
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "StringLiteral",
        "value": "MATCH:SIGNATURE_NOT_VERIFIED",
        "parts": [
         "MATCH:SIGNATURE_NOT_VERIFIED"
        ],
        "isUnicode": [
         false
        ]
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "ERROR_MATCH_NOT_ENOUGH_ALLOWED_FEES",
         "identifier": {
          "type": "Identifier",
          "name": "ERROR_MATCH_NOT_ENOUGH_ALLOWED_FEES"
         },
         "expression": {
          "type": "StringLiteral",
          "value": "MATCH:NOT_ENOUGH_ALLOWED_FEES",
          "parts": [
           "MATCH:NOT_ENOUGH_ALLOWED_FEES"
          ],
          "isUnicode": [
           false
          ]
         },
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "StringLiteral",
        "value": "MATCH:NOT_ENOUGH_ALLOWED_FEES",
        "parts": [
         "MATCH:NOT_ENOUGH_ALLOWED_FEES"
        ],
        "isUnicode": [
         false
        ]
       }
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Smartdec-Opium Smart Contracts Security Analysis/opium-contracts-60ff6f80996b83f6ad19c35b74480fef34f7dc03/contracts/Errors/CoreErrors.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.5.4"
    },
    {
     "type": "ContractDefinition",
     "name": "CoreErrors",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "ERROR_CORE_NOT_POOL",
         "identifier": {
          "type": "Identifier",
          "name": "ERROR_CORE_NOT_POOL"
         },
         "expression": {
          "type": "StringLiteral",
          "value": "CORE:NOT_POOL",
          "parts": [
           "CORE:NOT_POOL"
          ],
          "isUnicode": [
           false
          ]
         },
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "StringLiteral",
        "value": "CORE:NOT_POOL",
        "parts": [
         "CORE:NOT_POOL"
        ],
        "isUnicode": [
         false
        ]
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "ERROR_CORE_CANT_BE_POOL",
         "identifier": {
          "type": "Identifier",
          "name": "ERROR_CORE_CANT_BE_POOL"
         },
         "expression": {
          "type": "StringLiteral",
          "value": "CORE:CANT_BE_POOL",
          "parts": [
           "CORE:CANT_BE_POOL"
          ],
          "isUnicode": [
           false
          ]
         },
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "StringLiteral",
        "value": "CORE:CANT_BE_POOL",
        "parts": [
         "CORE:CANT_BE_POOL"
        ],
        "isUnicode": [
         false
        ]
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "ERROR_CORE_TICKER_WAS_CANCELLED",
         "identifier": {
          "type": "Identifier",
          "name": "ERROR_CORE_TICKER_WAS_CANCELLED"
         },
         "expression": {
          "type": "StringLiteral",
          "value": "CORE:TICKER_WAS_CANCELLED",
          "parts": [
           "CORE:TICKER_WAS_CANCELLED"
          ],
          "isUnicode": [
           false
          ]
         },
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "StringLiteral",
        "value": "CORE:TICKER_WAS_CANCELLED",
        "parts": [
         "CORE:TICKER_WAS_CANCELLED"
        ],
        "isUnicode": [
         false
        ]
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "ERROR_CORE_SYNTHETIC_VALIDATION_ERROR",
         "identifier": {
          "type": "Identifier",
          "name": "ERROR_CORE_SYNTHETIC_VALIDATION_ERROR"
         },
         "expression": {
          "type": "StringLiteral",
          "value": "CORE:SYNTHETIC_VALIDATION_ERROR",
          "parts": [
           "CORE:SYNTHETIC_VALIDATION_ERROR"
          ],
          "isUnicode": [
           false
          ]
         },
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "StringLiteral",
        "value": "CORE:SYNTHETIC_VALIDATION_ERROR",
        "parts": [
         "CORE:SYNTHETIC_VALIDATION_ERROR"
        ],
        "isUnicode": [
         false
        ]
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "ERROR_CORE_NOT_ENOUGH_TOKEN_ALLOWANCE",
         "identifier": {
          "type": "Identifier",
          "name": "ERROR_CORE_NOT_ENOUGH_TOKEN_ALLOWANCE"
         },
         "expression": {
          "type": "StringLiteral",
          "value": "CORE:NOT_ENOUGH_TOKEN_ALLOWANCE",
          "parts": [
           "CORE:NOT_ENOUGH_TOKEN_ALLOWANCE"
          ],
          "isUnicode": [
           false
          ]
         },
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "StringLiteral",
        "value": "CORE:NOT_ENOUGH_TOKEN_ALLOWANCE",
        "parts": [
         "CORE:NOT_ENOUGH_TOKEN_ALLOWANCE"
        ],
        "isUnicode": [
         false
        ]
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "ERROR_CORE_TOKEN_IDS_AND_QUANTITIES_LENGTH_DOES_NOT_MATCH",
         "identifier": {
          "type": "Identifier",
          "name": "ERROR_CORE_TOKEN_IDS_AND_QUANTITIES_LENGTH_DOES_NOT_MATCH"
         },
         "expression": {
          "type": "StringLiteral",
          "value": "CORE:TOKEN_IDS_AND_QUANTITIES_LENGTH_DOES_NOT_MATCH",
          "parts": [
           "CORE:TOKEN_IDS_AND_QUANTITIES_LENGTH_DOES_NOT_MATCH"
          ],
          "isUnicode": [
           false
          ]
         },
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "StringLiteral",
        "value": "CORE:TOKEN_IDS_AND_QUANTITIES_LENGTH_DOES_NOT_MATCH",
        "parts": [
         "CORE:TOKEN_IDS_AND_QUANTITIES_LENGTH_DOES_NOT_MATCH"
        ],
        "isUnicode": [
         false
        ]
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "ERROR_CORE_TOKEN_IDS_AND_DERIVATIVES_LENGTH_DOES_NOT_MATCH",
         "identifier": {
          "type": "Identifier",
          "name": "ERROR_CORE_TOKEN_IDS_AND_DERIVATIVES_LENGTH_DOES_NOT_MATCH"
         },
         "expression": {
          "type": "StringLiteral",
          "value": "CORE:TOKEN_IDS_AND_DERIVATIVES_LENGTH_DOES_NOT_MATCH",
          "parts": [
           "CORE:TOKEN_IDS_AND_DERIVATIVES_LENGTH_DOES_NOT_MATCH"
          ],
          "isUnicode": [
           false
          ]
         },
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "StringLiteral",
        "value": "CORE:TOKEN_IDS_AND_DERIVATIVES_LENGTH_DOES_NOT_MATCH",
        "parts": [
         "CORE:TOKEN_IDS_AND_DERIVATIVES_LENGTH_DOES_NOT_MATCH"
        ],
        "isUnicode": [
         false
        ]
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "ERROR_CORE_EXECUTION_BEFORE_MATURITY_NOT_ALLOWED",
         "identifier": {
          "type": "Identifier",
          "name": "ERROR_CORE_EXECUTION_BEFORE_MATURITY_NOT_ALLOWED"
         },
         "expression": {
          "type": "StringLiteral",
          "value": "CORE:EXECUTION_BEFORE_MATURITY_NOT_ALLOWED",
          "parts": [
           "CORE:EXECUTION_BEFORE_MATURITY_NOT_ALLOWED"
          ],
          "isUnicode": [
           false
          ]
         },
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "StringLiteral",
        "value": "CORE:EXECUTION_BEFORE_MATURITY_NOT_ALLOWED",
        "parts": [
         "CORE:EXECUTION_BEFORE_MATURITY_NOT_ALLOWED"
        ],
        "isUnicode": [
         false
        ]
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "ERROR_CORE_SYNTHETIC_EXECUTION_WAS_NOT_ALLOWED",
         "identifier": {
          "type": "Identifier",
          "name": "ERROR_CORE_SYNTHETIC_EXECUTION_WAS_NOT_ALLOWED"
         },
         "expression": {
          "type": "StringLiteral",
          "value": "CORE:SYNTHETIC_EXECUTION_WAS_NOT_ALLOWED",
          "parts": [
           "CORE:SYNTHETIC_EXECUTION_WAS_NOT_ALLOWED"
          ],
          "isUnicode": [
           false
          ]
         },
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "StringLiteral",
        "value": "CORE:SYNTHETIC_EXECUTION_WAS_NOT_ALLOWED",
        "parts": [
         "CORE:SYNTHETIC_EXECUTION_WAS_NOT_ALLOWED"
        ],
        "isUnicode": [
         false
        ]
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "ERROR_CORE_INSUFFICIENT_POOL_BALANCE",
         "identifier": {
          "type": "Identifier",
          "name": "ERROR_CORE_INSUFFICIENT_POOL_BALANCE"
         },
         "expression": {
          "type": "StringLiteral",
          "value": "CORE:INSUFFICIENT_POOL_BALANCE",
          "parts": [
           "CORE:INSUFFICIENT_POOL_BALANCE"
          ],
          "isUnicode": [
           false
          ]
         },
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "StringLiteral",
        "value": "CORE:INSUFFICIENT_POOL_BALANCE",
        "parts": [
         "CORE:INSUFFICIENT_POOL_BALANCE"
        ],
        "isUnicode": [
         false
        ]
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "ERROR_CORE_CANT_CANCEL_DUMMY_ORACLE_ID",
         "identifier": {
          "type": "Identifier",
          "name": "ERROR_CORE_CANT_CANCEL_DUMMY_ORACLE_ID"
         },
         "expression": {
          "type": "StringLiteral",
          "value": "CORE:CANT_CANCEL_DUMMY_ORACLE_ID",
          "parts": [
           "CORE:CANT_CANCEL_DUMMY_ORACLE_ID"
          ],
          "isUnicode": [
           false
          ]
         },
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "StringLiteral",
        "value": "CORE:CANT_CANCEL_DUMMY_ORACLE_ID",
        "parts": [
         "CORE:CANT_CANCEL_DUMMY_ORACLE_ID"
        ],
        "isUnicode": [
         false
        ]
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "ERROR_CORE_CANCELLATION_IS_NOT_ALLOWED",
         "identifier": {
          "type": "Identifier",
          "name": "ERROR_CORE_CANCELLATION_IS_NOT_ALLOWED"
         },
         "expression": {
          "type": "StringLiteral",
          "value": "CORE:CANCELLATION_IS_NOT_ALLOWED",
          "parts": [
           "CORE:CANCELLATION_IS_NOT_ALLOWED"
          ],
          "isUnicode": [
           false
          ]
         },
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "StringLiteral",
        "value": "CORE:CANCELLATION_IS_NOT_ALLOWED",
        "parts": [
         "CORE:CANCELLATION_IS_NOT_ALLOWED"
        ],
        "isUnicode": [
         false
        ]
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "ERROR_CORE_UNKNOWN_POSITION_TYPE",
         "identifier": {
          "type": "Identifier",
          "name": "ERROR_CORE_UNKNOWN_POSITION_TYPE"
         },
         "expression": {
          "type": "StringLiteral",
          "value": "CORE:UNKNOWN_POSITION_TYPE",
          "parts": [
           "CORE:UNKNOWN_POSITION_TYPE"
          ],
          "isUnicode": [
           false
          ]
         },
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "StringLiteral",
        "value": "CORE:UNKNOWN_POSITION_TYPE",
        "parts": [
         "CORE:UNKNOWN_POSITION_TYPE"
        ],
        "isUnicode": [
         false
        ]
       }
      }
     ],
     "kind": "contract"
    }
   ]
  }
 }
]