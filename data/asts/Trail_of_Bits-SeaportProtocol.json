[
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-SeaportProtocol/seaport-f17082fca3e99b409f53040d8858e84b0246aa22/test/foundry/Consideration.t.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.13"
    },
    {
     "type": "ImportDirective",
     "path": "contracts/lib/ConsiderationEnums.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "contracts/lib/ConsiderationEnums.sol",
      "parts": [
       "contracts/lib/ConsiderationEnums.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "OrderType",
       null
      ],
      [
       "BasicOrderType",
       null
      ],
      [
       "ItemType",
       null
      ],
      [
       "Side",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "OrderType"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "BasicOrderType"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "ItemType"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "Side"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "contracts/lib/ConsiderationStructs.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "contracts/lib/ConsiderationStructs.sol",
      "parts": [
       "contracts/lib/ConsiderationStructs.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "AdditionalRecipient",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "AdditionalRecipient"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "contracts/Consideration.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "contracts/Consideration.sol",
      "parts": [
       "contracts/Consideration.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./utils/DSTestPlusPlus.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./utils/DSTestPlusPlus.sol",
      "parts": [
       "./utils/DSTestPlusPlus.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "DSTestPlusPlus",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "DSTestPlusPlus"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "contracts/test/TestERC721.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "contracts/test/TestERC721.sol",
      "parts": [
       "contracts/test/TestERC721.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "TestERC721",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "TestERC721"
       },
       null
      ]
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "ConsiderationTest",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "DSTestPlusPlus"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Consideration"
         },
         "name": "consider",
         "identifier": {
          "type": "Identifier",
          "name": "consider"
         },
         "expression": null,
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "considerAddress",
         "identifier": {
          "type": "Identifier",
          "name": "considerAddress"
         },
         "expression": null,
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "accountA",
         "identifier": {
          "type": "Identifier",
          "name": "accountA"
         },
         "expression": null,
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "accountB",
         "identifier": {
          "type": "Identifier",
          "name": "accountB"
         },
         "expression": null,
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "accountC",
         "identifier": {
          "type": "Identifier",
          "name": "accountC"
         },
         "expression": null,
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "test721Address",
         "identifier": {
          "type": "Identifier",
          "name": "test721Address"
         },
         "expression": null,
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "TestERC721"
         },
         "name": "test721",
         "identifier": {
          "type": "Identifier",
          "name": "test721"
         },
         "expression": null,
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setUp",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "considerAddress"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "address"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "NewExpression",
               "typeName": {
                "type": "UserDefinedTypeName",
                "namePath": "Consideration"
               }
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "address"
                },
                "arguments": [
                 {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "address"
                },
                "arguments": [
                 {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "address"
                },
                "arguments": [
                 {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "consider"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "Consideration"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "considerAddress"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "test721Address"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "address"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "NewExpression",
               "typeName": {
                "type": "UserDefinedTypeName",
                "namePath": "TestERC721"
               }
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "test721"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "TestERC721"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "test721Address"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "accountA"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "vm"
             },
             "memberName": "addr"
            },
            "arguments": [
             {
              "type": "NumberLiteral",
              "number": "1",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "accountB"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "vm"
             },
             "memberName": "addr"
            },
            "arguments": [
             {
              "type": "NumberLiteral",
              "number": "2",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "accountC"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "vm"
             },
             "memberName": "addr"
            },
            "arguments": [
             {
              "type": "NumberLiteral",
              "number": "3",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "vm"
            },
            "memberName": "prank"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "accountA"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "test721"
            },
            "memberName": "setApprovalForAll"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "considerAddress"
            },
            {
             "type": "BooleanLiteral",
             "value": true
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "vm"
            },
            "memberName": "prank"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "accountB"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "test721"
            },
            "memberName": "setApprovalForAll"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "considerAddress"
            },
            {
             "type": "BooleanLiteral",
             "value": true
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "vm"
            },
            "memberName": "prank"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "accountC"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "test721"
            },
            "memberName": "setApprovalForAll"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "considerAddress"
            },
            {
             "type": "BooleanLiteral",
             "value": true
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "log"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "Accounts A B C have approved consideration.",
             "parts": [
              "Accounts A B C have approved consideration."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "vm"
            },
            "memberName": "label"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "accountA"
            },
            {
             "type": "StringLiteral",
             "value": "Account A",
             "parts": [
              "Account A"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "testListBasicETHto721",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_zone",
         "identifier": {
          "type": "Identifier",
          "name": "_zone"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_id",
         "identifier": {
          "type": "Identifier",
          "name": "_id"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_ethAmount",
         "identifier": {
          "type": "Identifier",
          "name": "_ethAmount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_zoneHash",
         "identifier": {
          "type": "Identifier",
          "name": "_zoneHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_salt",
         "identifier": {
          "type": "Identifier",
          "name": "_salt"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "vm"
            },
            "memberName": "assume"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "Identifier",
              "name": "_ethAmount"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "test721"
            },
            "memberName": "mint"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "accountA"
            },
            {
             "type": "Identifier",
             "name": "_id"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "log"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "Account A airdropped an NFT.",
             "parts": [
              "Account A airdropped an NFT."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "vm"
            },
            "memberName": "deal"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "this"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "BinaryOperation",
             "operator": "-",
             "left": {
              "type": "BinaryOperation",
              "operator": "**",
              "left": {
               "type": "NumberLiteral",
               "number": "2",
               "subdenomination": null
              },
              "right": {
               "type": "NumberLiteral",
               "number": "256",
               "subdenomination": null
              }
             },
             "right": {
              "type": "NumberLiteral",
              "number": "1",
              "subdenomination": null
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "log"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "Caller airdropped ETH.",
             "parts": [
              "Caller airdropped ETH."
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "log"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "Basic Order",
             "parts": [
              "Basic Order"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "OfferItem"
             },
             "length": null
            },
            "name": "offer",
            "identifier": {
             "type": "Identifier",
             "name": "offer"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "NewExpression",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "OfferItem"
             },
             "length": null
            }
           },
           "arguments": [
            {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "offer"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "OfferItem"
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "ItemType"
              },
              "memberName": "ERC721"
             },
             {
              "type": "Identifier",
              "name": "test721Address"
             },
             {
              "type": "Identifier",
              "name": "_id"
             },
             {
              "type": "NumberLiteral",
              "number": "1",
              "subdenomination": null
             },
             {
              "type": "NumberLiteral",
              "number": "1",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "ConsiderationItem"
             },
             "length": null
            },
            "name": "consideration",
            "identifier": {
             "type": "Identifier",
             "name": "consideration"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "NewExpression",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "ConsiderationItem"
             },
             "length": null
            }
           },
           "arguments": [
            {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "consideration"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "ConsiderationItem"
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "ItemType"
              },
              "memberName": "NATIVE"
             },
             {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             },
             {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             },
             {
              "type": "Identifier",
              "name": "_ethAmount"
             },
             {
              "type": "Identifier",
              "name": "_ethAmount"
             },
             {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "payable"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "accountA"
               }
              ],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "nonce",
            "identifier": {
             "type": "Identifier",
             "name": "nonce"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "consider"
            },
            "memberName": "getNonce"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "accountA"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "OrderComponents"
            },
            "name": "orderComponents",
            "identifier": {
             "type": "Identifier",
             "name": "orderComponents"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "OrderComponents"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "accountA"
            },
            {
             "type": "Identifier",
             "name": "_zone"
            },
            {
             "type": "Identifier",
             "name": "offer"
            },
            {
             "type": "Identifier",
             "name": "consideration"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "OrderType"
             },
             "memberName": "FULL_OPEN"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            },
            {
             "type": "BinaryOperation",
             "operator": "+",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "block"
              },
              "memberName": "timestamp"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "5000",
              "subdenomination": null
             }
            },
            {
             "type": "Identifier",
             "name": "_zoneHash"
            },
            {
             "type": "Identifier",
             "name": "_salt"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "nonce"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "orderHash",
            "identifier": {
             "type": "Identifier",
             "name": "orderHash"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "consider"
            },
            "memberName": "getOrderHash"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "orderComponents"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "name": "v",
            "identifier": {
             "type": "Identifier",
             "name": "v"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint8",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "r",
            "identifier": {
             "type": "Identifier",
             "name": "r"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "s",
            "identifier": {
             "type": "Identifier",
             "name": "s"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "vm"
            },
            "memberName": "sign"
           },
           "arguments": [
            {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "keccak256"
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "abi"
                },
                "memberName": "encodePacked"
               },
               "arguments": [
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "ElementaryTypeName",
                  "name": "bytes2",
                  "stateMutability": null
                 },
                 "arguments": [
                  {
                   "type": "NumberLiteral",
                   "number": "0x1901",
                   "subdenomination": null
                  }
                 ],
                 "names": [],
                 "identifiers": []
                },
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "consider"
                  },
                  "memberName": "DOMAIN_SEPARATOR"
                 },
                 "arguments": [],
                 "names": [],
                 "identifiers": []
                },
                {
                 "type": "Identifier",
                 "name": "orderHash"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "BasicOrderParameters"
            },
            "name": "order",
            "identifier": {
             "type": "Identifier",
             "name": "order"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "BasicOrderParameters"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            },
            {
             "type": "Identifier",
             "name": "_ethAmount"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "payable"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "accountA"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "_zone"
            },
            {
             "type": "Identifier",
             "name": "test721Address"
            },
            {
             "type": "Identifier",
             "name": "_id"
            },
            {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "BasicOrderType"
             },
             "memberName": "ETH_TO_ERC721_FULL_OPEN"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            },
            {
             "type": "BinaryOperation",
             "operator": "+",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "block"
              },
              "memberName": "timestamp"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "5000",
              "subdenomination": null
             }
            },
            {
             "type": "Identifier",
             "name": "_zoneHash"
            },
            {
             "type": "Identifier",
             "name": "_salt"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "NewExpression",
              "typeName": {
               "type": "ArrayTypeName",
               "baseTypeName": {
                "type": "UserDefinedTypeName",
                "namePath": "AdditionalRecipient"
               },
               "length": null
              }
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "abi"
              },
              "memberName": "encodePacked"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "r"
              },
              {
               "type": "Identifier",
               "name": "s"
              },
              {
               "type": "Identifier",
               "name": "v"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "log"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": ">>>>",
             "parts": [
              ">>>>"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "NameValueExpression",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "consider"
             },
             "memberName": "fulfillBasicOrder"
            },
            "arguments": {
             "type": "NameValueList",
             "names": [
              "value"
             ],
             "identifiers": [
              {
               "type": "Identifier",
               "name": "value"
              }
             ],
             "arguments": [
              {
               "type": "Identifier",
               "name": "_ethAmount"
              }
             ]
            }
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "order"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "log"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "Fulfilled Consideration basic order signed by AccountA",
             "parts": [
              "Fulfilled Consideration basic order signed by AccountA"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-SeaportProtocol/seaport-f17082fca3e99b409f53040d8858e84b0246aa22/test/foundry/utils/DSTestPlusPlus.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.13"
    },
    {
     "type": "ImportDirective",
     "path": "@rari-capital/solmate/src/test/utils/DSTestPlus.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@rari-capital/solmate/src/test/utils/DSTestPlus.sol",
      "parts": [
       "@rari-capital/solmate/src/test/utils/DSTestPlus.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "DSTestPlus",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "DSTestPlus"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "forge-std/Test.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "forge-std/Test.sol",
      "parts": [
       "forge-std/Test.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Test",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Test"
       },
       null
      ]
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "DSTestPlusPlus",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "Test"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "DSTestPlus"
       },
       "arguments": []
      }
     ],
     "subNodes": [],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-SeaportProtocol/seaport-f17082fca3e99b409f53040d8858e84b0246aa22/contracts/Consideration.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.13"
    },
    {
     "type": "ImportDirective",
     "path": "./interfaces/ConsiderationInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./interfaces/ConsiderationInterface.sol",
      "parts": [
       "./interfaces/ConsiderationInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "ConsiderationInterface",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "ConsiderationInterface"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "./lib/ConsiderationEnums.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./lib/ConsiderationEnums.sol",
      "parts": [
       "./lib/ConsiderationEnums.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "OrderType",
       null
      ],
      [
       "ItemType",
       null
      ],
      [
       "BasicOrderRouteType",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "OrderType"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "ItemType"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "BasicOrderRouteType"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "./lib/ConsiderationStructs.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./lib/ConsiderationStructs.sol",
      "parts": [
       "./lib/ConsiderationStructs.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "BasicOrderParameters",
       null
      ],
      [
       "OfferItem",
       null
      ],
      [
       "ConsiderationItem",
       null
      ],
      [
       "OrderParameters",
       null
      ],
      [
       "OrderComponents",
       null
      ],
      [
       "Fulfillment",
       null
      ],
      [
       "FulfillmentComponent",
       null
      ],
      [
       "Execution",
       null
      ],
      [
       "Order",
       null
      ],
      [
       "AdvancedOrder",
       null
      ],
      [
       "OrderStatus",
       null
      ],
      [
       "CriteriaResolver",
       null
      ],
      [
       "BatchExecution",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "BasicOrderParameters"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "OfferItem"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "ConsiderationItem"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "OrderParameters"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "OrderComponents"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "Fulfillment"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "FulfillmentComponent"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "Execution"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "Order"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "AdvancedOrder"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "OrderStatus"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "CriteriaResolver"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "BatchExecution"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "./lib/ConsiderationInternal.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./lib/ConsiderationInternal.sol",
      "parts": [
       "./lib/ConsiderationInternal.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "ConsiderationInternal",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "ConsiderationInternal"
       },
       null
      ]
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "Consideration",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ConsiderationInterface"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ConsiderationInternal"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "legacyProxyRegistry",
         "identifier": {
          "type": "Identifier",
          "name": "legacyProxyRegistry"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "legacyTokenTransferProxy",
         "identifier": {
          "type": "Identifier",
          "name": "legacyTokenTransferProxy"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "requiredProxyImplementation",
         "identifier": {
          "type": "Identifier",
          "name": "requiredProxyImplementation"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": []
       },
       "visibility": "default",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "ConsiderationInternal",
         "arguments": [
          {
           "type": "Identifier",
           "name": "legacyProxyRegistry"
          },
          {
           "type": "Identifier",
           "name": "legacyTokenTransferProxy"
          },
          {
           "type": "Identifier",
           "name": "requiredProxyImplementation"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "fulfillBasicOrder",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "BasicOrderParameters"
         },
         "name": "parameters",
         "identifier": {
          "type": "Identifier",
          "name": "parameters"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "BasicOrderRouteType"
            },
            "name": "route",
            "identifier": {
             "type": "Identifier",
             "name": "route"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "OrderType"
            },
            "name": "orderType",
            "identifier": {
             "type": "Identifier",
             "name": "orderType"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "ItemType"
            },
            "name": "additionalRecipientsItemType",
            "identifier": {
             "type": "Identifier",
             "name": "additionalRecipientsItemType"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "orderType"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "and",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "calldataload",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x124"
                 }
                ]
               },
               {
                "type": "DecimalNumber",
                "value": "3"
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "route"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "div",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "calldataload",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x124"
                 }
                ]
               },
               {
                "type": "DecimalNumber",
                "value": "4"
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "additionalRecipientsItemType"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "gt",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "route",
                "arguments": []
               },
               {
                "type": "DecimalNumber",
                "value": "1"
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "Block",
          "statements": [
           {
            "type": "VariableDeclarationStatement",
            "variables": [
             {
              "type": "VariableDeclaration",
              "typeName": {
               "type": "ElementaryTypeName",
               "name": "bool",
               "stateMutability": null
              },
              "name": "correctPayableStatus",
              "identifier": {
               "type": "Identifier",
               "name": "correctPayableStatus"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
             }
            ],
            "initialValue": null
           },
           {
            "type": "InlineAssemblyStatement",
            "language": null,
            "flags": [],
            "body": {
             "type": "AssemblyBlock",
             "operations": [
              {
               "type": "AssemblyAssignment",
               "names": [
                {
                 "type": "Identifier",
                 "name": "correctPayableStatus"
                }
               ],
               "expression": {
                "type": "AssemblyCall",
                "functionName": "eq",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "additionalRecipientsItemType",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "iszero",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "callvalue",
                    "arguments": []
                   }
                  ]
                 }
                ]
               }
              }
             ]
            }
           },
           {
            "type": "IfStatement",
            "condition": {
             "type": "UnaryOperation",
             "operator": "!",
             "subExpression": {
              "type": "Identifier",
              "name": "correctPayableStatus"
             },
             "isPrefix": true
            },
            "trueBody": {
             "type": "Block",
             "statements": [
              {
               "type": "RevertStatement",
               "revertCall": {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "InvalidMsgValue"
                },
                "arguments": [
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "msg"
                  },
                  "memberName": "value"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              }
             ]
            },
            "falseBody": null
           }
          ]
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "additionalRecipientsToken",
            "identifier": {
             "type": "Identifier",
             "name": "additionalRecipientsToken"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "ItemType"
            },
            "name": "receivedItemType",
            "identifier": {
             "type": "Identifier",
             "name": "receivedItemType"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "ItemType"
            },
            "name": "offeredItemType",
            "identifier": {
             "type": "Identifier",
             "name": "offeredItemType"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "offerTypeIsAdditionalRecipientsType"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "gt",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "route",
                "arguments": []
               },
               {
                "type": "DecimalNumber",
                "value": "3"
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "additionalRecipientsToken"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "calldataload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "add",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x24"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "mul",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0xa0"
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "offerTypeIsAdditionalRecipientsType",
                    "arguments": []
                   }
                  ]
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "receivedItemType"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "mul",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "sub",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "route",
                    "arguments": []
                   },
                   {
                    "type": "DecimalNumber",
                    "value": "2"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "gt",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "route",
                    "arguments": []
                   },
                   {
                    "type": "DecimalNumber",
                    "value": "2"
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "eq",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "route",
                  "arguments": []
                 },
                 {
                  "type": "DecimalNumber",
                  "value": "2"
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "offeredItemType"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "sub",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "add",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "route",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "mul",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "iszero",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "additionalRecipientsItemType",
                      "arguments": []
                     }
                    ]
                   },
                   {
                    "type": "DecimalNumber",
                    "value": "2"
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mul",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "offerTypeIsAdditionalRecipientsType",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "receivedItemType",
                    "arguments": []
                   },
                   {
                    "type": "DecimalNumber",
                    "value": "1"
                   }
                  ]
                 }
                ]
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_prepareBasicFulfillmentFromCalldata"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "parameters"
            },
            {
             "type": "Identifier",
             "name": "orderType"
            },
            {
             "type": "Identifier",
             "name": "receivedItemType"
            },
            {
             "type": "Identifier",
             "name": "additionalRecipientsItemType"
            },
            {
             "type": "Identifier",
             "name": "additionalRecipientsToken"
            },
            {
             "type": "Identifier",
             "name": "offeredItemType"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": "payable"
            },
            "name": "offerer",
            "identifier": {
             "type": "Identifier",
             "name": "offerer"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "parameters"
           },
           "memberName": "offerer"
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "conduit",
            "identifier": {
             "type": "Identifier",
             "name": "conduit"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "conduit"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "calldataload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "add",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x1c4"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "mul",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "gt",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "route",
                      "arguments": []
                     },
                     {
                      "type": "DecimalNumber",
                      "value": "3"
                     }
                    ]
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x20"
                   }
                  ]
                 }
                ]
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "route"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "BasicOrderRouteType"
            },
            "memberName": "ETH_TO_ERC721"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "_transferERC721"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "parameters"
                },
                "memberName": "offerToken"
               },
               {
                "type": "Identifier",
                "name": "offerer"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "msg"
                },
                "memberName": "sender"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "parameters"
                },
                "memberName": "offerIdentifier"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "parameters"
                },
                "memberName": "offerAmount"
               },
               {
                "type": "Identifier",
                "name": "conduit"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "_transferEthAndFinalize"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "parameters"
                },
                "memberName": "considerationAmount"
               },
               {
                "type": "Identifier",
                "name": "parameters"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": {
           "type": "IfStatement",
           "condition": {
            "type": "BinaryOperation",
            "operator": "==",
            "left": {
             "type": "Identifier",
             "name": "route"
            },
            "right": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "BasicOrderRouteType"
             },
             "memberName": "ETH_TO_ERC1155"
            }
           },
           "trueBody": {
            "type": "Block",
            "statements": [
             {
              "type": "ExpressionStatement",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "_transferERC1155"
               },
               "arguments": [
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "parameters"
                 },
                 "memberName": "offerToken"
                },
                {
                 "type": "Identifier",
                 "name": "offerer"
                },
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "msg"
                 },
                 "memberName": "sender"
                },
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "parameters"
                 },
                 "memberName": "offerIdentifier"
                },
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "parameters"
                 },
                 "memberName": "offerAmount"
                },
                {
                 "type": "Identifier",
                 "name": "conduit"
                }
               ],
               "names": [],
               "identifiers": []
              }
             },
             {
              "type": "ExpressionStatement",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "_transferEthAndFinalize"
               },
               "arguments": [
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "parameters"
                 },
                 "memberName": "considerationAmount"
                },
                {
                 "type": "Identifier",
                 "name": "parameters"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            ]
           },
           "falseBody": {
            "type": "IfStatement",
            "condition": {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "Identifier",
              "name": "route"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "BasicOrderRouteType"
              },
              "memberName": "ERC20_TO_ERC721"
             }
            },
            "trueBody": {
             "type": "Block",
             "statements": [
              {
               "type": "ExpressionStatement",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "_transferERC721"
                },
                "arguments": [
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "parameters"
                  },
                  "memberName": "offerToken"
                 },
                 {
                  "type": "Identifier",
                  "name": "offerer"
                 },
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "msg"
                  },
                  "memberName": "sender"
                 },
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "parameters"
                  },
                  "memberName": "offerIdentifier"
                 },
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "parameters"
                  },
                  "memberName": "offerAmount"
                 },
                 {
                  "type": "Identifier",
                  "name": "conduit"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              },
              {
               "type": "ExpressionStatement",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "_transferERC20AndFinalize"
                },
                "arguments": [
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "msg"
                  },
                  "memberName": "sender"
                 },
                 {
                  "type": "Identifier",
                  "name": "offerer"
                 },
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "parameters"
                  },
                  "memberName": "considerationToken"
                 },
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "parameters"
                  },
                  "memberName": "considerationAmount"
                 },
                 {
                  "type": "Identifier",
                  "name": "parameters"
                 },
                 {
                  "type": "BooleanLiteral",
                  "value": false
                 }
                ],
                "names": [],
                "identifiers": []
               }
              }
             ]
            },
            "falseBody": {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "Identifier",
               "name": "route"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "BasicOrderRouteType"
               },
               "memberName": "ERC20_TO_ERC1155"
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "_transferERC1155"
                 },
                 "arguments": [
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "parameters"
                   },
                   "memberName": "offerToken"
                  },
                  {
                   "type": "Identifier",
                   "name": "offerer"
                  },
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "msg"
                   },
                   "memberName": "sender"
                  },
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "parameters"
                   },
                   "memberName": "offerIdentifier"
                  },
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "parameters"
                   },
                   "memberName": "offerAmount"
                  },
                  {
                   "type": "Identifier",
                   "name": "conduit"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "_transferERC20AndFinalize"
                 },
                 "arguments": [
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "msg"
                   },
                   "memberName": "sender"
                  },
                  {
                   "type": "Identifier",
                   "name": "offerer"
                  },
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "parameters"
                   },
                   "memberName": "considerationToken"
                  },
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "parameters"
                   },
                   "memberName": "considerationAmount"
                  },
                  {
                   "type": "Identifier",
                   "name": "parameters"
                  },
                  {
                   "type": "BooleanLiteral",
                   "value": false
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": {
              "type": "IfStatement",
              "condition": {
               "type": "BinaryOperation",
               "operator": "==",
               "left": {
                "type": "Identifier",
                "name": "route"
               },
               "right": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "BasicOrderRouteType"
                },
                "memberName": "ERC721_TO_ERC20"
               }
              },
              "trueBody": {
               "type": "Block",
               "statements": [
                {
                 "type": "ExpressionStatement",
                 "expression": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "Identifier",
                   "name": "_transferERC721"
                  },
                  "arguments": [
                   {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "parameters"
                    },
                    "memberName": "considerationToken"
                   },
                   {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "msg"
                    },
                    "memberName": "sender"
                   },
                   {
                    "type": "Identifier",
                    "name": "offerer"
                   },
                   {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "parameters"
                    },
                    "memberName": "considerationIdentifier"
                   },
                   {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "parameters"
                    },
                    "memberName": "considerationAmount"
                   },
                   {
                    "type": "Identifier",
                    "name": "conduit"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                },
                {
                 "type": "ExpressionStatement",
                 "expression": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "Identifier",
                   "name": "_transferERC20AndFinalize"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "offerer"
                   },
                   {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "msg"
                    },
                    "memberName": "sender"
                   },
                   {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "parameters"
                    },
                    "memberName": "offerToken"
                   },
                   {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "parameters"
                    },
                    "memberName": "offerAmount"
                   },
                   {
                    "type": "Identifier",
                    "name": "parameters"
                   },
                   {
                    "type": "BooleanLiteral",
                    "value": true
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                }
               ]
              },
              "falseBody": {
               "type": "Block",
               "statements": [
                {
                 "type": "ExpressionStatement",
                 "expression": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "Identifier",
                   "name": "_transferERC1155"
                  },
                  "arguments": [
                   {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "parameters"
                    },
                    "memberName": "considerationToken"
                   },
                   {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "msg"
                    },
                    "memberName": "sender"
                   },
                   {
                    "type": "Identifier",
                    "name": "offerer"
                   },
                   {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "parameters"
                    },
                    "memberName": "considerationIdentifier"
                   },
                   {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "parameters"
                    },
                    "memberName": "considerationAmount"
                   },
                   {
                    "type": "Identifier",
                    "name": "conduit"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                },
                {
                 "type": "ExpressionStatement",
                 "expression": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "Identifier",
                   "name": "_transferERC20AndFinalize"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "offerer"
                   },
                   {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "msg"
                    },
                    "memberName": "sender"
                   },
                   {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "parameters"
                    },
                    "memberName": "offerToken"
                   },
                   {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "parameters"
                    },
                    "memberName": "offerAmount"
                   },
                   {
                    "type": "Identifier",
                    "name": "parameters"
                   },
                   {
                    "type": "BooleanLiteral",
                    "value": true
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                }
               ]
              }
             }
            }
           }
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BooleanLiteral",
           "value": true
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "fulfillOrder",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Order"
         },
         "name": "order",
         "identifier": {
          "type": "Identifier",
          "name": "order"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "fulfillerConduit",
         "identifier": {
          "type": "Identifier",
          "name": "fulfillerConduit"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_validateAndFulfillAdvancedOrder"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "_convertOrderToAdvanced"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "order"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "NewExpression",
              "typeName": {
               "type": "ArrayTypeName",
               "baseTypeName": {
                "type": "UserDefinedTypeName",
                "namePath": "CriteriaResolver"
               },
               "length": null
              }
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "fulfillerConduit"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "fulfillAdvancedOrder",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "AdvancedOrder"
         },
         "name": "advancedOrder",
         "identifier": {
          "type": "Identifier",
          "name": "advancedOrder"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "CriteriaResolver"
          },
          "length": null
         },
         "name": "criteriaResolvers",
         "identifier": {
          "type": "Identifier",
          "name": "criteriaResolvers"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "fulfillerConduit",
         "identifier": {
          "type": "Identifier",
          "name": "fulfillerConduit"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_validateAndFulfillAdvancedOrder"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "advancedOrder"
            },
            {
             "type": "Identifier",
             "name": "criteriaResolvers"
            },
            {
             "type": "Identifier",
             "name": "fulfillerConduit"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "fulfillAvailableAdvancedOrders",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "AdvancedOrder"
          },
          "length": null
         },
         "name": "advancedOrders",
         "identifier": {
          "type": "Identifier",
          "name": "advancedOrders"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "CriteriaResolver"
          },
          "length": null
         },
         "name": "criteriaResolvers",
         "identifier": {
          "type": "Identifier",
          "name": "criteriaResolvers"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ArrayTypeName",
           "baseTypeName": {
            "type": "UserDefinedTypeName",
            "namePath": "FulfillmentComponent"
           },
           "length": null
          },
          "length": null
         },
         "name": "offerFulfillments",
         "identifier": {
          "type": "Identifier",
          "name": "offerFulfillments"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ArrayTypeName",
           "baseTypeName": {
            "type": "UserDefinedTypeName",
            "namePath": "FulfillmentComponent"
           },
           "length": null
          },
          "length": null
         },
         "name": "considerationFulfillments",
         "identifier": {
          "type": "Identifier",
          "name": "considerationFulfillments"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "fulfillerConduit",
         "identifier": {
          "type": "Identifier",
          "name": "fulfillerConduit"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "bool",
           "stateMutability": null
          },
          "length": null
         },
         "name": "availableOrders",
         "identifier": {
          "type": "Identifier",
          "name": "availableOrders"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "Execution"
          },
          "length": null
         },
         "name": "standardExecutions",
         "identifier": {
          "type": "Identifier",
          "name": "standardExecutions"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "BatchExecution"
          },
          "length": null
         },
         "name": "batchExecutions",
         "identifier": {
          "type": "Identifier",
          "name": "batchExecutions"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_validateOrdersAndPrepareToFulfill"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "advancedOrders"
            },
            {
             "type": "Identifier",
             "name": "criteriaResolvers"
            },
            {
             "type": "BooleanLiteral",
             "value": false
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "TupleExpression",
            "components": [
             {
              "type": "Identifier",
              "name": "availableOrders"
             },
             {
              "type": "Identifier",
              "name": "standardExecutions"
             },
             {
              "type": "Identifier",
              "name": "batchExecutions"
             }
            ],
            "isArray": false
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_fulfillAvailableOrders"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "advancedOrders"
             },
             {
              "type": "Identifier",
              "name": "offerFulfillments"
             },
             {
              "type": "Identifier",
              "name": "considerationFulfillments"
             },
             {
              "type": "Identifier",
              "name": "fulfillerConduit"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "TupleExpression",
           "components": [
            {
             "type": "Identifier",
             "name": "availableOrders"
            },
            {
             "type": "Identifier",
             "name": "standardExecutions"
            },
            {
             "type": "Identifier",
             "name": "batchExecutions"
            }
           ],
           "isArray": false
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "matchOrders",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "Order"
          },
          "length": null
         },
         "name": "orders",
         "identifier": {
          "type": "Identifier",
          "name": "orders"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "Fulfillment"
          },
          "length": null
         },
         "name": "fulfillments",
         "identifier": {
          "type": "Identifier",
          "name": "fulfillments"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "Execution"
          },
          "length": null
         },
         "name": "standardExecutions",
         "identifier": {
          "type": "Identifier",
          "name": "standardExecutions"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "BatchExecution"
          },
          "length": null
         },
         "name": "batchExecutions",
         "identifier": {
          "type": "Identifier",
          "name": "batchExecutions"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "AdvancedOrder"
             },
             "length": null
            },
            "name": "advancedOrders",
            "identifier": {
             "type": "Identifier",
             "name": "advancedOrders"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_convertOrdersToAdvanced"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "orders"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_validateOrdersAndPrepareToFulfill"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "advancedOrders"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "NewExpression",
              "typeName": {
               "type": "ArrayTypeName",
               "baseTypeName": {
                "type": "UserDefinedTypeName",
                "namePath": "CriteriaResolver"
               },
               "length": null
              }
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "BooleanLiteral",
             "value": true
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_fulfillAdvancedOrders"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "advancedOrders"
            },
            {
             "type": "Identifier",
             "name": "fulfillments"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "matchAdvancedOrders",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "AdvancedOrder"
          },
          "length": null
         },
         "name": "advancedOrders",
         "identifier": {
          "type": "Identifier",
          "name": "advancedOrders"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "CriteriaResolver"
          },
          "length": null
         },
         "name": "criteriaResolvers",
         "identifier": {
          "type": "Identifier",
          "name": "criteriaResolvers"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "Fulfillment"
          },
          "length": null
         },
         "name": "fulfillments",
         "identifier": {
          "type": "Identifier",
          "name": "fulfillments"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "Execution"
          },
          "length": null
         },
         "name": "standardExecutions",
         "identifier": {
          "type": "Identifier",
          "name": "standardExecutions"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "BatchExecution"
          },
          "length": null
         },
         "name": "batchExecutions",
         "identifier": {
          "type": "Identifier",
          "name": "batchExecutions"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_validateOrdersAndPrepareToFulfill"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "advancedOrders"
            },
            {
             "type": "Identifier",
             "name": "criteriaResolvers"
            },
            {
             "type": "BooleanLiteral",
             "value": true
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_fulfillAdvancedOrders"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "advancedOrders"
            },
            {
             "type": "Identifier",
             "name": "fulfillments"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "cancel",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "OrderComponents"
          },
          "length": null
         },
         "name": "orders",
         "identifier": {
          "type": "Identifier",
          "name": "orders"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_assertNonReentrant"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "offerer",
            "identifier": {
             "type": "Identifier",
             "name": "offerer"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "zone",
            "identifier": {
             "type": "Identifier",
             "name": "zone"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "UncheckedStatement",
          "block": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "totalOrders",
               "identifier": {
                "type": "Identifier",
                "name": "totalOrders"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "orders"
              },
              "memberName": "length"
             }
            },
            {
             "type": "ForStatement",
             "initExpression": {
              "type": "VariableDeclarationStatement",
              "variables": [
               {
                "type": "VariableDeclaration",
                "typeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "name": "i",
                "identifier": {
                 "type": "Identifier",
                 "name": "i"
                },
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false,
                "expression": null
               }
              ],
              "initialValue": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "conditionExpression": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "i"
              },
              "right": {
               "type": "Identifier",
               "name": "totalOrders"
              }
             },
             "loopExpression": {
              "type": "ExpressionStatement",
              "expression": null
             },
             "body": {
              "type": "Block",
              "statements": [
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "UserDefinedTypeName",
                   "namePath": "OrderComponents"
                  },
                  "name": "order",
                  "identifier": {
                   "type": "Identifier",
                   "name": "order"
                  },
                  "storageLocation": "calldata",
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "orders"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "i"
                 }
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "offerer"
                 },
                 "right": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "order"
                  },
                  "memberName": "offerer"
                 }
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "zone"
                 },
                 "right": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "order"
                  },
                  "memberName": "zone"
                 }
                }
               },
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "&&",
                 "left": {
                  "type": "BinaryOperation",
                  "operator": "!=",
                  "left": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "msg"
                   },
                   "memberName": "sender"
                  },
                  "right": {
                   "type": "Identifier",
                   "name": "offerer"
                  }
                 },
                 "right": {
                  "type": "BinaryOperation",
                  "operator": "!=",
                  "left": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "msg"
                   },
                   "memberName": "sender"
                  },
                  "right": {
                   "type": "Identifier",
                   "name": "zone"
                  }
                 }
                },
                "trueBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "RevertStatement",
                   "revertCall": {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "Identifier",
                     "name": "InvalidCanceller"
                    },
                    "arguments": [],
                    "names": [],
                    "identifiers": []
                   }
                  }
                 ]
                },
                "falseBody": null
               },
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "ElementaryTypeName",
                   "name": "bytes32",
                   "stateMutability": null
                  },
                  "name": "orderHash",
                  "identifier": {
                   "type": "Identifier",
                   "name": "orderHash"
                  },
                  "storageLocation": null,
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "_getOrderHash"
                 },
                 "arguments": [
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "Identifier",
                    "name": "OrderParameters"
                   },
                   "arguments": [
                    {
                     "type": "Identifier",
                     "name": "offerer"
                    },
                    {
                     "type": "Identifier",
                     "name": "zone"
                    },
                    {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "order"
                     },
                     "memberName": "offer"
                    },
                    {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "order"
                     },
                     "memberName": "consideration"
                    },
                    {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "order"
                     },
                     "memberName": "orderType"
                    },
                    {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "order"
                     },
                     "memberName": "startTime"
                    },
                    {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "order"
                     },
                     "memberName": "endTime"
                    },
                    {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "order"
                     },
                     "memberName": "zoneHash"
                    },
                    {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "order"
                     },
                     "memberName": "salt"
                    },
                    {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "order"
                     },
                     "memberName": "conduit"
                    },
                    {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "Identifier",
                       "name": "order"
                      },
                      "memberName": "consideration"
                     },
                     "memberName": "length"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  },
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "order"
                   },
                   "memberName": "nonce"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "IndexAccess",
                   "base": {
                    "type": "Identifier",
                    "name": "_orderStatus"
                   },
                   "index": {
                    "type": "Identifier",
                    "name": "orderHash"
                   }
                  },
                  "memberName": "isValidated"
                 },
                 "right": {
                  "type": "BooleanLiteral",
                  "value": false
                 }
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "IndexAccess",
                   "base": {
                    "type": "Identifier",
                    "name": "_orderStatus"
                   },
                   "index": {
                    "type": "Identifier",
                    "name": "orderHash"
                   }
                  },
                  "memberName": "isCancelled"
                 },
                 "right": {
                  "type": "BooleanLiteral",
                  "value": true
                 }
                }
               },
               {
                "type": "EmitStatement",
                "eventCall": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "OrderCancelled"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "orderHash"
                  },
                  {
                   "type": "Identifier",
                   "name": "offerer"
                  },
                  {
                   "type": "Identifier",
                   "name": "zone"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "UnaryOperation",
                 "operator": "++",
                 "subExpression": {
                  "type": "Identifier",
                  "name": "i"
                 },
                 "isPrefix": true
                }
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BooleanLiteral",
           "value": true
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "validate",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "Order"
          },
          "length": null
         },
         "name": "orders",
         "identifier": {
          "type": "Identifier",
          "name": "orders"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_assertNonReentrant"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "orderHash",
            "identifier": {
             "type": "Identifier",
             "name": "orderHash"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "offerer",
            "identifier": {
             "type": "Identifier",
             "name": "offerer"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "UncheckedStatement",
          "block": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "totalOrders",
               "identifier": {
                "type": "Identifier",
                "name": "totalOrders"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "orders"
              },
              "memberName": "length"
             }
            },
            {
             "type": "ForStatement",
             "initExpression": {
              "type": "VariableDeclarationStatement",
              "variables": [
               {
                "type": "VariableDeclaration",
                "typeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "name": "i",
                "identifier": {
                 "type": "Identifier",
                 "name": "i"
                },
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false,
                "expression": null
               }
              ],
              "initialValue": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "conditionExpression": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "i"
              },
              "right": {
               "type": "Identifier",
               "name": "totalOrders"
              }
             },
             "loopExpression": {
              "type": "ExpressionStatement",
              "expression": null
             },
             "body": {
              "type": "Block",
              "statements": [
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "UserDefinedTypeName",
                   "namePath": "Order"
                  },
                  "name": "order",
                  "identifier": {
                   "type": "Identifier",
                   "name": "order"
                  },
                  "storageLocation": "calldata",
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "orders"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "i"
                 }
                }
               },
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "UserDefinedTypeName",
                   "namePath": "OrderParameters"
                  },
                  "name": "orderParameters",
                  "identifier": {
                   "type": "Identifier",
                   "name": "orderParameters"
                  },
                  "storageLocation": "calldata",
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "order"
                 },
                 "memberName": "parameters"
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "offerer"
                 },
                 "right": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "orderParameters"
                  },
                  "memberName": "offerer"
                 }
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "orderHash"
                 },
                 "right": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "Identifier",
                   "name": "_assertConsiderationLengthAndGetNoncedOrderHash"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "orderParameters"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                }
               },
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "UserDefinedTypeName",
                   "namePath": "OrderStatus"
                  },
                  "name": "orderStatus",
                  "identifier": {
                   "type": "Identifier",
                   "name": "orderStatus"
                  },
                  "storageLocation": "memory",
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "_orderStatus"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "orderHash"
                 }
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "_verifyOrderStatus"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "orderHash"
                  },
                  {
                   "type": "Identifier",
                   "name": "orderStatus"
                  },
                  {
                   "type": "BooleanLiteral",
                   "value": false
                  },
                  {
                   "type": "BooleanLiteral",
                   "value": true
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "IfStatement",
                "condition": {
                 "type": "UnaryOperation",
                 "operator": "!",
                 "subExpression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "orderStatus"
                  },
                  "memberName": "isValidated"
                 },
                 "isPrefix": true
                },
                "trueBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "Identifier",
                     "name": "_verifySignature"
                    },
                    "arguments": [
                     {
                      "type": "Identifier",
                      "name": "offerer"
                     },
                     {
                      "type": "Identifier",
                      "name": "orderHash"
                     },
                     {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "Identifier",
                       "name": "order"
                      },
                      "memberName": "signature"
                     }
                    ],
                    "names": [],
                    "identifiers": []
                   }
                  },
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "IndexAccess",
                      "base": {
                       "type": "Identifier",
                       "name": "_orderStatus"
                      },
                      "index": {
                       "type": "Identifier",
                       "name": "orderHash"
                      }
                     },
                     "memberName": "isValidated"
                    },
                    "right": {
                     "type": "BooleanLiteral",
                     "value": true
                    }
                   }
                  },
                  {
                   "type": "EmitStatement",
                   "eventCall": {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "Identifier",
                     "name": "OrderValidated"
                    },
                    "arguments": [
                     {
                      "type": "Identifier",
                      "name": "orderHash"
                     },
                     {
                      "type": "Identifier",
                      "name": "offerer"
                     },
                     {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "Identifier",
                       "name": "orderParameters"
                      },
                      "memberName": "zone"
                     }
                    ],
                    "names": [],
                    "identifiers": []
                   }
                  }
                 ]
                },
                "falseBody": null
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "UnaryOperation",
                 "operator": "++",
                 "subExpression": {
                  "type": "Identifier",
                  "name": "i"
                 },
                 "isPrefix": true
                }
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BooleanLiteral",
           "value": true
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "incrementNonce",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "newNonce",
         "identifier": {
          "type": "Identifier",
          "name": "newNonce"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_assertNonReentrant"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "UncheckedStatement",
          "block": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "newNonce"
              },
              "right": {
               "type": "UnaryOperation",
               "operator": "++",
               "subExpression": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "_nonces"
                },
                "index": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "msg"
                 },
                 "memberName": "sender"
                }
               },
               "isPrefix": true
              }
             }
            }
           ]
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "NonceIncremented"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "newNonce"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getOrderHash",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "OrderComponents"
         },
         "name": "order",
         "identifier": {
          "type": "Identifier",
          "name": "order"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getOrderHash"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "OrderParameters"
             },
             "arguments": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "order"
               },
               "memberName": "offerer"
              },
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "order"
               },
               "memberName": "zone"
              },
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "order"
               },
               "memberName": "offer"
              },
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "order"
               },
               "memberName": "consideration"
              },
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "order"
               },
               "memberName": "orderType"
              },
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "order"
               },
               "memberName": "startTime"
              },
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "order"
               },
               "memberName": "endTime"
              },
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "order"
               },
               "memberName": "zoneHash"
              },
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "order"
               },
               "memberName": "salt"
              },
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "order"
               },
               "memberName": "conduit"
              },
              {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "order"
                },
                "memberName": "consideration"
               },
               "memberName": "length"
              }
             ],
             "names": [],
             "identifiers": []
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "order"
             },
             "memberName": "nonce"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getOrderStatus",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "orderHash",
         "identifier": {
          "type": "Identifier",
          "name": "orderHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "isValidated",
         "identifier": {
          "type": "Identifier",
          "name": "isValidated"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "isCancelled",
         "identifier": {
          "type": "Identifier",
          "name": "isCancelled"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "totalFilled",
         "identifier": {
          "type": "Identifier",
          "name": "totalFilled"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "totalSize",
         "identifier": {
          "type": "Identifier",
          "name": "totalSize"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "OrderStatus"
            },
            "name": "orderStatus",
            "identifier": {
             "type": "Identifier",
             "name": "orderStatus"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "_orderStatus"
           },
           "index": {
            "type": "Identifier",
            "name": "orderHash"
           }
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "TupleExpression",
           "components": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "orderStatus"
             },
             "memberName": "isValidated"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "orderStatus"
             },
             "memberName": "isCancelled"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "orderStatus"
             },
             "memberName": "numerator"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "orderStatus"
             },
             "memberName": "denominator"
            }
           ],
           "isArray": false
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNonce",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "offerer",
         "identifier": {
          "type": "Identifier",
          "name": "offerer"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "_nonces"
           },
           "index": {
            "type": "Identifier",
            "name": "offerer"
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "DOMAIN_SEPARATOR",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_domainSeparator"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "name",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "_NAME"
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "version",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "_VERSION"
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-SeaportProtocol/seaport-f17082fca3e99b409f53040d8858e84b0246aa22/contracts/test/TestZone.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.13"
    },
    {
     "type": "ImportDirective",
     "path": "../interfaces/ZoneInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../interfaces/ZoneInterface.sol",
      "parts": [
       "../interfaces/ZoneInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "ZoneInterface",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "ZoneInterface"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "../lib/ConsiderationStructs.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../lib/ConsiderationStructs.sol",
      "parts": [
       "../lib/ConsiderationStructs.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "AdvancedOrder",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "AdvancedOrder"
       },
       null
      ]
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "TestZone",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ZoneInterface"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "isValidOrder",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "orderHash",
         "identifier": {
          "type": "Identifier",
          "name": "orderHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "caller",
         "identifier": {
          "type": "Identifier",
          "name": "caller"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "offerer",
         "identifier": {
          "type": "Identifier",
          "name": "offerer"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "zoneHash",
         "identifier": {
          "type": "Identifier",
          "name": "zoneHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes4",
          "stateMutability": null
         },
         "name": "validOrderMagicValue",
         "identifier": {
          "type": "Identifier",
          "name": "validOrderMagicValue"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "orderHash"
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "caller"
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "offerer"
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "zoneHash"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "ElementaryTypeName",
               "name": "uint256",
               "stateMutability": null
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "1",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "revert"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "Revert on zone hash 1",
                "parts": [
                 "Revert on zone hash 1"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": {
           "type": "IfStatement",
           "condition": {
            "type": "BinaryOperation",
            "operator": "==",
            "left": {
             "type": "Identifier",
             "name": "zoneHash"
            },
            "right": {
             "type": "FunctionCall",
             "expression": {
              "type": "ElementaryTypeName",
              "name": "bytes32",
              "stateMutability": null
             },
             "arguments": [
              {
               "type": "FunctionCall",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "arguments": [
                {
                 "type": "NumberLiteral",
                 "number": "2",
                 "subdenomination": null
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           },
           "trueBody": {
            "type": "Block",
            "statements": [
             {
              "type": "InlineAssemblyStatement",
              "language": null,
              "flags": [],
              "body": {
               "type": "AssemblyBlock",
               "operations": [
                {
                 "type": "AssemblyCall",
                 "functionName": "revert",
                 "arguments": [
                  {
                   "type": "DecimalNumber",
                   "value": "0"
                  },
                  {
                   "type": "DecimalNumber",
                   "value": "0"
                  }
                 ]
                }
               ]
              }
             }
            ]
           },
           "falseBody": null
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "validOrderMagicValue"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "ZoneInterface"
             },
             "memberName": "isValidOrder"
            },
            "memberName": "selector"
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "isValidOrderIncludingExtraData",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "orderHash",
         "identifier": {
          "type": "Identifier",
          "name": "orderHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "caller",
         "identifier": {
          "type": "Identifier",
          "name": "caller"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "AdvancedOrder"
         },
         "name": "order",
         "identifier": {
          "type": "Identifier",
          "name": "order"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "bytes32",
           "stateMutability": null
          },
          "length": null
         },
         "name": "priorOrderHashes",
         "identifier": {
          "type": "Identifier",
          "name": "priorOrderHashes"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes4",
          "stateMutability": null
         },
         "name": "validOrderMagicValue",
         "identifier": {
          "type": "Identifier",
          "name": "validOrderMagicValue"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "orderHash"
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "caller"
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "order"
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "priorOrderHashes"
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "order"
             },
             "memberName": "extraData"
            },
            "memberName": "length"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "4",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "revert"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "Revert on extraData length 4",
                "parts": [
                 "Revert on extraData length 4"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": {
           "type": "IfStatement",
           "condition": {
            "type": "BinaryOperation",
            "operator": "==",
            "left": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "order"
              },
              "memberName": "extraData"
             },
             "memberName": "length"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "5",
             "subdenomination": null
            }
           },
           "trueBody": {
            "type": "Block",
            "statements": [
             {
              "type": "InlineAssemblyStatement",
              "language": null,
              "flags": [],
              "body": {
               "type": "AssemblyBlock",
               "operations": [
                {
                 "type": "AssemblyCall",
                 "functionName": "revert",
                 "arguments": [
                  {
                   "type": "DecimalNumber",
                   "value": "0"
                  },
                  {
                   "type": "DecimalNumber",
                   "value": "0"
                  }
                 ]
                }
               ]
              }
             }
            ]
           },
           "falseBody": null
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "validOrderMagicValue"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "ZoneInterface"
             },
             "memberName": "isValidOrder"
            },
            "memberName": "selector"
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-SeaportProtocol/seaport-f17082fca3e99b409f53040d8858e84b0246aa22/contracts/test/TestERC721.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.13"
    },
    {
     "type": "ImportDirective",
     "path": "@rari-capital/solmate/src/tokens/ERC721.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@rari-capital/solmate/src/tokens/ERC721.sol",
      "parts": [
       "@rari-capital/solmate/src/tokens/ERC721.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "TestERC721",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ERC721"
       },
       "arguments": [
        {
         "type": "StringLiteral",
         "value": "Test721",
         "parts": [
          "Test721"
         ],
         "isUnicode": [
          false
         ]
        },
        {
         "type": "StringLiteral",
         "value": "TST721",
         "parts": [
          "TST721"
         ],
         "isUnicode": [
          false
         ]
        }
       ]
      }
     ],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "mint",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "to",
         "identifier": {
          "type": "Identifier",
          "name": "to"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "tokenId",
         "identifier": {
          "type": "Identifier",
          "name": "tokenId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_mint"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "to"
            },
            {
             "type": "Identifier",
             "name": "tokenId"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BooleanLiteral",
           "value": true
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "tokenURI",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "StringLiteral",
           "value": "tokenURI",
           "parts": [
            "tokenURI"
           ],
           "isUnicode": [
            false
           ]
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-SeaportProtocol/seaport-f17082fca3e99b409f53040d8858e84b0246aa22/contracts/test/TestERC20.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.13"
    },
    {
     "type": "ImportDirective",
     "path": "@rari-capital/solmate/src/tokens/ERC20.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@rari-capital/solmate/src/tokens/ERC20.sol",
      "parts": [
       "@rari-capital/solmate/src/tokens/ERC20.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "TestERC20",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ERC20"
       },
       "arguments": [
        {
         "type": "StringLiteral",
         "value": "Test20",
         "parts": [
          "Test20"
         ],
         "isUnicode": [
          false
         ]
        },
        {
         "type": "StringLiteral",
         "value": "TST20",
         "parts": [
          "TST20"
         ],
         "isUnicode": [
          false
         ]
        },
        {
         "type": "NumberLiteral",
         "number": "18",
         "subdenomination": null
        }
       ]
      }
     ],
     "subNodes": [
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "blocked",
         "identifier": {
          "type": "Identifier",
          "name": "blocked"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "blocked"
           },
           "right": {
            "type": "BooleanLiteral",
            "value": false
           }
          }
         }
        ]
       },
       "visibility": "default",
       "modifiers": [],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "blockTransfer",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "blocking",
         "identifier": {
          "type": "Identifier",
          "name": "blocking"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "blocked"
           },
           "right": {
            "type": "Identifier",
            "name": "blocking"
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "mint",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "to",
         "identifier": {
          "type": "Identifier",
          "name": "to"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_mint"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "to"
            },
            {
             "type": "Identifier",
             "name": "amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BooleanLiteral",
           "value": true
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "transferFrom",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "from",
         "identifier": {
          "type": "Identifier",
          "name": "from"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "to",
         "identifier": {
          "type": "Identifier",
          "name": "to"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "ok",
         "identifier": {
          "type": "Identifier",
          "name": "ok"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "Identifier",
           "name": "blocked"
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "BooleanLiteral",
              "value": false
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "super"
            },
            "memberName": "transferFrom"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "from"
            },
            {
             "type": "Identifier",
             "name": "to"
            },
            {
             "type": "Identifier",
             "name": "amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "ok"
           },
           "right": {
            "type": "BooleanLiteral",
            "value": true
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-SeaportProtocol/seaport-f17082fca3e99b409f53040d8858e84b0246aa22/contracts/test/TestERC1155.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.13"
    },
    {
     "type": "ImportDirective",
     "path": "@rari-capital/solmate/src/tokens/ERC1155.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "@rari-capital/solmate/src/tokens/ERC1155.sol",
      "parts": [
       "@rari-capital/solmate/src/tokens/ERC1155.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "TestERC1155",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ERC1155"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "mint",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "to",
         "identifier": {
          "type": "Identifier",
          "name": "to"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "tokenId",
         "identifier": {
          "type": "Identifier",
          "name": "tokenId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_mint"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "to"
            },
            {
             "type": "Identifier",
             "name": "tokenId"
            },
            {
             "type": "Identifier",
             "name": "amount"
            },
            {
             "type": "StringLiteral",
             "value": "",
             "parts": [
              ""
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BooleanLiteral",
           "value": true
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "uri",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "StringLiteral",
           "value": "uri",
           "parts": [
            "uri"
           ],
           "isUnicode": [
            false
           ]
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": [],
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-SeaportProtocol/seaport-f17082fca3e99b409f53040d8858e84b0246aa22/contracts/test/Reenterer.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.13"
    },
    {
     "type": "ContractDefinition",
     "name": "Reenterer",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "target",
         "identifier": {
          "type": "Identifier",
          "name": "target"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "msgValue",
         "identifier": {
          "type": "Identifier",
          "name": "msgValue"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "callData",
         "identifier": {
          "type": "Identifier",
          "name": "callData"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "EventDefinition",
       "name": "Reentered",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "returnData",
         "identifier": {
          "type": "Identifier",
          "name": "returnData"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "FunctionDefinition",
       "name": "prepare",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "targetToUse",
         "identifier": {
          "type": "Identifier",
          "name": "targetToUse"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "msgValueToUse",
         "identifier": {
          "type": "Identifier",
          "name": "msgValueToUse"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "callDataToUse",
         "identifier": {
          "type": "Identifier",
          "name": "callDataToUse"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "target"
           },
           "right": {
            "type": "Identifier",
            "name": "targetToUse"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "msgValue"
           },
           "right": {
            "type": "Identifier",
            "name": "msgValueToUse"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "callData"
           },
           "right": {
            "type": "Identifier",
            "name": "callDataToUse"
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "name": "success",
            "identifier": {
             "type": "Identifier",
             "name": "success"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bool",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "returnData",
            "identifier": {
             "type": "Identifier",
             "name": "returnData"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes",
             "stateMutability": null
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "NameValueExpression",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "target"
             },
             "memberName": "call"
            },
            "arguments": {
             "type": "NameValueList",
             "names": [
              "value"
             ],
             "identifiers": [
              {
               "type": "Identifier",
               "name": "value"
              }
             ],
             "arguments": [
              {
               "type": "Identifier",
               "name": "msgValue"
              }
             ]
            }
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "callData"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "UnaryOperation",
           "operator": "!",
           "subExpression": {
            "type": "Identifier",
            "name": "success"
           },
           "isPrefix": true
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "InlineAssemblyStatement",
             "language": null,
             "flags": [],
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyCall",
                "functionName": "returndatacopy",
                "arguments": [
                 {
                  "type": "DecimalNumber",
                  "value": "0"
                 },
                 {
                  "type": "DecimalNumber",
                  "value": "0"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "returndatasize",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "revert",
                "arguments": [
                 {
                  "type": "DecimalNumber",
                  "value": "0"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "returndatasize",
                  "arguments": []
                 }
                ]
               }
              ]
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "Reentered"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "returnData"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": true,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-SeaportProtocol/seaport-f17082fca3e99b409f53040d8858e84b0246aa22/contracts/test/EIP1271Wallet.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.13"
    },
    {
     "type": "ContractDefinition",
     "name": "ERC20ApprovalInterface",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "approve",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "interface"
    },
    {
     "type": "ContractDefinition",
     "name": "NFTApprovalInterface",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "setApprovalForAll",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "interface"
    },
    {
     "type": "ContractDefinition",
     "name": "EIP1271Wallet",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes4",
          "stateMutability": null
         },
         "name": "_EIP_1271_MAGIC_VALUE",
         "identifier": {
          "type": "Identifier",
          "name": "_EIP_1271_MAGIC_VALUE"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "0x1626ba7e",
          "subdenomination": null
         },
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "0x1626ba7e",
        "subdenomination": null
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "owner",
         "identifier": {
          "type": "Identifier",
          "name": "owner"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": true,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "showRevertMessage",
         "identifier": {
          "type": "Identifier",
          "name": "showRevertMessage"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "bytes32",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "bool",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "digestApproved",
         "identifier": {
          "type": "Identifier",
          "name": "digestApproved"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_owner",
         "identifier": {
          "type": "Identifier",
          "name": "_owner"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "owner"
           },
           "right": {
            "type": "Identifier",
            "name": "_owner"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "showRevertMessage"
           },
           "right": {
            "type": "BooleanLiteral",
            "value": true
           }
          }
         }
        ]
       },
       "visibility": "default",
       "modifiers": [],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "revertWithMessage",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "showMessage",
         "identifier": {
          "type": "Identifier",
          "name": "showMessage"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "showRevertMessage"
           },
           "right": {
            "type": "Identifier",
            "name": "showMessage"
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "registerDigest",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "digest",
         "identifier": {
          "type": "Identifier",
          "name": "digest"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "approved",
         "identifier": {
          "type": "Identifier",
          "name": "approved"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "digestApproved"
            },
            "index": {
             "type": "Identifier",
             "name": "digest"
            }
           },
           "right": {
            "type": "Identifier",
            "name": "approved"
           }
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "approveERC20",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "ERC20ApprovalInterface"
         },
         "name": "token",
         "identifier": {
          "type": "Identifier",
          "name": "token"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "operator",
         "identifier": {
          "type": "Identifier",
          "name": "operator"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "msg"
            },
            "memberName": "sender"
           },
           "right": {
            "type": "Identifier",
            "name": "owner"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "revert"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "Only owner",
                "parts": [
                 "Only owner"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "token"
            },
            "memberName": "approve"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "operator"
            },
            {
             "type": "Identifier",
             "name": "amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "approveNFT",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "NFTApprovalInterface"
         },
         "name": "token",
         "identifier": {
          "type": "Identifier",
          "name": "token"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "operator",
         "identifier": {
          "type": "Identifier",
          "name": "operator"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "msg"
            },
            "memberName": "sender"
           },
           "right": {
            "type": "Identifier",
            "name": "owner"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "revert"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "Only owner",
                "parts": [
                 "Only owner"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "token"
            },
            "memberName": "setApprovalForAll"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "operator"
            },
            {
             "type": "BooleanLiteral",
             "value": true
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "isValidSignature",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "digest",
         "identifier": {
          "type": "Identifier",
          "name": "digest"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "signature",
         "identifier": {
          "type": "Identifier",
          "name": "signature"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes4",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "digestApproved"
           },
           "index": {
            "type": "Identifier",
            "name": "digest"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "Identifier",
              "name": "_EIP_1271_MAGIC_VALUE"
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "signature"
            },
            "memberName": "length"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "65",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "revert"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "r",
            "identifier": {
             "type": "Identifier",
             "name": "r"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "s",
            "identifier": {
             "type": "Identifier",
             "name": "s"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint8",
             "stateMutability": null
            },
            "name": "v",
            "identifier": {
             "type": "Identifier",
             "name": "v"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "r"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "add",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "signature",
                  "arguments": []
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x20"
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "s"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "add",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "signature",
                  "arguments": []
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x40"
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "v"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "byte",
              "arguments": [
               {
                "type": "DecimalNumber",
                "value": "0"
               },
               {
                "type": "AssemblyCall",
                "functionName": "mload",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "signature",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x60"
                   }
                  ]
                 }
                ]
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "FunctionCall",
            "expression": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "s"
             }
            ],
            "names": [],
            "identifiers": []
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "revert"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "&&",
           "left": {
            "type": "BinaryOperation",
            "operator": "!=",
            "left": {
             "type": "Identifier",
             "name": "v"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "27",
             "subdenomination": null
            }
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "!=",
            "left": {
             "type": "Identifier",
             "name": "v"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "28",
             "subdenomination": null
            }
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "revert"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "signer",
            "identifier": {
             "type": "Identifier",
             "name": "signer"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "ecrecover"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "digest"
            },
            {
             "type": "Identifier",
             "name": "v"
            },
            {
             "type": "Identifier",
             "name": "r"
            },
            {
             "type": "Identifier",
             "name": "s"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "signer"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "address"
            },
            "arguments": [
             {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "revert"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "Identifier",
            "name": "signer"
           },
           "right": {
            "type": "Identifier",
            "name": "owner"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "IfStatement",
             "condition": {
              "type": "Identifier",
              "name": "showRevertMessage"
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "revert"
                 },
                 "arguments": [
                  {
                   "type": "StringLiteral",
                   "value": "BAD SIGNER",
                   "parts": [
                    "BAD SIGNER"
                   ],
                   "isUnicode": [
                    false
                   ]
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": null
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "revert"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "_EIP_1271_MAGIC_VALUE"
          }
         }
        ]
       },
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-SeaportProtocol/seaport-f17082fca3e99b409f53040d8858e84b0246aa22/contracts/test/wyvern/WyvernTokenTransferProxy.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.4.13"
    },
    {
     "type": "ImportDirective",
     "path": "./ProxyRegistry.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./ProxyRegistry.sol",
      "parts": [
       "./ProxyRegistry.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./TokenTransferProxy.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./TokenTransferProxy.sol",
      "parts": [
       "./TokenTransferProxy.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "WyvernTokenTransferProxy",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "TokenTransferProxy"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "ProxyRegistry"
         },
         "name": "registryAddr",
         "identifier": {
          "type": "Identifier",
          "name": "registryAddr"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "registry"
           },
           "right": {
            "type": "Identifier",
            "name": "registryAddr"
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-SeaportProtocol/seaport-f17082fca3e99b409f53040d8858e84b0246aa22/contracts/test/wyvern/WyvernProxyRegistry.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.4.13"
    },
    {
     "type": "ImportDirective",
     "path": "./ProxyRegistry.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./ProxyRegistry.sol",
      "parts": [
       "./ProxyRegistry.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./AuthenticatedProxy.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./AuthenticatedProxy.sol",
      "parts": [
       "./AuthenticatedProxy.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "WyvernProxyRegistry",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ProxyRegistry"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "name",
         "identifier": {
          "type": "Identifier",
          "name": "name"
         },
         "expression": {
          "type": "StringLiteral",
          "value": "Project Wyvern Proxy Registry",
          "parts": [
           "Project Wyvern Proxy Registry"
          ],
          "isUnicode": [
           false
          ]
         },
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "StringLiteral",
        "value": "Project Wyvern Proxy Registry",
        "parts": [
         "Project Wyvern Proxy Registry"
        ],
        "isUnicode": [
         false
        ]
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "initialAddressSet",
         "identifier": {
          "type": "Identifier",
          "name": "initialAddressSet"
         },
         "expression": {
          "type": "BooleanLiteral",
          "value": false
         },
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "BooleanLiteral",
        "value": false
       }
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "delegateProxyImplementation"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "NewExpression",
             "typeName": {
              "type": "UserDefinedTypeName",
              "namePath": "AuthenticatedProxy"
             }
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "grantInitialAuthentication",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "authAddress",
         "identifier": {
          "type": "Identifier",
          "name": "authAddress"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "UnaryOperation",
             "operator": "!",
             "subExpression": {
              "type": "Identifier",
              "name": "initialAddressSet"
             },
             "isPrefix": true
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "initialAddressSet"
           },
           "right": {
            "type": "BooleanLiteral",
            "value": true
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "contracts"
            },
            "index": {
             "type": "Identifier",
             "name": "authAddress"
            }
           },
           "right": {
            "type": "BooleanLiteral",
            "value": true
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyOwner",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-SeaportProtocol/seaport-f17082fca3e99b409f53040d8858e84b0246aa22/contracts/test/wyvern/TokenTransferProxy.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.4.13"
    },
    {
     "type": "ImportDirective",
     "path": "./ERC20.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./ERC20.sol",
      "parts": [
       "./ERC20.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./ProxyRegistry.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./ProxyRegistry.sol",
      "parts": [
       "./ProxyRegistry.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "TokenTransferProxy",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "ProxyRegistry"
         },
         "name": "registry",
         "identifier": {
          "type": "Identifier",
          "name": "registry"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "FunctionDefinition",
       "name": "transferFrom",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "token",
         "identifier": {
          "type": "Identifier",
          "name": "token"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "from",
         "identifier": {
          "type": "Identifier",
          "name": "from"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "to",
         "identifier": {
          "type": "Identifier",
          "name": "to"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "registry"
              },
              "memberName": "contracts"
             },
             "arguments": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "msg"
               },
               "memberName": "sender"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "ERC20"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "token"
              }
             ],
             "names": [],
             "identifiers": []
            },
            "memberName": "transferFrom"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "from"
            },
            {
             "type": "Identifier",
             "name": "to"
            },
            {
             "type": "Identifier",
             "name": "amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-SeaportProtocol/seaport-f17082fca3e99b409f53040d8858e84b0246aa22/contracts/test/wyvern/TokenRecipient.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.4.13"
    },
    {
     "type": "ImportDirective",
     "path": "./ERC20.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./ERC20.sol",
      "parts": [
       "./ERC20.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "TokenRecipient",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "EventDefinition",
       "name": "ReceivedEther",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "sender",
         "identifier": {
          "type": "Identifier",
          "name": "sender"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "ReceivedTokens",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "from",
         "identifier": {
          "type": "Identifier",
          "name": "from"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "value",
         "identifier": {
          "type": "Identifier",
          "name": "value"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "token",
         "identifier": {
          "type": "Identifier",
          "name": "token"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "extraData",
         "identifier": {
          "type": "Identifier",
          "name": "extraData"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "FunctionDefinition",
       "name": "receiveApproval",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "from",
         "identifier": {
          "type": "Identifier",
          "name": "from"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "value",
         "identifier": {
          "type": "Identifier",
          "name": "value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "token",
         "identifier": {
          "type": "Identifier",
          "name": "token"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "extraData",
         "identifier": {
          "type": "Identifier",
          "name": "extraData"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "ERC20"
            },
            "name": "t",
            "identifier": {
             "type": "Identifier",
             "name": "t"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "ERC20"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "token"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "t"
              },
              "memberName": "transferFrom"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "from"
              },
              {
               "type": "Identifier",
               "name": "this"
              },
              {
               "type": "Identifier",
               "name": "value"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "ReceivedTokens"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "from"
            },
            {
             "type": "Identifier",
             "name": "value"
            },
            {
             "type": "Identifier",
             "name": "token"
            },
            {
             "type": "Identifier",
             "name": "extraData"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "ReceivedEther"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "value"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": true,
       "isVirtual": false,
       "stateMutability": "payable"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-SeaportProtocol/seaport-f17082fca3e99b409f53040d8858e84b0246aa22/contracts/test/wyvern/ProxyRegistry.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.4.13"
    },
    {
     "type": "ImportDirective",
     "path": "./Ownable.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./Ownable.sol",
      "parts": [
       "./Ownable.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./OwnableDelegateProxy.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./OwnableDelegateProxy.sol",
      "parts": [
       "./OwnableDelegateProxy.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "ProxyRegistry",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "Ownable"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "delegateProxyImplementation",
         "identifier": {
          "type": "Identifier",
          "name": "delegateProxyImplementation"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "UserDefinedTypeName",
           "namePath": "OwnableDelegateProxy"
          },
          "valueName": null
         },
         "name": "proxies",
         "identifier": {
          "type": "Identifier",
          "name": "proxies"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "pending",
         "identifier": {
          "type": "Identifier",
          "name": "pending"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "bool",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "contracts",
         "identifier": {
          "type": "Identifier",
          "name": "contracts"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "DELAY_PERIOD",
         "identifier": {
          "type": "Identifier",
          "name": "DELAY_PERIOD"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "2",
          "subdenomination": "weeks"
         },
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "2",
        "subdenomination": "weeks"
       }
      },
      {
       "type": "FunctionDefinition",
       "name": "startGrantAuthentication",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "addr",
         "identifier": {
          "type": "Identifier",
          "name": "addr"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "&&",
             "left": {
              "type": "UnaryOperation",
              "operator": "!",
              "subExpression": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "contracts"
               },
               "index": {
                "type": "Identifier",
                "name": "addr"
               }
              },
              "isPrefix": true
             },
             "right": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "pending"
               },
               "index": {
                "type": "Identifier",
                "name": "addr"
               }
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "pending"
            },
            "index": {
             "type": "Identifier",
             "name": "addr"
            }
           },
           "right": {
            "type": "Identifier",
            "name": "now"
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyOwner",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "endGrantAuthentication",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "addr",
         "identifier": {
          "type": "Identifier",
          "name": "addr"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "&&",
             "left": {
              "type": "BinaryOperation",
              "operator": "&&",
              "left": {
               "type": "UnaryOperation",
               "operator": "!",
               "subExpression": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "contracts"
                },
                "index": {
                 "type": "Identifier",
                 "name": "addr"
                }
               },
               "isPrefix": true
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "!=",
               "left": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "pending"
                },
                "index": {
                 "type": "Identifier",
                 "name": "addr"
                }
               },
               "right": {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              }
             },
             "right": {
              "type": "TupleExpression",
              "components": [
               {
                "type": "BinaryOperation",
                "operator": "<",
                "left": {
                 "type": "TupleExpression",
                 "components": [
                  {
                   "type": "BinaryOperation",
                   "operator": "+",
                   "left": {
                    "type": "IndexAccess",
                    "base": {
                     "type": "Identifier",
                     "name": "pending"
                    },
                    "index": {
                     "type": "Identifier",
                     "name": "addr"
                    }
                   },
                   "right": {
                    "type": "Identifier",
                    "name": "DELAY_PERIOD"
                   }
                  }
                 ],
                 "isArray": false
                },
                "right": {
                 "type": "Identifier",
                 "name": "now"
                }
               }
              ],
              "isArray": false
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "pending"
            },
            "index": {
             "type": "Identifier",
             "name": "addr"
            }
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "contracts"
            },
            "index": {
             "type": "Identifier",
             "name": "addr"
            }
           },
           "right": {
            "type": "BooleanLiteral",
            "value": true
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyOwner",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "revokeAuthentication",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "addr",
         "identifier": {
          "type": "Identifier",
          "name": "addr"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "contracts"
            },
            "index": {
             "type": "Identifier",
             "name": "addr"
            }
           },
           "right": {
            "type": "BooleanLiteral",
            "value": false
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyOwner",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "registerProxy",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "OwnableDelegateProxy"
         },
         "name": "proxy",
         "identifier": {
          "type": "Identifier",
          "name": "proxy"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "proxies"
              },
              "index": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "msg"
               },
               "memberName": "sender"
              }
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "proxy"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "NewExpression",
             "typeName": {
              "type": "UserDefinedTypeName",
              "namePath": "OwnableDelegateProxy"
             }
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "sender"
             },
             {
              "type": "Identifier",
              "name": "delegateProxyImplementation"
             },
             {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "abi"
               },
               "memberName": "encodeWithSignature"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "initialize(address,address)",
                "parts": [
                 "initialize(address,address)"
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "msg"
                },
                "memberName": "sender"
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "address"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "this"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "proxies"
            },
            "index": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            }
           },
           "right": {
            "type": "Identifier",
            "name": "proxy"
           }
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "proxy"
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-SeaportProtocol/seaport-f17082fca3e99b409f53040d8858e84b0246aa22/contracts/test/wyvern/Proxy.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.4.13"
    },
    {
     "type": "ContractDefinition",
     "name": "Proxy",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "implementation",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "proxyType",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "proxyTypeId",
         "identifier": {
          "type": "Identifier",
          "name": "proxyTypeId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "_impl",
            "identifier": {
             "type": "Identifier",
             "name": "_impl"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "implementation"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "_impl"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "ptr"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "HexNumber",
                "value": "0x40"
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "calldatacopy",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "ptr",
               "arguments": []
              },
              {
               "type": "DecimalNumber",
               "value": "0"
              },
              {
               "type": "AssemblyCall",
               "functionName": "calldatasize",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "result"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "delegatecall",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "gas",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "_impl",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "ptr",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "calldatasize",
                "arguments": []
               },
               {
                "type": "DecimalNumber",
                "value": "0"
               },
               {
                "type": "DecimalNumber",
                "value": "0"
               }
              ]
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "size"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "returndatasize",
              "arguments": []
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "returndatacopy",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "ptr",
               "arguments": []
              },
              {
               "type": "DecimalNumber",
               "value": "0"
              },
              {
               "type": "AssemblyCall",
               "functionName": "size",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblySwitch",
             "expression": {
              "type": "AssemblyCall",
              "functionName": "result",
              "arguments": []
             },
             "cases": [
              {
               "type": "AssemblyCase",
               "block": {
                "type": "AssemblyBlock",
                "operations": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "revert",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "ptr",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "size",
                    "arguments": []
                   }
                  ]
                 }
                ]
               },
               "value": {
                "type": "DecimalNumber",
                "value": "0"
               },
               "default": false
              },
              {
               "type": "AssemblyCase",
               "block": {
                "type": "AssemblyBlock",
                "operations": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "return",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "ptr",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "size",
                    "arguments": []
                   }
                  ]
                 }
                ]
               },
               "value": null,
               "default": true
              }
             ]
            }
           ]
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": true,
       "isVirtual": false,
       "stateMutability": "payable"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-SeaportProtocol/seaport-f17082fca3e99b409f53040d8858e84b0246aa22/contracts/test/wyvern/OwnedUpgradeabilityStorage.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.4.13"
    },
    {
     "type": "ContractDefinition",
     "name": "OwnedUpgradeabilityStorage",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_implementation",
         "identifier": {
          "type": "Identifier",
          "name": "_implementation"
         },
         "expression": null,
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_upgradeabilityOwner",
         "identifier": {
          "type": "Identifier",
          "name": "_upgradeabilityOwner"
         },
         "expression": null,
         "visibility": "private",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "FunctionDefinition",
       "name": "upgradeabilityOwner",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "_upgradeabilityOwner"
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "setUpgradeabilityOwner",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "newUpgradeabilityOwner",
         "identifier": {
          "type": "Identifier",
          "name": "newUpgradeabilityOwner"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "_upgradeabilityOwner"
           },
           "right": {
            "type": "Identifier",
            "name": "newUpgradeabilityOwner"
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "implementation",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "_implementation"
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "proxyType",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "proxyTypeId",
         "identifier": {
          "type": "Identifier",
          "name": "proxyTypeId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "NumberLiteral",
           "number": "2",
           "subdenomination": null
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-SeaportProtocol/seaport-f17082fca3e99b409f53040d8858e84b0246aa22/contracts/test/wyvern/OwnedUpgradeabilityProxy.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.4.13"
    },
    {
     "type": "ImportDirective",
     "path": "./Proxy.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./Proxy.sol",
      "parts": [
       "./Proxy.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./OwnedUpgradeabilityStorage.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./OwnedUpgradeabilityStorage.sol",
      "parts": [
       "./OwnedUpgradeabilityStorage.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "OwnedUpgradeabilityProxy",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "Proxy"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "OwnedUpgradeabilityStorage"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "EventDefinition",
       "name": "ProxyOwnershipTransferred",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "previousOwner",
         "identifier": {
          "type": "Identifier",
          "name": "previousOwner"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "newOwner",
         "identifier": {
          "type": "Identifier",
          "name": "newOwner"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "Upgraded",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "implementation",
         "identifier": {
          "type": "Identifier",
          "name": "implementation"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "FunctionDefinition",
       "name": "_upgradeTo",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "implementation",
         "identifier": {
          "type": "Identifier",
          "name": "implementation"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "_implementation"
             },
             "right": {
              "type": "Identifier",
              "name": "implementation"
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "_implementation"
           },
           "right": {
            "type": "Identifier",
            "name": "implementation"
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "Upgraded"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "implementation"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "ModifierDefinition",
       "name": "onlyProxyOwner",
       "parameters": [],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "sender"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "proxyOwner"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "_"
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "FunctionDefinition",
       "name": "proxyOwner",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "upgradeabilityOwner"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "transferProxyOwnership",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "newOwner",
         "identifier": {
          "type": "Identifier",
          "name": "newOwner"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "newOwner"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "ProxyOwnershipTransferred"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "proxyOwner"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "newOwner"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUpgradeabilityOwner"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "newOwner"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyProxyOwner",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "upgradeTo",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "implementation",
         "identifier": {
          "type": "Identifier",
          "name": "implementation"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_upgradeTo"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "implementation"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyProxyOwner",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "upgradeToAndCall",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "implementation",
         "identifier": {
          "type": "Identifier",
          "name": "implementation"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "upgradeTo"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "implementation"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "address"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "this"
                }
               ],
               "names": [],
               "identifiers": []
              },
              "memberName": "delegatecall"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "data"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyProxyOwner",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-SeaportProtocol/seaport-f17082fca3e99b409f53040d8858e84b0246aa22/contracts/test/wyvern/OwnableDelegateProxy.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.4.13"
    },
    {
     "type": "ImportDirective",
     "path": "./OwnedUpgradeabilityProxy.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./OwnedUpgradeabilityProxy.sol",
      "parts": [
       "./OwnedUpgradeabilityProxy.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "OwnableDelegateProxy",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "OwnedUpgradeabilityProxy"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "owner",
         "identifier": {
          "type": "Identifier",
          "name": "owner"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "initialImplementation",
         "identifier": {
          "type": "Identifier",
          "name": "initialImplementation"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "setUpgradeabilityOwner"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "owner"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_upgradeTo"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "initialImplementation"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "initialImplementation"
              },
              "memberName": "delegatecall"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "calldata"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-SeaportProtocol/seaport-f17082fca3e99b409f53040d8858e84b0246aa22/contracts/test/wyvern/Ownable.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.4.13"
    },
    {
     "type": "ContractDefinition",
     "name": "Ownable",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "owner",
         "identifier": {
          "type": "Identifier",
          "name": "owner"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "EventDefinition",
       "name": "OwnershipRenounced",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "previousOwner",
         "identifier": {
          "type": "Identifier",
          "name": "previousOwner"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "OwnershipTransferred",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "previousOwner",
         "identifier": {
          "type": "Identifier",
          "name": "previousOwner"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "newOwner",
         "identifier": {
          "type": "Identifier",
          "name": "newOwner"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "owner"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "msg"
            },
            "memberName": "sender"
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "ModifierDefinition",
       "name": "onlyOwner",
       "parameters": [],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "sender"
             },
             "right": {
              "type": "Identifier",
              "name": "owner"
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "Identifier",
           "name": "_"
          }
         }
        ]
       },
       "isVirtual": false,
       "override": null
      },
      {
       "type": "FunctionDefinition",
       "name": "transferOwnership",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "newOwner",
         "identifier": {
          "type": "Identifier",
          "name": "newOwner"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "Identifier",
              "name": "newOwner"
             },
             "right": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "address"
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "OwnershipTransferred"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "owner"
            },
            {
             "type": "Identifier",
             "name": "newOwner"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "owner"
           },
           "right": {
            "type": "Identifier",
            "name": "newOwner"
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyOwner",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "renounceOwnership",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "OwnershipRenounced"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "owner"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "owner"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "address"
            },
            "arguments": [
             {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "onlyOwner",
         "arguments": null
        }
       ],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-SeaportProtocol/seaport-f17082fca3e99b409f53040d8858e84b0246aa22/contracts/test/wyvern/ERC20Basic.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.4.13"
    },
    {
     "type": "ContractDefinition",
     "name": "ERC20Basic",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "totalSupply",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "balanceOf",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "who",
         "identifier": {
          "type": "Identifier",
          "name": "who"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "transfer",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "to",
         "identifier": {
          "type": "Identifier",
          "name": "to"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "value",
         "identifier": {
          "type": "Identifier",
          "name": "value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "EventDefinition",
       "name": "Transfer",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "from",
         "identifier": {
          "type": "Identifier",
          "name": "from"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "to",
         "identifier": {
          "type": "Identifier",
          "name": "to"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "value",
         "identifier": {
          "type": "Identifier",
          "name": "value"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-SeaportProtocol/seaport-f17082fca3e99b409f53040d8858e84b0246aa22/contracts/test/wyvern/ERC20.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.4.13"
    },
    {
     "type": "ImportDirective",
     "path": "./ERC20Basic.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./ERC20Basic.sol",
      "parts": [
       "./ERC20Basic.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "ERC20",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ERC20Basic"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "allowance",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "owner",
         "identifier": {
          "type": "Identifier",
          "name": "owner"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "spender",
         "identifier": {
          "type": "Identifier",
          "name": "spender"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "transferFrom",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "from",
         "identifier": {
          "type": "Identifier",
          "name": "from"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "to",
         "identifier": {
          "type": "Identifier",
          "name": "to"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "value",
         "identifier": {
          "type": "Identifier",
          "name": "value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "approve",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "spender",
         "identifier": {
          "type": "Identifier",
          "name": "spender"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "value",
         "identifier": {
          "type": "Identifier",
          "name": "value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "EventDefinition",
       "name": "Approval",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "owner",
         "identifier": {
          "type": "Identifier",
          "name": "owner"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "spender",
         "identifier": {
          "type": "Identifier",
          "name": "spender"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "value",
         "identifier": {
          "type": "Identifier",
          "name": "value"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-SeaportProtocol/seaport-f17082fca3e99b409f53040d8858e84b0246aa22/contracts/test/wyvern/AuthenticatedProxy.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "^0.4.13"
    },
    {
     "type": "ImportDirective",
     "path": "./ProxyRegistry.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./ProxyRegistry.sol",
      "parts": [
       "./ProxyRegistry.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./TokenRecipient.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./TokenRecipient.sol",
      "parts": [
       "./TokenRecipient.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ImportDirective",
     "path": "./OwnedUpgradeabilityStorage.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./OwnedUpgradeabilityStorage.sol",
      "parts": [
       "./OwnedUpgradeabilityStorage.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "AuthenticatedProxy",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "TokenRecipient"
       },
       "arguments": []
      },
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "OwnedUpgradeabilityStorage"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "initialized",
         "identifier": {
          "type": "Identifier",
          "name": "initialized"
         },
         "expression": {
          "type": "BooleanLiteral",
          "value": false
         },
         "visibility": "default",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "BooleanLiteral",
        "value": false
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "user",
         "identifier": {
          "type": "Identifier",
          "name": "user"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "ProxyRegistry"
         },
         "name": "registry",
         "identifier": {
          "type": "Identifier",
          "name": "registry"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "revoked",
         "identifier": {
          "type": "Identifier",
          "name": "revoked"
         },
         "expression": null,
         "visibility": "public",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "EnumDefinition",
       "name": "HowToCall",
       "members": [
        {
         "type": "EnumValue",
         "name": "Call"
        },
        {
         "type": "EnumValue",
         "name": "DelegateCall"
        }
       ]
      },
      {
       "type": "EventDefinition",
       "name": "Revoked",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "revoked",
         "identifier": {
          "type": "Identifier",
          "name": "revoked"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "FunctionDefinition",
       "name": "initialize",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "addrUser",
         "identifier": {
          "type": "Identifier",
          "name": "addrUser"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "ProxyRegistry"
         },
         "name": "addrRegistry",
         "identifier": {
          "type": "Identifier",
          "name": "addrRegistry"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "UnaryOperation",
             "operator": "!",
             "subExpression": {
              "type": "Identifier",
              "name": "initialized"
             },
             "isPrefix": true
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "initialized"
           },
           "right": {
            "type": "BooleanLiteral",
            "value": true
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "user"
           },
           "right": {
            "type": "Identifier",
            "name": "addrUser"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "registry"
           },
           "right": {
            "type": "Identifier",
            "name": "addrRegistry"
           }
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "setRevoke",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "revoke",
         "identifier": {
          "type": "Identifier",
          "name": "revoke"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "sender"
             },
             "right": {
              "type": "Identifier",
              "name": "user"
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "revoked"
           },
           "right": {
            "type": "Identifier",
            "name": "revoke"
           }
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "Revoked"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "revoke"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "proxy",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "dest",
         "identifier": {
          "type": "Identifier",
          "name": "dest"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "HowToCall"
         },
         "name": "howToCall",
         "identifier": {
          "type": "Identifier",
          "name": "howToCall"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "result",
         "identifier": {
          "type": "Identifier",
          "name": "result"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "||",
             "left": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "msg"
               },
               "memberName": "sender"
              },
              "right": {
               "type": "Identifier",
               "name": "user"
              }
             },
             "right": {
              "type": "TupleExpression",
              "components": [
               {
                "type": "BinaryOperation",
                "operator": "&&",
                "left": {
                 "type": "UnaryOperation",
                 "operator": "!",
                 "subExpression": {
                  "type": "Identifier",
                  "name": "revoked"
                 },
                 "isPrefix": true
                },
                "right": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "registry"
                  },
                  "memberName": "contracts"
                 },
                 "arguments": [
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "msg"
                   },
                   "memberName": "sender"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ],
              "isArray": false
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "howToCall"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "HowToCall"
            },
            "memberName": "Call"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "result"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "dest"
                },
                "memberName": "call"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "calldata"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          },
          "falseBody": {
           "type": "IfStatement",
           "condition": {
            "type": "BinaryOperation",
            "operator": "==",
            "left": {
             "type": "Identifier",
             "name": "howToCall"
            },
            "right": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "HowToCall"
             },
             "memberName": "DelegateCall"
            }
           },
           "trueBody": {
            "type": "Block",
            "statements": [
             {
              "type": "ExpressionStatement",
              "expression": {
               "type": "BinaryOperation",
               "operator": "=",
               "left": {
                "type": "Identifier",
                "name": "result"
               },
               "right": {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "dest"
                 },
                 "memberName": "delegatecall"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "calldata"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              }
             }
            ]
           },
           "falseBody": null
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "result"
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "proxyAssert",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "dest",
         "identifier": {
          "type": "Identifier",
          "name": "dest"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "HowToCall"
         },
         "name": "howToCall",
         "identifier": {
          "type": "Identifier",
          "name": "howToCall"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "require"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "proxy"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "dest"
              },
              {
               "type": "Identifier",
               "name": "howToCall"
              },
              {
               "type": "Identifier",
               "name": "calldata"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "public",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-SeaportProtocol/seaport-f17082fca3e99b409f53040d8858e84b0246aa22/contracts/lib/ConsiderationStructs.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.13"
    },
    {
     "type": "ImportDirective",
     "path": "./ConsiderationEnums.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./ConsiderationEnums.sol",
      "parts": [
       "./ConsiderationEnums.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "OrderType",
       null
      ],
      [
       "BasicOrderType",
       null
      ],
      [
       "ItemType",
       null
      ],
      [
       "Side",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "OrderType"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "BasicOrderType"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "ItemType"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "Side"
       },
       null
      ]
     ]
    },
    {
     "type": "StructDefinition",
     "name": "OrderComponents",
     "members": [
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "address",
        "stateMutability": null
       },
       "name": "offerer",
       "identifier": {
        "type": "Identifier",
        "name": "offerer"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "address",
        "stateMutability": null
       },
       "name": "zone",
       "identifier": {
        "type": "Identifier",
        "name": "zone"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ArrayTypeName",
        "baseTypeName": {
         "type": "UserDefinedTypeName",
         "namePath": "OfferItem"
        },
        "length": null
       },
       "name": "offer",
       "identifier": {
        "type": "Identifier",
        "name": "offer"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ArrayTypeName",
        "baseTypeName": {
         "type": "UserDefinedTypeName",
         "namePath": "ConsiderationItem"
        },
        "length": null
       },
       "name": "consideration",
       "identifier": {
        "type": "Identifier",
        "name": "consideration"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "OrderType"
       },
       "name": "orderType",
       "identifier": {
        "type": "Identifier",
        "name": "orderType"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "startTime",
       "identifier": {
        "type": "Identifier",
        "name": "startTime"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "endTime",
       "identifier": {
        "type": "Identifier",
        "name": "endTime"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "bytes32",
        "stateMutability": null
       },
       "name": "zoneHash",
       "identifier": {
        "type": "Identifier",
        "name": "zoneHash"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "salt",
       "identifier": {
        "type": "Identifier",
        "name": "salt"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "address",
        "stateMutability": null
       },
       "name": "conduit",
       "identifier": {
        "type": "Identifier",
        "name": "conduit"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "nonce",
       "identifier": {
        "type": "Identifier",
        "name": "nonce"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      }
     ]
    },
    {
     "type": "StructDefinition",
     "name": "OfferItem",
     "members": [
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "ItemType"
       },
       "name": "itemType",
       "identifier": {
        "type": "Identifier",
        "name": "itemType"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "address",
        "stateMutability": null
       },
       "name": "token",
       "identifier": {
        "type": "Identifier",
        "name": "token"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "identifierOrCriteria",
       "identifier": {
        "type": "Identifier",
        "name": "identifierOrCriteria"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "startAmount",
       "identifier": {
        "type": "Identifier",
        "name": "startAmount"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "endAmount",
       "identifier": {
        "type": "Identifier",
        "name": "endAmount"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      }
     ]
    },
    {
     "type": "StructDefinition",
     "name": "ConsiderationItem",
     "members": [
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "ItemType"
       },
       "name": "itemType",
       "identifier": {
        "type": "Identifier",
        "name": "itemType"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "address",
        "stateMutability": null
       },
       "name": "token",
       "identifier": {
        "type": "Identifier",
        "name": "token"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "identifierOrCriteria",
       "identifier": {
        "type": "Identifier",
        "name": "identifierOrCriteria"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "startAmount",
       "identifier": {
        "type": "Identifier",
        "name": "startAmount"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "endAmount",
       "identifier": {
        "type": "Identifier",
        "name": "endAmount"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "address",
        "stateMutability": "payable"
       },
       "name": "recipient",
       "identifier": {
        "type": "Identifier",
        "name": "recipient"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      }
     ]
    },
    {
     "type": "StructDefinition",
     "name": "SpentItem",
     "members": [
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "ItemType"
       },
       "name": "itemType",
       "identifier": {
        "type": "Identifier",
        "name": "itemType"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "address",
        "stateMutability": null
       },
       "name": "token",
       "identifier": {
        "type": "Identifier",
        "name": "token"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "identifier",
       "identifier": {
        "type": "Identifier",
        "name": "identifier"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "amount",
       "identifier": {
        "type": "Identifier",
        "name": "amount"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      }
     ]
    },
    {
     "type": "StructDefinition",
     "name": "ReceivedItem",
     "members": [
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "ItemType"
       },
       "name": "itemType",
       "identifier": {
        "type": "Identifier",
        "name": "itemType"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "address",
        "stateMutability": null
       },
       "name": "token",
       "identifier": {
        "type": "Identifier",
        "name": "token"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "identifier",
       "identifier": {
        "type": "Identifier",
        "name": "identifier"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "amount",
       "identifier": {
        "type": "Identifier",
        "name": "amount"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "address",
        "stateMutability": "payable"
       },
       "name": "recipient",
       "identifier": {
        "type": "Identifier",
        "name": "recipient"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      }
     ]
    },
    {
     "type": "StructDefinition",
     "name": "BasicOrderParameters",
     "members": [
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "address",
        "stateMutability": null
       },
       "name": "considerationToken",
       "identifier": {
        "type": "Identifier",
        "name": "considerationToken"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "considerationIdentifier",
       "identifier": {
        "type": "Identifier",
        "name": "considerationIdentifier"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "considerationAmount",
       "identifier": {
        "type": "Identifier",
        "name": "considerationAmount"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "address",
        "stateMutability": "payable"
       },
       "name": "offerer",
       "identifier": {
        "type": "Identifier",
        "name": "offerer"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "address",
        "stateMutability": null
       },
       "name": "zone",
       "identifier": {
        "type": "Identifier",
        "name": "zone"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "address",
        "stateMutability": null
       },
       "name": "offerToken",
       "identifier": {
        "type": "Identifier",
        "name": "offerToken"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "offerIdentifier",
       "identifier": {
        "type": "Identifier",
        "name": "offerIdentifier"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "offerAmount",
       "identifier": {
        "type": "Identifier",
        "name": "offerAmount"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "BasicOrderType"
       },
       "name": "basicOrderType",
       "identifier": {
        "type": "Identifier",
        "name": "basicOrderType"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "startTime",
       "identifier": {
        "type": "Identifier",
        "name": "startTime"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "endTime",
       "identifier": {
        "type": "Identifier",
        "name": "endTime"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "bytes32",
        "stateMutability": null
       },
       "name": "zoneHash",
       "identifier": {
        "type": "Identifier",
        "name": "zoneHash"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "salt",
       "identifier": {
        "type": "Identifier",
        "name": "salt"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "address",
        "stateMutability": null
       },
       "name": "offererConduit",
       "identifier": {
        "type": "Identifier",
        "name": "offererConduit"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "address",
        "stateMutability": null
       },
       "name": "fulfillerConduit",
       "identifier": {
        "type": "Identifier",
        "name": "fulfillerConduit"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "totalOriginalAdditionalRecipients",
       "identifier": {
        "type": "Identifier",
        "name": "totalOriginalAdditionalRecipients"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ArrayTypeName",
        "baseTypeName": {
         "type": "UserDefinedTypeName",
         "namePath": "AdditionalRecipient"
        },
        "length": null
       },
       "name": "additionalRecipients",
       "identifier": {
        "type": "Identifier",
        "name": "additionalRecipients"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "bytes",
        "stateMutability": null
       },
       "name": "signature",
       "identifier": {
        "type": "Identifier",
        "name": "signature"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      }
     ]
    },
    {
     "type": "StructDefinition",
     "name": "AdditionalRecipient",
     "members": [
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "amount",
       "identifier": {
        "type": "Identifier",
        "name": "amount"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "address",
        "stateMutability": "payable"
       },
       "name": "recipient",
       "identifier": {
        "type": "Identifier",
        "name": "recipient"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      }
     ]
    },
    {
     "type": "StructDefinition",
     "name": "OrderParameters",
     "members": [
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "address",
        "stateMutability": null
       },
       "name": "offerer",
       "identifier": {
        "type": "Identifier",
        "name": "offerer"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "address",
        "stateMutability": null
       },
       "name": "zone",
       "identifier": {
        "type": "Identifier",
        "name": "zone"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ArrayTypeName",
        "baseTypeName": {
         "type": "UserDefinedTypeName",
         "namePath": "OfferItem"
        },
        "length": null
       },
       "name": "offer",
       "identifier": {
        "type": "Identifier",
        "name": "offer"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ArrayTypeName",
        "baseTypeName": {
         "type": "UserDefinedTypeName",
         "namePath": "ConsiderationItem"
        },
        "length": null
       },
       "name": "consideration",
       "identifier": {
        "type": "Identifier",
        "name": "consideration"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "OrderType"
       },
       "name": "orderType",
       "identifier": {
        "type": "Identifier",
        "name": "orderType"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "startTime",
       "identifier": {
        "type": "Identifier",
        "name": "startTime"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "endTime",
       "identifier": {
        "type": "Identifier",
        "name": "endTime"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "bytes32",
        "stateMutability": null
       },
       "name": "zoneHash",
       "identifier": {
        "type": "Identifier",
        "name": "zoneHash"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "salt",
       "identifier": {
        "type": "Identifier",
        "name": "salt"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "address",
        "stateMutability": null
       },
       "name": "conduit",
       "identifier": {
        "type": "Identifier",
        "name": "conduit"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "totalOriginalConsiderationItems",
       "identifier": {
        "type": "Identifier",
        "name": "totalOriginalConsiderationItems"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      }
     ]
    },
    {
     "type": "StructDefinition",
     "name": "Order",
     "members": [
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "OrderParameters"
       },
       "name": "parameters",
       "identifier": {
        "type": "Identifier",
        "name": "parameters"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "bytes",
        "stateMutability": null
       },
       "name": "signature",
       "identifier": {
        "type": "Identifier",
        "name": "signature"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      }
     ]
    },
    {
     "type": "StructDefinition",
     "name": "AdvancedOrder",
     "members": [
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "OrderParameters"
       },
       "name": "parameters",
       "identifier": {
        "type": "Identifier",
        "name": "parameters"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint120",
        "stateMutability": null
       },
       "name": "numerator",
       "identifier": {
        "type": "Identifier",
        "name": "numerator"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint120",
        "stateMutability": null
       },
       "name": "denominator",
       "identifier": {
        "type": "Identifier",
        "name": "denominator"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "bytes",
        "stateMutability": null
       },
       "name": "signature",
       "identifier": {
        "type": "Identifier",
        "name": "signature"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "bytes",
        "stateMutability": null
       },
       "name": "extraData",
       "identifier": {
        "type": "Identifier",
        "name": "extraData"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      }
     ]
    },
    {
     "type": "StructDefinition",
     "name": "OrderStatus",
     "members": [
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "bool",
        "stateMutability": null
       },
       "name": "isValidated",
       "identifier": {
        "type": "Identifier",
        "name": "isValidated"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "bool",
        "stateMutability": null
       },
       "name": "isCancelled",
       "identifier": {
        "type": "Identifier",
        "name": "isCancelled"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint120",
        "stateMutability": null
       },
       "name": "numerator",
       "identifier": {
        "type": "Identifier",
        "name": "numerator"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint120",
        "stateMutability": null
       },
       "name": "denominator",
       "identifier": {
        "type": "Identifier",
        "name": "denominator"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      }
     ]
    },
    {
     "type": "StructDefinition",
     "name": "CriteriaResolver",
     "members": [
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "orderIndex",
       "identifier": {
        "type": "Identifier",
        "name": "orderIndex"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "Side"
       },
       "name": "side",
       "identifier": {
        "type": "Identifier",
        "name": "side"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "index",
       "identifier": {
        "type": "Identifier",
        "name": "index"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "identifier",
       "identifier": {
        "type": "Identifier",
        "name": "identifier"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ArrayTypeName",
        "baseTypeName": {
         "type": "ElementaryTypeName",
         "name": "bytes32",
         "stateMutability": null
        },
        "length": null
       },
       "name": "criteriaProof",
       "identifier": {
        "type": "Identifier",
        "name": "criteriaProof"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      }
     ]
    },
    {
     "type": "StructDefinition",
     "name": "Fulfillment",
     "members": [
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ArrayTypeName",
        "baseTypeName": {
         "type": "UserDefinedTypeName",
         "namePath": "FulfillmentComponent"
        },
        "length": null
       },
       "name": "offerComponents",
       "identifier": {
        "type": "Identifier",
        "name": "offerComponents"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ArrayTypeName",
        "baseTypeName": {
         "type": "UserDefinedTypeName",
         "namePath": "FulfillmentComponent"
        },
        "length": null
       },
       "name": "considerationComponents",
       "identifier": {
        "type": "Identifier",
        "name": "considerationComponents"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      }
     ]
    },
    {
     "type": "StructDefinition",
     "name": "FulfillmentComponent",
     "members": [
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "orderIndex",
       "identifier": {
        "type": "Identifier",
        "name": "orderIndex"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "uint256",
        "stateMutability": null
       },
       "name": "itemIndex",
       "identifier": {
        "type": "Identifier",
        "name": "itemIndex"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      }
     ]
    },
    {
     "type": "StructDefinition",
     "name": "Execution",
     "members": [
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "UserDefinedTypeName",
        "namePath": "ReceivedItem"
       },
       "name": "item",
       "identifier": {
        "type": "Identifier",
        "name": "item"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "address",
        "stateMutability": null
       },
       "name": "offerer",
       "identifier": {
        "type": "Identifier",
        "name": "offerer"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "address",
        "stateMutability": null
       },
       "name": "conduit",
       "identifier": {
        "type": "Identifier",
        "name": "conduit"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      }
     ]
    },
    {
     "type": "StructDefinition",
     "name": "BatchExecution",
     "members": [
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "address",
        "stateMutability": null
       },
       "name": "token",
       "identifier": {
        "type": "Identifier",
        "name": "token"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "address",
        "stateMutability": null
       },
       "name": "from",
       "identifier": {
        "type": "Identifier",
        "name": "from"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "address",
        "stateMutability": null
       },
       "name": "to",
       "identifier": {
        "type": "Identifier",
        "name": "to"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ArrayTypeName",
        "baseTypeName": {
         "type": "ElementaryTypeName",
         "name": "uint256",
         "stateMutability": null
        },
        "length": null
       },
       "name": "tokenIds",
       "identifier": {
        "type": "Identifier",
        "name": "tokenIds"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ArrayTypeName",
        "baseTypeName": {
         "type": "ElementaryTypeName",
         "name": "uint256",
         "stateMutability": null
        },
        "length": null
       },
       "name": "amounts",
       "identifier": {
        "type": "Identifier",
        "name": "amounts"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "address",
        "stateMutability": null
       },
       "name": "conduit",
       "identifier": {
        "type": "Identifier",
        "name": "conduit"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      }
     ]
    },
    {
     "type": "StructDefinition",
     "name": "Batch",
     "members": [
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ElementaryTypeName",
        "name": "bytes32",
        "stateMutability": null
       },
       "name": "hash",
       "identifier": {
        "type": "Identifier",
        "name": "hash"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      },
      {
       "type": "VariableDeclaration",
       "typeName": {
        "type": "ArrayTypeName",
        "baseTypeName": {
         "type": "ElementaryTypeName",
         "name": "uint256",
         "stateMutability": null
        },
        "length": null
       },
       "name": "executionIndices",
       "identifier": {
        "type": "Identifier",
        "name": "executionIndices"
       },
       "storageLocation": null,
       "isStateVar": false,
       "isIndexed": false,
       "expression": null
      }
     ]
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-SeaportProtocol/seaport-f17082fca3e99b409f53040d8858e84b0246aa22/contracts/lib/ConsiderationPure.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.13"
    },
    {
     "type": "ImportDirective",
     "path": "./ConsiderationEnums.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./ConsiderationEnums.sol",
      "parts": [
       "./ConsiderationEnums.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "OrderType",
       null
      ],
      [
       "ItemType",
       null
      ],
      [
       "Side",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "OrderType"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "ItemType"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "Side"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "./ConsiderationStructs.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./ConsiderationStructs.sol",
      "parts": [
       "./ConsiderationStructs.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "OfferItem",
       null
      ],
      [
       "ConsiderationItem",
       null
      ],
      [
       "SpentItem",
       null
      ],
      [
       "ReceivedItem",
       null
      ],
      [
       "OrderParameters",
       null
      ],
      [
       "Fulfillment",
       null
      ],
      [
       "FulfillmentComponent",
       null
      ],
      [
       "Execution",
       null
      ],
      [
       "Order",
       null
      ],
      [
       "AdvancedOrder",
       null
      ],
      [
       "OrderStatus",
       null
      ],
      [
       "CriteriaResolver",
       null
      ],
      [
       "Batch",
       null
      ],
      [
       "BatchExecution",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "OfferItem"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "ConsiderationItem"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "SpentItem"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "ReceivedItem"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "OrderParameters"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "Fulfillment"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "FulfillmentComponent"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "Execution"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "Order"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "AdvancedOrder"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "OrderStatus"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "CriteriaResolver"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "Batch"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "BatchExecution"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "../interfaces/ZoneInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../interfaces/ZoneInterface.sol",
      "parts": [
       "../interfaces/ZoneInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "ZoneInterface",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "ZoneInterface"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "./ConsiderationBase.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./ConsiderationBase.sol",
      "parts": [
       "./ConsiderationBase.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "ConsiderationBase",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "ConsiderationBase"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "./ConsiderationConstants.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./ConsiderationConstants.sol",
      "parts": [
       "./ConsiderationConstants.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "ConsiderationPure",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ConsiderationBase"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "legacyProxyRegistry",
         "identifier": {
          "type": "Identifier",
          "name": "legacyProxyRegistry"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "legacyTokenTransferProxy",
         "identifier": {
          "type": "Identifier",
          "name": "legacyTokenTransferProxy"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "requiredProxyImplementation",
         "identifier": {
          "type": "Identifier",
          "name": "requiredProxyImplementation"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": []
       },
       "visibility": "default",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "ConsiderationBase",
         "arguments": [
          {
           "type": "Identifier",
           "name": "legacyProxyRegistry"
          },
          {
           "type": "Identifier",
           "name": "legacyTokenTransferProxy"
          },
          {
           "type": "Identifier",
           "name": "requiredProxyImplementation"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_applyCriteriaResolvers",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "AdvancedOrder"
          },
          "length": null
         },
         "name": "advancedOrders",
         "identifier": {
          "type": "Identifier",
          "name": "advancedOrders"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "CriteriaResolver"
          },
          "length": null
         },
         "name": "criteriaResolvers",
         "identifier": {
          "type": "Identifier",
          "name": "criteriaResolvers"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "UncheckedStatement",
          "block": {
           "type": "Block",
           "statements": [
            {
             "type": "ForStatement",
             "initExpression": {
              "type": "VariableDeclarationStatement",
              "variables": [
               {
                "type": "VariableDeclaration",
                "typeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "name": "i",
                "identifier": {
                 "type": "Identifier",
                 "name": "i"
                },
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false,
                "expression": null
               }
              ],
              "initialValue": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "conditionExpression": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "i"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "criteriaResolvers"
               },
               "memberName": "length"
              }
             },
             "loopExpression": {
              "type": "ExpressionStatement",
              "expression": {
               "type": "UnaryOperation",
               "operator": "++",
               "subExpression": {
                "type": "Identifier",
                "name": "i"
               },
               "isPrefix": true
              }
             },
             "body": {
              "type": "Block",
              "statements": [
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "UserDefinedTypeName",
                   "namePath": "CriteriaResolver"
                  },
                  "name": "criteriaResolver",
                  "identifier": {
                   "type": "Identifier",
                   "name": "criteriaResolver"
                  },
                  "storageLocation": "memory",
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "criteriaResolvers"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "i"
                 }
                }
               },
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "ElementaryTypeName",
                   "name": "uint256",
                   "stateMutability": null
                  },
                  "name": "orderIndex",
                  "identifier": {
                   "type": "Identifier",
                   "name": "orderIndex"
                  },
                  "storageLocation": null,
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "criteriaResolver"
                 },
                 "memberName": "orderIndex"
                }
               },
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": ">=",
                 "left": {
                  "type": "Identifier",
                  "name": "orderIndex"
                 },
                 "right": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "advancedOrders"
                  },
                  "memberName": "length"
                 }
                },
                "trueBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "RevertStatement",
                   "revertCall": {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "Identifier",
                     "name": "OrderCriteriaResolverOutOfRange"
                    },
                    "arguments": [],
                    "names": [],
                    "identifiers": []
                   }
                  }
                 ]
                },
                "falseBody": null
               },
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "==",
                 "left": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "IndexAccess",
                   "base": {
                    "type": "Identifier",
                    "name": "advancedOrders"
                   },
                   "index": {
                    "type": "Identifier",
                    "name": "orderIndex"
                   }
                  },
                  "memberName": "numerator"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                 }
                },
                "trueBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "ContinueStatement"
                  }
                 ]
                },
                "falseBody": null
               },
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "UserDefinedTypeName",
                   "namePath": "OrderParameters"
                  },
                  "name": "orderParameters",
                  "identifier": {
                   "type": "Identifier",
                   "name": "orderParameters"
                  },
                  "storageLocation": "memory",
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "TupleExpression",
                 "components": [
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "IndexAccess",
                    "base": {
                     "type": "Identifier",
                     "name": "advancedOrders"
                    },
                    "index": {
                     "type": "Identifier",
                     "name": "orderIndex"
                    }
                   },
                   "memberName": "parameters"
                  }
                 ],
                 "isArray": false
                }
               },
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "ElementaryTypeName",
                   "name": "uint256",
                   "stateMutability": null
                  },
                  "name": "componentIndex",
                  "identifier": {
                   "type": "Identifier",
                   "name": "componentIndex"
                  },
                  "storageLocation": null,
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "criteriaResolver"
                 },
                 "memberName": "index"
                }
               },
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "UserDefinedTypeName",
                   "namePath": "ItemType"
                  },
                  "name": "itemType",
                  "identifier": {
                   "type": "Identifier",
                   "name": "itemType"
                  },
                  "storageLocation": null,
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": null
               },
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "ElementaryTypeName",
                   "name": "uint256",
                   "stateMutability": null
                  },
                  "name": "identifierOrCriteria",
                  "identifier": {
                   "type": "Identifier",
                   "name": "identifierOrCriteria"
                  },
                  "storageLocation": null,
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": null
               },
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "==",
                 "left": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "criteriaResolver"
                  },
                  "memberName": "side"
                 },
                 "right": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "Side"
                  },
                  "memberName": "OFFER"
                 }
                },
                "trueBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "IfStatement",
                   "condition": {
                    "type": "BinaryOperation",
                    "operator": ">=",
                    "left": {
                     "type": "Identifier",
                     "name": "componentIndex"
                    },
                    "right": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "Identifier",
                       "name": "orderParameters"
                      },
                      "memberName": "offer"
                     },
                     "memberName": "length"
                    }
                   },
                   "trueBody": {
                    "type": "Block",
                    "statements": [
                     {
                      "type": "RevertStatement",
                      "revertCall": {
                       "type": "FunctionCall",
                       "expression": {
                        "type": "Identifier",
                        "name": "OfferCriteriaResolverOutOfRange"
                       },
                       "arguments": [],
                       "names": [],
                       "identifiers": []
                      }
                     }
                    ]
                   },
                   "falseBody": null
                  },
                  {
                   "type": "VariableDeclarationStatement",
                   "variables": [
                    {
                     "type": "VariableDeclaration",
                     "typeName": {
                      "type": "UserDefinedTypeName",
                      "namePath": "OfferItem"
                     },
                     "name": "offer",
                     "identifier": {
                      "type": "Identifier",
                      "name": "offer"
                     },
                     "storageLocation": "memory",
                     "isStateVar": false,
                     "isIndexed": false,
                     "expression": null
                    }
                   ],
                   "initialValue": {
                    "type": "TupleExpression",
                    "components": [
                     {
                      "type": "IndexAccess",
                      "base": {
                       "type": "MemberAccess",
                       "expression": {
                        "type": "Identifier",
                        "name": "orderParameters"
                       },
                       "memberName": "offer"
                      },
                      "index": {
                       "type": "Identifier",
                       "name": "componentIndex"
                      }
                     }
                    ],
                    "isArray": false
                   }
                  },
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                     "type": "Identifier",
                     "name": "itemType"
                    },
                    "right": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "offer"
                     },
                     "memberName": "itemType"
                    }
                   }
                  },
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                     "type": "Identifier",
                     "name": "identifierOrCriteria"
                    },
                    "right": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "offer"
                     },
                     "memberName": "identifierOrCriteria"
                    }
                   }
                  },
                  {
                   "type": "VariableDeclarationStatement",
                   "variables": [
                    {
                     "type": "VariableDeclaration",
                     "typeName": {
                      "type": "UserDefinedTypeName",
                      "namePath": "ItemType"
                     },
                     "name": "newItemType",
                     "identifier": {
                      "type": "Identifier",
                      "name": "newItemType"
                     },
                     "storageLocation": null,
                     "isStateVar": false,
                     "isIndexed": false,
                     "expression": null
                    }
                   ],
                   "initialValue": null
                  },
                  {
                   "type": "InlineAssemblyStatement",
                   "language": null,
                   "flags": [],
                   "body": {
                    "type": "AssemblyBlock",
                    "operations": [
                     {
                      "type": "AssemblyAssignment",
                      "names": [
                       {
                        "type": "Identifier",
                        "name": "newItemType"
                       }
                      ],
                      "expression": {
                       "type": "AssemblyCall",
                       "functionName": "sub",
                       "arguments": [
                        {
                         "type": "DecimalNumber",
                         "value": "3"
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "eq",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "itemType",
                           "arguments": []
                          },
                          {
                           "type": "DecimalNumber",
                           "value": "4"
                          }
                         ]
                        }
                       ]
                      }
                     }
                    ]
                   }
                  },
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "offer"
                     },
                     "memberName": "itemType"
                    },
                    "right": {
                     "type": "Identifier",
                     "name": "newItemType"
                    }
                   }
                  },
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "offer"
                     },
                     "memberName": "identifierOrCriteria"
                    },
                    "right": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "criteriaResolver"
                     },
                     "memberName": "identifier"
                    }
                   }
                  }
                 ]
                },
                "falseBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "IfStatement",
                   "condition": {
                    "type": "BinaryOperation",
                    "operator": ">=",
                    "left": {
                     "type": "Identifier",
                     "name": "componentIndex"
                    },
                    "right": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "Identifier",
                       "name": "orderParameters"
                      },
                      "memberName": "consideration"
                     },
                     "memberName": "length"
                    }
                   },
                   "trueBody": {
                    "type": "Block",
                    "statements": [
                     {
                      "type": "RevertStatement",
                      "revertCall": {
                       "type": "FunctionCall",
                       "expression": {
                        "type": "Identifier",
                        "name": "ConsiderationCriteriaResolverOutOfRange"
                       },
                       "arguments": [],
                       "names": [],
                       "identifiers": []
                      }
                     }
                    ]
                   },
                   "falseBody": null
                  },
                  {
                   "type": "VariableDeclarationStatement",
                   "variables": [
                    {
                     "type": "VariableDeclaration",
                     "typeName": {
                      "type": "UserDefinedTypeName",
                      "namePath": "ConsiderationItem"
                     },
                     "name": "consideration",
                     "identifier": {
                      "type": "Identifier",
                      "name": "consideration"
                     },
                     "storageLocation": "memory",
                     "isStateVar": false,
                     "isIndexed": false,
                     "expression": null
                    }
                   ],
                   "initialValue": {
                    "type": "TupleExpression",
                    "components": [
                     {
                      "type": "IndexAccess",
                      "base": {
                       "type": "MemberAccess",
                       "expression": {
                        "type": "Identifier",
                        "name": "orderParameters"
                       },
                       "memberName": "consideration"
                      },
                      "index": {
                       "type": "Identifier",
                       "name": "componentIndex"
                      }
                     }
                    ],
                    "isArray": false
                   }
                  },
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                     "type": "Identifier",
                     "name": "itemType"
                    },
                    "right": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "consideration"
                     },
                     "memberName": "itemType"
                    }
                   }
                  },
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                     "type": "Identifier",
                     "name": "identifierOrCriteria"
                    },
                    "right": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "consideration"
                     },
                     "memberName": "identifierOrCriteria"
                    }
                   }
                  },
                  {
                   "type": "VariableDeclarationStatement",
                   "variables": [
                    {
                     "type": "VariableDeclaration",
                     "typeName": {
                      "type": "UserDefinedTypeName",
                      "namePath": "ItemType"
                     },
                     "name": "newItemType",
                     "identifier": {
                      "type": "Identifier",
                      "name": "newItemType"
                     },
                     "storageLocation": null,
                     "isStateVar": false,
                     "isIndexed": false,
                     "expression": null
                    }
                   ],
                   "initialValue": null
                  },
                  {
                   "type": "InlineAssemblyStatement",
                   "language": null,
                   "flags": [],
                   "body": {
                    "type": "AssemblyBlock",
                    "operations": [
                     {
                      "type": "AssemblyAssignment",
                      "names": [
                       {
                        "type": "Identifier",
                        "name": "newItemType"
                       }
                      ],
                      "expression": {
                       "type": "AssemblyCall",
                       "functionName": "sub",
                       "arguments": [
                        {
                         "type": "DecimalNumber",
                         "value": "3"
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "eq",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "itemType",
                           "arguments": []
                          },
                          {
                           "type": "DecimalNumber",
                           "value": "4"
                          }
                         ]
                        }
                       ]
                      }
                     }
                    ]
                   }
                  },
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "consideration"
                     },
                     "memberName": "itemType"
                    },
                    "right": {
                     "type": "Identifier",
                     "name": "newItemType"
                    }
                   }
                  },
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "consideration"
                     },
                     "memberName": "identifierOrCriteria"
                    },
                    "right": {
                     "type": "TupleExpression",
                     "components": [
                      {
                       "type": "MemberAccess",
                       "expression": {
                        "type": "Identifier",
                        "name": "criteriaResolver"
                       },
                       "memberName": "identifier"
                      }
                     ],
                     "isArray": false
                    }
                   }
                  }
                 ]
                }
               },
               {
                "type": "IfStatement",
                "condition": {
                 "type": "UnaryOperation",
                 "operator": "!",
                 "subExpression": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "Identifier",
                   "name": "_isItemWithCriteria"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "itemType"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 },
                 "isPrefix": true
                },
                "trueBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "RevertStatement",
                   "revertCall": {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "Identifier",
                     "name": "CriteriaNotEnabledForItem"
                    },
                    "arguments": [],
                    "names": [],
                    "identifiers": []
                   }
                  }
                 ]
                },
                "falseBody": null
               },
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "!=",
                 "left": {
                  "type": "Identifier",
                  "name": "identifierOrCriteria"
                 },
                 "right": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "ElementaryTypeName",
                   "name": "uint256",
                   "stateMutability": null
                  },
                  "arguments": [
                   {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                },
                "trueBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "Identifier",
                     "name": "_verifyProof"
                    },
                    "arguments": [
                     {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "Identifier",
                       "name": "criteriaResolver"
                      },
                      "memberName": "identifier"
                     },
                     {
                      "type": "Identifier",
                      "name": "identifierOrCriteria"
                     },
                     {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "Identifier",
                       "name": "criteriaResolver"
                      },
                      "memberName": "criteriaProof"
                     }
                    ],
                    "names": [],
                    "identifiers": []
                   }
                  }
                 ]
                },
                "falseBody": null
               }
              ]
             }
            },
            {
             "type": "ForStatement",
             "initExpression": {
              "type": "VariableDeclarationStatement",
              "variables": [
               {
                "type": "VariableDeclaration",
                "typeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "name": "i",
                "identifier": {
                 "type": "Identifier",
                 "name": "i"
                },
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false,
                "expression": null
               }
              ],
              "initialValue": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "conditionExpression": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "i"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "advancedOrders"
               },
               "memberName": "length"
              }
             },
             "loopExpression": {
              "type": "ExpressionStatement",
              "expression": {
               "type": "UnaryOperation",
               "operator": "++",
               "subExpression": {
                "type": "Identifier",
                "name": "i"
               },
               "isPrefix": true
              }
             },
             "body": {
              "type": "Block",
              "statements": [
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "UserDefinedTypeName",
                   "namePath": "AdvancedOrder"
                  },
                  "name": "advancedOrder",
                  "identifier": {
                   "type": "Identifier",
                   "name": "advancedOrder"
                  },
                  "storageLocation": "memory",
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "advancedOrders"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "i"
                 }
                }
               },
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "==",
                 "left": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "advancedOrder"
                  },
                  "memberName": "numerator"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                 }
                },
                "trueBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "ContinueStatement"
                  }
                 ]
                },
                "falseBody": null
               },
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "ElementaryTypeName",
                   "name": "uint256",
                   "stateMutability": null
                  },
                  "name": "totalItems",
                  "identifier": {
                   "type": "Identifier",
                   "name": "totalItems"
                  },
                  "storageLocation": null,
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "TupleExpression",
                 "components": [
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "advancedOrder"
                     },
                     "memberName": "parameters"
                    },
                    "memberName": "consideration"
                   },
                   "memberName": "length"
                  }
                 ],
                 "isArray": false
                }
               },
               {
                "type": "ForStatement",
                "initExpression": {
                 "type": "VariableDeclarationStatement",
                 "variables": [
                  {
                   "type": "VariableDeclaration",
                   "typeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256",
                    "stateMutability": null
                   },
                   "name": "j",
                   "identifier": {
                    "type": "Identifier",
                    "name": "j"
                   },
                   "storageLocation": null,
                   "isStateVar": false,
                   "isIndexed": false,
                   "expression": null
                  }
                 ],
                 "initialValue": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                 }
                },
                "conditionExpression": {
                 "type": "BinaryOperation",
                 "operator": "<",
                 "left": {
                  "type": "Identifier",
                  "name": "j"
                 },
                 "right": {
                  "type": "Identifier",
                  "name": "totalItems"
                 }
                },
                "loopExpression": {
                 "type": "ExpressionStatement",
                 "expression": {
                  "type": "UnaryOperation",
                  "operator": "++",
                  "subExpression": {
                   "type": "Identifier",
                   "name": "j"
                  },
                  "isPrefix": true
                 }
                },
                "body": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "IfStatement",
                   "condition": {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "Identifier",
                     "name": "_isItemWithCriteria"
                    },
                    "arguments": [
                     {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "IndexAccess",
                       "base": {
                        "type": "MemberAccess",
                        "expression": {
                         "type": "MemberAccess",
                         "expression": {
                          "type": "Identifier",
                          "name": "advancedOrder"
                         },
                         "memberName": "parameters"
                        },
                        "memberName": "consideration"
                       },
                       "index": {
                        "type": "Identifier",
                        "name": "j"
                       }
                      },
                      "memberName": "itemType"
                     }
                    ],
                    "names": [],
                    "identifiers": []
                   },
                   "trueBody": {
                    "type": "Block",
                    "statements": [
                     {
                      "type": "RevertStatement",
                      "revertCall": {
                       "type": "FunctionCall",
                       "expression": {
                        "type": "Identifier",
                        "name": "UnresolvedConsiderationCriteria"
                       },
                       "arguments": [],
                       "names": [],
                       "identifiers": []
                      }
                     }
                    ]
                   },
                   "falseBody": null
                  }
                 ]
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "totalItems"
                 },
                 "right": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "advancedOrder"
                    },
                    "memberName": "parameters"
                   },
                   "memberName": "offer"
                  },
                  "memberName": "length"
                 }
                }
               },
               {
                "type": "ForStatement",
                "initExpression": {
                 "type": "VariableDeclarationStatement",
                 "variables": [
                  {
                   "type": "VariableDeclaration",
                   "typeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256",
                    "stateMutability": null
                   },
                   "name": "j",
                   "identifier": {
                    "type": "Identifier",
                    "name": "j"
                   },
                   "storageLocation": null,
                   "isStateVar": false,
                   "isIndexed": false,
                   "expression": null
                  }
                 ],
                 "initialValue": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                 }
                },
                "conditionExpression": {
                 "type": "BinaryOperation",
                 "operator": "<",
                 "left": {
                  "type": "Identifier",
                  "name": "j"
                 },
                 "right": {
                  "type": "Identifier",
                  "name": "totalItems"
                 }
                },
                "loopExpression": {
                 "type": "ExpressionStatement",
                 "expression": {
                  "type": "UnaryOperation",
                  "operator": "++",
                  "subExpression": {
                   "type": "Identifier",
                   "name": "j"
                  },
                  "isPrefix": true
                 }
                },
                "body": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "IfStatement",
                   "condition": {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "Identifier",
                     "name": "_isItemWithCriteria"
                    },
                    "arguments": [
                     {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "IndexAccess",
                       "base": {
                        "type": "MemberAccess",
                        "expression": {
                         "type": "MemberAccess",
                         "expression": {
                          "type": "Identifier",
                          "name": "advancedOrder"
                         },
                         "memberName": "parameters"
                        },
                        "memberName": "offer"
                       },
                       "index": {
                        "type": "Identifier",
                        "name": "j"
                       }
                      },
                      "memberName": "itemType"
                     }
                    ],
                    "names": [],
                    "identifiers": []
                   },
                   "trueBody": {
                    "type": "Block",
                    "statements": [
                     {
                      "type": "RevertStatement",
                      "revertCall": {
                       "type": "FunctionCall",
                       "expression": {
                        "type": "Identifier",
                        "name": "UnresolvedOfferCriteria"
                       },
                       "arguments": [],
                       "names": [],
                       "identifiers": []
                      }
                     }
                    ]
                   },
                   "falseBody": null
                  }
                 ]
                }
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "_locateCurrentAmount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "startAmount",
         "identifier": {
          "type": "Identifier",
          "name": "startAmount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "endAmount",
         "identifier": {
          "type": "Identifier",
          "name": "endAmount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "elapsed",
         "identifier": {
          "type": "Identifier",
          "name": "elapsed"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "remaining",
         "identifier": {
          "type": "Identifier",
          "name": "remaining"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "duration",
         "identifier": {
          "type": "Identifier",
          "name": "duration"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "roundUp",
         "identifier": {
          "type": "Identifier",
          "name": "roundUp"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "Identifier",
            "name": "startAmount"
           },
           "right": {
            "type": "Identifier",
            "name": "endAmount"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "extraCeiling",
               "identifier": {
                "type": "Identifier",
                "name": "extraCeiling"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "Identifier",
              "name": "roundUp"
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "UncheckedStatement",
                "block": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                     "type": "Identifier",
                     "name": "extraCeiling"
                    },
                    "right": {
                     "type": "BinaryOperation",
                     "operator": "-",
                     "left": {
                      "type": "Identifier",
                      "name": "duration"
                     },
                     "right": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                     }
                    }
                   }
                  }
                 ]
                }
               }
              ]
             },
             "falseBody": null
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "totalBeforeDivision",
               "identifier": {
                "type": "Identifier",
                "name": "totalBeforeDivision"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "TupleExpression",
              "components": [
               {
                "type": "BinaryOperation",
                "operator": "+",
                "left": {
                 "type": "BinaryOperation",
                 "operator": "+",
                 "left": {
                  "type": "TupleExpression",
                  "components": [
                   {
                    "type": "BinaryOperation",
                    "operator": "*",
                    "left": {
                     "type": "Identifier",
                     "name": "startAmount"
                    },
                    "right": {
                     "type": "Identifier",
                     "name": "remaining"
                    }
                   }
                  ],
                  "isArray": false
                 },
                 "right": {
                  "type": "TupleExpression",
                  "components": [
                   {
                    "type": "BinaryOperation",
                    "operator": "*",
                    "left": {
                     "type": "Identifier",
                     "name": "endAmount"
                    },
                    "right": {
                     "type": "Identifier",
                     "name": "elapsed"
                    }
                   }
                  ],
                  "isArray": false
                 }
                },
                "right": {
                 "type": "Identifier",
                 "name": "extraCeiling"
                }
               }
              ],
              "isArray": false
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "newAmount",
               "identifier": {
                "type": "Identifier",
                "name": "newAmount"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": null
            },
            {
             "type": "InlineAssemblyStatement",
             "language": null,
             "flags": [],
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyAssignment",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "newAmount"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "div",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "totalBeforeDivision",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "duration",
                   "arguments": []
                  }
                 ]
                }
               }
              ]
             }
            },
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "Identifier",
              "name": "newAmount"
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "endAmount"
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "_getFraction",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "numerator",
         "identifier": {
          "type": "Identifier",
          "name": "numerator"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "denominator",
         "identifier": {
          "type": "Identifier",
          "name": "denominator"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "value",
         "identifier": {
          "type": "Identifier",
          "name": "value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "newValue",
         "identifier": {
          "type": "Identifier",
          "name": "newValue"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "numerator"
           },
           "right": {
            "type": "Identifier",
            "name": "denominator"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "Identifier",
              "name": "value"
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "valueTimesNumerator",
            "identifier": {
             "type": "Identifier",
             "name": "valueTimesNumerator"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "BinaryOperation",
           "operator": "*",
           "left": {
            "type": "Identifier",
            "name": "value"
           },
           "right": {
            "type": "Identifier",
            "name": "numerator"
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bool",
             "stateMutability": null
            },
            "name": "exact",
            "identifier": {
             "type": "Identifier",
             "name": "exact"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "newValue"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "div",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "valueTimesNumerator",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "denominator",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "exact"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "iszero",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "mulmod",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "value",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "numerator",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "denominator",
                  "arguments": []
                 }
                ]
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "UnaryOperation",
           "operator": "!",
           "subExpression": {
            "type": "Identifier",
            "name": "exact"
           },
           "isPrefix": true
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "InexactFraction"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "_compressExecutions",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "Execution"
          },
          "length": null
         },
         "name": "executions",
         "identifier": {
          "type": "Identifier",
          "name": "executions"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "Execution"
          },
          "length": null
         },
         "name": "standardExecutions",
         "identifier": {
          "type": "Identifier",
          "name": "standardExecutions"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "BatchExecution"
          },
          "length": null
         },
         "name": "batchExecutions",
         "identifier": {
          "type": "Identifier",
          "name": "batchExecutions"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "UncheckedStatement",
          "block": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "totalExecutions",
               "identifier": {
                "type": "Identifier",
                "name": "totalExecutions"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "executions"
              },
              "memberName": "length"
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "<=",
              "left": {
               "type": "Identifier",
               "name": "totalExecutions"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ReturnStatement",
                "expression": {
                 "type": "TupleExpression",
                 "components": [
                  {
                   "type": "Identifier",
                   "name": "executions"
                  },
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "NewExpression",
                    "typeName": {
                     "type": "ArrayTypeName",
                     "baseTypeName": {
                      "type": "UserDefinedTypeName",
                      "namePath": "BatchExecution"
                     },
                     "length": null
                    }
                   },
                   "arguments": [
                    {
                     "type": "NumberLiteral",
                     "number": "0",
                     "subdenomination": null
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 ],
                 "isArray": false
                }
               }
              ]
             },
             "falseBody": null
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "total1155Executions",
               "identifier": {
                "type": "Identifier",
                "name": "total1155Executions"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ArrayTypeName",
                "baseTypeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "length": null
               },
               "name": "indexBy1155",
               "identifier": {
                "type": "Identifier",
                "name": "indexBy1155"
               },
               "storageLocation": "memory",
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "NewExpression",
               "typeName": {
                "type": "ArrayTypeName",
                "baseTypeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "length": null
               }
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "totalExecutions"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ForStatement",
             "initExpression": {
              "type": "VariableDeclarationStatement",
              "variables": [
               {
                "type": "VariableDeclaration",
                "typeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "name": "i",
                "identifier": {
                 "type": "Identifier",
                 "name": "i"
                },
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false,
                "expression": null
               }
              ],
              "initialValue": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "conditionExpression": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "i"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "executions"
               },
               "memberName": "length"
              }
             },
             "loopExpression": {
              "type": "ExpressionStatement",
              "expression": {
               "type": "UnaryOperation",
               "operator": "++",
               "subExpression": {
                "type": "Identifier",
                "name": "i"
               },
               "isPrefix": true
              }
             },
             "body": {
              "type": "Block",
              "statements": [
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "==",
                 "left": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "IndexAccess",
                    "base": {
                     "type": "Identifier",
                     "name": "executions"
                    },
                    "index": {
                     "type": "Identifier",
                     "name": "i"
                    }
                   },
                   "memberName": "item"
                  },
                  "memberName": "itemType"
                 },
                 "right": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "ItemType"
                  },
                  "memberName": "ERC1155"
                 }
                },
                "trueBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                     "type": "IndexAccess",
                     "base": {
                      "type": "Identifier",
                      "name": "indexBy1155"
                     },
                     "index": {
                      "type": "UnaryOperation",
                      "operator": "++",
                      "subExpression": {
                       "type": "Identifier",
                       "name": "total1155Executions"
                      },
                      "isPrefix": false
                     }
                    },
                    "right": {
                     "type": "Identifier",
                     "name": "i"
                    }
                   }
                  }
                 ]
                },
                "falseBody": null
               }
              ]
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "<=",
              "left": {
               "type": "Identifier",
               "name": "total1155Executions"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ReturnStatement",
                "expression": {
                 "type": "TupleExpression",
                 "components": [
                  {
                   "type": "Identifier",
                   "name": "executions"
                  },
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "NewExpression",
                    "typeName": {
                     "type": "ArrayTypeName",
                     "baseTypeName": {
                      "type": "UserDefinedTypeName",
                      "namePath": "BatchExecution"
                     },
                     "length": null
                    }
                   },
                   "arguments": [
                    {
                     "type": "NumberLiteral",
                     "number": "0",
                     "subdenomination": null
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 ],
                 "isArray": false
                }
               }
              ]
             },
             "falseBody": null
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ArrayTypeName",
                "baseTypeName": {
                 "type": "UserDefinedTypeName",
                 "namePath": "Batch"
                },
                "length": null
               },
               "name": "batches",
               "identifier": {
                "type": "Identifier",
                "name": "batches"
               },
               "storageLocation": "memory",
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "NewExpression",
               "typeName": {
                "type": "ArrayTypeName",
                "baseTypeName": {
                 "type": "UserDefinedTypeName",
                 "namePath": "Batch"
                },
                "length": null
               }
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "total1155Executions"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "initialExecutionIndex",
               "identifier": {
                "type": "Identifier",
                "name": "initialExecutionIndex"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "indexBy1155"
              },
              "index": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "bytes32",
                "stateMutability": null
               },
               "name": "hash",
               "identifier": {
                "type": "Identifier",
                "name": "hash"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "_getHashByExecutionIndex"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "executions"
               },
               {
                "type": "Identifier",
                "name": "initialExecutionIndex"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ArrayTypeName",
                "baseTypeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "length": null
               },
               "name": "executionIndices",
               "identifier": {
                "type": "Identifier",
                "name": "executionIndices"
               },
               "storageLocation": "memory",
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "NewExpression",
               "typeName": {
                "type": "ArrayTypeName",
                "baseTypeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "length": null
               }
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "1",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "IndexAccess",
               "base": {
                "type": "Identifier",
                "name": "executionIndices"
               },
               "index": {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              },
              "right": {
               "type": "Identifier",
               "name": "initialExecutionIndex"
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "batches"
                },
                "index": {
                 "type": "NumberLiteral",
                 "number": "0",
                 "subdenomination": null
                }
               },
               "memberName": "hash"
              },
              "right": {
               "type": "Identifier",
               "name": "hash"
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "batches"
                },
                "index": {
                 "type": "NumberLiteral",
                 "number": "0",
                 "subdenomination": null
                }
               },
               "memberName": "executionIndices"
              },
              "right": {
               "type": "Identifier",
               "name": "executionIndices"
              }
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "uniqueHashes",
               "identifier": {
                "type": "Identifier",
                "name": "uniqueHashes"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "NumberLiteral",
              "number": "1",
              "subdenomination": null
             }
            },
            {
             "type": "ForStatement",
             "initExpression": {
              "type": "VariableDeclarationStatement",
              "variables": [
               {
                "type": "VariableDeclaration",
                "typeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "name": "i",
                "identifier": {
                 "type": "Identifier",
                 "name": "i"
                },
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false,
                "expression": null
               }
              ],
              "initialValue": {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              }
             },
             "conditionExpression": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "i"
              },
              "right": {
               "type": "Identifier",
               "name": "total1155Executions"
              }
             },
             "loopExpression": {
              "type": "ExpressionStatement",
              "expression": {
               "type": "UnaryOperation",
               "operator": "++",
               "subExpression": {
                "type": "Identifier",
                "name": "i"
               },
               "isPrefix": true
              }
             },
             "body": {
              "type": "Block",
              "statements": [
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "ElementaryTypeName",
                   "name": "uint256",
                   "stateMutability": null
                  },
                  "name": "executionIndex",
                  "identifier": {
                   "type": "Identifier",
                   "name": "executionIndex"
                  },
                  "storageLocation": null,
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "indexBy1155"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "i"
                 }
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "hash"
                 },
                 "right": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "Identifier",
                   "name": "_getHashByExecutionIndex"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "executions"
                   },
                   {
                    "type": "Identifier",
                    "name": "executionIndex"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                }
               },
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "ElementaryTypeName",
                   "name": "bool",
                   "stateMutability": null
                  },
                  "name": "foundMatchingHash",
                  "identifier": {
                   "type": "Identifier",
                   "name": "foundMatchingHash"
                  },
                  "storageLocation": null,
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "BooleanLiteral",
                 "value": false
                }
               },
               {
                "type": "ForStatement",
                "initExpression": {
                 "type": "VariableDeclarationStatement",
                 "variables": [
                  {
                   "type": "VariableDeclaration",
                   "typeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256",
                    "stateMutability": null
                   },
                   "name": "j",
                   "identifier": {
                    "type": "Identifier",
                    "name": "j"
                   },
                   "storageLocation": null,
                   "isStateVar": false,
                   "isIndexed": false,
                   "expression": null
                  }
                 ],
                 "initialValue": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                 }
                },
                "conditionExpression": {
                 "type": "BinaryOperation",
                 "operator": "<",
                 "left": {
                  "type": "Identifier",
                  "name": "j"
                 },
                 "right": {
                  "type": "Identifier",
                  "name": "uniqueHashes"
                 }
                },
                "loopExpression": {
                 "type": "ExpressionStatement",
                 "expression": {
                  "type": "UnaryOperation",
                  "operator": "++",
                  "subExpression": {
                   "type": "Identifier",
                   "name": "j"
                  },
                  "isPrefix": true
                 }
                },
                "body": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "IfStatement",
                   "condition": {
                    "type": "BinaryOperation",
                    "operator": "==",
                    "left": {
                     "type": "Identifier",
                     "name": "hash"
                    },
                    "right": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "IndexAccess",
                      "base": {
                       "type": "Identifier",
                       "name": "batches"
                      },
                      "index": {
                       "type": "Identifier",
                       "name": "j"
                      }
                     },
                     "memberName": "hash"
                    }
                   },
                   "trueBody": {
                    "type": "Block",
                    "statements": [
                     {
                      "type": "VariableDeclarationStatement",
                      "variables": [
                       {
                        "type": "VariableDeclaration",
                        "typeName": {
                         "type": "ArrayTypeName",
                         "baseTypeName": {
                          "type": "ElementaryTypeName",
                          "name": "uint256",
                          "stateMutability": null
                         },
                         "length": null
                        },
                        "name": "oldExecutionIndices",
                        "identifier": {
                         "type": "Identifier",
                         "name": "oldExecutionIndices"
                        },
                        "storageLocation": "memory",
                        "isStateVar": false,
                        "isIndexed": false,
                        "expression": null
                       }
                      ],
                      "initialValue": {
                       "type": "TupleExpression",
                       "components": [
                        {
                         "type": "MemberAccess",
                         "expression": {
                          "type": "IndexAccess",
                          "base": {
                           "type": "Identifier",
                           "name": "batches"
                          },
                          "index": {
                           "type": "Identifier",
                           "name": "j"
                          }
                         },
                         "memberName": "executionIndices"
                        }
                       ],
                       "isArray": false
                      }
                     },
                     {
                      "type": "VariableDeclarationStatement",
                      "variables": [
                       {
                        "type": "VariableDeclaration",
                        "typeName": {
                         "type": "ElementaryTypeName",
                         "name": "uint256",
                         "stateMutability": null
                        },
                        "name": "originalLength",
                        "identifier": {
                         "type": "Identifier",
                         "name": "originalLength"
                        },
                        "storageLocation": null,
                        "isStateVar": false,
                        "isIndexed": false,
                        "expression": null
                       }
                      ],
                      "initialValue": {
                       "type": "MemberAccess",
                       "expression": {
                        "type": "Identifier",
                        "name": "oldExecutionIndices"
                       },
                       "memberName": "length"
                      }
                     },
                     {
                      "type": "VariableDeclarationStatement",
                      "variables": [
                       {
                        "type": "VariableDeclaration",
                        "typeName": {
                         "type": "ArrayTypeName",
                         "baseTypeName": {
                          "type": "ElementaryTypeName",
                          "name": "uint256",
                          "stateMutability": null
                         },
                         "length": null
                        },
                        "name": "newExecutionIndices",
                        "identifier": {
                         "type": "Identifier",
                         "name": "newExecutionIndices"
                        },
                        "storageLocation": "memory",
                        "isStateVar": false,
                        "isIndexed": false,
                        "expression": null
                       }
                      ],
                      "initialValue": {
                       "type": "TupleExpression",
                       "components": [
                        {
                         "type": "FunctionCall",
                         "expression": {
                          "type": "NewExpression",
                          "typeName": {
                           "type": "ArrayTypeName",
                           "baseTypeName": {
                            "type": "ElementaryTypeName",
                            "name": "uint256",
                            "stateMutability": null
                           },
                           "length": null
                          }
                         },
                         "arguments": [
                          {
                           "type": "BinaryOperation",
                           "operator": "+",
                           "left": {
                            "type": "Identifier",
                            "name": "originalLength"
                           },
                           "right": {
                            "type": "NumberLiteral",
                            "number": "1",
                            "subdenomination": null
                           }
                          }
                         ],
                         "names": [],
                         "identifiers": []
                        }
                       ],
                       "isArray": false
                      }
                     },
                     {
                      "type": "ForStatement",
                      "initExpression": {
                       "type": "VariableDeclarationStatement",
                       "variables": [
                        {
                         "type": "VariableDeclaration",
                         "typeName": {
                          "type": "ElementaryTypeName",
                          "name": "uint256",
                          "stateMutability": null
                         },
                         "name": "k",
                         "identifier": {
                          "type": "Identifier",
                          "name": "k"
                         },
                         "storageLocation": null,
                         "isStateVar": false,
                         "isIndexed": false,
                         "expression": null
                        }
                       ],
                       "initialValue": {
                        "type": "NumberLiteral",
                        "number": "0",
                        "subdenomination": null
                       }
                      },
                      "conditionExpression": {
                       "type": "BinaryOperation",
                       "operator": "<",
                       "left": {
                        "type": "Identifier",
                        "name": "k"
                       },
                       "right": {
                        "type": "Identifier",
                        "name": "originalLength"
                       }
                      },
                      "loopExpression": {
                       "type": "ExpressionStatement",
                       "expression": {
                        "type": "UnaryOperation",
                        "operator": "++",
                        "subExpression": {
                         "type": "Identifier",
                         "name": "k"
                        },
                        "isPrefix": true
                       }
                      },
                      "body": {
                       "type": "Block",
                       "statements": [
                        {
                         "type": "ExpressionStatement",
                         "expression": {
                          "type": "BinaryOperation",
                          "operator": "=",
                          "left": {
                           "type": "IndexAccess",
                           "base": {
                            "type": "Identifier",
                            "name": "newExecutionIndices"
                           },
                           "index": {
                            "type": "Identifier",
                            "name": "k"
                           }
                          },
                          "right": {
                           "type": "IndexAccess",
                           "base": {
                            "type": "Identifier",
                            "name": "oldExecutionIndices"
                           },
                           "index": {
                            "type": "Identifier",
                            "name": "k"
                           }
                          }
                         }
                        }
                       ]
                      }
                     },
                     {
                      "type": "ExpressionStatement",
                      "expression": {
                       "type": "BinaryOperation",
                       "operator": "=",
                       "left": {
                        "type": "IndexAccess",
                        "base": {
                         "type": "Identifier",
                         "name": "newExecutionIndices"
                        },
                        "index": {
                         "type": "Identifier",
                         "name": "originalLength"
                        }
                       },
                       "right": {
                        "type": "Identifier",
                        "name": "executionIndex"
                       }
                      }
                     },
                     {
                      "type": "ExpressionStatement",
                      "expression": {
                       "type": "BinaryOperation",
                       "operator": "=",
                       "left": {
                        "type": "MemberAccess",
                        "expression": {
                         "type": "IndexAccess",
                         "base": {
                          "type": "Identifier",
                          "name": "batches"
                         },
                         "index": {
                          "type": "Identifier",
                          "name": "j"
                         }
                        },
                        "memberName": "executionIndices"
                       },
                       "right": {
                        "type": "Identifier",
                        "name": "newExecutionIndices"
                       }
                      }
                     },
                     {
                      "type": "ExpressionStatement",
                      "expression": {
                       "type": "BinaryOperation",
                       "operator": "=",
                       "left": {
                        "type": "Identifier",
                        "name": "foundMatchingHash"
                       },
                       "right": {
                        "type": "BooleanLiteral",
                        "value": true
                       }
                      }
                     },
                     {
                      "type": "BreakStatement"
                     }
                    ]
                   },
                   "falseBody": null
                  }
                 ]
                }
               },
               {
                "type": "IfStatement",
                "condition": {
                 "type": "UnaryOperation",
                 "operator": "!",
                 "subExpression": {
                  "type": "Identifier",
                  "name": "foundMatchingHash"
                 },
                 "isPrefix": true
                },
                "trueBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                     "type": "IndexAccess",
                     "base": {
                      "type": "Identifier",
                      "name": "executionIndices"
                     },
                     "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                     }
                    },
                    "right": {
                     "type": "Identifier",
                     "name": "executionIndex"
                    }
                   }
                  },
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "IndexAccess",
                      "base": {
                       "type": "Identifier",
                       "name": "batches"
                      },
                      "index": {
                       "type": "Identifier",
                       "name": "uniqueHashes"
                      }
                     },
                     "memberName": "hash"
                    },
                    "right": {
                     "type": "Identifier",
                     "name": "hash"
                    }
                   }
                  },
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "IndexAccess",
                      "base": {
                       "type": "Identifier",
                       "name": "batches"
                      },
                      "index": {
                       "type": "UnaryOperation",
                       "operator": "++",
                       "subExpression": {
                        "type": "Identifier",
                        "name": "uniqueHashes"
                       },
                       "isPrefix": false
                      }
                     },
                     "memberName": "executionIndices"
                    },
                    "right": {
                     "type": "Identifier",
                     "name": "executionIndices"
                    }
                   }
                  }
                 ]
                },
                "falseBody": null
               }
              ]
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "Identifier",
               "name": "uniqueHashes"
              },
              "right": {
               "type": "Identifier",
               "name": "total1155Executions"
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ReturnStatement",
                "expression": {
                 "type": "TupleExpression",
                 "components": [
                  {
                   "type": "Identifier",
                   "name": "executions"
                  },
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "NewExpression",
                    "typeName": {
                     "type": "ArrayTypeName",
                     "baseTypeName": {
                      "type": "UserDefinedTypeName",
                      "namePath": "BatchExecution"
                     },
                     "length": null
                    }
                   },
                   "arguments": [
                    {
                     "type": "NumberLiteral",
                     "number": "0",
                     "subdenomination": null
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  }
                 ],
                 "isArray": false
                }
               }
              ]
             },
             "falseBody": null
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ArrayTypeName",
                "baseTypeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "length": null
               },
               "name": "usedInBatch",
               "identifier": {
                "type": "Identifier",
                "name": "usedInBatch"
               },
               "storageLocation": "memory",
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "NewExpression",
               "typeName": {
                "type": "ArrayTypeName",
                "baseTypeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "length": null
               }
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "totalExecutions"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ArrayTypeName",
                "baseTypeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "length": null
               },
               "name": "totals",
               "identifier": {
                "type": "Identifier",
                "name": "totals"
               },
               "storageLocation": "memory",
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "NewExpression",
               "typeName": {
                "type": "ArrayTypeName",
                "baseTypeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "length": null
               }
              },
              "arguments": [
               {
                "type": "NumberLiteral",
                "number": "2",
                "subdenomination": null
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ForStatement",
             "initExpression": {
              "type": "VariableDeclarationStatement",
              "variables": [
               {
                "type": "VariableDeclaration",
                "typeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "name": "i",
                "identifier": {
                 "type": "Identifier",
                 "name": "i"
                },
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false,
                "expression": null
               }
              ],
              "initialValue": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "conditionExpression": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "i"
              },
              "right": {
               "type": "Identifier",
               "name": "uniqueHashes"
              }
             },
             "loopExpression": {
              "type": "ExpressionStatement",
              "expression": {
               "type": "UnaryOperation",
               "operator": "++",
               "subExpression": {
                "type": "Identifier",
                "name": "i"
               },
               "isPrefix": true
              }
             },
             "body": {
              "type": "Block",
              "statements": [
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "ArrayTypeName",
                   "baseTypeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256",
                    "stateMutability": null
                   },
                   "length": null
                  },
                  "name": "indices",
                  "identifier": {
                   "type": "Identifier",
                   "name": "indices"
                  },
                  "storageLocation": "memory",
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "batches"
                  },
                  "index": {
                   "type": "Identifier",
                   "name": "i"
                  }
                 },
                 "memberName": "executionIndices"
                }
               },
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "ElementaryTypeName",
                   "name": "uint256",
                   "stateMutability": null
                  },
                  "name": "indicesLength",
                  "identifier": {
                   "type": "Identifier",
                   "name": "indicesLength"
                  },
                  "storageLocation": null,
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "indices"
                 },
                 "memberName": "length"
                }
               },
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": ">=",
                 "left": {
                  "type": "Identifier",
                  "name": "indicesLength"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "2",
                  "subdenomination": null
                 }
                },
                "trueBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "UnaryOperation",
                    "operator": "++",
                    "subExpression": {
                     "type": "IndexAccess",
                     "base": {
                      "type": "Identifier",
                      "name": "totals"
                     },
                     "index": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                     }
                    },
                    "isPrefix": true
                   }
                  },
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "+=",
                    "left": {
                     "type": "IndexAccess",
                     "base": {
                      "type": "Identifier",
                      "name": "totals"
                     },
                     "index": {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                     }
                    },
                    "right": {
                     "type": "Identifier",
                     "name": "indicesLength"
                    }
                   }
                  },
                  {
                   "type": "ForStatement",
                   "initExpression": {
                    "type": "VariableDeclarationStatement",
                    "variables": [
                     {
                      "type": "VariableDeclaration",
                      "typeName": {
                       "type": "ElementaryTypeName",
                       "name": "uint256",
                       "stateMutability": null
                      },
                      "name": "j",
                      "identifier": {
                       "type": "Identifier",
                       "name": "j"
                      },
                      "storageLocation": null,
                      "isStateVar": false,
                      "isIndexed": false,
                      "expression": null
                     }
                    ],
                    "initialValue": {
                     "type": "NumberLiteral",
                     "number": "0",
                     "subdenomination": null
                    }
                   },
                   "conditionExpression": {
                    "type": "BinaryOperation",
                    "operator": "<",
                    "left": {
                     "type": "Identifier",
                     "name": "j"
                    },
                    "right": {
                     "type": "Identifier",
                     "name": "indicesLength"
                    }
                   },
                   "loopExpression": {
                    "type": "ExpressionStatement",
                    "expression": {
                     "type": "UnaryOperation",
                     "operator": "++",
                     "subExpression": {
                      "type": "Identifier",
                      "name": "j"
                     },
                     "isPrefix": true
                    }
                   },
                   "body": {
                    "type": "Block",
                    "statements": [
                     {
                      "type": "ExpressionStatement",
                      "expression": {
                       "type": "BinaryOperation",
                       "operator": "=",
                       "left": {
                        "type": "IndexAccess",
                        "base": {
                         "type": "Identifier",
                         "name": "usedInBatch"
                        },
                        "index": {
                         "type": "IndexAccess",
                         "base": {
                          "type": "Identifier",
                          "name": "indices"
                         },
                         "index": {
                          "type": "Identifier",
                          "name": "j"
                         }
                        }
                       },
                       "right": {
                        "type": "BinaryOperation",
                        "operator": "+",
                        "left": {
                         "type": "Identifier",
                         "name": "i"
                        },
                        "right": {
                         "type": "NumberLiteral",
                         "number": "1",
                         "subdenomination": null
                        }
                       }
                      }
                     }
                    ]
                   }
                  }
                 ]
                },
                "falseBody": null
               }
              ]
             }
            },
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "_splitExecution"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "executions"
               },
               {
                "type": "Identifier",
                "name": "batches"
               },
               {
                "type": "Identifier",
                "name": "usedInBatch"
               },
               {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "totals"
                },
                "index": {
                 "type": "NumberLiteral",
                 "number": "0",
                 "subdenomination": null
                }
               },
               {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "totals"
                },
                "index": {
                 "type": "NumberLiteral",
                 "number": "1",
                 "subdenomination": null
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "_splitExecution",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "Execution"
          },
          "length": null
         },
         "name": "executions",
         "identifier": {
          "type": "Identifier",
          "name": "executions"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "Batch"
          },
          "length": null
         },
         "name": "batches",
         "identifier": {
          "type": "Identifier",
          "name": "batches"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "batchExecutionPointers",
         "identifier": {
          "type": "Identifier",
          "name": "batchExecutionPointers"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "totalUsedInBatch",
         "identifier": {
          "type": "Identifier",
          "name": "totalUsedInBatch"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "totalBatches",
         "identifier": {
          "type": "Identifier",
          "name": "totalBatches"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "Execution"
          },
          "length": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "BatchExecution"
          },
          "length": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "UncheckedStatement",
          "block": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "totalExecutions",
               "identifier": {
                "type": "Identifier",
                "name": "totalExecutions"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "executions"
              },
              "memberName": "length"
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ArrayTypeName",
                "baseTypeName": {
                 "type": "UserDefinedTypeName",
                 "namePath": "Execution"
                },
                "length": null
               },
               "name": "standardExecutions",
               "identifier": {
                "type": "Identifier",
                "name": "standardExecutions"
               },
               "storageLocation": "memory",
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "NewExpression",
               "typeName": {
                "type": "ArrayTypeName",
                "baseTypeName": {
                 "type": "UserDefinedTypeName",
                 "namePath": "Execution"
                },
                "length": null
               }
              },
              "arguments": [
               {
                "type": "BinaryOperation",
                "operator": "-",
                "left": {
                 "type": "Identifier",
                 "name": "totalExecutions"
                },
                "right": {
                 "type": "Identifier",
                 "name": "totalUsedInBatch"
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ArrayTypeName",
                "baseTypeName": {
                 "type": "UserDefinedTypeName",
                 "namePath": "BatchExecution"
                },
                "length": null
               },
               "name": "batchExecutions",
               "identifier": {
                "type": "Identifier",
                "name": "batchExecutions"
               },
               "storageLocation": "memory",
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "NewExpression",
               "typeName": {
                "type": "ArrayTypeName",
                "baseTypeName": {
                 "type": "UserDefinedTypeName",
                 "namePath": "BatchExecution"
                },
                "length": null
               }
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "totalBatches"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "nextStandardExecutionIndex",
               "identifier": {
                "type": "Identifier",
                "name": "nextStandardExecutionIndex"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ArrayTypeName",
                "baseTypeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "length": null
               },
               "name": "batchElementIndices",
               "identifier": {
                "type": "Identifier",
                "name": "batchElementIndices"
               },
               "storageLocation": "memory",
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "NewExpression",
               "typeName": {
                "type": "ArrayTypeName",
                "baseTypeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "length": null
               }
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "totalBatches"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ForStatement",
             "initExpression": {
              "type": "VariableDeclarationStatement",
              "variables": [
               {
                "type": "VariableDeclaration",
                "typeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "name": "i",
                "identifier": {
                 "type": "Identifier",
                 "name": "i"
                },
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false,
                "expression": null
               }
              ],
              "initialValue": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "conditionExpression": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "i"
              },
              "right": {
               "type": "Identifier",
               "name": "totalExecutions"
              }
             },
             "loopExpression": {
              "type": "ExpressionStatement",
              "expression": {
               "type": "UnaryOperation",
               "operator": "++",
               "subExpression": {
                "type": "Identifier",
                "name": "i"
               },
               "isPrefix": true
              }
             },
             "body": {
              "type": "Block",
              "statements": [
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "ElementaryTypeName",
                   "name": "uint256",
                   "stateMutability": null
                  },
                  "name": "batchExecutionPointer",
                  "identifier": {
                   "type": "Identifier",
                   "name": "batchExecutionPointer"
                  },
                  "storageLocation": null,
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "batchExecutionPointers"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "i"
                 }
                }
               },
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "UserDefinedTypeName",
                   "namePath": "Execution"
                  },
                  "name": "execution",
                  "identifier": {
                   "type": "Identifier",
                   "name": "execution"
                  },
                  "storageLocation": "memory",
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "executions"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "i"
                 }
                }
               },
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "==",
                 "left": {
                  "type": "Identifier",
                  "name": "batchExecutionPointer"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                 }
                },
                "trueBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                     "type": "IndexAccess",
                     "base": {
                      "type": "Identifier",
                      "name": "standardExecutions"
                     },
                     "index": {
                      "type": "UnaryOperation",
                      "operator": "++",
                      "subExpression": {
                       "type": "Identifier",
                       "name": "nextStandardExecutionIndex"
                      },
                      "isPrefix": false
                     }
                    },
                    "right": {
                     "type": "TupleExpression",
                     "components": [
                      {
                       "type": "Identifier",
                       "name": "execution"
                      }
                     ],
                     "isArray": false
                    }
                   }
                  }
                 ]
                },
                "falseBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "VariableDeclarationStatement",
                   "variables": [
                    {
                     "type": "VariableDeclaration",
                     "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256",
                      "stateMutability": null
                     },
                     "name": "batchIndex",
                     "identifier": {
                      "type": "Identifier",
                      "name": "batchIndex"
                     },
                     "storageLocation": null,
                     "isStateVar": false,
                     "isIndexed": false,
                     "expression": null
                    }
                   ],
                   "initialValue": {
                    "type": "BinaryOperation",
                    "operator": "-",
                    "left": {
                     "type": "Identifier",
                     "name": "batchExecutionPointer"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "1",
                     "subdenomination": null
                    }
                   }
                  },
                  {
                   "type": "IfStatement",
                   "condition": {
                    "type": "BinaryOperation",
                    "operator": "==",
                    "left": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "IndexAccess",
                      "base": {
                       "type": "Identifier",
                       "name": "batchExecutions"
                      },
                      "index": {
                       "type": "Identifier",
                       "name": "batchIndex"
                      }
                     },
                     "memberName": "token"
                    },
                    "right": {
                     "type": "FunctionCall",
                     "expression": {
                      "type": "Identifier",
                      "name": "address"
                     },
                     "arguments": [
                      {
                       "type": "NumberLiteral",
                       "number": "0",
                       "subdenomination": null
                      }
                     ],
                     "names": [],
                     "identifiers": []
                    }
                   },
                   "trueBody": {
                    "type": "Block",
                    "statements": [
                     {
                      "type": "VariableDeclarationStatement",
                      "variables": [
                       {
                        "type": "VariableDeclaration",
                        "typeName": {
                         "type": "ElementaryTypeName",
                         "name": "uint256",
                         "stateMutability": null
                        },
                        "name": "totalElements",
                        "identifier": {
                         "type": "Identifier",
                         "name": "totalElements"
                        },
                        "storageLocation": null,
                        "isStateVar": false,
                        "isIndexed": false,
                        "expression": null
                       }
                      ],
                      "initialValue": {
                       "type": "TupleExpression",
                       "components": [
                        {
                         "type": "MemberAccess",
                         "expression": {
                          "type": "MemberAccess",
                          "expression": {
                           "type": "IndexAccess",
                           "base": {
                            "type": "Identifier",
                            "name": "batches"
                           },
                           "index": {
                            "type": "Identifier",
                            "name": "batchIndex"
                           }
                          },
                          "memberName": "executionIndices"
                         },
                         "memberName": "length"
                        }
                       ],
                       "isArray": false
                      }
                     },
                     {
                      "type": "ExpressionStatement",
                      "expression": {
                       "type": "BinaryOperation",
                       "operator": "=",
                       "left": {
                        "type": "IndexAccess",
                        "base": {
                         "type": "Identifier",
                         "name": "batchExecutions"
                        },
                        "index": {
                         "type": "Identifier",
                         "name": "batchIndex"
                        }
                       },
                       "right": {
                        "type": "FunctionCall",
                        "expression": {
                         "type": "Identifier",
                         "name": "BatchExecution"
                        },
                        "arguments": [
                         {
                          "type": "MemberAccess",
                          "expression": {
                           "type": "MemberAccess",
                           "expression": {
                            "type": "Identifier",
                            "name": "execution"
                           },
                           "memberName": "item"
                          },
                          "memberName": "token"
                         },
                         {
                          "type": "MemberAccess",
                          "expression": {
                           "type": "Identifier",
                           "name": "execution"
                          },
                          "memberName": "offerer"
                         },
                         {
                          "type": "MemberAccess",
                          "expression": {
                           "type": "MemberAccess",
                           "expression": {
                            "type": "Identifier",
                            "name": "execution"
                           },
                           "memberName": "item"
                          },
                          "memberName": "recipient"
                         },
                         {
                          "type": "FunctionCall",
                          "expression": {
                           "type": "NewExpression",
                           "typeName": {
                            "type": "ArrayTypeName",
                            "baseTypeName": {
                             "type": "ElementaryTypeName",
                             "name": "uint256",
                             "stateMutability": null
                            },
                            "length": null
                           }
                          },
                          "arguments": [
                           {
                            "type": "Identifier",
                            "name": "totalElements"
                           }
                          ],
                          "names": [],
                          "identifiers": []
                         },
                         {
                          "type": "FunctionCall",
                          "expression": {
                           "type": "NewExpression",
                           "typeName": {
                            "type": "ArrayTypeName",
                            "baseTypeName": {
                             "type": "ElementaryTypeName",
                             "name": "uint256",
                             "stateMutability": null
                            },
                            "length": null
                           }
                          },
                          "arguments": [
                           {
                            "type": "Identifier",
                            "name": "totalElements"
                           }
                          ],
                          "names": [],
                          "identifiers": []
                         },
                         {
                          "type": "MemberAccess",
                          "expression": {
                           "type": "Identifier",
                           "name": "execution"
                          },
                          "memberName": "conduit"
                         }
                        ],
                        "names": [],
                        "identifiers": []
                       }
                      }
                     }
                    ]
                   },
                   "falseBody": null
                  },
                  {
                   "type": "VariableDeclarationStatement",
                   "variables": [
                    {
                     "type": "VariableDeclaration",
                     "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256",
                      "stateMutability": null
                     },
                     "name": "batchElementIndex",
                     "identifier": {
                      "type": "Identifier",
                      "name": "batchElementIndex"
                     },
                     "storageLocation": null,
                     "isStateVar": false,
                     "isIndexed": false,
                     "expression": null
                    }
                   ],
                   "initialValue": {
                    "type": "TupleExpression",
                    "components": [
                     {
                      "type": "UnaryOperation",
                      "operator": "++",
                      "subExpression": {
                       "type": "IndexAccess",
                       "base": {
                        "type": "Identifier",
                        "name": "batchElementIndices"
                       },
                       "index": {
                        "type": "Identifier",
                        "name": "batchIndex"
                       }
                      },
                      "isPrefix": false
                     }
                    ],
                    "isArray": false
                   }
                  },
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                     "type": "IndexAccess",
                     "base": {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "IndexAccess",
                       "base": {
                        "type": "Identifier",
                        "name": "batchExecutions"
                       },
                       "index": {
                        "type": "Identifier",
                        "name": "batchIndex"
                       }
                      },
                      "memberName": "tokenIds"
                     },
                     "index": {
                      "type": "Identifier",
                      "name": "batchElementIndex"
                     }
                    },
                    "right": {
                     "type": "TupleExpression",
                     "components": [
                      {
                       "type": "MemberAccess",
                       "expression": {
                        "type": "MemberAccess",
                        "expression": {
                         "type": "Identifier",
                         "name": "execution"
                        },
                        "memberName": "item"
                       },
                       "memberName": "identifier"
                      }
                     ],
                     "isArray": false
                    }
                   }
                  },
                  {
                   "type": "VariableDeclarationStatement",
                   "variables": [
                    {
                     "type": "VariableDeclaration",
                     "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256",
                      "stateMutability": null
                     },
                     "name": "amount",
                     "identifier": {
                      "type": "Identifier",
                      "name": "amount"
                     },
                     "storageLocation": null,
                     "isStateVar": false,
                     "isIndexed": false,
                     "expression": null
                    }
                   ],
                   "initialValue": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "execution"
                     },
                     "memberName": "item"
                    },
                    "memberName": "amount"
                   }
                  },
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "Identifier",
                     "name": "_assertNonZeroAmount"
                    },
                    "arguments": [
                     {
                      "type": "Identifier",
                      "name": "amount"
                     }
                    ],
                    "names": [],
                    "identifiers": []
                   }
                  },
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                     "type": "IndexAccess",
                     "base": {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "IndexAccess",
                       "base": {
                        "type": "Identifier",
                        "name": "batchExecutions"
                       },
                       "index": {
                        "type": "Identifier",
                        "name": "batchIndex"
                       }
                      },
                      "memberName": "amounts"
                     },
                     "index": {
                      "type": "Identifier",
                      "name": "batchElementIndex"
                     }
                    },
                    "right": {
                     "type": "TupleExpression",
                     "components": [
                      {
                       "type": "Identifier",
                       "name": "amount"
                      }
                     ],
                     "isArray": false
                    }
                   }
                  }
                 ]
                }
               }
              ]
             }
            },
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "TupleExpression",
              "components": [
               {
                "type": "Identifier",
                "name": "standardExecutions"
               },
               {
                "type": "Identifier",
                "name": "batchExecutions"
               }
              ],
              "isArray": false
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "_applyFraction",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "startAmount",
         "identifier": {
          "type": "Identifier",
          "name": "startAmount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "endAmount",
         "identifier": {
          "type": "Identifier",
          "name": "endAmount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "numerator",
         "identifier": {
          "type": "Identifier",
          "name": "numerator"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "denominator",
         "identifier": {
          "type": "Identifier",
          "name": "denominator"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "elapsed",
         "identifier": {
          "type": "Identifier",
          "name": "elapsed"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "remaining",
         "identifier": {
          "type": "Identifier",
          "name": "remaining"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "duration",
         "identifier": {
          "type": "Identifier",
          "name": "duration"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "roundUp",
         "identifier": {
          "type": "Identifier",
          "name": "roundUp"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "startAmount"
           },
           "right": {
            "type": "Identifier",
            "name": "endAmount"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "amount"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "_getFraction"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "numerator"
                },
                {
                 "type": "Identifier",
                 "name": "denominator"
                },
                {
                 "type": "Identifier",
                 "name": "endAmount"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "Identifier",
               "name": "amount"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "_locateCurrentAmount"
               },
               "arguments": [
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "_getFraction"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "numerator"
                  },
                  {
                   "type": "Identifier",
                   "name": "denominator"
                  },
                  {
                   "type": "Identifier",
                   "name": "startAmount"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                },
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "_getFraction"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "numerator"
                  },
                  {
                   "type": "Identifier",
                   "name": "denominator"
                  },
                  {
                   "type": "Identifier",
                   "name": "endAmount"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                },
                {
                 "type": "Identifier",
                 "name": "elapsed"
                },
                {
                 "type": "Identifier",
                 "name": "remaining"
                },
                {
                 "type": "Identifier",
                 "name": "duration"
                },
                {
                 "type": "Identifier",
                 "name": "roundUp"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "_aggregateValidFulfillmentConsiderationItems",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "AdvancedOrder"
          },
          "length": null
         },
         "name": "advancedOrders",
         "identifier": {
          "type": "Identifier",
          "name": "advancedOrders"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "FulfillmentComponent"
          },
          "length": null
         },
         "name": "considerationComponents",
         "identifier": {
          "type": "Identifier",
          "name": "considerationComponents"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "startIndex",
         "identifier": {
          "type": "Identifier",
          "name": "startIndex"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "ReceivedItem"
         },
         "name": "receivedItem",
         "identifier": {
          "type": "Identifier",
          "name": "receivedItem"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bool",
             "stateMutability": null
            },
            "name": "invalidFulfillment",
            "identifier": {
             "type": "Identifier",
             "name": "invalidFulfillment"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "totalOrders"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "advancedOrders",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "i"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "startIndex",
              "arguments": []
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "fulfillmentPtr"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "add",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "considerationComponents",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x20"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "mul",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "i",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x20"
                   }
                  ]
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "orderIndex"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "fulfillmentPtr",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "itemIndex"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "add",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "fulfillmentPtr",
                  "arguments": []
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x20"
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "invalidFulfillment"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "iszero",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "lt",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "orderIndex",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "totalOrders",
                  "arguments": []
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyIf",
             "condition": {
              "type": "AssemblyCall",
              "functionName": "iszero",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "invalidFulfillment",
                "arguments": []
               }
              ]
             },
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "orderPtr"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "mload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "mload",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "add",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "advancedOrders",
                         "arguments": []
                        },
                        {
                         "type": "HexNumber",
                         "value": "0x20"
                        }
                       ]
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "mul",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "orderIndex",
                         "arguments": []
                        },
                        {
                         "type": "HexNumber",
                         "value": "0x20"
                        }
                       ]
                      }
                     ]
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "considerationArrPtr"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "mload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "orderPtr",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "OrderParameters_consideration_head_offset",
                     "arguments": []
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyAssignment",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "invalidFulfillment"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "iszero",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "lt",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "itemIndex",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "mload",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "considerationArrPtr",
                       "arguments": []
                      }
                     ]
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyIf",
                "condition": {
                 "type": "AssemblyCall",
                 "functionName": "iszero",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "invalidFulfillment",
                   "arguments": []
                  }
                 ]
                },
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "considerationItemPtr"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "mload",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "add",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "add",
                        "arguments": [
                         {
                          "type": "AssemblyCall",
                          "functionName": "considerationArrPtr",
                          "arguments": []
                         },
                         {
                          "type": "HexNumber",
                          "value": "0x20"
                         }
                        ]
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "mul",
                        "arguments": [
                         {
                          "type": "AssemblyCall",
                          "functionName": "itemIndex",
                          "arguments": []
                         },
                         {
                          "type": "HexNumber",
                          "value": "0x20"
                         }
                        ]
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "receivedItem",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "mload",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "considerationItemPtr",
                       "arguments": []
                      }
                     ]
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "receivedItem",
                       "arguments": []
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "Common_token_offset",
                       "arguments": []
                      }
                     ]
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "mload",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "add",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "considerationItemPtr",
                         "arguments": []
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "Common_token_offset",
                         "arguments": []
                        }
                       ]
                      }
                     ]
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "receivedItem",
                       "arguments": []
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "Common_identifier_offset",
                       "arguments": []
                      }
                     ]
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "mload",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "add",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "considerationItemPtr",
                         "arguments": []
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "Common_identifier_offset",
                         "arguments": []
                        }
                       ]
                      }
                     ]
                    }
                   ]
                  },
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "amountPtr"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "considerationItemPtr",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "Common_amount_offset",
                      "arguments": []
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "receivedItem",
                       "arguments": []
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "Common_amount_offset",
                       "arguments": []
                      }
                     ]
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "mload",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "amountPtr",
                       "arguments": []
                      }
                     ]
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "amountPtr",
                     "arguments": []
                    },
                    {
                     "type": "DecimalNumber",
                     "value": "0"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "receivedItem",
                       "arguments": []
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "ReceivedItem_recipient_offset",
                       "arguments": []
                      }
                     ]
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "mload",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "add",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "considerationItemPtr",
                         "arguments": []
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "ConsiderationItem_recipient_offset",
                         "arguments": []
                        }
                       ]
                      }
                     ]
                    }
                   ]
                  },
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "i"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "i",
                      "arguments": []
                     },
                     {
                      "type": "DecimalNumber",
                      "value": "1"
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyFor",
                   "pre": {
                    "type": "AssemblyBlock",
                    "operations": []
                   },
                   "condition": {
                    "type": "AssemblyCall",
                    "functionName": "lt",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "i",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "mload",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "considerationComponents",
                        "arguments": []
                       }
                      ]
                     }
                    ]
                   },
                   "post": {
                    "type": "AssemblyBlock",
                    "operations": [
                     {
                      "type": "AssemblyAssignment",
                      "names": [
                       {
                        "type": "Identifier",
                        "name": "i"
                       }
                      ],
                      "expression": {
                       "type": "AssemblyCall",
                       "functionName": "add",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "i",
                         "arguments": []
                        },
                        {
                         "type": "DecimalNumber",
                         "value": "1"
                        }
                       ]
                      }
                     }
                    ]
                   },
                   "body": {
                    "type": "AssemblyBlock",
                    "operations": [
                     {
                      "type": "AssemblyAssignment",
                      "names": [
                       {
                        "type": "Identifier",
                        "name": "fulfillmentPtr"
                       }
                      ],
                      "expression": {
                       "type": "AssemblyCall",
                       "functionName": "mload",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "add",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "add",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "considerationComponents",
                             "arguments": []
                            },
                            {
                             "type": "HexNumber",
                             "value": "0x20"
                            }
                           ]
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "mul",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "i",
                             "arguments": []
                            },
                            {
                             "type": "HexNumber",
                             "value": "0x20"
                            }
                           ]
                          }
                         ]
                        }
                       ]
                      }
                     },
                     {
                      "type": "AssemblyAssignment",
                      "names": [
                       {
                        "type": "Identifier",
                        "name": "orderIndex"
                       }
                      ],
                      "expression": {
                       "type": "AssemblyCall",
                       "functionName": "mload",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "fulfillmentPtr",
                         "arguments": []
                        }
                       ]
                      }
                     },
                     {
                      "type": "AssemblyAssignment",
                      "names": [
                       {
                        "type": "Identifier",
                        "name": "itemIndex"
                       }
                      ],
                      "expression": {
                       "type": "AssemblyCall",
                       "functionName": "mload",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "add",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "fulfillmentPtr",
                           "arguments": []
                          },
                          {
                           "type": "HexNumber",
                           "value": "0x20"
                          }
                         ]
                        }
                       ]
                      }
                     },
                     {
                      "type": "AssemblyAssignment",
                      "names": [
                       {
                        "type": "Identifier",
                        "name": "invalidFulfillment"
                       }
                      ],
                      "expression": {
                       "type": "AssemblyCall",
                       "functionName": "iszero",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "lt",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "orderIndex",
                           "arguments": []
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "totalOrders",
                           "arguments": []
                          }
                         ]
                        }
                       ]
                      }
                     },
                     {
                      "type": "AssemblyIf",
                      "condition": {
                       "type": "AssemblyCall",
                       "functionName": "invalidFulfillment",
                       "arguments": []
                      },
                      "body": {
                       "type": "AssemblyBlock",
                       "operations": [
                        {
                         "type": "Break"
                        }
                       ]
                      }
                     },
                     {
                      "type": "AssemblyAssignment",
                      "names": [
                       {
                        "type": "Identifier",
                        "name": "orderPtr"
                       }
                      ],
                      "expression": {
                       "type": "AssemblyCall",
                       "functionName": "mload",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "add",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "add",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "advancedOrders",
                             "arguments": []
                            },
                            {
                             "type": "HexNumber",
                             "value": "0x20"
                            }
                           ]
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "mul",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "orderIndex",
                             "arguments": []
                            },
                            {
                             "type": "HexNumber",
                             "value": "0x20"
                            }
                           ]
                          }
                         ]
                        }
                       ]
                      }
                     },
                     {
                      "type": "AssemblyIf",
                      "condition": {
                       "type": "AssemblyCall",
                       "functionName": "mload",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "add",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "orderPtr",
                           "arguments": []
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "AdvancedOrder_numerator_offset",
                           "arguments": []
                          }
                         ]
                        }
                       ]
                      },
                      "body": {
                       "type": "AssemblyBlock",
                       "operations": [
                        {
                         "type": "AssemblyAssignment",
                         "names": [
                          {
                           "type": "Identifier",
                           "name": "orderPtr"
                          }
                         ],
                         "expression": {
                          "type": "AssemblyCall",
                          "functionName": "mload",
                          "arguments": [
                           {
                            "type": "AssemblyCall",
                            "functionName": "orderPtr",
                            "arguments": []
                           }
                          ]
                         }
                        },
                        {
                         "type": "AssemblyAssignment",
                         "names": [
                          {
                           "type": "Identifier",
                           "name": "considerationArrPtr"
                          }
                         ],
                         "expression": {
                          "type": "AssemblyCall",
                          "functionName": "mload",
                          "arguments": [
                           {
                            "type": "AssemblyCall",
                            "functionName": "add",
                            "arguments": [
                             {
                              "type": "AssemblyCall",
                              "functionName": "orderPtr",
                              "arguments": []
                             },
                             {
                              "type": "AssemblyCall",
                              "functionName": "OrderParameters_consideration_head_offset",
                              "arguments": []
                             }
                            ]
                           }
                          ]
                         }
                        },
                        {
                         "type": "AssemblyAssignment",
                         "names": [
                          {
                           "type": "Identifier",
                           "name": "invalidFulfillment"
                          }
                         ],
                         "expression": {
                          "type": "AssemblyCall",
                          "functionName": "iszero",
                          "arguments": [
                           {
                            "type": "AssemblyCall",
                            "functionName": "lt",
                            "arguments": [
                             {
                              "type": "AssemblyCall",
                              "functionName": "itemIndex",
                              "arguments": []
                             },
                             {
                              "type": "AssemblyCall",
                              "functionName": "mload",
                              "arguments": [
                               {
                                "type": "AssemblyCall",
                                "functionName": "considerationArrPtr",
                                "arguments": []
                               }
                              ]
                             }
                            ]
                           }
                          ]
                         }
                        },
                        {
                         "type": "AssemblyIf",
                         "condition": {
                          "type": "AssemblyCall",
                          "functionName": "invalidFulfillment",
                          "arguments": []
                         },
                         "body": {
                          "type": "AssemblyBlock",
                          "operations": [
                           {
                            "type": "Break"
                           }
                          ]
                         }
                        },
                        {
                         "type": "AssemblyAssignment",
                         "names": [
                          {
                           "type": "Identifier",
                           "name": "considerationItemPtr"
                          }
                         ],
                         "expression": {
                          "type": "AssemblyCall",
                          "functionName": "mload",
                          "arguments": [
                           {
                            "type": "AssemblyCall",
                            "functionName": "add",
                            "arguments": [
                             {
                              "type": "AssemblyCall",
                              "functionName": "add",
                              "arguments": [
                               {
                                "type": "AssemblyCall",
                                "functionName": "considerationArrPtr",
                                "arguments": []
                               },
                               {
                                "type": "HexNumber",
                                "value": "0x20"
                               }
                              ]
                             },
                             {
                              "type": "AssemblyCall",
                              "functionName": "mul",
                              "arguments": [
                               {
                                "type": "AssemblyCall",
                                "functionName": "itemIndex",
                                "arguments": []
                               },
                               {
                                "type": "HexNumber",
                                "value": "0x20"
                               }
                              ]
                             }
                            ]
                           }
                          ]
                         }
                        },
                        {
                         "type": "AssemblyAssignment",
                         "names": [
                          {
                           "type": "Identifier",
                           "name": "amountPtr"
                          }
                         ],
                         "expression": {
                          "type": "AssemblyCall",
                          "functionName": "add",
                          "arguments": [
                           {
                            "type": "AssemblyCall",
                            "functionName": "considerationItemPtr",
                            "arguments": []
                           },
                           {
                            "type": "AssemblyCall",
                            "functionName": "Common_amount_offset",
                            "arguments": []
                           }
                          ]
                         }
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "mstore",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "add",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "receivedItem",
                             "arguments": []
                            },
                            {
                             "type": "AssemblyCall",
                             "functionName": "Common_amount_offset",
                             "arguments": []
                            }
                           ]
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "add",
                           "arguments": [
                            {
                             "type": "AssemblyCall",
                             "functionName": "mload",
                             "arguments": [
                              {
                               "type": "AssemblyCall",
                               "functionName": "add",
                               "arguments": [
                                {
                                 "type": "AssemblyCall",
                                 "functionName": "receivedItem",
                                 "arguments": []
                                },
                                {
                                 "type": "AssemblyCall",
                                 "functionName": "Common_amount_offset",
                                 "arguments": []
                                }
                               ]
                              }
                             ]
                            },
                            {
                             "type": "AssemblyCall",
                             "functionName": "mload",
                             "arguments": [
                              {
                               "type": "AssemblyCall",
                               "functionName": "amountPtr",
                               "arguments": []
                              }
                             ]
                            }
                           ]
                          }
                         ]
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "mstore",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "amountPtr",
                           "arguments": []
                          },
                          {
                           "type": "DecimalNumber",
                           "value": "0"
                          }
                         ]
                        },
                        {
                         "type": "AssemblyAssignment",
                         "names": [
                          {
                           "type": "Identifier",
                           "name": "invalidFulfillment"
                          }
                         ],
                         "expression": {
                          "type": "AssemblyCall",
                          "functionName": "iszero",
                          "arguments": [
                           {
                            "type": "AssemblyCall",
                            "functionName": "and",
                            "arguments": [
                             {
                              "type": "AssemblyCall",
                              "functionName": "eq",
                              "arguments": [
                               {
                                "type": "AssemblyCall",
                                "functionName": "mload",
                                "arguments": [
                                 {
                                  "type": "AssemblyCall",
                                  "functionName": "add",
                                  "arguments": [
                                   {
                                    "type": "AssemblyCall",
                                    "functionName": "considerationItemPtr",
                                    "arguments": []
                                   },
                                   {
                                    "type": "AssemblyCall",
                                    "functionName": "ConsiderItem_recipient_offset",
                                    "arguments": []
                                   }
                                  ]
                                 }
                                ]
                               },
                               {
                                "type": "AssemblyCall",
                                "functionName": "mload",
                                "arguments": [
                                 {
                                  "type": "AssemblyCall",
                                  "functionName": "add",
                                  "arguments": [
                                   {
                                    "type": "AssemblyCall",
                                    "functionName": "receivedItem",
                                    "arguments": []
                                   },
                                   {
                                    "type": "AssemblyCall",
                                    "functionName": "ReceivedItem_recipient_offset",
                                    "arguments": []
                                   }
                                  ]
                                 }
                                ]
                               }
                              ]
                             },
                             {
                              "type": "AssemblyCall",
                              "functionName": "and",
                              "arguments": [
                               {
                                "type": "AssemblyCall",
                                "functionName": "eq",
                                "arguments": [
                                 {
                                  "type": "AssemblyCall",
                                  "functionName": "mload",
                                  "arguments": [
                                   {
                                    "type": "AssemblyCall",
                                    "functionName": "considerationItemPtr",
                                    "arguments": []
                                   }
                                  ]
                                 },
                                 {
                                  "type": "AssemblyCall",
                                  "functionName": "mload",
                                  "arguments": [
                                   {
                                    "type": "AssemblyCall",
                                    "functionName": "receivedItem",
                                    "arguments": []
                                   }
                                  ]
                                 }
                                ]
                               },
                               {
                                "type": "AssemblyCall",
                                "functionName": "and",
                                "arguments": [
                                 {
                                  "type": "AssemblyCall",
                                  "functionName": "eq",
                                  "arguments": [
                                   {
                                    "type": "AssemblyCall",
                                    "functionName": "mload",
                                    "arguments": [
                                     {
                                      "type": "AssemblyCall",
                                      "functionName": "add",
                                      "arguments": [
                                       {
                                        "type": "AssemblyCall",
                                        "functionName": "considerationItemPtr",
                                        "arguments": []
                                       },
                                       {
                                        "type": "AssemblyCall",
                                        "functionName": "Common_token_offset",
                                        "arguments": []
                                       }
                                      ]
                                     }
                                    ]
                                   },
                                   {
                                    "type": "AssemblyCall",
                                    "functionName": "mload",
                                    "arguments": [
                                     {
                                      "type": "AssemblyCall",
                                      "functionName": "add",
                                      "arguments": [
                                       {
                                        "type": "AssemblyCall",
                                        "functionName": "receivedItem",
                                        "arguments": []
                                       },
                                       {
                                        "type": "AssemblyCall",
                                        "functionName": "Common_token_offset",
                                        "arguments": []
                                       }
                                      ]
                                     }
                                    ]
                                   }
                                  ]
                                 },
                                 {
                                  "type": "AssemblyCall",
                                  "functionName": "eq",
                                  "arguments": [
                                   {
                                    "type": "AssemblyCall",
                                    "functionName": "mload",
                                    "arguments": [
                                     {
                                      "type": "AssemblyCall",
                                      "functionName": "add",
                                      "arguments": [
                                       {
                                        "type": "AssemblyCall",
                                        "functionName": "considerationItemPtr",
                                        "arguments": []
                                       },
                                       {
                                        "type": "AssemblyCall",
                                        "functionName": "Common_identifier_offset",
                                        "arguments": []
                                       }
                                      ]
                                     }
                                    ]
                                   },
                                   {
                                    "type": "AssemblyCall",
                                    "functionName": "mload",
                                    "arguments": [
                                     {
                                      "type": "AssemblyCall",
                                      "functionName": "add",
                                      "arguments": [
                                       {
                                        "type": "AssemblyCall",
                                        "functionName": "receivedItem",
                                        "arguments": []
                                       },
                                       {
                                        "type": "AssemblyCall",
                                        "functionName": "Common_identifier_offset",
                                        "arguments": []
                                       }
                                      ]
                                     }
                                    ]
                                   }
                                  ]
                                 }
                                ]
                               }
                              ]
                             }
                            ]
                           }
                          ]
                         }
                        },
                        {
                         "type": "AssemblyIf",
                         "condition": {
                          "type": "AssemblyCall",
                          "functionName": "invalidFulfillment",
                          "arguments": []
                         },
                         "body": {
                          "type": "AssemblyBlock",
                          "operations": [
                           {
                            "type": "Break"
                           }
                          ]
                         }
                        }
                       ]
                      }
                     }
                    ]
                   }
                  }
                 ]
                }
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "Identifier",
           "name": "invalidFulfillment"
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "InvalidFulfillmentComponentData"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "_assertIsValidOrderStaticcallSuccess",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "success",
         "identifier": {
          "type": "Identifier",
          "name": "success"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "orderHash",
         "identifier": {
          "type": "Identifier",
          "name": "orderHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "UnaryOperation",
           "operator": "!",
           "subExpression": {
            "type": "Identifier",
            "name": "success"
           },
           "isPrefix": true
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "_revertWithReasonIfOneIsReturned"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "InvalidRestrictedOrder"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "orderHash"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes4",
             "stateMutability": null
            },
            "name": "result",
            "identifier": {
             "type": "Identifier",
             "name": "result"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyIf",
             "condition": {
              "type": "AssemblyCall",
              "functionName": "eq",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "returndatasize",
                "arguments": []
               },
               {
                "type": "HexNumber",
                "value": "0x20"
               }
              ]
             },
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyCall",
                "functionName": "returndatacopy",
                "arguments": [
                 {
                  "type": "DecimalNumber",
                  "value": "0"
                 },
                 {
                  "type": "DecimalNumber",
                  "value": "0"
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x20"
                 }
                ]
               },
               {
                "type": "AssemblyAssignment",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "result"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "mload",
                 "arguments": [
                  {
                   "type": "DecimalNumber",
                   "value": "0"
                  }
                 ]
                }
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "Identifier",
            "name": "result"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "ZoneInterface"
             },
             "memberName": "isValidOrder"
            },
            "memberName": "selector"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "InvalidRestrictedOrder"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "orderHash"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "_verifyOrderStatus",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "orderHash",
         "identifier": {
          "type": "Identifier",
          "name": "orderHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "OrderStatus"
         },
         "name": "orderStatus",
         "identifier": {
          "type": "Identifier",
          "name": "orderStatus"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "onlyAllowUnused",
         "identifier": {
          "type": "Identifier",
          "name": "onlyAllowUnused"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "revertOnInvalid",
         "identifier": {
          "type": "Identifier",
          "name": "revertOnInvalid"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "valid",
         "identifier": {
          "type": "Identifier",
          "name": "valid"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "orderStatus"
           },
           "memberName": "isCancelled"
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "IfStatement",
             "condition": {
              "type": "Identifier",
              "name": "revertOnInvalid"
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "RevertStatement",
                "revertCall": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "OrderIsCancelled"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "orderHash"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": null
            },
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "BooleanLiteral",
              "value": false
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "orderStatus"
            },
            "memberName": "numerator"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "IfStatement",
             "condition": {
              "type": "Identifier",
              "name": "onlyAllowUnused"
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "RevertStatement",
                "revertCall": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "OrderPartiallyFilled"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "orderHash"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": {
              "type": "IfStatement",
              "condition": {
               "type": "BinaryOperation",
               "operator": ">=",
               "left": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "orderStatus"
                },
                "memberName": "numerator"
               },
               "right": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "orderStatus"
                },
                "memberName": "denominator"
               }
              },
              "trueBody": {
               "type": "Block",
               "statements": [
                {
                 "type": "IfStatement",
                 "condition": {
                  "type": "Identifier",
                  "name": "revertOnInvalid"
                 },
                 "trueBody": {
                  "type": "Block",
                  "statements": [
                   {
                    "type": "RevertStatement",
                    "revertCall": {
                     "type": "FunctionCall",
                     "expression": {
                      "type": "Identifier",
                      "name": "OrderAlreadyFilled"
                     },
                     "arguments": [
                      {
                       "type": "Identifier",
                       "name": "orderHash"
                      }
                     ],
                     "names": [],
                     "identifiers": []
                    }
                   }
                  ]
                 },
                 "falseBody": null
                },
                {
                 "type": "ReturnStatement",
                 "expression": {
                  "type": "BooleanLiteral",
                  "value": false
                 }
                }
               ]
              },
              "falseBody": null
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "valid"
           },
           "right": {
            "type": "BooleanLiteral",
            "value": true
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "_getHashByExecutionIndex",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "Execution"
          },
          "length": null
         },
         "name": "executions",
         "identifier": {
          "type": "Identifier",
          "name": "executions"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "executionIndex",
         "identifier": {
          "type": "Identifier",
          "name": "executionIndex"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "Execution"
            },
            "name": "execution",
            "identifier": {
             "type": "Identifier",
             "name": "execution"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "executions"
           },
           "index": {
            "type": "Identifier",
            "name": "executionIndex"
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "ReceivedItem"
            },
            "name": "item",
            "identifier": {
             "type": "Identifier",
             "name": "item"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "execution"
           },
           "memberName": "item"
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_hashBatchableItemIdentifier"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "item"
             },
             "memberName": "token"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "execution"
             },
             "memberName": "offerer"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "item"
             },
             "memberName": "recipient"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "execution"
             },
             "memberName": "conduit"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "_hashBatchableItemIdentifier",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "token",
         "identifier": {
          "type": "Identifier",
          "name": "token"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "from",
         "identifier": {
          "type": "Identifier",
          "name": "from"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "to",
         "identifier": {
          "type": "Identifier",
          "name": "to"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "conduit",
         "identifier": {
          "type": "Identifier",
          "name": "conduit"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "value",
         "identifier": {
          "type": "Identifier",
          "name": "value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x20"
              },
              {
               "type": "AssemblyCall",
               "functionName": "conduit",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x1c"
              },
              {
               "type": "AssemblyCall",
               "functionName": "to",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x08"
              },
              {
               "type": "AssemblyCall",
               "functionName": "from",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x00"
              },
              {
               "type": "AssemblyCall",
               "functionName": "or",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "shl",
                 "arguments": [
                  {
                   "type": "HexNumber",
                   "value": "0x60"
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "token",
                   "arguments": []
                  }
                 ]
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "shr",
                 "arguments": [
                  {
                   "type": "HexNumber",
                   "value": "0x40"
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "from",
                   "arguments": []
                  }
                 ]
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "value"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "keccak256",
              "arguments": [
               {
                "type": "HexNumber",
                "value": "0x00"
               },
               {
                "type": "HexNumber",
                "value": "0x40"
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "_hashDigest",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "domainSeparator",
         "identifier": {
          "type": "Identifier",
          "name": "domainSeparator"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "orderHash",
         "identifier": {
          "type": "Identifier",
          "name": "orderHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "value",
         "identifier": {
          "type": "Identifier",
          "name": "value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x00"
              },
              {
               "type": "HexNumber",
               "value": "0x1901000000000000000000000000000000000000000000000000000000000000"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x02"
              },
              {
               "type": "AssemblyCall",
               "functionName": "domainSeparator",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x22"
              },
              {
               "type": "AssemblyCall",
               "functionName": "orderHash",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "value"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "keccak256",
              "arguments": [
               {
                "type": "HexNumber",
                "value": "0x00"
               },
               {
                "type": "HexNumber",
                "value": "0x42"
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x22"
              },
              {
               "type": "DecimalNumber",
               "value": "0"
              }
             ]
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "_isItemWithCriteria",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "ItemType"
         },
         "name": "itemType",
         "identifier": {
          "type": "Identifier",
          "name": "itemType"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "withCriteria",
         "identifier": {
          "type": "Identifier",
          "name": "withCriteria"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "withCriteria"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "gt",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "itemType",
                "arguments": []
               },
               {
                "type": "DecimalNumber",
                "value": "3"
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "_doesNotSupportPartialFills",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "OrderType"
         },
         "name": "orderType",
         "identifier": {
          "type": "Identifier",
          "name": "orderType"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "isFullOrder",
         "identifier": {
          "type": "Identifier",
          "name": "isFullOrder"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "isFullOrder"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "iszero",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "and",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "orderType",
                  "arguments": []
                 },
                 {
                  "type": "DecimalNumber",
                  "value": "1"
                 }
                ]
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "_convertOrderToAdvanced",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Order"
         },
         "name": "order",
         "identifier": {
          "type": "Identifier",
          "name": "order"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "AdvancedOrder"
         },
         "name": "advancedOrder",
         "identifier": {
          "type": "Identifier",
          "name": "advancedOrder"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "advancedOrder"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "AdvancedOrder"
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "order"
              },
              "memberName": "parameters"
             },
             {
              "type": "NumberLiteral",
              "number": "1",
              "subdenomination": null
             },
             {
              "type": "NumberLiteral",
              "number": "1",
              "subdenomination": null
             },
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "order"
              },
              "memberName": "signature"
             },
             {
              "type": "StringLiteral",
              "value": "",
              "parts": [
               ""
              ],
              "isUnicode": [
               false
              ]
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "_convertOrdersToAdvanced",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "Order"
          },
          "length": null
         },
         "name": "orders",
         "identifier": {
          "type": "Identifier",
          "name": "orders"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "AdvancedOrder"
          },
          "length": null
         },
         "name": "advancedOrders",
         "identifier": {
          "type": "Identifier",
          "name": "advancedOrders"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "totalOrders",
            "identifier": {
             "type": "Identifier",
             "name": "totalOrders"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "orders"
           },
           "memberName": "length"
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "advancedOrders"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "NewExpression",
             "typeName": {
              "type": "ArrayTypeName",
              "baseTypeName": {
               "type": "UserDefinedTypeName",
               "namePath": "AdvancedOrder"
              },
              "length": null
             }
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "totalOrders"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "UncheckedStatement",
          "block": {
           "type": "Block",
           "statements": [
            {
             "type": "ForStatement",
             "initExpression": {
              "type": "VariableDeclarationStatement",
              "variables": [
               {
                "type": "VariableDeclaration",
                "typeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "name": "i",
                "identifier": {
                 "type": "Identifier",
                 "name": "i"
                },
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false,
                "expression": null
               }
              ],
              "initialValue": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "conditionExpression": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "i"
              },
              "right": {
               "type": "Identifier",
               "name": "totalOrders"
              }
             },
             "loopExpression": {
              "type": "ExpressionStatement",
              "expression": {
               "type": "UnaryOperation",
               "operator": "++",
               "subExpression": {
                "type": "Identifier",
                "name": "i"
               },
               "isPrefix": true
              }
             },
             "body": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "advancedOrders"
                  },
                  "index": {
                   "type": "Identifier",
                   "name": "i"
                  }
                 },
                 "right": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "Identifier",
                   "name": "_convertOrderToAdvanced"
                  },
                  "arguments": [
                   {
                    "type": "IndexAccess",
                    "base": {
                     "type": "Identifier",
                     "name": "orders"
                    },
                    "index": {
                     "type": "Identifier",
                     "name": "i"
                    }
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                }
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "advancedOrders"
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "_revertWithReasonIfOneIsReturned",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyIf",
             "condition": {
              "type": "AssemblyCall",
              "functionName": "returndatasize",
              "arguments": []
             },
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyCall",
                "functionName": "returndatacopy",
                "arguments": [
                 {
                  "type": "DecimalNumber",
                  "value": "0"
                 },
                 {
                  "type": "DecimalNumber",
                  "value": "0"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "returndatasize",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "revert",
                "arguments": [
                 {
                  "type": "DecimalNumber",
                  "value": "0"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "returndatasize",
                  "arguments": []
                 }
                ]
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "_verifyProof",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "leaf",
         "identifier": {
          "type": "Identifier",
          "name": "leaf"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "root",
         "identifier": {
          "type": "Identifier",
          "name": "root"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "bytes32",
           "stateMutability": null
          },
          "length": null
         },
         "name": "proof",
         "identifier": {
          "type": "Identifier",
          "name": "proof"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "computedHash",
            "identifier": {
             "type": "Identifier",
             "name": "computedHash"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "ElementaryTypeName",
            "name": "bytes32",
            "stateMutability": null
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "leaf"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "UncheckedStatement",
          "block": {
           "type": "Block",
           "statements": [
            {
             "type": "ForStatement",
             "initExpression": {
              "type": "VariableDeclarationStatement",
              "variables": [
               {
                "type": "VariableDeclaration",
                "typeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "name": "i",
                "identifier": {
                 "type": "Identifier",
                 "name": "i"
                },
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false,
                "expression": null
               }
              ],
              "initialValue": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "conditionExpression": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "i"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "proof"
               },
               "memberName": "length"
              }
             },
             "loopExpression": {
              "type": "ExpressionStatement",
              "expression": {
               "type": "UnaryOperation",
               "operator": "++",
               "subExpression": {
                "type": "Identifier",
                "name": "i"
               },
               "isPrefix": true
              }
             },
             "body": {
              "type": "Block",
              "statements": [
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "ElementaryTypeName",
                   "name": "bytes32",
                   "stateMutability": null
                  },
                  "name": "proofElement",
                  "identifier": {
                   "type": "Identifier",
                   "name": "proofElement"
                  },
                  "storageLocation": null,
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "proof"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "i"
                 }
                }
               },
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "<=",
                 "left": {
                  "type": "Identifier",
                  "name": "computedHash"
                 },
                 "right": {
                  "type": "Identifier",
                  "name": "proofElement"
                 }
                },
                "trueBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                     "type": "Identifier",
                     "name": "computedHash"
                    },
                    "right": {
                     "type": "FunctionCall",
                     "expression": {
                      "type": "Identifier",
                      "name": "_efficientHash"
                     },
                     "arguments": [
                      {
                       "type": "Identifier",
                       "name": "computedHash"
                      },
                      {
                       "type": "Identifier",
                       "name": "proofElement"
                      }
                     ],
                     "names": [],
                     "identifiers": []
                    }
                   }
                  }
                 ]
                },
                "falseBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                     "type": "Identifier",
                     "name": "computedHash"
                    },
                    "right": {
                     "type": "FunctionCall",
                     "expression": {
                      "type": "Identifier",
                      "name": "_efficientHash"
                     },
                     "arguments": [
                      {
                       "type": "Identifier",
                       "name": "proofElement"
                      },
                      {
                       "type": "Identifier",
                       "name": "computedHash"
                      }
                     ],
                     "names": [],
                     "identifiers": []
                    }
                   }
                  }
                 ]
                }
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "Identifier",
            "name": "computedHash"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "root"
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "InvalidProof"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "_efficientHash",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "a",
         "identifier": {
          "type": "Identifier",
          "name": "a"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "b",
         "identifier": {
          "type": "Identifier",
          "name": "b"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "value",
         "identifier": {
          "type": "Identifier",
          "name": "value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x00"
              },
              {
               "type": "AssemblyCall",
               "functionName": "a",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x20"
              },
              {
               "type": "AssemblyCall",
               "functionName": "b",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "value"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "keccak256",
              "arguments": [
               {
                "type": "HexNumber",
                "value": "0x00"
               },
               {
                "type": "HexNumber",
                "value": "0x40"
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "_assertConsiderationLengthIsNotLessThanOriginalConsiderationLength",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "suppliedConsiderationItemTotal",
         "identifier": {
          "type": "Identifier",
          "name": "suppliedConsiderationItemTotal"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "originalConsiderationItemTotal",
         "identifier": {
          "type": "Identifier",
          "name": "originalConsiderationItemTotal"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "suppliedConsiderationItemTotal"
           },
           "right": {
            "type": "Identifier",
            "name": "originalConsiderationItemTotal"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "MissingOriginalConsiderationItems"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "_assertNonZeroAmount",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "amount"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "MissingItemAmount"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      },
      {
       "type": "FunctionDefinition",
       "name": "_assertValidBasicOrderParameterOffsets",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bool",
             "stateMutability": null
            },
            "name": "validOffsets",
            "identifier": {
             "type": "Identifier",
             "name": "validOffsets"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "validOffsets"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "and",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "eq",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "calldataload",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x04"
                   }
                  ]
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x20"
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "eq",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "calldataload",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x224"
                   }
                  ]
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x240"
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "validOffsets"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "and",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "validOffsets",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "eq",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "calldataload",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x244"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x260"
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "mul",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "calldataload",
                      "arguments": [
                       {
                        "type": "HexNumber",
                        "value": "0x264"
                       }
                      ]
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x40"
                     }
                    ]
                   }
                  ]
                 }
                ]
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "UnaryOperation",
           "operator": "!",
           "subExpression": {
            "type": "Identifier",
            "name": "validOffsets"
           },
           "isPrefix": true
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "InvalidBasicOrderParameterEncoding"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "pure"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-SeaportProtocol/seaport-f17082fca3e99b409f53040d8858e84b0246aa22/contracts/lib/ConsiderationInternalView.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.13"
    },
    {
     "type": "ImportDirective",
     "path": "../interfaces/EIP1271Interface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../interfaces/EIP1271Interface.sol",
      "parts": [
       "../interfaces/EIP1271Interface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "EIP1271Interface",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "EIP1271Interface"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "../interfaces/ZoneInterface.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../interfaces/ZoneInterface.sol",
      "parts": [
       "../interfaces/ZoneInterface.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "ZoneInterface",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "ZoneInterface"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "./ConsiderationEnums.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./ConsiderationEnums.sol",
      "parts": [
       "./ConsiderationEnums.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "OrderType",
       null
      ],
      [
       "ItemType",
       null
      ],
      [
       "Side",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "OrderType"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "ItemType"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "Side"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "./ConsiderationStructs.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./ConsiderationStructs.sol",
      "parts": [
       "./ConsiderationStructs.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "OfferItem",
       null
      ],
      [
       "ConsiderationItem",
       null
      ],
      [
       "SpentItem",
       null
      ],
      [
       "ReceivedItem",
       null
      ],
      [
       "OrderParameters",
       null
      ],
      [
       "Order",
       null
      ],
      [
       "AdvancedOrder",
       null
      ],
      [
       "OrderStatus",
       null
      ],
      [
       "Execution",
       null
      ],
      [
       "FulfillmentComponent",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "OfferItem"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "ConsiderationItem"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "SpentItem"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "ReceivedItem"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "OrderParameters"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "Order"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "AdvancedOrder"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "OrderStatus"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "Execution"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "FulfillmentComponent"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "./ConsiderationPure.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./ConsiderationPure.sol",
      "parts": [
       "./ConsiderationPure.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "ConsiderationPure",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "ConsiderationPure"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "./ConsiderationConstants.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./ConsiderationConstants.sol",
      "parts": [
       "./ConsiderationConstants.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "ConsiderationInternalView",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ConsiderationPure"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "legacyProxyRegistry",
         "identifier": {
          "type": "Identifier",
          "name": "legacyProxyRegistry"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "legacyTokenTransferProxy",
         "identifier": {
          "type": "Identifier",
          "name": "legacyTokenTransferProxy"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "requiredProxyImplementation",
         "identifier": {
          "type": "Identifier",
          "name": "requiredProxyImplementation"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": []
       },
       "visibility": "default",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "ConsiderationPure",
         "arguments": [
          {
           "type": "Identifier",
           "name": "legacyProxyRegistry"
          },
          {
           "type": "Identifier",
           "name": "legacyTokenTransferProxy"
          },
          {
           "type": "Identifier",
           "name": "requiredProxyImplementation"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_assertNonReentrant",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "Identifier",
            "name": "_reentrancyGuard"
           },
           "right": {
            "type": "Identifier",
            "name": "_NOT_ENTERED"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "NoReentrantCalls"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "_verifyTime",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "startTime",
         "identifier": {
          "type": "Identifier",
          "name": "startTime"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "endTime",
         "identifier": {
          "type": "Identifier",
          "name": "endTime"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "revertOnInvalid",
         "identifier": {
          "type": "Identifier",
          "name": "revertOnInvalid"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "valid",
         "identifier": {
          "type": "Identifier",
          "name": "valid"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "||",
           "left": {
            "type": "BinaryOperation",
            "operator": ">",
            "left": {
             "type": "Identifier",
             "name": "startTime"
            },
            "right": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "<=",
            "left": {
             "type": "Identifier",
             "name": "endTime"
            },
            "right": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "timestamp"
            }
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "IfStatement",
             "condition": {
              "type": "Identifier",
              "name": "revertOnInvalid"
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "RevertStatement",
                "revertCall": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "InvalidTime"
                 },
                 "arguments": [],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": null
            },
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "BooleanLiteral",
              "value": false
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "valid"
           },
           "right": {
            "type": "BooleanLiteral",
            "value": true
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "_assertValidTokenTransfer",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "success",
         "identifier": {
          "type": "Identifier",
          "name": "success"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "token",
         "identifier": {
          "type": "Identifier",
          "name": "token"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "from",
         "identifier": {
          "type": "Identifier",
          "name": "from"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "to",
         "identifier": {
          "type": "Identifier",
          "name": "to"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "tokenId",
         "identifier": {
          "type": "Identifier",
          "name": "tokenId"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "UnaryOperation",
           "operator": "!",
           "subExpression": {
            "type": "Identifier",
            "name": "success"
           },
           "isPrefix": true
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "_revertWithReasonIfOneIsReturned"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "TokenTransferGenericFailure"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "token"
               },
               {
                "type": "Identifier",
                "name": "from"
               },
               {
                "type": "Identifier",
                "name": "to"
               },
               {
                "type": "Identifier",
                "name": "tokenId"
               },
               {
                "type": "Identifier",
                "name": "amount"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_assertContractIsDeployed"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "token"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "_assertContractIsDeployed",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "account",
         "identifier": {
          "type": "Identifier",
          "name": "account"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "returnDataSize",
            "identifier": {
             "type": "Identifier",
             "name": "returnDataSize"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "returnDataSize"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "returndatasize",
              "arguments": []
             }
            }
           ]
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "&&",
           "left": {
            "type": "BinaryOperation",
            "operator": "==",
            "left": {
             "type": "Identifier",
             "name": "returnDataSize"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "==",
            "left": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "account"
              },
              "memberName": "code"
             },
             "memberName": "length"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "NoContract"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "account"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "_verifySignature",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "offerer",
         "identifier": {
          "type": "Identifier",
          "name": "offerer"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "orderHash",
         "identifier": {
          "type": "Identifier",
          "name": "orderHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "signature",
         "identifier": {
          "type": "Identifier",
          "name": "signature"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "offerer"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "msg"
            },
            "memberName": "sender"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": null
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "digest",
            "identifier": {
             "type": "Identifier",
             "name": "digest"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_hashDigest"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "_domainSeparator"
             },
             "arguments": [],
             "names": [],
             "identifiers": []
            },
            {
             "type": "Identifier",
             "name": "orderHash"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "r",
            "identifier": {
             "type": "Identifier",
             "name": "r"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "s",
            "identifier": {
             "type": "Identifier",
             "name": "s"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint8",
             "stateMutability": null
            },
            "name": "v",
            "identifier": {
             "type": "Identifier",
             "name": "v"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "signature"
            },
            "memberName": "length"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "64",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "bytes32",
                "stateMutability": null
               },
               "name": "vs",
               "identifier": {
                "type": "Identifier",
                "name": "vs"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": null
            },
            {
             "type": "InlineAssemblyStatement",
             "language": null,
             "flags": [],
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyAssignment",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "r"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "mload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "signature",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x20"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyAssignment",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "vs"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "mload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "signature",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x40"
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyAssignment",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "s"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "and",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "vs",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "EIP2098_allButHighestBitMask",
                   "arguments": []
                  }
                 ]
                }
               },
               {
                "type": "AssemblyAssignment",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "v"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "shr",
                   "arguments": [
                    {
                     "type": "DecimalNumber",
                     "value": "255"
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "vs",
                     "arguments": []
                    }
                   ]
                  },
                  {
                   "type": "DecimalNumber",
                   "value": "27"
                  }
                 ]
                }
               }
              ]
             }
            }
           ]
          },
          "falseBody": {
           "type": "IfStatement",
           "condition": {
            "type": "BinaryOperation",
            "operator": "==",
            "left": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "signature"
             },
             "memberName": "length"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "65",
             "subdenomination": null
            }
           },
           "trueBody": {
            "type": "Block",
            "statements": [
             {
              "type": "InlineAssemblyStatement",
              "language": null,
              "flags": [],
              "body": {
               "type": "AssemblyBlock",
               "operations": [
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "r"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mload",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "signature",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x20"
                     }
                    ]
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "s"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "mload",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "signature",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x40"
                     }
                    ]
                   }
                  ]
                 }
                },
                {
                 "type": "AssemblyAssignment",
                 "names": [
                  {
                   "type": "Identifier",
                   "name": "v"
                  }
                 ],
                 "expression": {
                  "type": "AssemblyCall",
                  "functionName": "byte",
                  "arguments": [
                   {
                    "type": "DecimalNumber",
                    "value": "0"
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "mload",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "add",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "signature",
                        "arguments": []
                       },
                       {
                        "type": "HexNumber",
                        "value": "0x60"
                       }
                      ]
                     }
                    ]
                   }
                  ]
                 }
                }
               ]
              }
             },
             {
              "type": "IfStatement",
              "condition": {
               "type": "BinaryOperation",
               "operator": "&&",
               "left": {
                "type": "BinaryOperation",
                "operator": "!=",
                "left": {
                 "type": "Identifier",
                 "name": "v"
                },
                "right": {
                 "type": "NumberLiteral",
                 "number": "27",
                 "subdenomination": null
                }
               },
               "right": {
                "type": "BinaryOperation",
                "operator": "!=",
                "left": {
                 "type": "Identifier",
                 "name": "v"
                },
                "right": {
                 "type": "NumberLiteral",
                 "number": "28",
                 "subdenomination": null
                }
               }
              },
              "trueBody": {
               "type": "Block",
               "statements": [
                {
                 "type": "RevertStatement",
                 "revertCall": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "Identifier",
                   "name": "BadSignatureV"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "v"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                }
               ]
              },
              "falseBody": null
             }
            ]
           },
           "falseBody": {
            "type": "Block",
            "statements": [
             {
              "type": "ExpressionStatement",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "_verifySignatureViaERC1271"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "offerer"
                },
                {
                 "type": "Identifier",
                 "name": "digest"
                },
                {
                 "type": "Identifier",
                 "name": "signature"
                }
               ],
               "names": [],
               "identifiers": []
              }
             },
             {
              "type": "ReturnStatement",
              "expression": null
             }
            ]
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "signer",
            "identifier": {
             "type": "Identifier",
             "name": "signer"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "ecrecover"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "digest"
            },
            {
             "type": "Identifier",
             "name": "v"
            },
            {
             "type": "Identifier",
             "name": "r"
            },
            {
             "type": "Identifier",
             "name": "s"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "signer"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "address"
            },
            "arguments": [
             {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "InvalidSignature"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": {
           "type": "IfStatement",
           "condition": {
            "type": "BinaryOperation",
            "operator": "!=",
            "left": {
             "type": "Identifier",
             "name": "signer"
            },
            "right": {
             "type": "Identifier",
             "name": "offerer"
            }
           },
           "trueBody": {
            "type": "Block",
            "statements": [
             {
              "type": "ExpressionStatement",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "_verifySignatureViaERC1271"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "offerer"
                },
                {
                 "type": "Identifier",
                 "name": "digest"
                },
                {
                 "type": "Identifier",
                 "name": "signature"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            ]
           },
           "falseBody": null
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "_verifySignatureViaERC1271",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "offerer",
         "identifier": {
          "type": "Identifier",
          "name": "offerer"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "digest",
         "identifier": {
          "type": "Identifier",
          "name": "digest"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "signature",
         "identifier": {
          "type": "Identifier",
          "name": "signature"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bool",
             "stateMutability": null
            },
            "name": "success",
            "identifier": {
             "type": "Identifier",
             "name": "success"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_staticcall"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "offerer"
            },
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "abi"
              },
              "memberName": "encodeWithSelector"
             },
             "arguments": [
              {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "EIP1271Interface"
                },
                "memberName": "isValidSignature"
               },
               "memberName": "selector"
              },
              {
               "type": "Identifier",
               "name": "digest"
              },
              {
               "type": "Identifier",
               "name": "signature"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "UnaryOperation",
           "operator": "!",
           "subExpression": {
            "type": "Identifier",
            "name": "success"
           },
           "isPrefix": true
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "_revertWithReasonIfOneIsReturned"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "BadContractSignature"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes4",
             "stateMutability": null
            },
            "name": "result",
            "identifier": {
             "type": "Identifier",
             "name": "result"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyIf",
             "condition": {
              "type": "AssemblyCall",
              "functionName": "eq",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "returndatasize",
                "arguments": []
               },
               {
                "type": "HexNumber",
                "value": "0x20"
               }
              ]
             },
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyCall",
                "functionName": "returndatacopy",
                "arguments": [
                 {
                  "type": "DecimalNumber",
                  "value": "0"
                 },
                 {
                  "type": "DecimalNumber",
                  "value": "0"
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x20"
                 }
                ]
               },
               {
                "type": "AssemblyAssignment",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "result"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "mload",
                 "arguments": [
                  {
                   "type": "DecimalNumber",
                   "value": "0"
                  }
                 ]
                }
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "Identifier",
            "name": "result"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "EIP1271Interface"
             },
             "memberName": "isValidSignature"
            },
            "memberName": "selector"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "InvalidSigner"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "_staticcall",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "target",
         "identifier": {
          "type": "Identifier",
          "name": "target"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "callData",
         "identifier": {
          "type": "Identifier",
          "name": "callData"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "success",
         "identifier": {
          "type": "Identifier",
          "name": "success"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "TupleExpression",
            "components": [
             {
              "type": "Identifier",
              "name": "success"
             },
             null
            ],
            "isArray": false
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "target"
             },
             "memberName": "staticcall"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "callData"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "_domainSeparator",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Conditional",
           "condition": {
            "type": "BinaryOperation",
            "operator": "==",
            "left": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "block"
             },
             "memberName": "chainid"
            },
            "right": {
             "type": "Identifier",
             "name": "_CHAIN_ID"
            }
           },
           "trueExpression": {
            "type": "Identifier",
            "name": "_DOMAIN_SEPARATOR"
           },
           "falseExpression": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_deriveDomainSeparator"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "_getOrderHash",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "OrderParameters"
         },
         "name": "orderParameters",
         "identifier": {
          "type": "Identifier",
          "name": "orderParameters"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "nonce",
         "identifier": {
          "type": "Identifier",
          "name": "nonce"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "orderHash",
         "identifier": {
          "type": "Identifier",
          "name": "orderHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "originalConsiderationLength",
            "identifier": {
             "type": "Identifier",
             "name": "originalConsiderationLength"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "TupleExpression",
           "components": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "orderParameters"
             },
             "memberName": "totalOriginalConsiderationItems"
            }
           ],
           "isArray": false
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "offerHash",
            "identifier": {
             "type": "Identifier",
             "name": "offerHash"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "typeHash",
            "identifier": {
             "type": "Identifier",
             "name": "typeHash"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "Identifier",
           "name": "_OFFER_ITEM_TYPEHASH"
          }
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "hashArrPtr"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "FreeMemoryPointerSlot",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "offerArrPtr"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "add",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "orderParameters",
                  "arguments": []
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x40"
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "offerLength"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "offerArrPtr",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "offerArrPtr"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "offerArrPtr",
                "arguments": []
               },
               {
                "type": "HexNumber",
                "value": "0x20"
               }
              ]
             }
            },
            {
             "type": "AssemblyFor",
             "pre": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "i"
                 }
                ],
                "expression": {
                 "type": "DecimalNumber",
                 "value": "0"
                }
               }
              ]
             },
             "condition": {
              "type": "AssemblyCall",
              "functionName": "lt",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "i",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "offerLength",
                "arguments": []
               }
              ]
             },
             "post": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyAssignment",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "i"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "i",
                   "arguments": []
                  },
                  {
                   "type": "DecimalNumber",
                   "value": "1"
                  }
                 ]
                }
               }
              ]
             },
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "ptr"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "sub",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "mload",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "offerArrPtr",
                     "arguments": []
                    }
                   ]
                  },
                  {
                   "type": "HexNumber",
                   "value": "0x20"
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "value"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "mload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "ptr",
                   "arguments": []
                  }
                 ]
                }
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "ptr",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "typeHash",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "hashArrPtr",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "keccak256",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "ptr",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0xc0"
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "ptr",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "value",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyAssignment",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "offerArrPtr"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "offerArrPtr",
                   "arguments": []
                  },
                  {
                   "type": "HexNumber",
                   "value": "0x20"
                  }
                 ]
                }
               },
               {
                "type": "AssemblyAssignment",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "hashArrPtr"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "hashArrPtr",
                   "arguments": []
                  },
                  {
                   "type": "HexNumber",
                   "value": "0x20"
                  }
                 ]
                }
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "offerHash"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "keccak256",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "mload",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "FreeMemoryPointerSlot",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mul",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "offerLength",
                  "arguments": []
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x20"
                 }
                ]
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "considerationHash",
            "identifier": {
             "type": "Identifier",
             "name": "considerationHash"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "typeHash"
           },
           "right": {
            "type": "Identifier",
            "name": "_CONSIDERATION_ITEM_TYPEHASH"
           }
          }
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "hashArrPtr"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "FreeMemoryPointerSlot",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "considerationArrPtr"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "mload",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "orderParameters",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x60"
                   }
                  ]
                 }
                ]
               },
               {
                "type": "HexNumber",
                "value": "0x20"
               }
              ]
             }
            },
            {
             "type": "AssemblyFor",
             "pre": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "i"
                 }
                ],
                "expression": {
                 "type": "DecimalNumber",
                 "value": "0"
                }
               }
              ]
             },
             "condition": {
              "type": "AssemblyCall",
              "functionName": "lt",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "i",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "originalConsiderationLength",
                "arguments": []
               }
              ]
             },
             "post": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyAssignment",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "i"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "i",
                   "arguments": []
                  },
                  {
                   "type": "DecimalNumber",
                   "value": "1"
                  }
                 ]
                }
               }
              ]
             },
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "ptr"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "sub",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "mload",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "considerationArrPtr",
                     "arguments": []
                    }
                   ]
                  },
                  {
                   "type": "HexNumber",
                   "value": "0x20"
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "value"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "mload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "ptr",
                   "arguments": []
                  }
                 ]
                }
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "ptr",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "typeHash",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "hashArrPtr",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "keccak256",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "ptr",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0xe0"
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "ptr",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "value",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyAssignment",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "considerationArrPtr"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "considerationArrPtr",
                   "arguments": []
                  },
                  {
                   "type": "HexNumber",
                   "value": "0x20"
                  }
                 ]
                }
               },
               {
                "type": "AssemblyAssignment",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "hashArrPtr"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "hashArrPtr",
                   "arguments": []
                  },
                  {
                   "type": "HexNumber",
                   "value": "0x20"
                  }
                 ]
                }
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "considerationHash"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "keccak256",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "mload",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "FreeMemoryPointerSlot",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mul",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "originalConsiderationLength",
                  "arguments": []
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x20"
                 }
                ]
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "typeHash"
           },
           "right": {
            "type": "Identifier",
            "name": "_ORDER_TYPEHASH"
           }
          }
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "typeHashPtr"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "sub",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "orderParameters",
                "arguments": []
               },
               {
                "type": "HexNumber",
                "value": "0x20"
               }
              ]
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "previousValue"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "typeHashPtr",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "typeHashPtr",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "typeHash",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "offerHeadPtr"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "orderParameters",
                "arguments": []
               },
               {
                "type": "HexNumber",
                "value": "0x40"
               }
              ]
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "offerDataPtr"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "offerHeadPtr",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "offerHeadPtr",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "offerHash",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "considerationHeadPtr"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "orderParameters",
                "arguments": []
               },
               {
                "type": "HexNumber",
                "value": "0x60"
               }
              ]
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "considerationDataPtr"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "considerationHeadPtr",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "considerationHeadPtr",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "considerationHash",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "noncePtr"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "orderParameters",
                "arguments": []
               },
               {
                "type": "HexNumber",
                "value": "0x140"
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "noncePtr",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "nonce",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "orderHash"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "keccak256",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "typeHashPtr",
                "arguments": []
               },
               {
                "type": "HexNumber",
                "value": "0x180"
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "typeHashPtr",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "previousValue",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "offerHeadPtr",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "offerDataPtr",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "considerationHeadPtr",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "considerationDataPtr",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "noncePtr",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "originalConsiderationLength",
               "arguments": []
              }
             ]
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "_assertConsiderationLengthAndGetNoncedOrderHash",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "OrderParameters"
         },
         "name": "orderParameters",
         "identifier": {
          "type": "Identifier",
          "name": "orderParameters"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_assertConsiderationLengthIsNotLessThanOriginalConsiderationLength"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "orderParameters"
              },
              "memberName": "consideration"
             },
             "memberName": "length"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "orderParameters"
             },
             "memberName": "totalOriginalConsiderationItems"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_getOrderHash"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "orderParameters"
            },
            {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "_nonces"
             },
             "index": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "orderParameters"
              },
              "memberName": "offerer"
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "_assertRestrictedBasicOrderValidity",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "orderHash",
         "identifier": {
          "type": "Identifier",
          "name": "orderHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "zoneHash",
         "identifier": {
          "type": "Identifier",
          "name": "zoneHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "OrderType"
         },
         "name": "orderType",
         "identifier": {
          "type": "Identifier",
          "name": "orderType"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "offerer",
         "identifier": {
          "type": "Identifier",
          "name": "offerer"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "zone",
         "identifier": {
          "type": "Identifier",
          "name": "zone"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "&&",
           "left": {
            "type": "BinaryOperation",
            "operator": "&&",
            "left": {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "ElementaryTypeName",
               "name": "uint256",
               "stateMutability": null
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "orderType"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "NumberLiteral",
              "number": "1",
              "subdenomination": null
             }
            },
            "right": {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "sender"
             },
             "right": {
              "type": "Identifier",
              "name": "zone"
             }
            }
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "!=",
            "left": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            "right": {
             "type": "Identifier",
             "name": "offerer"
            }
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "bool",
                "stateMutability": null
               },
               "name": "success",
               "identifier": {
                "type": "Identifier",
                "name": "success"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "_staticcall"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "zone"
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "abi"
                 },
                 "memberName": "encodeWithSelector"
                },
                "arguments": [
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "ZoneInterface"
                   },
                   "memberName": "isValidOrder"
                  },
                  "memberName": "selector"
                 },
                 {
                  "type": "Identifier",
                  "name": "orderHash"
                 },
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "msg"
                  },
                  "memberName": "sender"
                 },
                 {
                  "type": "Identifier",
                  "name": "offerer"
                 },
                 {
                  "type": "Identifier",
                  "name": "zoneHash"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "_assertIsValidOrderStaticcallSuccess"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "success"
               },
               {
                "type": "Identifier",
                "name": "orderHash"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "_assertRestrictedAdvancedOrderValidity",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "AdvancedOrder"
         },
         "name": "advancedOrder",
         "identifier": {
          "type": "Identifier",
          "name": "advancedOrder"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "bytes32",
           "stateMutability": null
          },
          "length": null
         },
         "name": "priorOrderHashes",
         "identifier": {
          "type": "Identifier",
          "name": "priorOrderHashes"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "orderHash",
         "identifier": {
          "type": "Identifier",
          "name": "orderHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "zoneHash",
         "identifier": {
          "type": "Identifier",
          "name": "zoneHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "OrderType"
         },
         "name": "orderType",
         "identifier": {
          "type": "Identifier",
          "name": "orderType"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "offerer",
         "identifier": {
          "type": "Identifier",
          "name": "offerer"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "zone",
         "identifier": {
          "type": "Identifier",
          "name": "zone"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "&&",
           "left": {
            "type": "BinaryOperation",
            "operator": "&&",
            "left": {
             "type": "BinaryOperation",
             "operator": ">",
             "left": {
              "type": "FunctionCall",
              "expression": {
               "type": "ElementaryTypeName",
               "name": "uint256",
               "stateMutability": null
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "orderType"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "right": {
              "type": "NumberLiteral",
              "number": "1",
              "subdenomination": null
             }
            },
            "right": {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "sender"
             },
             "right": {
              "type": "Identifier",
              "name": "zone"
             }
            }
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "!=",
            "left": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            "right": {
             "type": "Identifier",
             "name": "offerer"
            }
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "bool",
                "stateMutability": null
               },
               "name": "success",
               "identifier": {
                "type": "Identifier",
                "name": "success"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": null
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "advancedOrder"
                },
                "memberName": "extraData"
               },
               "memberName": "length"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "success"
                 },
                 "right": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "Identifier",
                   "name": "_staticcall"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "zone"
                   },
                   {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "abi"
                     },
                     "memberName": "encodeWithSelector"
                    },
                    "arguments": [
                     {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "MemberAccess",
                       "expression": {
                        "type": "Identifier",
                        "name": "ZoneInterface"
                       },
                       "memberName": "isValidOrder"
                      },
                      "memberName": "selector"
                     },
                     {
                      "type": "Identifier",
                      "name": "orderHash"
                     },
                     {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "Identifier",
                       "name": "msg"
                      },
                      "memberName": "sender"
                     },
                     {
                      "type": "Identifier",
                      "name": "offerer"
                     },
                     {
                      "type": "Identifier",
                      "name": "zoneHash"
                     }
                    ],
                    "names": [],
                    "identifiers": []
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                }
               }
              ]
             },
             "falseBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "success"
                 },
                 "right": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "Identifier",
                   "name": "_staticcall"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "zone"
                   },
                   {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "abi"
                     },
                     "memberName": "encodeWithSelector"
                    },
                    "arguments": [
                     {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "MemberAccess",
                       "expression": {
                        "type": "Identifier",
                        "name": "ZoneInterface"
                       },
                       "memberName": "isValidOrderIncludingExtraData"
                      },
                      "memberName": "selector"
                     },
                     {
                      "type": "Identifier",
                      "name": "orderHash"
                     },
                     {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "Identifier",
                       "name": "msg"
                      },
                      "memberName": "sender"
                     },
                     {
                      "type": "Identifier",
                      "name": "advancedOrder"
                     },
                     {
                      "type": "Identifier",
                      "name": "priorOrderHashes"
                     }
                    ],
                    "names": [],
                    "identifiers": []
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                }
               }
              ]
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "_assertIsValidOrderStaticcallSuccess"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "success"
               },
               {
                "type": "Identifier",
                "name": "orderHash"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "_applyFulfillment",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "AdvancedOrder"
          },
          "length": null
         },
         "name": "advancedOrders",
         "identifier": {
          "type": "Identifier",
          "name": "advancedOrders"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "FulfillmentComponent"
          },
          "length": null
         },
         "name": "offerComponents",
         "identifier": {
          "type": "Identifier",
          "name": "offerComponents"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "FulfillmentComponent"
          },
          "length": null
         },
         "name": "considerationComponents",
         "identifier": {
          "type": "Identifier",
          "name": "considerationComponents"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Execution"
         },
         "name": "execution",
         "identifier": {
          "type": "Identifier",
          "name": "execution"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "||",
           "left": {
            "type": "BinaryOperation",
            "operator": "==",
            "left": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "offerComponents"
             },
             "memberName": "length"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "==",
            "left": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "considerationComponents"
             },
             "memberName": "length"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "OfferAndConsiderationRequiredOnFulfillment"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "ReceivedItem"
            },
            "name": "considerationItem",
            "identifier": {
             "type": "Identifier",
             "name": "considerationItem"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "TupleExpression",
           "components": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "_aggregateValidFulfillmentConsiderationItems"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "advancedOrders"
              },
              {
               "type": "Identifier",
               "name": "considerationComponents"
              },
              {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "isArray": false
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "TupleExpression",
            "components": [
             {
              "type": "Identifier",
              "name": "execution"
             }
            ],
            "isArray": false
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_aggregateValidFulfillmentOfferItems"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "advancedOrders"
             },
             {
              "type": "Identifier",
              "name": "offerComponents"
             },
             {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "||",
           "left": {
            "type": "BinaryOperation",
            "operator": "||",
            "left": {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "execution"
               },
               "memberName": "item"
              },
              "memberName": "itemType"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "considerationItem"
              },
              "memberName": "itemType"
             }
            },
            "right": {
             "type": "BinaryOperation",
             "operator": "!=",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "execution"
               },
               "memberName": "item"
              },
              "memberName": "token"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "considerationItem"
              },
              "memberName": "token"
             }
            }
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "!=",
            "left": {
             "type": "MemberAccess",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "execution"
              },
              "memberName": "item"
             },
             "memberName": "identifier"
            },
            "right": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "considerationItem"
             },
             "memberName": "identifier"
            }
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "MismatchedFulfillmentOfferAndConsiderationComponents"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "considerationItem"
            },
            "memberName": "amount"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "execution"
             },
             "memberName": "item"
            },
            "memberName": "amount"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "UserDefinedTypeName",
                "namePath": "FulfillmentComponent"
               },
               "name": "targetComponent",
               "identifier": {
                "type": "Identifier",
                "name": "targetComponent"
               },
               "storageLocation": "memory",
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "TupleExpression",
              "components": [
               {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "considerationComponents"
                },
                "index": {
                 "type": "NumberLiteral",
                 "number": "0",
                 "subdenomination": null
                }
               }
              ],
              "isArray": false
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "IndexAccess",
                "base": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "IndexAccess",
                   "base": {
                    "type": "Identifier",
                    "name": "advancedOrders"
                   },
                   "index": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "targetComponent"
                    },
                    "memberName": "orderIndex"
                   }
                  },
                  "memberName": "parameters"
                 },
                 "memberName": "consideration"
                },
                "index": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "targetComponent"
                 },
                 "memberName": "itemIndex"
                }
               },
               "memberName": "startAmount"
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "-",
               "left": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "considerationItem"
                },
                "memberName": "amount"
               },
               "right": {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "execution"
                 },
                 "memberName": "item"
                },
                "memberName": "amount"
               }
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "considerationItem"
               },
               "memberName": "amount"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "execution"
                },
                "memberName": "item"
               },
               "memberName": "amount"
              }
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "UserDefinedTypeName",
                "namePath": "FulfillmentComponent"
               },
               "name": "targetComponent",
               "identifier": {
                "type": "Identifier",
                "name": "targetComponent"
               },
               "storageLocation": "memory",
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "TupleExpression",
              "components": [
               {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "offerComponents"
                },
                "index": {
                 "type": "NumberLiteral",
                 "number": "0",
                 "subdenomination": null
                }
               }
              ],
              "isArray": false
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "IndexAccess",
                "base": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "IndexAccess",
                   "base": {
                    "type": "Identifier",
                    "name": "advancedOrders"
                   },
                   "index": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "targetComponent"
                    },
                    "memberName": "orderIndex"
                   }
                  },
                  "memberName": "parameters"
                 },
                 "memberName": "offer"
                },
                "index": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "targetComponent"
                 },
                 "memberName": "itemIndex"
                }
               },
               "memberName": "startAmount"
              },
              "right": {
               "type": "BinaryOperation",
               "operator": "-",
               "left": {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "execution"
                 },
                 "memberName": "item"
                },
                "memberName": "amount"
               },
               "right": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "considerationItem"
                },
                "memberName": "amount"
               }
              }
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "execution"
             },
             "memberName": "item"
            },
            "memberName": "amount"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "considerationItem"
            },
            "memberName": "amount"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "execution"
             },
             "memberName": "item"
            },
            "memberName": "recipient"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "considerationItem"
            },
            "memberName": "recipient"
           }
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "Identifier",
           "name": "execution"
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "_aggregateAvailable",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "AdvancedOrder"
          },
          "length": null
         },
         "name": "advancedOrders",
         "identifier": {
          "type": "Identifier",
          "name": "advancedOrders"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Side"
         },
         "name": "side",
         "identifier": {
          "type": "Identifier",
          "name": "side"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "FulfillmentComponent"
          },
          "length": null
         },
         "name": "fulfillmentComponents",
         "identifier": {
          "type": "Identifier",
          "name": "fulfillmentComponents"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "fulfillerConduit",
         "identifier": {
          "type": "Identifier",
          "name": "fulfillerConduit"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Execution"
         },
         "name": "execution",
         "identifier": {
          "type": "Identifier",
          "name": "execution"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "fulfillmentComponents"
            },
            "memberName": "length"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "MissingFulfillmentComponentOnAggregation"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "side"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "nextComponentIndex",
            "identifier": {
             "type": "Identifier",
             "name": "nextComponentIndex"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "NumberLiteral",
           "number": "0",
           "subdenomination": null
          }
         },
         {
          "type": "UncheckedStatement",
          "block": {
           "type": "Block",
           "statements": [
            {
             "type": "ForStatement",
             "initExpression": {
              "type": "VariableDeclarationStatement",
              "variables": [
               {
                "type": "VariableDeclaration",
                "typeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "name": "i",
                "identifier": {
                 "type": "Identifier",
                 "name": "i"
                },
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false,
                "expression": null
               }
              ],
              "initialValue": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "conditionExpression": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "i"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "fulfillmentComponents"
               },
               "memberName": "length"
              }
             },
             "loopExpression": {
              "type": "ExpressionStatement",
              "expression": {
               "type": "UnaryOperation",
               "operator": "++",
               "subExpression": {
                "type": "Identifier",
                "name": "i"
               },
               "isPrefix": true
              }
             },
             "body": {
              "type": "Block",
              "statements": [
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "ElementaryTypeName",
                   "name": "uint256",
                   "stateMutability": null
                  },
                  "name": "orderIndex",
                  "identifier": {
                   "type": "Identifier",
                   "name": "orderIndex"
                  },
                  "storageLocation": null,
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "fulfillmentComponents"
                  },
                  "index": {
                   "type": "Identifier",
                   "name": "i"
                  }
                 },
                 "memberName": "orderIndex"
                }
               },
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": ">=",
                 "left": {
                  "type": "Identifier",
                  "name": "orderIndex"
                 },
                 "right": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "advancedOrders"
                  },
                  "memberName": "length"
                 }
                },
                "trueBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "RevertStatement",
                   "revertCall": {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "Identifier",
                     "name": "FulfilledOrderIndexOutOfRange"
                    },
                    "arguments": [],
                    "names": [],
                    "identifiers": []
                   }
                  }
                 ]
                },
                "falseBody": null
               },
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "!=",
                 "left": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "IndexAccess",
                   "base": {
                    "type": "Identifier",
                    "name": "advancedOrders"
                   },
                   "index": {
                    "type": "Identifier",
                    "name": "orderIndex"
                   }
                  },
                  "memberName": "numerator"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                 }
                },
                "trueBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                     "type": "Identifier",
                     "name": "nextComponentIndex"
                    },
                    "right": {
                     "type": "BinaryOperation",
                     "operator": "+",
                     "left": {
                      "type": "Identifier",
                      "name": "i"
                     },
                     "right": {
                      "type": "NumberLiteral",
                      "number": "1",
                      "subdenomination": null
                     }
                    }
                   }
                  },
                  {
                   "type": "BreakStatement"
                  }
                 ]
                },
                "falseBody": null
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "nextComponentIndex"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "Execution"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "ReceivedItem"
                },
                "arguments": [
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "ItemType"
                  },
                  "memberName": "NATIVE"
                 },
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "Identifier",
                   "name": "address"
                  },
                  "arguments": [
                   {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 },
                 {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                 },
                 {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                 },
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "Identifier",
                   "name": "payable"
                  },
                  "arguments": [
                   {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "Identifier",
                     "name": "address"
                    },
                    "arguments": [
                     {
                      "type": "NumberLiteral",
                      "number": "0",
                      "subdenomination": null
                     }
                    ],
                    "names": [],
                    "identifiers": []
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "address"
                },
                "arguments": [
                 {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "address"
                },
                "arguments": [
                 {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                 }
                ],
                "names": [],
                "identifiers": []
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "side"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "Side"
            },
            "memberName": "OFFER"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "_aggregateValidFulfillmentOfferItems"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "advancedOrders"
               },
               {
                "type": "Identifier",
                "name": "fulfillmentComponents"
               },
               {
                "type": "BinaryOperation",
                "operator": "-",
                "left": {
                 "type": "Identifier",
                 "name": "nextComponentIndex"
                },
                "right": {
                 "type": "NumberLiteral",
                 "number": "1",
                 "subdenomination": null
                }
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "_aggregateConsiderationItems"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "advancedOrders"
               },
               {
                "type": "Identifier",
                "name": "fulfillmentComponents"
               },
               {
                "type": "BinaryOperation",
                "operator": "-",
                "left": {
                 "type": "Identifier",
                 "name": "nextComponentIndex"
                },
                "right": {
                 "type": "NumberLiteral",
                 "number": "1",
                 "subdenomination": null
                }
               },
               {
                "type": "Identifier",
                "name": "fulfillerConduit"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "_aggregateValidFulfillmentOfferItems",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "AdvancedOrder"
          },
          "length": null
         },
         "name": "advancedOrders",
         "identifier": {
          "type": "Identifier",
          "name": "advancedOrders"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "FulfillmentComponent"
          },
          "length": null
         },
         "name": "offerComponents",
         "identifier": {
          "type": "Identifier",
          "name": "offerComponents"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "startIndex",
         "identifier": {
          "type": "Identifier",
          "name": "startIndex"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Execution"
         },
         "name": "execution",
         "identifier": {
          "type": "Identifier",
          "name": "execution"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "amount",
            "identifier": {
             "type": "Identifier",
             "name": "amount"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bool",
             "stateMutability": null
            },
            "name": "invalidFulfillment",
            "identifier": {
             "type": "Identifier",
             "name": "invalidFulfillment"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "fulfillmentPtr"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "add",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "offerComponents",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x20"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "mul",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "startIndex",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x20"
                   }
                  ]
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "orderIndex"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "fulfillmentPtr",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "itemIndex"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "add",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "fulfillmentPtr",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "Fulfillment_itemIndex_offset",
                  "arguments": []
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "invalidFulfillment"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "iszero",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "lt",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "orderIndex",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "mload",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "advancedOrders",
                    "arguments": []
                   }
                  ]
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "orderPtr"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "mload",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "advancedOrders",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x20"
                     }
                    ]
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "mul",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "orderIndex",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x20"
                     }
                    ]
                   }
                  ]
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "offerArrPtr"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "add",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "orderPtr",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "OrderParameters_offer_head_offset",
                  "arguments": []
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "invalidFulfillment"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "or",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "iszero",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "lt",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "itemIndex",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "mload",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "offerArrPtr",
                      "arguments": []
                     }
                    ]
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "invalidFulfillment",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "offerItemPtr"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "add",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "add",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "offerArrPtr",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x20"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "mul",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "itemIndex",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x20"
                   }
                  ]
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "receivedItemPtr"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "execution",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "receivedItemPtr",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "mload",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "offerItemPtr",
                 "arguments": []
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "receivedItemPtr",
                 "arguments": []
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "Common_token_offset",
                 "arguments": []
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "mload",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "offerItemPtr",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "Common_token_offset",
                   "arguments": []
                  }
                 ]
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "receivedItemPtr",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x40"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "mload",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "offerItemPtr",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "Common_identifier_offset",
                   "arguments": []
                  }
                 ]
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "amountPtr"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "offerItemPtr",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "Common_amount_offset",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "amount"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "amountPtr",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "receivedItemPtr",
                 "arguments": []
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "ReceivedItem_recipient_offset",
                 "arguments": []
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "caller",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "amountPtr",
               "arguments": []
              },
              {
               "type": "DecimalNumber",
               "value": "0"
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "execution",
                 "arguments": []
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "Execution_offerer_offset",
                 "arguments": []
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "mload",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "orderPtr",
                 "arguments": []
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "execution",
                 "arguments": []
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "Execution_conduit_offset",
                 "arguments": []
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "mload",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "orderPtr",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "OrderParameters_conduit_offset",
                   "arguments": []
                  }
                 ]
                }
               ]
              }
             ]
            }
           ]
          }
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "receivedItemPtr"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "execution",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyFor",
             "pre": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "i"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "startIndex",
                   "arguments": []
                  },
                  {
                   "type": "DecimalNumber",
                   "value": "1"
                  }
                 ]
                }
               }
              ]
             },
             "condition": {
              "type": "AssemblyCall",
              "functionName": "and",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "iszero",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "invalidFulfillment",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "lt",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "i",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "mload",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "offerComponents",
                    "arguments": []
                   }
                  ]
                 }
                ]
               }
              ]
             },
             "post": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyAssignment",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "i"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "i",
                   "arguments": []
                  },
                  {
                   "type": "DecimalNumber",
                   "value": "1"
                  }
                 ]
                }
               }
              ]
             },
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "fulfillmentPtr"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "mload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "offerComponents",
                       "arguments": []
                      },
                      {
                       "type": "HexNumber",
                       "value": "0x20"
                      }
                     ]
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "mul",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "i",
                       "arguments": []
                      },
                      {
                       "type": "HexNumber",
                       "value": "0x20"
                      }
                     ]
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "orderIndex"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "mload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "fulfillmentPtr",
                   "arguments": []
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "itemIndex"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "mload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "fulfillmentPtr",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "Fulfillment_itemIndex_offset",
                     "arguments": []
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyAssignment",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "invalidFulfillment"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "iszero",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "lt",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "orderIndex",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "mload",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "advancedOrders",
                       "arguments": []
                      }
                     ]
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyIf",
                "condition": {
                 "type": "AssemblyCall",
                 "functionName": "invalidFulfillment",
                 "arguments": []
                },
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "Break"
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "orderPtr"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "mload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "advancedOrders",
                       "arguments": []
                      },
                      {
                       "type": "HexNumber",
                       "value": "0x20"
                      }
                     ]
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "mul",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "orderIndex",
                       "arguments": []
                      },
                      {
                       "type": "HexNumber",
                       "value": "0x20"
                      }
                     ]
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyIf",
                "condition": {
                 "type": "AssemblyCall",
                 "functionName": "mload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "orderPtr",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "AdvancedOrder_numerator_offset",
                     "arguments": []
                    }
                   ]
                  }
                 ]
                },
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "orderPtr"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "mload",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "orderPtr",
                      "arguments": []
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "offerArrPtr"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "mload",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "add",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "orderPtr",
                        "arguments": []
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "OrderParameters_offer_head_offset",
                        "arguments": []
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "invalidFulfillment"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "iszero",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "lt",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "itemIndex",
                        "arguments": []
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "mload",
                        "arguments": [
                         {
                          "type": "AssemblyCall",
                          "functionName": "offerArrPtr",
                          "arguments": []
                         }
                        ]
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyIf",
                   "condition": {
                    "type": "AssemblyCall",
                    "functionName": "invalidFulfillment",
                    "arguments": []
                   },
                   "body": {
                    "type": "AssemblyBlock",
                    "operations": [
                     {
                      "type": "Break"
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "offerItemPtr"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "mload",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "add",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "add",
                        "arguments": [
                         {
                          "type": "AssemblyCall",
                          "functionName": "offerArrPtr",
                          "arguments": []
                         },
                         {
                          "type": "HexNumber",
                          "value": "0x20"
                         }
                        ]
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "mul",
                        "arguments": [
                         {
                          "type": "AssemblyCall",
                          "functionName": "itemIndex",
                          "arguments": []
                         },
                         {
                          "type": "HexNumber",
                          "value": "0x20"
                         }
                        ]
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyLocalDefinition",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "amountPtr"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "offerItemPtr",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "Common_amount_offset",
                      "arguments": []
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "amount"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "amount",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "mload",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "amountPtr",
                        "arguments": []
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "amountPtr",
                     "arguments": []
                    },
                    {
                     "type": "DecimalNumber",
                     "value": "0"
                    }
                   ]
                  },
                  {
                   "type": "AssemblyAssignment",
                   "names": [
                    {
                     "type": "Identifier",
                     "name": "invalidFulfillment"
                    }
                   ],
                   "expression": {
                    "type": "AssemblyCall",
                    "functionName": "iszero",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "and",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "eq",
                        "arguments": [
                         {
                          "type": "AssemblyCall",
                          "functionName": "mload",
                          "arguments": [
                           {
                            "type": "AssemblyCall",
                            "functionName": "add",
                            "arguments": [
                             {
                              "type": "AssemblyCall",
                              "functionName": "offerItemPtr",
                              "arguments": []
                             },
                             {
                              "type": "AssemblyCall",
                              "functionName": "Common_identifier_offset",
                              "arguments": []
                             }
                            ]
                           }
                          ]
                         },
                         {
                          "type": "AssemblyCall",
                          "functionName": "mload",
                          "arguments": [
                           {
                            "type": "AssemblyCall",
                            "functionName": "add",
                            "arguments": [
                             {
                              "type": "AssemblyCall",
                              "functionName": "receivedItemPtr",
                              "arguments": []
                             },
                             {
                              "type": "AssemblyCall",
                              "functionName": "Common_identifier_offset",
                              "arguments": []
                             }
                            ]
                           }
                          ]
                         }
                        ]
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "and",
                        "arguments": [
                         {
                          "type": "AssemblyCall",
                          "functionName": "and",
                          "arguments": [
                           {
                            "type": "AssemblyCall",
                            "functionName": "eq",
                            "arguments": [
                             {
                              "type": "AssemblyCall",
                              "functionName": "mload",
                              "arguments": [
                               {
                                "type": "AssemblyCall",
                                "functionName": "orderPtr",
                                "arguments": []
                               }
                              ]
                             },
                             {
                              "type": "AssemblyCall",
                              "functionName": "mload",
                              "arguments": [
                               {
                                "type": "AssemblyCall",
                                "functionName": "add",
                                "arguments": [
                                 {
                                  "type": "AssemblyCall",
                                  "functionName": "execution",
                                  "arguments": []
                                 },
                                 {
                                  "type": "AssemblyCall",
                                  "functionName": "Common_token_offset",
                                  "arguments": []
                                 }
                                ]
                               }
                              ]
                             }
                            ]
                           },
                           {
                            "type": "AssemblyCall",
                            "functionName": "eq",
                            "arguments": [
                             {
                              "type": "AssemblyCall",
                              "functionName": "mload",
                              "arguments": [
                               {
                                "type": "AssemblyCall",
                                "functionName": "add",
                                "arguments": [
                                 {
                                  "type": "AssemblyCall",
                                  "functionName": "orderPtr",
                                  "arguments": []
                                 },
                                 {
                                  "type": "AssemblyCall",
                                  "functionName": "OrderParameters_conduit_offset",
                                  "arguments": []
                                 }
                                ]
                               }
                              ]
                             },
                             {
                              "type": "AssemblyCall",
                              "functionName": "mload",
                              "arguments": [
                               {
                                "type": "AssemblyCall",
                                "functionName": "add",
                                "arguments": [
                                 {
                                  "type": "AssemblyCall",
                                  "functionName": "execution",
                                  "arguments": []
                                 },
                                 {
                                  "type": "AssemblyCall",
                                  "functionName": "Execution_conduit_offset",
                                  "arguments": []
                                 }
                                ]
                               }
                              ]
                             }
                            ]
                           }
                          ]
                         },
                         {
                          "type": "AssemblyCall",
                          "functionName": "and",
                          "arguments": [
                           {
                            "type": "AssemblyCall",
                            "functionName": "eq",
                            "arguments": [
                             {
                              "type": "AssemblyCall",
                              "functionName": "mload",
                              "arguments": [
                               {
                                "type": "AssemblyCall",
                                "functionName": "offerItemPtr",
                                "arguments": []
                               }
                              ]
                             },
                             {
                              "type": "AssemblyCall",
                              "functionName": "mload",
                              "arguments": [
                               {
                                "type": "AssemblyCall",
                                "functionName": "receivedItemPtr",
                                "arguments": []
                               }
                              ]
                             }
                            ]
                           },
                           {
                            "type": "AssemblyCall",
                            "functionName": "eq",
                            "arguments": [
                             {
                              "type": "AssemblyCall",
                              "functionName": "mload",
                              "arguments": [
                               {
                                "type": "AssemblyCall",
                                "functionName": "add",
                                "arguments": [
                                 {
                                  "type": "AssemblyCall",
                                  "functionName": "offerItemPtr",
                                  "arguments": []
                                 },
                                 {
                                  "type": "AssemblyCall",
                                  "functionName": "Common_token_offset",
                                  "arguments": []
                                 }
                                ]
                               }
                              ]
                             },
                             {
                              "type": "AssemblyCall",
                              "functionName": "mload",
                              "arguments": [
                               {
                                "type": "AssemblyCall",
                                "functionName": "add",
                                "arguments": [
                                 {
                                  "type": "AssemblyCall",
                                  "functionName": "receivedItemPtr",
                                  "arguments": []
                                 },
                                 {
                                  "type": "AssemblyCall",
                                  "functionName": "Common_token_offset",
                                  "arguments": []
                                 }
                                ]
                               }
                              ]
                             }
                            ]
                           }
                          ]
                         }
                        ]
                       }
                      ]
                     }
                    ]
                   }
                  }
                 ]
                }
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "receivedItemPtr",
                 "arguments": []
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "Common_amount_offset",
                 "arguments": []
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "amount",
               "arguments": []
              }
             ]
            }
           ]
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "Identifier",
           "name": "invalidFulfillment"
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "InvalidFulfillmentComponentData"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "_aggregateConsiderationItems",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "AdvancedOrder"
          },
          "length": null
         },
         "name": "advancedOrders",
         "identifier": {
          "type": "Identifier",
          "name": "advancedOrders"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "FulfillmentComponent"
          },
          "length": null
         },
         "name": "considerationComponents",
         "identifier": {
          "type": "Identifier",
          "name": "considerationComponents"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "nextComponentIndex",
         "identifier": {
          "type": "Identifier",
          "name": "nextComponentIndex"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "fulfillerConduit",
         "identifier": {
          "type": "Identifier",
          "name": "fulfillerConduit"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Execution"
         },
         "name": "execution",
         "identifier": {
          "type": "Identifier",
          "name": "execution"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "ReceivedItem"
            },
            "name": "receiveConsiderationItem",
            "identifier": {
             "type": "Identifier",
             "name": "receiveConsiderationItem"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "TupleExpression",
           "components": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "_aggregateValidFulfillmentConsiderationItems"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "advancedOrders"
              },
              {
               "type": "Identifier",
               "name": "considerationComponents"
              },
              {
               "type": "Identifier",
               "name": "nextComponentIndex"
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "isArray": false
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "execution"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "Execution"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "receiveConsiderationItem"
             },
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "msg"
              },
              "memberName": "sender"
             },
             {
              "type": "Identifier",
              "name": "fulfillerConduit"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-SeaportProtocol/seaport-f17082fca3e99b409f53040d8858e84b0246aa22/contracts/lib/ConsiderationInternal.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.13"
    },
    {
     "type": "ImportDirective",
     "path": "./ConsiderationEnums.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./ConsiderationEnums.sol",
      "parts": [
       "./ConsiderationEnums.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Side",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Side"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "../interfaces/AbridgedTokenInterfaces.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../interfaces/AbridgedTokenInterfaces.sol",
      "parts": [
       "../interfaces/AbridgedTokenInterfaces.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "ERC20Interface",
       null
      ],
      [
       "ERC721Interface",
       null
      ],
      [
       "ERC1155Interface",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "ERC20Interface"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "ERC721Interface"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "ERC1155Interface"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "../interfaces/AbridgedProxyInterfaces.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../interfaces/AbridgedProxyInterfaces.sol",
      "parts": [
       "../interfaces/AbridgedProxyInterfaces.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "ProxyInterface",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "ProxyInterface"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "./ConsiderationEnums.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./ConsiderationEnums.sol",
      "parts": [
       "./ConsiderationEnums.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "OrderType",
       null
      ],
      [
       "ItemType",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "OrderType"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "ItemType"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "./ConsiderationStructs.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./ConsiderationStructs.sol",
      "parts": [
       "./ConsiderationStructs.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "AdditionalRecipient",
       null
      ],
      [
       "BasicOrderParameters",
       null
      ],
      [
       "OfferItem",
       null
      ],
      [
       "ConsiderationItem",
       null
      ],
      [
       "SpentItem",
       null
      ],
      [
       "ReceivedItem",
       null
      ],
      [
       "OrderParameters",
       null
      ],
      [
       "Fulfillment",
       null
      ],
      [
       "FulfillmentComponent",
       null
      ],
      [
       "Execution",
       null
      ],
      [
       "Order",
       null
      ],
      [
       "AdvancedOrder",
       null
      ],
      [
       "OrderStatus",
       null
      ],
      [
       "CriteriaResolver",
       null
      ],
      [
       "Batch",
       null
      ],
      [
       "BatchExecution",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "AdditionalRecipient"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "BasicOrderParameters"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "OfferItem"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "ConsiderationItem"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "SpentItem"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "ReceivedItem"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "OrderParameters"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "Fulfillment"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "FulfillmentComponent"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "Execution"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "Order"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "AdvancedOrder"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "OrderStatus"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "CriteriaResolver"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "Batch"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "BatchExecution"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "./ConsiderationInternalView.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./ConsiderationInternalView.sol",
      "parts": [
       "./ConsiderationInternalView.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "ConsiderationInternalView",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "ConsiderationInternalView"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "./ConsiderationConstants.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./ConsiderationConstants.sol",
      "parts": [
       "./ConsiderationConstants.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": null,
     "symbolAliasesIdentifiers": null
    },
    {
     "type": "ContractDefinition",
     "name": "ConsiderationInternal",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ConsiderationInternalView"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "legacyProxyRegistry",
         "identifier": {
          "type": "Identifier",
          "name": "legacyProxyRegistry"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "legacyTokenTransferProxy",
         "identifier": {
          "type": "Identifier",
          "name": "legacyTokenTransferProxy"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "requiredProxyImplementation",
         "identifier": {
          "type": "Identifier",
          "name": "requiredProxyImplementation"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": []
       },
       "visibility": "default",
       "modifiers": [
        {
         "type": "ModifierInvocation",
         "name": "ConsiderationInternalView",
         "arguments": [
          {
           "type": "Identifier",
           "name": "legacyProxyRegistry"
          },
          {
           "type": "Identifier",
           "name": "legacyTokenTransferProxy"
          },
          {
           "type": "Identifier",
           "name": "requiredProxyImplementation"
          }
         ]
        }
       ],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_prepareBasicFulfillmentFromCalldata",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "BasicOrderParameters"
         },
         "name": "parameters",
         "identifier": {
          "type": "Identifier",
          "name": "parameters"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "OrderType"
         },
         "name": "orderType",
         "identifier": {
          "type": "Identifier",
          "name": "orderType"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "ItemType"
         },
         "name": "receivedItemType",
         "identifier": {
          "type": "Identifier",
          "name": "receivedItemType"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "ItemType"
         },
         "name": "additionalRecipientsItemType",
         "identifier": {
          "type": "Identifier",
          "name": "additionalRecipientsItemType"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "additionalRecipientsToken",
         "identifier": {
          "type": "Identifier",
          "name": "additionalRecipientsToken"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "ItemType"
         },
         "name": "offeredItemType",
         "identifier": {
          "type": "Identifier",
          "name": "offeredItemType"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_setReentrancyGuard"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_verifyTime"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "parameters"
             },
             "memberName": "startTime"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "parameters"
             },
             "memberName": "endTime"
            },
            {
             "type": "BooleanLiteral",
             "value": true
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_assertValidBasicOrderParameterOffsets"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_assertConsiderationLengthIsNotLessThanOriginalConsiderationLength"
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "+",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "parameters"
               },
               "memberName": "additionalRecipients"
              },
              "memberName": "length"
             },
             "right": {
              "type": "NumberLiteral",
              "number": "1",
              "subdenomination": null
             }
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "parameters"
             },
             "memberName": "totalOriginalAdditionalRecipients"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "name": "orderHash",
            "identifier": {
             "type": "Identifier",
             "name": "orderHash"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "Block",
          "statements": [
           {
            "type": "VariableDeclarationStatement",
            "variables": [
             {
              "type": "VariableDeclaration",
              "typeName": {
               "type": "ElementaryTypeName",
               "name": "bytes32",
               "stateMutability": null
              },
              "name": "typeHash",
              "identifier": {
               "type": "Identifier",
               "name": "typeHash"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
             }
            ],
            "initialValue": {
             "type": "Identifier",
             "name": "_CONSIDERATION_ITEM_TYPEHASH"
            }
           },
           {
            "type": "InlineAssemblyStatement",
            "language": null,
            "flags": [],
            "body": {
             "type": "AssemblyBlock",
             "operations": [
              {
               "type": "AssemblyCall",
               "functionName": "mstore",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "BasicOrder_considerationItem_typeHash_ptr",
                 "arguments": []
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "typeHash",
                 "arguments": []
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "mstore",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "BasicOrder_considerationItem_itemType_ptr",
                 "arguments": []
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "receivedItemType",
                 "arguments": []
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "calldatacopy",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "BasicOrder_considerationItem_token_ptr",
                 "arguments": []
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "BasicOrder_considerationToken_cdPtr",
                 "arguments": []
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "ThreeWords",
                 "arguments": []
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "calldatacopy",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "BasicOrder_considerationItem_endAmount_ptr",
                 "arguments": []
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "BasicOrder_considerationAmount_cdPtr",
                 "arguments": []
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "TwoWords",
                 "arguments": []
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "mstore",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "BasicOrder_considerationHashesArray_ptr",
                 "arguments": []
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "keccak256",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "BasicOrder_considerationItem_typeHash_ptr",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "EIP712_ConsiderationItem_size",
                   "arguments": []
                  }
                 ]
                }
               ]
              },
              {
               "type": "AssemblyLocalDefinition",
               "names": [
                {
                 "type": "Identifier",
                 "name": "len"
                }
               ],
               "expression": {
                "type": "AssemblyCall",
                "functionName": "calldataload",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "BasicOrder_additionalRecipients_length_cdPtr",
                  "arguments": []
                 }
                ]
               }
              },
              {
               "type": "AssemblyLocalDefinition",
               "names": [
                {
                 "type": "Identifier",
                 "name": "eventConsiderationArrPtr"
                }
               ],
               "expression": {
                "type": "AssemblyCall",
                "functionName": "add",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "OrderFulfilled_consideration_length_baseOffset",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "mul",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x20"
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "len",
                    "arguments": []
                   }
                  ]
                 }
                ]
               }
              },
              {
               "type": "AssemblyCall",
               "functionName": "mstore",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "eventConsiderationArrPtr",
                 "arguments": []
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "calldataload",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "BasicOrder_additionalRecipients_length_cdPtr",
                     "arguments": []
                    }
                   ]
                  },
                  {
                   "type": "DecimalNumber",
                   "value": "1"
                  }
                 ]
                }
               ]
              },
              {
               "type": "AssemblyAssignment",
               "names": [
                {
                 "type": "Identifier",
                 "name": "eventConsiderationArrPtr"
                }
               ],
               "expression": {
                "type": "AssemblyCall",
                "functionName": "add",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "eventConsiderationArrPtr",
                  "arguments": []
                 },
                 {
                  "type": "HexNumber",
                  "value": "0x20"
                 }
                ]
               }
              },
              {
               "type": "AssemblyCall",
               "functionName": "mstore",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "eventConsiderationArrPtr",
                 "arguments": []
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "receivedItemType",
                 "arguments": []
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "calldatacopy",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "eventConsiderationArrPtr",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "Common_token_offset",
                   "arguments": []
                  }
                 ]
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "BasicOrder_considerationToken_cdPtr",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x80"
                }
               ]
              },
              {
               "type": "AssemblyLocalDefinition",
               "names": [
                {
                 "type": "Identifier",
                 "name": "considerationHashesPtr"
                }
               ],
               "expression": {
                "type": "AssemblyCall",
                "functionName": "BasicOrder_considerationHashesArray_ptr",
                "arguments": []
               }
              },
              {
               "type": "AssemblyCall",
               "functionName": "mstore",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "BasicOrder_considerationItem_itemType_ptr",
                 "arguments": []
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "additionalRecipientsItemType",
                 "arguments": []
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "mstore",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "BasicOrder_considerationItem_token_ptr",
                 "arguments": []
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "additionalRecipientsToken",
                 "arguments": []
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "mstore",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "BasicOrder_considerationItem_identifier_ptr",
                 "arguments": []
                },
                {
                 "type": "DecimalNumber",
                 "value": "0"
                }
               ]
              },
              {
               "type": "AssemblyAssignment",
               "names": [
                {
                 "type": "Identifier",
                 "name": "len"
                }
               ],
               "expression": {
                "type": "AssemblyCall",
                "functionName": "calldataload",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "BasicOrder_totalOriginalAdditionalRecipients_cdPtr",
                  "arguments": []
                 }
                ]
               }
              },
              {
               "type": "AssemblyLocalDefinition",
               "names": [
                {
                 "type": "Identifier",
                 "name": "i"
                }
               ],
               "expression": {
                "type": "DecimalNumber",
                "value": "0"
               }
              },
              {
               "type": "AssemblyFor",
               "pre": {
                "type": "AssemblyBlock",
                "operations": []
               },
               "condition": {
                "type": "AssemblyCall",
                "functionName": "lt",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "i",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "len",
                  "arguments": []
                 }
                ]
               },
               "post": {
                "type": "AssemblyBlock",
                "operations": [
                 {
                  "type": "AssemblyAssignment",
                  "names": [
                   {
                    "type": "Identifier",
                    "name": "i"
                   }
                  ],
                  "expression": {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "i",
                     "arguments": []
                    },
                    {
                     "type": "DecimalNumber",
                     "value": "1"
                    }
                   ]
                  }
                 }
                ]
               },
               "body": {
                "type": "AssemblyBlock",
                "operations": [
                 {
                  "type": "AssemblyLocalDefinition",
                  "names": [
                   {
                    "type": "Identifier",
                    "name": "additionalRecipientCdPtr"
                   }
                  ],
                  "expression": {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "BasicOrder_additionalRecipients_data_cdPtr",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "mul",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "AdditionalRecipients_size",
                       "arguments": []
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "i",
                       "arguments": []
                      }
                     ]
                    }
                   ]
                  }
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "calldatacopy",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "BasicOrder_considerationItem_startAmount_ptr",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "additionalRecipientCdPtr",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x20"
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "calldatacopy",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "BasicOrder_considerationItem_endAmount_ptr",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "additionalRecipientCdPtr",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "AdditionalRecipients_size",
                    "arguments": []
                   }
                  ]
                 },
                 {
                  "type": "AssemblyAssignment",
                  "names": [
                   {
                    "type": "Identifier",
                    "name": "considerationHashesPtr"
                   }
                  ],
                  "expression": {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "considerationHashesPtr",
                     "arguments": []
                    },
                    {
                     "type": "HexNumber",
                     "value": "0x20"
                    }
                   ]
                  }
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "mstore",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "considerationHashesPtr",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "keccak256",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "BasicOrder_considerationItem_typeHash_ptr",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "EIP712_ConsiderationItem_size",
                      "arguments": []
                     }
                    ]
                   }
                  ]
                 },
                 {
                  "type": "AssemblyAssignment",
                  "names": [
                   {
                    "type": "Identifier",
                    "name": "eventConsiderationArrPtr"
                   }
                  ],
                  "expression": {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "eventConsiderationArrPtr",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "ReceivedItem_size",
                     "arguments": []
                    }
                   ]
                  }
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "mstore",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "eventConsiderationArrPtr",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "additionalRecipientsItemType",
                    "arguments": []
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "mstore",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "eventConsiderationArrPtr",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x20"
                     }
                    ]
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "additionalRecipientsToken",
                    "arguments": []
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "calldatacopy",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "eventConsiderationArrPtr",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "ReceivedItem_amount_offset",
                      "arguments": []
                     }
                    ]
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "additionalRecipientCdPtr",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x40"
                   }
                  ]
                 }
                ]
               }
              },
              {
               "type": "AssemblyCall",
               "functionName": "mstore",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "receivedItemsHash_ptr",
                 "arguments": []
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "keccak256",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "BasicOrder_considerationHashesArray_ptr",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mul",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "len",
                       "arguments": []
                      },
                      {
                       "type": "DecimalNumber",
                       "value": "1"
                      }
                     ]
                    },
                    {
                     "type": "DecimalNumber",
                     "value": "32"
                    }
                   ]
                  }
                 ]
                }
               ]
              },
              {
               "type": "AssemblyAssignment",
               "names": [
                {
                 "type": "Identifier",
                 "name": "len"
                }
               ],
               "expression": {
                "type": "AssemblyCall",
                "functionName": "calldataload",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "BasicOrder_additionalRecipients_length_cdPtr",
                  "arguments": []
                 }
                ]
               }
              },
              {
               "type": "AssemblyFor",
               "pre": {
                "type": "AssemblyBlock",
                "operations": []
               },
               "condition": {
                "type": "AssemblyCall",
                "functionName": "lt",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "i",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "len",
                  "arguments": []
                 }
                ]
               },
               "post": {
                "type": "AssemblyBlock",
                "operations": [
                 {
                  "type": "AssemblyAssignment",
                  "names": [
                   {
                    "type": "Identifier",
                    "name": "i"
                   }
                  ],
                  "expression": {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "i",
                     "arguments": []
                    },
                    {
                     "type": "DecimalNumber",
                     "value": "1"
                    }
                   ]
                  }
                 }
                ]
               },
               "body": {
                "type": "AssemblyBlock",
                "operations": [
                 {
                  "type": "AssemblyLocalDefinition",
                  "names": [
                   {
                    "type": "Identifier",
                    "name": "additionalRecipientCdPtr"
                   }
                  ],
                  "expression": {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "BasicOrder_additionalRecipients_data_cdPtr",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "mul",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "AdditionalRecipients_size",
                       "arguments": []
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "i",
                       "arguments": []
                      }
                     ]
                    }
                   ]
                  }
                 },
                 {
                  "type": "AssemblyAssignment",
                  "names": [
                   {
                    "type": "Identifier",
                    "name": "eventConsiderationArrPtr"
                   }
                  ],
                  "expression": {
                   "type": "AssemblyCall",
                   "functionName": "add",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "eventConsiderationArrPtr",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "ReceivedItem_size",
                     "arguments": []
                    }
                   ]
                  }
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "mstore",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "eventConsiderationArrPtr",
                    "arguments": []
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "additionalRecipientsItemType",
                    "arguments": []
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "mstore",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "eventConsiderationArrPtr",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x20"
                     }
                    ]
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "additionalRecipientsToken",
                    "arguments": []
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "calldatacopy",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "eventConsiderationArrPtr",
                      "arguments": []
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "ReceivedItem_amount_offset",
                      "arguments": []
                     }
                    ]
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "additionalRecipientCdPtr",
                    "arguments": []
                   },
                   {
                    "type": "HexNumber",
                    "value": "0x40"
                   }
                  ]
                 }
                ]
               }
              }
             ]
            }
           }
          ]
         },
         {
          "type": "Block",
          "statements": [
           {
            "type": "VariableDeclarationStatement",
            "variables": [
             {
              "type": "VariableDeclaration",
              "typeName": {
               "type": "ElementaryTypeName",
               "name": "bytes32",
               "stateMutability": null
              },
              "name": "typeHash",
              "identifier": {
               "type": "Identifier",
               "name": "typeHash"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
             }
            ],
            "initialValue": {
             "type": "Identifier",
             "name": "_OFFER_ITEM_TYPEHASH"
            }
           },
           {
            "type": "InlineAssemblyStatement",
            "language": null,
            "flags": [],
            "body": {
             "type": "AssemblyBlock",
             "operations": [
              {
               "type": "AssemblyCall",
               "functionName": "mstore",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "BasicOrder_offerItem_typeHash_ptr",
                 "arguments": []
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "typeHash",
                 "arguments": []
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "mstore",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "BasicOrder_offerItem_itemType_ptr",
                 "arguments": []
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "offeredItemType",
                 "arguments": []
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "calldatacopy",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "BasicOrder_offerItem_token_ptr",
                 "arguments": []
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "BasicOrder_offerToken_cdPtr",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x60"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "calldatacopy",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "BasicOrder_offerItem_endAmount_ptr",
                 "arguments": []
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "BasicOrder_offerAmount_cdPtr",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0x20"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "mstore",
               "arguments": [
                {
                 "type": "HexNumber",
                 "value": "0x00"
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "keccak256",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "BasicOrder_offerItem_typeHash_ptr",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "EIP712_OfferItem_size",
                   "arguments": []
                  }
                 ]
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "mstore",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "BasicOrder_order_offerHashes_ptr",
                 "arguments": []
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "keccak256",
                 "arguments": [
                  {
                   "type": "HexNumber",
                   "value": "0x00"
                  },
                  {
                   "type": "HexNumber",
                   "value": "0x20"
                  }
                 ]
                }
               ]
              },
              {
               "type": "AssemblyLocalDefinition",
               "names": [
                {
                 "type": "Identifier",
                 "name": "eventConsiderationArrPtr"
                }
               ],
               "expression": {
                "type": "AssemblyCall",
                "functionName": "add",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "OrderFulfilled_offer_length_baseOffset",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "mul",
                  "arguments": [
                   {
                    "type": "HexNumber",
                    "value": "0x20"
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "calldataload",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "BasicOrder_additionalRecipients_length_cdPtr",
                      "arguments": []
                     }
                    ]
                   }
                  ]
                 }
                ]
               }
              },
              {
               "type": "AssemblyCall",
               "functionName": "mstore",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "eventConsiderationArrPtr",
                 "arguments": []
                },
                {
                 "type": "DecimalNumber",
                 "value": "1"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "mstore",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "eventConsiderationArrPtr",
                   "arguments": []
                  },
                  {
                   "type": "HexNumber",
                   "value": "0x20"
                  }
                 ]
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "offeredItemType",
                 "arguments": []
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "calldatacopy",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "add",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "eventConsiderationArrPtr",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "AdditionalRecipients_size",
                   "arguments": []
                  }
                 ]
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "BasicOrder_offerToken_cdPtr",
                 "arguments": []
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "ThreeWords",
                 "arguments": []
                }
               ]
              }
             ]
            }
           }
          ]
         },
         {
          "type": "Block",
          "statements": [
           {
            "type": "VariableDeclarationStatement",
            "variables": [
             {
              "type": "VariableDeclaration",
              "typeName": {
               "type": "ElementaryTypeName",
               "name": "address",
               "stateMutability": null
              },
              "name": "offerer",
              "identifier": {
               "type": "Identifier",
               "name": "offerer"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
             }
            ],
            "initialValue": null
           },
           {
            "type": "InlineAssemblyStatement",
            "language": null,
            "flags": [],
            "body": {
             "type": "AssemblyBlock",
             "operations": [
              {
               "type": "AssemblyAssignment",
               "names": [
                {
                 "type": "Identifier",
                 "name": "offerer"
                }
               ],
               "expression": {
                "type": "AssemblyCall",
                "functionName": "calldataload",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "BasicOrder_offerer_cdPtr",
                  "arguments": []
                 }
                ]
               }
              }
             ]
            }
           },
           {
            "type": "VariableDeclarationStatement",
            "variables": [
             {
              "type": "VariableDeclaration",
              "typeName": {
               "type": "ElementaryTypeName",
               "name": "uint256",
               "stateMutability": null
              },
              "name": "nonce",
              "identifier": {
               "type": "Identifier",
               "name": "nonce"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
             }
            ],
            "initialValue": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "_nonces"
             },
             "index": {
              "type": "Identifier",
              "name": "offerer"
             }
            }
           },
           {
            "type": "VariableDeclarationStatement",
            "variables": [
             {
              "type": "VariableDeclaration",
              "typeName": {
               "type": "ElementaryTypeName",
               "name": "bytes32",
               "stateMutability": null
              },
              "name": "typeHash",
              "identifier": {
               "type": "Identifier",
               "name": "typeHash"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
             }
            ],
            "initialValue": {
             "type": "Identifier",
             "name": "_ORDER_TYPEHASH"
            }
           },
           {
            "type": "InlineAssemblyStatement",
            "language": null,
            "flags": [],
            "body": {
             "type": "AssemblyBlock",
             "operations": [
              {
               "type": "AssemblyCall",
               "functionName": "mstore",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "BasicOrder_order_typeHash_ptr",
                 "arguments": []
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "typeHash",
                 "arguments": []
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "calldatacopy",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "BasicOrder_order_offerer_ptr",
                 "arguments": []
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "BasicOrder_offerer_cdPtr",
                 "arguments": []
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "TwoWords",
                 "arguments": []
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "mstore",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "BasicOrder_order_considerationHashes_ptr",
                 "arguments": []
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "mload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "receivedItemsHash_ptr",
                   "arguments": []
                  }
                 ]
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "mstore",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "BasicOrder_order_orderType_ptr",
                 "arguments": []
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "orderType",
                 "arguments": []
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "calldatacopy",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "BasicOrder_order_startTime_ptr",
                 "arguments": []
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "BasicOrder_startTime_cdPtr",
                 "arguments": []
                },
                {
                 "type": "HexNumber",
                 "value": "0xa0"
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "mstore",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "BasicOrder_order_nonce_ptr",
                 "arguments": []
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "nonce",
                 "arguments": []
                }
               ]
              },
              {
               "type": "AssemblyAssignment",
               "names": [
                {
                 "type": "Identifier",
                 "name": "orderHash"
                }
               ],
               "expression": {
                "type": "AssemblyCall",
                "functionName": "keccak256",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "BasicOrder_order_typeHash_ptr",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "EIP712_Order_size",
                  "arguments": []
                 }
                ]
               }
              }
             ]
            }
           }
          ]
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "eventDataPtr"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "OrderFulfilled_baseOffset",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "mul",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x20"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "calldataload",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "BasicOrder_additionalRecipients_length_cdPtr",
                    "arguments": []
                   }
                  ]
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "eventDataPtr",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "orderHash",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "eventDataPtr",
                 "arguments": []
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "OrderFulfilled_fulfiller_offset",
                 "arguments": []
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "caller",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "eventDataPtr",
                 "arguments": []
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "OrderFulfilled_offer_head_offset",
                 "arguments": []
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "OrderFulfilled_offer_body_offset",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "add",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "eventDataPtr",
                 "arguments": []
                },
                {
                 "type": "AssemblyCall",
                 "functionName": "OrderFulfilled_consideration_head_offset",
                 "arguments": []
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "OrderFulfilled_consideration_body_offset",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "dataSize"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "add",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "OrderFulfilled_baseSize",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "mul",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "calldataload",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "BasicOrder_additionalRecipients_length_cdPtr",
                    "arguments": []
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "ReceivedItem_size",
                  "arguments": []
                 }
                ]
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "log3",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "eventDataPtr",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "dataSize",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "OrderFulfilled_selector",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "calldataload",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "BasicOrder_offerer_cdPtr",
                 "arguments": []
                }
               ]
              },
              {
               "type": "AssemblyCall",
               "functionName": "calldataload",
               "arguments": [
                {
                 "type": "AssemblyCall",
                 "functionName": "BasicOrder_zone_cdPtr",
                 "arguments": []
                }
               ]
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "HexNumber",
               "value": "0x60"
              },
              {
               "type": "DecimalNumber",
               "value": "0"
              }
             ]
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_assertRestrictedBasicOrderValidity"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "orderHash"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "parameters"
             },
             "memberName": "zoneHash"
            },
            {
             "type": "Identifier",
             "name": "orderType"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "parameters"
             },
             "memberName": "offerer"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "parameters"
             },
             "memberName": "zone"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_validateBasicOrderAndUpdateStatus"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "orderHash"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "parameters"
             },
             "memberName": "offerer"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "parameters"
             },
             "memberName": "signature"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_validateBasicOrderAndUpdateStatus",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "orderHash",
         "identifier": {
          "type": "Identifier",
          "name": "orderHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "offerer",
         "identifier": {
          "type": "Identifier",
          "name": "offerer"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "signature",
         "identifier": {
          "type": "Identifier",
          "name": "signature"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "OrderStatus"
            },
            "name": "orderStatus",
            "identifier": {
             "type": "Identifier",
             "name": "orderStatus"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "_orderStatus"
           },
           "index": {
            "type": "Identifier",
            "name": "orderHash"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_verifyOrderStatus"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "orderHash"
            },
            {
             "type": "Identifier",
             "name": "orderStatus"
            },
            {
             "type": "BooleanLiteral",
             "value": true
            },
            {
             "type": "BooleanLiteral",
             "value": true
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "UnaryOperation",
           "operator": "!",
           "subExpression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "orderStatus"
            },
            "memberName": "isValidated"
           },
           "isPrefix": true
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "_verifySignature"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "offerer"
               },
               {
                "type": "Identifier",
                "name": "orderHash"
               },
               {
                "type": "Identifier",
                "name": "signature"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "_orderStatus"
             },
             "index": {
              "type": "Identifier",
              "name": "orderHash"
             }
            },
            "memberName": "isValidated"
           },
           "right": {
            "type": "BooleanLiteral",
            "value": true
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "_orderStatus"
             },
             "index": {
              "type": "Identifier",
              "name": "orderHash"
             }
            },
            "memberName": "isCancelled"
           },
           "right": {
            "type": "BooleanLiteral",
            "value": false
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "_orderStatus"
             },
             "index": {
              "type": "Identifier",
              "name": "orderHash"
             }
            },
            "memberName": "numerator"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "IndexAccess",
             "base": {
              "type": "Identifier",
              "name": "_orderStatus"
             },
             "index": {
              "type": "Identifier",
              "name": "orderHash"
             }
            },
            "memberName": "denominator"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_validateOrderAndUpdateStatus",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "AdvancedOrder"
         },
         "name": "advancedOrder",
         "identifier": {
          "type": "Identifier",
          "name": "advancedOrder"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "revertOnInvalid",
         "identifier": {
          "type": "Identifier",
          "name": "revertOnInvalid"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "bytes32",
           "stateMutability": null
          },
          "length": null
         },
         "name": "priorOrderHashes",
         "identifier": {
          "type": "Identifier",
          "name": "priorOrderHashes"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "orderHash",
         "identifier": {
          "type": "Identifier",
          "name": "orderHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "newNumerator",
         "identifier": {
          "type": "Identifier",
          "name": "newNumerator"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "newDenominator",
         "identifier": {
          "type": "Identifier",
          "name": "newDenominator"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "OrderParameters"
            },
            "name": "orderParameters",
            "identifier": {
             "type": "Identifier",
             "name": "orderParameters"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "advancedOrder"
           },
           "memberName": "parameters"
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "UnaryOperation",
           "operator": "!",
           "subExpression": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_verifyTime"
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "orderParameters"
              },
              "memberName": "startTime"
             },
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "orderParameters"
              },
              "memberName": "endTime"
             },
             {
              "type": "Identifier",
              "name": "revertOnInvalid"
             }
            ],
            "names": [],
            "identifiers": []
           },
           "isPrefix": true
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "TupleExpression",
              "components": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "ElementaryTypeName",
                 "name": "bytes32",
                 "stateMutability": null
                },
                "arguments": [
                 {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               },
               {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              ],
              "isArray": false
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "numerator",
            "identifier": {
             "type": "Identifier",
             "name": "numerator"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "ElementaryTypeName",
            "name": "uint256",
            "stateMutability": null
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "advancedOrder"
             },
             "memberName": "numerator"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "denominator",
            "identifier": {
             "type": "Identifier",
             "name": "denominator"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "ElementaryTypeName",
            "name": "uint256",
            "stateMutability": null
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "advancedOrder"
             },
             "memberName": "denominator"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "||",
           "left": {
            "type": "BinaryOperation",
            "operator": ">",
            "left": {
             "type": "Identifier",
             "name": "numerator"
            },
            "right": {
             "type": "Identifier",
             "name": "denominator"
            }
           },
           "right": {
            "type": "BinaryOperation",
            "operator": "==",
            "left": {
             "type": "Identifier",
             "name": "numerator"
            },
            "right": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "BadFraction"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "&&",
           "left": {
            "type": "BinaryOperation",
            "operator": "<",
            "left": {
             "type": "Identifier",
             "name": "numerator"
            },
            "right": {
             "type": "Identifier",
             "name": "denominator"
            }
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_doesNotSupportPartialFills"
            },
            "arguments": [
             {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "orderParameters"
              },
              "memberName": "orderType"
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "PartialFillsNotEnabledForOrder"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "orderHash"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_assertConsiderationLengthAndGetNoncedOrderHash"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "orderParameters"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_assertRestrictedAdvancedOrderValidity"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "advancedOrder"
            },
            {
             "type": "Identifier",
             "name": "priorOrderHashes"
            },
            {
             "type": "Identifier",
             "name": "orderHash"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "orderParameters"
             },
             "memberName": "zoneHash"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "orderParameters"
             },
             "memberName": "orderType"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "orderParameters"
             },
             "memberName": "offerer"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "orderParameters"
             },
             "memberName": "zone"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "OrderStatus"
            },
            "name": "orderStatus",
            "identifier": {
             "type": "Identifier",
             "name": "orderStatus"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "IndexAccess",
           "base": {
            "type": "Identifier",
            "name": "_orderStatus"
           },
           "index": {
            "type": "Identifier",
            "name": "orderHash"
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "UnaryOperation",
           "operator": "!",
           "subExpression": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_verifyOrderStatus"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "orderHash"
             },
             {
              "type": "Identifier",
              "name": "orderStatus"
             },
             {
              "type": "BooleanLiteral",
              "value": false
             },
             {
              "type": "Identifier",
              "name": "revertOnInvalid"
             }
            ],
            "names": [],
            "identifiers": []
           },
           "isPrefix": true
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ReturnStatement",
             "expression": {
              "type": "TupleExpression",
              "components": [
               {
                "type": "Identifier",
                "name": "orderHash"
               },
               {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               },
               {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               }
              ],
              "isArray": false
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "UnaryOperation",
           "operator": "!",
           "subExpression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "orderStatus"
            },
            "memberName": "isValidated"
           },
           "isPrefix": true
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "_verifySignature"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "orderParameters"
                },
                "memberName": "offerer"
               },
               {
                "type": "Identifier",
                "name": "orderHash"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "advancedOrder"
                },
                "memberName": "signature"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "filledNumerator",
            "identifier": {
             "type": "Identifier",
             "name": "filledNumerator"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "orderStatus"
           },
           "memberName": "numerator"
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "filledDenominator",
            "identifier": {
             "type": "Identifier",
             "name": "filledDenominator"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "orderStatus"
           },
           "memberName": "denominator"
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "Identifier",
            "name": "filledDenominator"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "Identifier",
               "name": "denominator"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "numerator"
                 },
                 "right": {
                  "type": "Identifier",
                  "name": "filledDenominator"
                 }
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "Identifier",
                  "name": "denominator"
                 },
                 "right": {
                  "type": "Identifier",
                  "name": "filledDenominator"
                 }
                }
               }
              ]
             },
             "falseBody": {
              "type": "IfStatement",
              "condition": {
               "type": "BinaryOperation",
               "operator": "!=",
               "left": {
                "type": "Identifier",
                "name": "filledDenominator"
               },
               "right": {
                "type": "Identifier",
                "name": "denominator"
               }
              },
              "trueBody": {
               "type": "Block",
               "statements": [
                {
                 "type": "ExpressionStatement",
                 "expression": {
                  "type": "BinaryOperation",
                  "operator": "*=",
                  "left": {
                   "type": "Identifier",
                   "name": "filledNumerator"
                  },
                  "right": {
                   "type": "Identifier",
                   "name": "denominator"
                  }
                 }
                },
                {
                 "type": "ExpressionStatement",
                 "expression": {
                  "type": "BinaryOperation",
                  "operator": "*=",
                  "left": {
                   "type": "Identifier",
                   "name": "numerator"
                  },
                  "right": {
                   "type": "Identifier",
                   "name": "filledDenominator"
                  }
                 }
                },
                {
                 "type": "ExpressionStatement",
                 "expression": {
                  "type": "BinaryOperation",
                  "operator": "*=",
                  "left": {
                   "type": "Identifier",
                   "name": "denominator"
                  },
                  "right": {
                   "type": "Identifier",
                   "name": "filledDenominator"
                  }
                 }
                }
               ]
              },
              "falseBody": null
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": ">",
              "left": {
               "type": "BinaryOperation",
               "operator": "+",
               "left": {
                "type": "Identifier",
                "name": "filledNumerator"
               },
               "right": {
                "type": "Identifier",
                "name": "numerator"
               }
              },
              "right": {
               "type": "Identifier",
               "name": "denominator"
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "UncheckedStatement",
                "block": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                     "type": "Identifier",
                     "name": "numerator"
                    },
                    "right": {
                     "type": "BinaryOperation",
                     "operator": "-",
                     "left": {
                      "type": "Identifier",
                      "name": "denominator"
                     },
                     "right": {
                      "type": "Identifier",
                      "name": "filledNumerator"
                     }
                    }
                   }
                  }
                 ]
                }
               }
              ]
             },
             "falseBody": null
            },
            {
             "type": "UncheckedStatement",
             "block": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "IndexAccess",
                   "base": {
                    "type": "Identifier",
                    "name": "_orderStatus"
                   },
                   "index": {
                    "type": "Identifier",
                    "name": "orderHash"
                   }
                  },
                  "memberName": "isValidated"
                 },
                 "right": {
                  "type": "BooleanLiteral",
                  "value": true
                 }
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "IndexAccess",
                   "base": {
                    "type": "Identifier",
                    "name": "_orderStatus"
                   },
                   "index": {
                    "type": "Identifier",
                    "name": "orderHash"
                   }
                  },
                  "memberName": "isCancelled"
                 },
                 "right": {
                  "type": "BooleanLiteral",
                  "value": false
                 }
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "IndexAccess",
                   "base": {
                    "type": "Identifier",
                    "name": "_orderStatus"
                   },
                   "index": {
                    "type": "Identifier",
                    "name": "orderHash"
                   }
                  },
                  "memberName": "numerator"
                 },
                 "right": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "ElementaryTypeName",
                   "name": "uint120",
                   "stateMutability": null
                  },
                  "arguments": [
                   {
                    "type": "BinaryOperation",
                    "operator": "+",
                    "left": {
                     "type": "Identifier",
                     "name": "filledNumerator"
                    },
                    "right": {
                     "type": "Identifier",
                     "name": "numerator"
                    }
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "IndexAccess",
                   "base": {
                    "type": "Identifier",
                    "name": "_orderStatus"
                   },
                   "index": {
                    "type": "Identifier",
                    "name": "orderHash"
                   }
                  },
                  "memberName": "denominator"
                 },
                 "right": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "ElementaryTypeName",
                   "name": "uint120",
                   "stateMutability": null
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "denominator"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                }
               }
              ]
             }
            }
           ]
          },
          "falseBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "_orderStatus"
                },
                "index": {
                 "type": "Identifier",
                 "name": "orderHash"
                }
               },
               "memberName": "isValidated"
              },
              "right": {
               "type": "BooleanLiteral",
               "value": true
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "_orderStatus"
                },
                "index": {
                 "type": "Identifier",
                 "name": "orderHash"
                }
               },
               "memberName": "isCancelled"
              },
              "right": {
               "type": "BooleanLiteral",
               "value": false
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "_orderStatus"
                },
                "index": {
                 "type": "Identifier",
                 "name": "orderHash"
                }
               },
               "memberName": "numerator"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "uint120",
                "stateMutability": null
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "numerator"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "IndexAccess",
                "base": {
                 "type": "Identifier",
                 "name": "_orderStatus"
                },
                "index": {
                 "type": "Identifier",
                 "name": "orderHash"
                }
               },
               "memberName": "denominator"
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "ElementaryTypeName",
                "name": "uint120",
                "stateMutability": null
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "denominator"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "TupleExpression",
           "components": [
            {
             "type": "Identifier",
             "name": "orderHash"
            },
            {
             "type": "Identifier",
             "name": "numerator"
            },
            {
             "type": "Identifier",
             "name": "denominator"
            }
           ],
           "isArray": false
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_validateAndFulfillAdvancedOrder",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "AdvancedOrder"
         },
         "name": "advancedOrder",
         "identifier": {
          "type": "Identifier",
          "name": "advancedOrder"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "CriteriaResolver"
          },
          "length": null
         },
         "name": "criteriaResolvers",
         "identifier": {
          "type": "Identifier",
          "name": "criteriaResolvers"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "fulfillerConduit",
         "identifier": {
          "type": "Identifier",
          "name": "fulfillerConduit"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_setReentrancyGuard"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "bytes32",
              "stateMutability": null
             },
             "length": null
            },
            "name": "priorOrderHashes",
            "identifier": {
             "type": "Identifier",
             "name": "priorOrderHashes"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "name": "orderHash",
            "identifier": {
             "type": "Identifier",
             "name": "orderHash"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes32",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "fillNumerator",
            "identifier": {
             "type": "Identifier",
             "name": "fillNumerator"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           },
           {
            "type": "VariableDeclaration",
            "name": "fillDenominator",
            "identifier": {
             "type": "Identifier",
             "name": "fillDenominator"
            },
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_validateOrderAndUpdateStatus"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "advancedOrder"
            },
            {
             "type": "BooleanLiteral",
             "value": true
            },
            {
             "type": "Identifier",
             "name": "priorOrderHashes"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "AdvancedOrder"
             },
             "length": null
            },
            "name": "advancedOrders",
            "identifier": {
             "type": "Identifier",
             "name": "advancedOrders"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "NewExpression",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "AdvancedOrder"
             },
             "length": null
            }
           },
           "arguments": [
            {
             "type": "NumberLiteral",
             "number": "1",
             "subdenomination": null
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "advancedOrders"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           },
           "right": {
            "type": "Identifier",
            "name": "advancedOrder"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_applyCriteriaResolvers"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "advancedOrders"
            },
            {
             "type": "Identifier",
             "name": "criteriaResolvers"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "UserDefinedTypeName",
             "namePath": "OrderParameters"
            },
            "name": "orderParameters",
            "identifier": {
             "type": "Identifier",
             "name": "orderParameters"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "IndexAccess",
            "base": {
             "type": "Identifier",
             "name": "advancedOrders"
            },
            "index": {
             "type": "NumberLiteral",
             "number": "0",
             "subdenomination": null
            }
           },
           "memberName": "parameters"
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_applyFractionsAndTransferEach"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "orderParameters"
            },
            {
             "type": "Identifier",
             "name": "fillNumerator"
            },
            {
             "type": "Identifier",
             "name": "fillDenominator"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "orderParameters"
             },
             "memberName": "conduit"
            },
            {
             "type": "Identifier",
             "name": "fulfillerConduit"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_emitOrderFulfilledEvent"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "orderHash"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "orderParameters"
             },
             "memberName": "offerer"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "orderParameters"
             },
             "memberName": "zone"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "msg"
             },
             "memberName": "sender"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "orderParameters"
             },
             "memberName": "offer"
            },
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "orderParameters"
             },
             "memberName": "consideration"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "_reentrancyGuard"
           },
           "right": {
            "type": "Identifier",
            "name": "_NOT_ENTERED"
           }
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "BooleanLiteral",
           "value": true
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_applyFractionsAndTransferEach",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "OrderParameters"
         },
         "name": "orderParameters",
         "identifier": {
          "type": "Identifier",
          "name": "orderParameters"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "numerator",
         "identifier": {
          "type": "Identifier",
          "name": "numerator"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "denominator",
         "identifier": {
          "type": "Identifier",
          "name": "denominator"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "offererConduit",
         "identifier": {
          "type": "Identifier",
          "name": "offererConduit"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "fulfillerConduit",
         "identifier": {
          "type": "Identifier",
          "name": "fulfillerConduit"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "duration",
            "identifier": {
             "type": "Identifier",
             "name": "duration"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "BinaryOperation",
           "operator": "-",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "orderParameters"
            },
            "memberName": "endTime"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "orderParameters"
            },
            "memberName": "startTime"
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "elapsed",
            "identifier": {
             "type": "Identifier",
             "name": "elapsed"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "BinaryOperation",
           "operator": "-",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "block"
            },
            "memberName": "timestamp"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "orderParameters"
            },
            "memberName": "startTime"
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "remaining",
            "identifier": {
             "type": "Identifier",
             "name": "remaining"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "BinaryOperation",
           "operator": "-",
           "left": {
            "type": "Identifier",
            "name": "duration"
           },
           "right": {
            "type": "Identifier",
            "name": "elapsed"
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "etherRemaining",
            "identifier": {
             "type": "Identifier",
             "name": "etherRemaining"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "value"
          }
         },
         {
          "type": "Block",
          "statements": [
           {
            "type": "VariableDeclarationStatement",
            "variables": [
             {
              "type": "VariableDeclaration",
              "typeName": {
               "type": "FunctionTypeName",
               "parameterTypes": [
                {
                 "type": "VariableDeclaration",
                 "typeName": {
                  "type": "UserDefinedTypeName",
                  "namePath": "OfferItem"
                 },
                 "name": null,
                 "identifier": null,
                 "storageLocation": "memory",
                 "isStateVar": false,
                 "isIndexed": false,
                 "expression": null
                },
                {
                 "type": "VariableDeclaration",
                 "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address",
                  "stateMutability": null
                 },
                 "name": null,
                 "identifier": null,
                 "storageLocation": null,
                 "isStateVar": false,
                 "isIndexed": false,
                 "expression": null
                },
                {
                 "type": "VariableDeclaration",
                 "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address",
                  "stateMutability": null
                 },
                 "name": null,
                 "identifier": null,
                 "storageLocation": null,
                 "isStateVar": false,
                 "isIndexed": false,
                 "expression": null
                }
               ],
               "returnTypes": [],
               "visibility": "internal",
               "stateMutability": null
              },
              "name": "_transferOfferItem",
              "identifier": {
               "type": "Identifier",
               "name": "_transferOfferItem"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
             }
            ],
            "initialValue": null
           },
           {
            "type": "VariableDeclarationStatement",
            "variables": [
             {
              "type": "VariableDeclaration",
              "typeName": {
               "type": "FunctionTypeName",
               "parameterTypes": [
                {
                 "type": "VariableDeclaration",
                 "typeName": {
                  "type": "UserDefinedTypeName",
                  "namePath": "ReceivedItem"
                 },
                 "name": null,
                 "identifier": null,
                 "storageLocation": "memory",
                 "isStateVar": false,
                 "isIndexed": false,
                 "expression": null
                },
                {
                 "type": "VariableDeclaration",
                 "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address",
                  "stateMutability": null
                 },
                 "name": null,
                 "identifier": null,
                 "storageLocation": null,
                 "isStateVar": false,
                 "isIndexed": false,
                 "expression": null
                },
                {
                 "type": "VariableDeclaration",
                 "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address",
                  "stateMutability": null
                 },
                 "name": null,
                 "identifier": null,
                 "storageLocation": null,
                 "isStateVar": false,
                 "isIndexed": false,
                 "expression": null
                }
               ],
               "returnTypes": [],
               "visibility": "internal",
               "stateMutability": null
              },
              "name": "_transferReceivedItem",
              "identifier": {
               "type": "Identifier",
               "name": "_transferReceivedItem"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
             }
            ],
            "initialValue": {
             "type": "Identifier",
             "name": "_transfer"
            }
           },
           {
            "type": "InlineAssemblyStatement",
            "language": null,
            "flags": [],
            "body": {
             "type": "AssemblyBlock",
             "operations": [
              {
               "type": "AssemblyAssignment",
               "names": [
                {
                 "type": "Identifier",
                 "name": "_transferOfferItem"
                }
               ],
               "expression": {
                "type": "AssemblyCall",
                "functionName": "_transferReceivedItem",
                "arguments": []
               }
              }
             ]
            }
           },
           {
            "type": "ForStatement",
            "initExpression": {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "i",
               "identifier": {
                "type": "Identifier",
                "name": "i"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            "conditionExpression": {
             "type": "BinaryOperation",
             "operator": "<",
             "left": {
              "type": "Identifier",
              "name": "i"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "orderParameters"
               },
               "memberName": "offer"
              },
              "memberName": "length"
             }
            },
            "loopExpression": {
             "type": "ExpressionStatement",
             "expression": null
            },
            "body": {
             "type": "Block",
             "statements": [
              {
               "type": "VariableDeclarationStatement",
               "variables": [
                {
                 "type": "VariableDeclaration",
                 "typeName": {
                  "type": "UserDefinedTypeName",
                  "namePath": "OfferItem"
                 },
                 "name": "offerItem",
                 "identifier": {
                  "type": "Identifier",
                  "name": "offerItem"
                 },
                 "storageLocation": "memory",
                 "isStateVar": false,
                 "isIndexed": false,
                 "expression": null
                }
               ],
               "initialValue": {
                "type": "IndexAccess",
                "base": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "orderParameters"
                 },
                 "memberName": "offer"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               }
              },
              {
               "type": "VariableDeclarationStatement",
               "variables": [
                {
                 "type": "VariableDeclaration",
                 "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256",
                  "stateMutability": null
                 },
                 "name": "amount",
                 "identifier": {
                  "type": "Identifier",
                  "name": "amount"
                 },
                 "storageLocation": null,
                 "isStateVar": false,
                 "isIndexed": false,
                 "expression": null
                }
               ],
               "initialValue": {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "_applyFraction"
                },
                "arguments": [
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "offerItem"
                  },
                  "memberName": "startAmount"
                 },
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "offerItem"
                  },
                  "memberName": "endAmount"
                 },
                 {
                  "type": "Identifier",
                  "name": "numerator"
                 },
                 {
                  "type": "Identifier",
                  "name": "denominator"
                 },
                 {
                  "type": "Identifier",
                  "name": "elapsed"
                 },
                 {
                  "type": "Identifier",
                  "name": "remaining"
                 },
                 {
                  "type": "Identifier",
                  "name": "duration"
                 },
                 {
                  "type": "BooleanLiteral",
                  "value": false
                 }
                ],
                "names": [],
                "identifiers": []
               }
              },
              {
               "type": "InlineAssemblyStatement",
               "language": null,
               "flags": [],
               "body": {
                "type": "AssemblyBlock",
                "operations": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "mstore",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "offerItem",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x60"
                     }
                    ]
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "amount",
                    "arguments": []
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "mstore",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "offerItem",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x80"
                     }
                    ]
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "caller",
                    "arguments": []
                   }
                  ]
                 }
                ]
               }
              },
              {
               "type": "IfStatement",
               "condition": {
                "type": "BinaryOperation",
                "operator": "==",
                "left": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "offerItem"
                 },
                 "memberName": "itemType"
                },
                "right": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "ItemType"
                 },
                 "memberName": "NATIVE"
                }
               },
               "trueBody": {
                "type": "Block",
                "statements": [
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "Identifier",
                    "name": "amount"
                   },
                   "right": {
                    "type": "Identifier",
                    "name": "etherRemaining"
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "RevertStatement",
                     "revertCall": {
                      "type": "FunctionCall",
                      "expression": {
                       "type": "Identifier",
                       "name": "InsufficientEtherSupplied"
                      },
                      "arguments": [],
                      "names": [],
                      "identifiers": []
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "UncheckedStatement",
                  "block": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "-=",
                      "left": {
                       "type": "Identifier",
                       "name": "etherRemaining"
                      },
                      "right": {
                       "type": "Identifier",
                       "name": "amount"
                      }
                     }
                    }
                   ]
                  }
                 }
                ]
               },
               "falseBody": null
              },
              {
               "type": "ExpressionStatement",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "_transferOfferItem"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "offerItem"
                 },
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "orderParameters"
                  },
                  "memberName": "offerer"
                 },
                 {
                  "type": "Identifier",
                  "name": "offererConduit"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              },
              {
               "type": "UncheckedStatement",
               "block": {
                "type": "Block",
                "statements": [
                 {
                  "type": "ExpressionStatement",
                  "expression": {
                   "type": "UnaryOperation",
                   "operator": "++",
                   "subExpression": {
                    "type": "Identifier",
                    "name": "i"
                   },
                   "isPrefix": true
                  }
                 }
                ]
               }
              }
             ]
            }
           }
          ]
         },
         {
          "type": "Block",
          "statements": [
           {
            "type": "VariableDeclarationStatement",
            "variables": [
             {
              "type": "VariableDeclaration",
              "typeName": {
               "type": "FunctionTypeName",
               "parameterTypes": [
                {
                 "type": "VariableDeclaration",
                 "typeName": {
                  "type": "UserDefinedTypeName",
                  "namePath": "ConsiderationItem"
                 },
                 "name": null,
                 "identifier": null,
                 "storageLocation": "memory",
                 "isStateVar": false,
                 "isIndexed": false,
                 "expression": null
                },
                {
                 "type": "VariableDeclaration",
                 "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address",
                  "stateMutability": null
                 },
                 "name": null,
                 "identifier": null,
                 "storageLocation": null,
                 "isStateVar": false,
                 "isIndexed": false,
                 "expression": null
                },
                {
                 "type": "VariableDeclaration",
                 "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address",
                  "stateMutability": null
                 },
                 "name": null,
                 "identifier": null,
                 "storageLocation": null,
                 "isStateVar": false,
                 "isIndexed": false,
                 "expression": null
                }
               ],
               "returnTypes": [],
               "visibility": "internal",
               "stateMutability": null
              },
              "name": "_transferConsiderationItem",
              "identifier": {
               "type": "Identifier",
               "name": "_transferConsiderationItem"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
             }
            ],
            "initialValue": null
           },
           {
            "type": "VariableDeclarationStatement",
            "variables": [
             {
              "type": "VariableDeclaration",
              "typeName": {
               "type": "FunctionTypeName",
               "parameterTypes": [
                {
                 "type": "VariableDeclaration",
                 "typeName": {
                  "type": "UserDefinedTypeName",
                  "namePath": "ReceivedItem"
                 },
                 "name": null,
                 "identifier": null,
                 "storageLocation": "memory",
                 "isStateVar": false,
                 "isIndexed": false,
                 "expression": null
                },
                {
                 "type": "VariableDeclaration",
                 "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address",
                  "stateMutability": null
                 },
                 "name": null,
                 "identifier": null,
                 "storageLocation": null,
                 "isStateVar": false,
                 "isIndexed": false,
                 "expression": null
                },
                {
                 "type": "VariableDeclaration",
                 "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "address",
                  "stateMutability": null
                 },
                 "name": null,
                 "identifier": null,
                 "storageLocation": null,
                 "isStateVar": false,
                 "isIndexed": false,
                 "expression": null
                }
               ],
               "returnTypes": [],
               "visibility": "internal",
               "stateMutability": null
              },
              "name": "_transferReceivedItem",
              "identifier": {
               "type": "Identifier",
               "name": "_transferReceivedItem"
              },
              "storageLocation": null,
              "isStateVar": false,
              "isIndexed": false,
              "expression": null
             }
            ],
            "initialValue": {
             "type": "Identifier",
             "name": "_transfer"
            }
           },
           {
            "type": "InlineAssemblyStatement",
            "language": null,
            "flags": [],
            "body": {
             "type": "AssemblyBlock",
             "operations": [
              {
               "type": "AssemblyAssignment",
               "names": [
                {
                 "type": "Identifier",
                 "name": "_transferConsiderationItem"
                }
               ],
               "expression": {
                "type": "AssemblyCall",
                "functionName": "_transferReceivedItem",
                "arguments": []
               }
              }
             ]
            }
           },
           {
            "type": "ForStatement",
            "initExpression": {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "i",
               "identifier": {
                "type": "Identifier",
                "name": "i"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            "conditionExpression": {
             "type": "BinaryOperation",
             "operator": "<",
             "left": {
              "type": "Identifier",
              "name": "i"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "orderParameters"
               },
               "memberName": "consideration"
              },
              "memberName": "length"
             }
            },
            "loopExpression": {
             "type": "ExpressionStatement",
             "expression": null
            },
            "body": {
             "type": "Block",
             "statements": [
              {
               "type": "VariableDeclarationStatement",
               "variables": [
                {
                 "type": "VariableDeclaration",
                 "typeName": {
                  "type": "UserDefinedTypeName",
                  "namePath": "ConsiderationItem"
                 },
                 "name": "considerationItem",
                 "identifier": {
                  "type": "Identifier",
                  "name": "considerationItem"
                 },
                 "storageLocation": "memory",
                 "isStateVar": false,
                 "isIndexed": false,
                 "expression": null
                }
               ],
               "initialValue": {
                "type": "TupleExpression",
                "components": [
                 {
                  "type": "IndexAccess",
                  "base": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "orderParameters"
                   },
                   "memberName": "consideration"
                  },
                  "index": {
                   "type": "Identifier",
                   "name": "i"
                  }
                 }
                ],
                "isArray": false
               }
              },
              {
               "type": "VariableDeclarationStatement",
               "variables": [
                {
                 "type": "VariableDeclaration",
                 "typeName": {
                  "type": "ElementaryTypeName",
                  "name": "uint256",
                  "stateMutability": null
                 },
                 "name": "amount",
                 "identifier": {
                  "type": "Identifier",
                  "name": "amount"
                 },
                 "storageLocation": null,
                 "isStateVar": false,
                 "isIndexed": false,
                 "expression": null
                }
               ],
               "initialValue": {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "_applyFraction"
                },
                "arguments": [
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "considerationItem"
                  },
                  "memberName": "startAmount"
                 },
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "considerationItem"
                  },
                  "memberName": "endAmount"
                 },
                 {
                  "type": "Identifier",
                  "name": "numerator"
                 },
                 {
                  "type": "Identifier",
                  "name": "denominator"
                 },
                 {
                  "type": "Identifier",
                  "name": "elapsed"
                 },
                 {
                  "type": "Identifier",
                  "name": "remaining"
                 },
                 {
                  "type": "Identifier",
                  "name": "duration"
                 },
                 {
                  "type": "BooleanLiteral",
                  "value": true
                 }
                ],
                "names": [],
                "identifiers": []
               }
              },
              {
               "type": "InlineAssemblyStatement",
               "language": null,
               "flags": [],
               "body": {
                "type": "AssemblyBlock",
                "operations": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "mstore",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "considerationItem",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x60"
                     }
                    ]
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "amount",
                    "arguments": []
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "mstore",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "add",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "considerationItem",
                      "arguments": []
                     },
                     {
                      "type": "HexNumber",
                      "value": "0x80"
                     }
                    ]
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "mload",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "add",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "considerationItem",
                        "arguments": []
                       },
                       {
                        "type": "HexNumber",
                        "value": "0xa0"
                       }
                      ]
                     }
                    ]
                   }
                  ]
                 }
                ]
               }
              },
              {
               "type": "IfStatement",
               "condition": {
                "type": "BinaryOperation",
                "operator": "==",
                "left": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "considerationItem"
                 },
                 "memberName": "itemType"
                },
                "right": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "ItemType"
                 },
                 "memberName": "NATIVE"
                }
               },
               "trueBody": {
                "type": "Block",
                "statements": [
                 {
                  "type": "IfStatement",
                  "condition": {
                   "type": "BinaryOperation",
                   "operator": ">",
                   "left": {
                    "type": "Identifier",
                    "name": "amount"
                   },
                   "right": {
                    "type": "Identifier",
                    "name": "etherRemaining"
                   }
                  },
                  "trueBody": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "RevertStatement",
                     "revertCall": {
                      "type": "FunctionCall",
                      "expression": {
                       "type": "Identifier",
                       "name": "InsufficientEtherSupplied"
                      },
                      "arguments": [],
                      "names": [],
                      "identifiers": []
                     }
                    }
                   ]
                  },
                  "falseBody": null
                 },
                 {
                  "type": "UncheckedStatement",
                  "block": {
                   "type": "Block",
                   "statements": [
                    {
                     "type": "ExpressionStatement",
                     "expression": {
                      "type": "BinaryOperation",
                      "operator": "-=",
                      "left": {
                       "type": "Identifier",
                       "name": "etherRemaining"
                      },
                      "right": {
                       "type": "Identifier",
                       "name": "amount"
                      }
                     }
                    }
                   ]
                  }
                 }
                ]
               },
               "falseBody": null
              },
              {
               "type": "ExpressionStatement",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "_transferConsiderationItem"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "considerationItem"
                 },
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "msg"
                  },
                  "memberName": "sender"
                 },
                 {
                  "type": "Identifier",
                  "name": "fulfillerConduit"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              },
              {
               "type": "UncheckedStatement",
               "block": {
                "type": "Block",
                "statements": [
                 {
                  "type": "ExpressionStatement",
                  "expression": {
                   "type": "UnaryOperation",
                   "operator": "++",
                   "subExpression": {
                    "type": "Identifier",
                    "name": "i"
                   },
                   "isPrefix": true
                  }
                 }
                ]
               }
              }
             ]
            }
           }
          ]
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "Identifier",
            "name": "etherRemaining"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "_transferEth"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "payable"
                },
                "arguments": [
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "msg"
                  },
                  "memberName": "sender"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "Identifier",
                "name": "etherRemaining"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_validateOrdersAndPrepareToFulfill",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "AdvancedOrder"
          },
          "length": null
         },
         "name": "advancedOrders",
         "identifier": {
          "type": "Identifier",
          "name": "advancedOrders"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "CriteriaResolver"
          },
          "length": null
         },
         "name": "criteriaResolvers",
         "identifier": {
          "type": "Identifier",
          "name": "criteriaResolvers"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "revertOnInvalid",
         "identifier": {
          "type": "Identifier",
          "name": "revertOnInvalid"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_setReentrancyGuard"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "totalOrders",
            "identifier": {
             "type": "Identifier",
             "name": "totalOrders"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "advancedOrders"
           },
           "memberName": "length"
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "bytes32",
              "stateMutability": null
             },
             "length": null
            },
            "name": "orderHashes",
            "identifier": {
             "type": "Identifier",
             "name": "orderHashes"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "NewExpression",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "bytes32",
              "stateMutability": null
             },
             "length": null
            }
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "totalOrders"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "orderHashes",
               "arguments": []
              },
              {
               "type": "DecimalNumber",
               "value": "0"
              }
             ]
            }
           ]
          }
         },
         {
          "type": "UncheckedStatement",
          "block": {
           "type": "Block",
           "statements": [
            {
             "type": "ForStatement",
             "initExpression": {
              "type": "VariableDeclarationStatement",
              "variables": [
               {
                "type": "VariableDeclaration",
                "typeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "name": "i",
                "identifier": {
                 "type": "Identifier",
                 "name": "i"
                },
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false,
                "expression": null
               }
              ],
              "initialValue": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "conditionExpression": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "i"
              },
              "right": {
               "type": "Identifier",
               "name": "totalOrders"
              }
             },
             "loopExpression": {
              "type": "ExpressionStatement",
              "expression": {
               "type": "UnaryOperation",
               "operator": "++",
               "subExpression": {
                "type": "Identifier",
                "name": "i"
               },
               "isPrefix": true
              }
             },
             "body": {
              "type": "Block",
              "statements": [
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "UserDefinedTypeName",
                   "namePath": "AdvancedOrder"
                  },
                  "name": "advancedOrder",
                  "identifier": {
                   "type": "Identifier",
                   "name": "advancedOrder"
                  },
                  "storageLocation": "memory",
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "advancedOrders"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "i"
                 }
                }
               },
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "name": "orderHash",
                  "identifier": {
                   "type": "Identifier",
                   "name": "orderHash"
                  },
                  "typeName": {
                   "type": "ElementaryTypeName",
                   "name": "bytes32",
                   "stateMutability": null
                  },
                  "storageLocation": null,
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 },
                 {
                  "type": "VariableDeclaration",
                  "name": "numerator",
                  "identifier": {
                   "type": "Identifier",
                   "name": "numerator"
                  },
                  "typeName": {
                   "type": "ElementaryTypeName",
                   "name": "uint256",
                   "stateMutability": null
                  },
                  "storageLocation": null,
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 },
                 {
                  "type": "VariableDeclaration",
                  "name": "denominator",
                  "identifier": {
                   "type": "Identifier",
                   "name": "denominator"
                  },
                  "typeName": {
                   "type": "ElementaryTypeName",
                   "name": "uint256",
                   "stateMutability": null
                  },
                  "storageLocation": null,
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "_validateOrderAndUpdateStatus"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "advancedOrder"
                  },
                  {
                   "type": "Identifier",
                   "name": "revertOnInvalid"
                  },
                  {
                   "type": "Identifier",
                   "name": "orderHashes"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "InlineAssemblyStatement",
                "language": null,
                "flags": [],
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "orderHashes",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "add",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "i",
                       "arguments": []
                      },
                      {
                       "type": "DecimalNumber",
                       "value": "1"
                      }
                     ]
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "ElementaryTypeName",
                   "name": "uint256",
                   "stateMutability": null
                  },
                  "name": "startTime",
                  "identifier": {
                   "type": "Identifier",
                   "name": "startTime"
                  },
                  "storageLocation": null,
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "advancedOrder"
                  },
                  "memberName": "parameters"
                 },
                 "memberName": "startTime"
                }
               },
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "ElementaryTypeName",
                   "name": "uint256",
                   "stateMutability": null
                  },
                  "name": "duration",
                  "identifier": {
                   "type": "Identifier",
                   "name": "duration"
                  },
                  "storageLocation": null,
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "BinaryOperation",
                 "operator": "-",
                 "left": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "advancedOrder"
                   },
                   "memberName": "parameters"
                  },
                  "memberName": "endTime"
                 },
                 "right": {
                  "type": "Identifier",
                  "name": "startTime"
                 }
                }
               },
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "ElementaryTypeName",
                   "name": "uint256",
                   "stateMutability": null
                  },
                  "name": "elapsed",
                  "identifier": {
                   "type": "Identifier",
                   "name": "elapsed"
                  },
                  "storageLocation": null,
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "BinaryOperation",
                 "operator": "-",
                 "left": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "block"
                  },
                  "memberName": "timestamp"
                 },
                 "right": {
                  "type": "Identifier",
                  "name": "startTime"
                 }
                }
               },
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "ElementaryTypeName",
                   "name": "uint256",
                   "stateMutability": null
                  },
                  "name": "remaining",
                  "identifier": {
                   "type": "Identifier",
                   "name": "remaining"
                  },
                  "storageLocation": null,
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "BinaryOperation",
                 "operator": "-",
                 "left": {
                  "type": "Identifier",
                  "name": "duration"
                 },
                 "right": {
                  "type": "Identifier",
                  "name": "elapsed"
                 }
                }
               },
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "==",
                 "left": {
                  "type": "Identifier",
                  "name": "numerator"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                 }
                },
                "trueBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "advancedOrder"
                     },
                     "memberName": "numerator"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0",
                     "subdenomination": null
                    }
                   }
                  },
                  {
                   "type": "ContinueStatement"
                  }
                 ]
                },
                "falseBody": null
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "orderHashes"
                  },
                  "index": {
                   "type": "Identifier",
                   "name": "i"
                  }
                 },
                 "right": {
                  "type": "Identifier",
                  "name": "orderHash"
                 }
                }
               },
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "ArrayTypeName",
                   "baseTypeName": {
                    "type": "UserDefinedTypeName",
                    "namePath": "OfferItem"
                   },
                   "length": null
                  },
                  "name": "offer",
                  "identifier": {
                   "type": "Identifier",
                   "name": "offer"
                  },
                  "storageLocation": "memory",
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "advancedOrder"
                  },
                  "memberName": "parameters"
                 },
                 "memberName": "offer"
                }
               },
               {
                "type": "ForStatement",
                "initExpression": {
                 "type": "VariableDeclarationStatement",
                 "variables": [
                  {
                   "type": "VariableDeclaration",
                   "typeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256",
                    "stateMutability": null
                   },
                   "name": "j",
                   "identifier": {
                    "type": "Identifier",
                    "name": "j"
                   },
                   "storageLocation": null,
                   "isStateVar": false,
                   "isIndexed": false,
                   "expression": null
                  }
                 ],
                 "initialValue": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                 }
                },
                "conditionExpression": {
                 "type": "BinaryOperation",
                 "operator": "<",
                 "left": {
                  "type": "Identifier",
                  "name": "j"
                 },
                 "right": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "offer"
                  },
                  "memberName": "length"
                 }
                },
                "loopExpression": {
                 "type": "ExpressionStatement",
                 "expression": {
                  "type": "UnaryOperation",
                  "operator": "++",
                  "subExpression": {
                   "type": "Identifier",
                   "name": "j"
                  },
                  "isPrefix": true
                 }
                },
                "body": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "VariableDeclarationStatement",
                   "variables": [
                    {
                     "type": "VariableDeclaration",
                     "typeName": {
                      "type": "UserDefinedTypeName",
                      "namePath": "OfferItem"
                     },
                     "name": "offerItem",
                     "identifier": {
                      "type": "Identifier",
                      "name": "offerItem"
                     },
                     "storageLocation": "memory",
                     "isStateVar": false,
                     "isIndexed": false,
                     "expression": null
                    }
                   ],
                   "initialValue": {
                    "type": "IndexAccess",
                    "base": {
                     "type": "Identifier",
                     "name": "offer"
                    },
                    "index": {
                     "type": "Identifier",
                     "name": "j"
                    }
                   }
                  },
                  {
                   "type": "VariableDeclarationStatement",
                   "variables": [
                    {
                     "type": "VariableDeclaration",
                     "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256",
                      "stateMutability": null
                     },
                     "name": "endAmount",
                     "identifier": {
                      "type": "Identifier",
                      "name": "endAmount"
                     },
                     "storageLocation": null,
                     "isStateVar": false,
                     "isIndexed": false,
                     "expression": null
                    }
                   ],
                   "initialValue": {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "Identifier",
                     "name": "_getFraction"
                    },
                    "arguments": [
                     {
                      "type": "Identifier",
                      "name": "numerator"
                     },
                     {
                      "type": "Identifier",
                      "name": "denominator"
                     },
                     {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "Identifier",
                       "name": "offerItem"
                      },
                      "memberName": "endAmount"
                     }
                    ],
                    "names": [],
                    "identifiers": []
                   }
                  },
                  {
                   "type": "IfStatement",
                   "condition": {
                    "type": "BinaryOperation",
                    "operator": "==",
                    "left": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "offerItem"
                     },
                     "memberName": "startAmount"
                    },
                    "right": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "offerItem"
                     },
                     "memberName": "endAmount"
                    }
                   },
                   "trueBody": {
                    "type": "Block",
                    "statements": [
                     {
                      "type": "ExpressionStatement",
                      "expression": {
                       "type": "BinaryOperation",
                       "operator": "=",
                       "left": {
                        "type": "MemberAccess",
                        "expression": {
                         "type": "Identifier",
                         "name": "offerItem"
                        },
                        "memberName": "startAmount"
                       },
                       "right": {
                        "type": "Identifier",
                        "name": "endAmount"
                       }
                      }
                     }
                    ]
                   },
                   "falseBody": {
                    "type": "Block",
                    "statements": [
                     {
                      "type": "ExpressionStatement",
                      "expression": {
                       "type": "BinaryOperation",
                       "operator": "=",
                       "left": {
                        "type": "MemberAccess",
                        "expression": {
                         "type": "Identifier",
                         "name": "offerItem"
                        },
                        "memberName": "startAmount"
                       },
                       "right": {
                        "type": "FunctionCall",
                        "expression": {
                         "type": "Identifier",
                         "name": "_getFraction"
                        },
                        "arguments": [
                         {
                          "type": "Identifier",
                          "name": "numerator"
                         },
                         {
                          "type": "Identifier",
                          "name": "denominator"
                         },
                         {
                          "type": "MemberAccess",
                          "expression": {
                           "type": "Identifier",
                           "name": "offerItem"
                          },
                          "memberName": "startAmount"
                         }
                        ],
                        "names": [],
                        "identifiers": []
                       }
                      }
                     }
                    ]
                   }
                  },
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "offerItem"
                     },
                     "memberName": "endAmount"
                    },
                    "right": {
                     "type": "Identifier",
                     "name": "endAmount"
                    }
                   }
                  },
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "offerItem"
                     },
                     "memberName": "startAmount"
                    },
                    "right": {
                     "type": "FunctionCall",
                     "expression": {
                      "type": "Identifier",
                      "name": "_locateCurrentAmount"
                     },
                     "arguments": [
                      {
                       "type": "MemberAccess",
                       "expression": {
                        "type": "Identifier",
                        "name": "offerItem"
                       },
                       "memberName": "startAmount"
                      },
                      {
                       "type": "MemberAccess",
                       "expression": {
                        "type": "Identifier",
                        "name": "offerItem"
                       },
                       "memberName": "endAmount"
                      },
                      {
                       "type": "Identifier",
                       "name": "elapsed"
                      },
                      {
                       "type": "Identifier",
                       "name": "remaining"
                      },
                      {
                       "type": "Identifier",
                       "name": "duration"
                      },
                      {
                       "type": "BooleanLiteral",
                       "value": false
                      }
                     ],
                     "names": [],
                     "identifiers": []
                    }
                   }
                  }
                 ]
                }
               },
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "ArrayTypeName",
                   "baseTypeName": {
                    "type": "UserDefinedTypeName",
                    "namePath": "ConsiderationItem"
                   },
                   "length": null
                  },
                  "name": "consideration",
                  "identifier": {
                   "type": "Identifier",
                   "name": "consideration"
                  },
                  "storageLocation": "memory",
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "TupleExpression",
                 "components": [
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "advancedOrder"
                    },
                    "memberName": "parameters"
                   },
                   "memberName": "consideration"
                  }
                 ],
                 "isArray": false
                }
               },
               {
                "type": "ForStatement",
                "initExpression": {
                 "type": "VariableDeclarationStatement",
                 "variables": [
                  {
                   "type": "VariableDeclaration",
                   "typeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256",
                    "stateMutability": null
                   },
                   "name": "j",
                   "identifier": {
                    "type": "Identifier",
                    "name": "j"
                   },
                   "storageLocation": null,
                   "isStateVar": false,
                   "isIndexed": false,
                   "expression": null
                  }
                 ],
                 "initialValue": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                 }
                },
                "conditionExpression": {
                 "type": "BinaryOperation",
                 "operator": "<",
                 "left": {
                  "type": "Identifier",
                  "name": "j"
                 },
                 "right": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "consideration"
                  },
                  "memberName": "length"
                 }
                },
                "loopExpression": {
                 "type": "ExpressionStatement",
                 "expression": {
                  "type": "UnaryOperation",
                  "operator": "++",
                  "subExpression": {
                   "type": "Identifier",
                   "name": "j"
                  },
                  "isPrefix": true
                 }
                },
                "body": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "VariableDeclarationStatement",
                   "variables": [
                    {
                     "type": "VariableDeclaration",
                     "typeName": {
                      "type": "UserDefinedTypeName",
                      "namePath": "ConsiderationItem"
                     },
                     "name": "considerationItem",
                     "identifier": {
                      "type": "Identifier",
                      "name": "considerationItem"
                     },
                     "storageLocation": "memory",
                     "isStateVar": false,
                     "isIndexed": false,
                     "expression": null
                    }
                   ],
                   "initialValue": {
                    "type": "TupleExpression",
                    "components": [
                     {
                      "type": "IndexAccess",
                      "base": {
                       "type": "Identifier",
                       "name": "consideration"
                      },
                      "index": {
                       "type": "Identifier",
                       "name": "j"
                      }
                     }
                    ],
                    "isArray": false
                   }
                  },
                  {
                   "type": "VariableDeclarationStatement",
                   "variables": [
                    {
                     "type": "VariableDeclaration",
                     "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256",
                      "stateMutability": null
                     },
                     "name": "endAmount",
                     "identifier": {
                      "type": "Identifier",
                      "name": "endAmount"
                     },
                     "storageLocation": null,
                     "isStateVar": false,
                     "isIndexed": false,
                     "expression": null
                    }
                   ],
                   "initialValue": {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "Identifier",
                     "name": "_getFraction"
                    },
                    "arguments": [
                     {
                      "type": "Identifier",
                      "name": "numerator"
                     },
                     {
                      "type": "Identifier",
                      "name": "denominator"
                     },
                     {
                      "type": "MemberAccess",
                      "expression": {
                       "type": "Identifier",
                       "name": "considerationItem"
                      },
                      "memberName": "endAmount"
                     }
                    ],
                    "names": [],
                    "identifiers": []
                   }
                  },
                  {
                   "type": "IfStatement",
                   "condition": {
                    "type": "BinaryOperation",
                    "operator": "==",
                    "left": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "considerationItem"
                     },
                     "memberName": "startAmount"
                    },
                    "right": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "considerationItem"
                     },
                     "memberName": "endAmount"
                    }
                   },
                   "trueBody": {
                    "type": "Block",
                    "statements": [
                     {
                      "type": "ExpressionStatement",
                      "expression": {
                       "type": "BinaryOperation",
                       "operator": "=",
                       "left": {
                        "type": "MemberAccess",
                        "expression": {
                         "type": "Identifier",
                         "name": "considerationItem"
                        },
                        "memberName": "startAmount"
                       },
                       "right": {
                        "type": "Identifier",
                        "name": "endAmount"
                       }
                      }
                     }
                    ]
                   },
                   "falseBody": {
                    "type": "Block",
                    "statements": [
                     {
                      "type": "ExpressionStatement",
                      "expression": {
                       "type": "BinaryOperation",
                       "operator": "=",
                       "left": {
                        "type": "MemberAccess",
                        "expression": {
                         "type": "Identifier",
                         "name": "considerationItem"
                        },
                        "memberName": "startAmount"
                       },
                       "right": {
                        "type": "FunctionCall",
                        "expression": {
                         "type": "Identifier",
                         "name": "_getFraction"
                        },
                        "arguments": [
                         {
                          "type": "Identifier",
                          "name": "numerator"
                         },
                         {
                          "type": "Identifier",
                          "name": "denominator"
                         },
                         {
                          "type": "MemberAccess",
                          "expression": {
                           "type": "Identifier",
                           "name": "considerationItem"
                          },
                          "memberName": "startAmount"
                         }
                        ],
                        "names": [],
                        "identifiers": []
                       }
                      }
                     }
                    ]
                   }
                  },
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "considerationItem"
                     },
                     "memberName": "endAmount"
                    },
                    "right": {
                     "type": "Identifier",
                     "name": "endAmount"
                    }
                   }
                  },
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "considerationItem"
                     },
                     "memberName": "startAmount"
                    },
                    "right": {
                     "type": "TupleExpression",
                     "components": [
                      {
                       "type": "FunctionCall",
                       "expression": {
                        "type": "Identifier",
                        "name": "_locateCurrentAmount"
                       },
                       "arguments": [
                        {
                         "type": "MemberAccess",
                         "expression": {
                          "type": "Identifier",
                          "name": "considerationItem"
                         },
                         "memberName": "startAmount"
                        },
                        {
                         "type": "MemberAccess",
                         "expression": {
                          "type": "Identifier",
                          "name": "considerationItem"
                         },
                         "memberName": "endAmount"
                        },
                        {
                         "type": "Identifier",
                         "name": "elapsed"
                        },
                        {
                         "type": "Identifier",
                         "name": "remaining"
                        },
                        {
                         "type": "Identifier",
                         "name": "duration"
                        },
                        {
                         "type": "BooleanLiteral",
                         "value": true
                        }
                       ],
                       "names": [],
                       "identifiers": []
                      }
                     ],
                     "isArray": false
                    }
                   }
                  },
                  {
                   "type": "InlineAssemblyStatement",
                   "language": null,
                   "flags": [],
                   "body": {
                    "type": "AssemblyBlock",
                    "operations": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "mstore",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "add",
                        "arguments": [
                         {
                          "type": "AssemblyCall",
                          "functionName": "considerationItem",
                          "arguments": []
                         },
                         {
                          "type": "HexNumber",
                          "value": "0x80"
                         }
                        ]
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "mload",
                        "arguments": [
                         {
                          "type": "AssemblyCall",
                          "functionName": "add",
                          "arguments": [
                           {
                            "type": "AssemblyCall",
                            "functionName": "considerationItem",
                            "arguments": []
                           },
                           {
                            "type": "HexNumber",
                            "value": "0xa0"
                           }
                          ]
                         }
                        ]
                       }
                      ]
                     }
                    ]
                   }
                  }
                 ]
                }
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_applyCriteriaResolvers"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "advancedOrders"
            },
            {
             "type": "Identifier",
             "name": "criteriaResolvers"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "fulfiller",
            "identifier": {
             "type": "Identifier",
             "name": "fulfiller"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "fulfiller"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mul",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "iszero",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "revertOnInvalid",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "caller",
                "arguments": []
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "UncheckedStatement",
          "block": {
           "type": "Block",
           "statements": [
            {
             "type": "ForStatement",
             "initExpression": {
              "type": "VariableDeclarationStatement",
              "variables": [
               {
                "type": "VariableDeclaration",
                "typeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "name": "i",
                "identifier": {
                 "type": "Identifier",
                 "name": "i"
                },
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false,
                "expression": null
               }
              ],
              "initialValue": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "conditionExpression": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "i"
              },
              "right": {
               "type": "Identifier",
               "name": "totalOrders"
              }
             },
             "loopExpression": {
              "type": "ExpressionStatement",
              "expression": {
               "type": "UnaryOperation",
               "operator": "++",
               "subExpression": {
                "type": "Identifier",
                "name": "i"
               },
               "isPrefix": true
              }
             },
             "body": {
              "type": "Block",
              "statements": [
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "==",
                 "left": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "orderHashes"
                  },
                  "index": {
                   "type": "Identifier",
                   "name": "i"
                  }
                 },
                 "right": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "ElementaryTypeName",
                   "name": "bytes32",
                   "stateMutability": null
                  },
                  "arguments": [
                   {
                    "type": "NumberLiteral",
                    "number": "0",
                    "subdenomination": null
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                },
                "trueBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "ContinueStatement"
                  }
                 ]
                },
                "falseBody": null
               },
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "UserDefinedTypeName",
                   "namePath": "OrderParameters"
                  },
                  "name": "orderParameters",
                  "identifier": {
                   "type": "Identifier",
                   "name": "orderParameters"
                  },
                  "storageLocation": "memory",
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "TupleExpression",
                 "components": [
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "IndexAccess",
                    "base": {
                     "type": "Identifier",
                     "name": "advancedOrders"
                    },
                    "index": {
                     "type": "Identifier",
                     "name": "i"
                    }
                   },
                   "memberName": "parameters"
                  }
                 ],
                 "isArray": false
                }
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "_emitOrderFulfilledEvent"
                 },
                 "arguments": [
                  {
                   "type": "IndexAccess",
                   "base": {
                    "type": "Identifier",
                    "name": "orderHashes"
                   },
                   "index": {
                    "type": "Identifier",
                    "name": "i"
                   }
                  },
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "orderParameters"
                   },
                   "memberName": "offerer"
                  },
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "orderParameters"
                   },
                   "memberName": "zone"
                  },
                  {
                   "type": "Identifier",
                   "name": "fulfiller"
                  },
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "orderParameters"
                   },
                   "memberName": "offer"
                  },
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "orderParameters"
                   },
                   "memberName": "consideration"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             }
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_fulfillAdvancedOrders",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "AdvancedOrder"
          },
          "length": null
         },
         "name": "advancedOrders",
         "identifier": {
          "type": "Identifier",
          "name": "advancedOrders"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "Fulfillment"
          },
          "length": null
         },
         "name": "fulfillments",
         "identifier": {
          "type": "Identifier",
          "name": "fulfillments"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "Execution"
          },
          "length": null
         },
         "name": "standardExecutions",
         "identifier": {
          "type": "Identifier",
          "name": "standardExecutions"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "BatchExecution"
          },
          "length": null
         },
         "name": "batchExecutions",
         "identifier": {
          "type": "Identifier",
          "name": "batchExecutions"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "Execution"
             },
             "length": null
            },
            "name": "executions",
            "identifier": {
             "type": "Identifier",
             "name": "executions"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "NewExpression",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "Execution"
             },
             "length": null
            }
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "fulfillments"
             },
             "memberName": "length"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "UncheckedStatement",
          "block": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "totalFilteredExecutions",
               "identifier": {
                "type": "Identifier",
                "name": "totalFilteredExecutions"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "ForStatement",
             "initExpression": {
              "type": "VariableDeclarationStatement",
              "variables": [
               {
                "type": "VariableDeclaration",
                "typeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "name": "i",
                "identifier": {
                 "type": "Identifier",
                 "name": "i"
                },
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false,
                "expression": null
               }
              ],
              "initialValue": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "conditionExpression": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "i"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "fulfillments"
               },
               "memberName": "length"
              }
             },
             "loopExpression": {
              "type": "ExpressionStatement",
              "expression": {
               "type": "UnaryOperation",
               "operator": "++",
               "subExpression": {
                "type": "Identifier",
                "name": "i"
               },
               "isPrefix": true
              }
             },
             "body": {
              "type": "Block",
              "statements": [
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "UserDefinedTypeName",
                   "namePath": "Fulfillment"
                  },
                  "name": "fulfillment",
                  "identifier": {
                   "type": "Identifier",
                   "name": "fulfillment"
                  },
                  "storageLocation": "memory",
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "fulfillments"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "i"
                 }
                }
               },
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "UserDefinedTypeName",
                   "namePath": "Execution"
                  },
                  "name": "execution",
                  "identifier": {
                   "type": "Identifier",
                   "name": "execution"
                  },
                  "storageLocation": "memory",
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "_applyFulfillment"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "advancedOrders"
                  },
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "fulfillment"
                   },
                   "memberName": "offerComponents"
                  },
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "fulfillment"
                   },
                   "memberName": "considerationComponents"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "==",
                 "left": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "execution"
                   },
                   "memberName": "item"
                  },
                  "memberName": "recipient"
                 },
                 "right": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "execution"
                  },
                  "memberName": "offerer"
                 }
                },
                "trueBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "+=",
                    "left": {
                     "type": "Identifier",
                     "name": "totalFilteredExecutions"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "1",
                     "subdenomination": null
                    }
                   }
                  }
                 ]
                },
                "falseBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                     "type": "IndexAccess",
                     "base": {
                      "type": "Identifier",
                      "name": "executions"
                     },
                     "index": {
                      "type": "BinaryOperation",
                      "operator": "-",
                      "left": {
                       "type": "Identifier",
                       "name": "i"
                      },
                      "right": {
                       "type": "Identifier",
                       "name": "totalFilteredExecutions"
                      }
                     }
                    },
                    "right": {
                     "type": "Identifier",
                     "name": "execution"
                    }
                   }
                  }
                 ]
                }
               }
              ]
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "!=",
              "left": {
               "type": "Identifier",
               "name": "totalFilteredExecutions"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "InlineAssemblyStatement",
                "language": null,
                "flags": [],
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "executions",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "sub",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "mload",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "executions",
                         "arguments": []
                        }
                       ]
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "totalFilteredExecutions",
                       "arguments": []
                      }
                     ]
                    }
                   ]
                  }
                 ]
                }
               }
              ]
             },
             "falseBody": null
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "TupleExpression",
            "components": [
             null,
             {
              "type": "Identifier",
              "name": "standardExecutions"
             },
             {
              "type": "Identifier",
              "name": "batchExecutions"
             }
            ],
            "isArray": false
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_performFinalChecksAndExecuteOrders"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "advancedOrders"
             },
             {
              "type": "Identifier",
              "name": "executions"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "TupleExpression",
           "components": [
            {
             "type": "Identifier",
             "name": "standardExecutions"
            },
            {
             "type": "Identifier",
             "name": "batchExecutions"
            }
           ],
           "isArray": false
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_fulfillAvailableOrders",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "AdvancedOrder"
          },
          "length": null
         },
         "name": "advancedOrders",
         "identifier": {
          "type": "Identifier",
          "name": "advancedOrders"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ArrayTypeName",
           "baseTypeName": {
            "type": "UserDefinedTypeName",
            "namePath": "FulfillmentComponent"
           },
           "length": null
          },
          "length": null
         },
         "name": "offerFulfillments",
         "identifier": {
          "type": "Identifier",
          "name": "offerFulfillments"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ArrayTypeName",
           "baseTypeName": {
            "type": "UserDefinedTypeName",
            "namePath": "FulfillmentComponent"
           },
           "length": null
          },
          "length": null
         },
         "name": "considerationFulfillments",
         "identifier": {
          "type": "Identifier",
          "name": "considerationFulfillments"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "fulfillerConduit",
         "identifier": {
          "type": "Identifier",
          "name": "fulfillerConduit"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "bool",
           "stateMutability": null
          },
          "length": null
         },
         "name": "availableOrders",
         "identifier": {
          "type": "Identifier",
          "name": "availableOrders"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "Execution"
          },
          "length": null
         },
         "name": "standardExecutions",
         "identifier": {
          "type": "Identifier",
          "name": "standardExecutions"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "BatchExecution"
          },
          "length": null
         },
         "name": "batchExecutions",
         "identifier": {
          "type": "Identifier",
          "name": "batchExecutions"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "Execution"
             },
             "length": null
            },
            "name": "executions",
            "identifier": {
             "type": "Identifier",
             "name": "executions"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "NewExpression",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "Execution"
             },
             "length": null
            }
           },
           "arguments": [
            {
             "type": "BinaryOperation",
             "operator": "+",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "offerFulfillments"
              },
              "memberName": "length"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "considerationFulfillments"
              },
              "memberName": "length"
             }
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "UncheckedStatement",
          "block": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "totalFilteredExecutions",
               "identifier": {
                "type": "Identifier",
                "name": "totalFilteredExecutions"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            },
            {
             "type": "ForStatement",
             "initExpression": {
              "type": "VariableDeclarationStatement",
              "variables": [
               {
                "type": "VariableDeclaration",
                "typeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "name": "i",
                "identifier": {
                 "type": "Identifier",
                 "name": "i"
                },
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false,
                "expression": null
               }
              ],
              "initialValue": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "conditionExpression": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "i"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "offerFulfillments"
               },
               "memberName": "length"
              }
             },
             "loopExpression": {
              "type": "ExpressionStatement",
              "expression": {
               "type": "UnaryOperation",
               "operator": "++",
               "subExpression": {
                "type": "Identifier",
                "name": "i"
               },
               "isPrefix": true
              }
             },
             "body": {
              "type": "Block",
              "statements": [
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "ArrayTypeName",
                   "baseTypeName": {
                    "type": "UserDefinedTypeName",
                    "namePath": "FulfillmentComponent"
                   },
                   "length": null
                  },
                  "name": "components",
                  "identifier": {
                   "type": "Identifier",
                   "name": "components"
                  },
                  "storageLocation": "memory",
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "offerFulfillments"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "i"
                 }
                }
               },
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "UserDefinedTypeName",
                   "namePath": "Execution"
                  },
                  "name": "execution",
                  "identifier": {
                   "type": "Identifier",
                   "name": "execution"
                  },
                  "storageLocation": "memory",
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "_aggregateAvailable"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "advancedOrders"
                  },
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "Side"
                   },
                   "memberName": "OFFER"
                  },
                  {
                   "type": "Identifier",
                   "name": "components"
                  },
                  {
                   "type": "Identifier",
                   "name": "fulfillerConduit"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "==",
                 "left": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "execution"
                   },
                   "memberName": "item"
                  },
                  "memberName": "recipient"
                 },
                 "right": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "execution"
                  },
                  "memberName": "offerer"
                 }
                },
                "trueBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "+=",
                    "left": {
                     "type": "Identifier",
                     "name": "totalFilteredExecutions"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "1",
                     "subdenomination": null
                    }
                   }
                  }
                 ]
                },
                "falseBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                     "type": "IndexAccess",
                     "base": {
                      "type": "Identifier",
                      "name": "executions"
                     },
                     "index": {
                      "type": "BinaryOperation",
                      "operator": "-",
                      "left": {
                       "type": "Identifier",
                       "name": "i"
                      },
                      "right": {
                       "type": "Identifier",
                       "name": "totalFilteredExecutions"
                      }
                     }
                    },
                    "right": {
                     "type": "Identifier",
                     "name": "execution"
                    }
                   }
                  }
                 ]
                }
               }
              ]
             }
            },
            {
             "type": "ForStatement",
             "initExpression": {
              "type": "VariableDeclarationStatement",
              "variables": [
               {
                "type": "VariableDeclaration",
                "typeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "name": "i",
                "identifier": {
                 "type": "Identifier",
                 "name": "i"
                },
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false,
                "expression": null
               }
              ],
              "initialValue": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "conditionExpression": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "i"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "considerationFulfillments"
               },
               "memberName": "length"
              }
             },
             "loopExpression": {
              "type": "ExpressionStatement",
              "expression": {
               "type": "UnaryOperation",
               "operator": "++",
               "subExpression": {
                "type": "Identifier",
                "name": "i"
               },
               "isPrefix": true
              }
             },
             "body": {
              "type": "Block",
              "statements": [
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "ArrayTypeName",
                   "baseTypeName": {
                    "type": "UserDefinedTypeName",
                    "namePath": "FulfillmentComponent"
                   },
                   "length": null
                  },
                  "name": "components",
                  "identifier": {
                   "type": "Identifier",
                   "name": "components"
                  },
                  "storageLocation": "memory",
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "TupleExpression",
                 "components": [
                  {
                   "type": "IndexAccess",
                   "base": {
                    "type": "Identifier",
                    "name": "considerationFulfillments"
                   },
                   "index": {
                    "type": "Identifier",
                    "name": "i"
                   }
                  }
                 ],
                 "isArray": false
                }
               },
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "UserDefinedTypeName",
                   "namePath": "Execution"
                  },
                  "name": "execution",
                  "identifier": {
                   "type": "Identifier",
                   "name": "execution"
                  },
                  "storageLocation": "memory",
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "_aggregateAvailable"
                 },
                 "arguments": [
                  {
                   "type": "Identifier",
                   "name": "advancedOrders"
                  },
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "Side"
                   },
                   "memberName": "CONSIDERATION"
                  },
                  {
                   "type": "Identifier",
                   "name": "components"
                  },
                  {
                   "type": "Identifier",
                   "name": "fulfillerConduit"
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               },
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "==",
                 "left": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "execution"
                   },
                   "memberName": "item"
                  },
                  "memberName": "recipient"
                 },
                 "right": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "execution"
                  },
                  "memberName": "offerer"
                 }
                },
                "trueBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "+=",
                    "left": {
                     "type": "Identifier",
                     "name": "totalFilteredExecutions"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "1",
                     "subdenomination": null
                    }
                   }
                  }
                 ]
                },
                "falseBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "=",
                    "left": {
                     "type": "IndexAccess",
                     "base": {
                      "type": "Identifier",
                      "name": "executions"
                     },
                     "index": {
                      "type": "BinaryOperation",
                      "operator": "-",
                      "left": {
                       "type": "BinaryOperation",
                       "operator": "+",
                       "left": {
                        "type": "Identifier",
                        "name": "i"
                       },
                       "right": {
                        "type": "MemberAccess",
                        "expression": {
                         "type": "Identifier",
                         "name": "offerFulfillments"
                        },
                        "memberName": "length"
                       }
                      },
                      "right": {
                       "type": "Identifier",
                       "name": "totalFilteredExecutions"
                      }
                     }
                    },
                    "right": {
                     "type": "Identifier",
                     "name": "execution"
                    }
                   }
                  }
                 ]
                }
               }
              ]
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "!=",
              "left": {
               "type": "Identifier",
               "name": "totalFilteredExecutions"
              },
              "right": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "InlineAssemblyStatement",
                "language": null,
                "flags": [],
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "executions",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "sub",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "mload",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "executions",
                         "arguments": []
                        }
                       ]
                      },
                      {
                       "type": "AssemblyCall",
                       "functionName": "totalFilteredExecutions",
                       "arguments": []
                      }
                     ]
                    }
                   ]
                  }
                 ]
                }
               }
              ]
             },
             "falseBody": null
            }
           ]
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "executions"
            },
            "memberName": "length"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "NoSpecifiedOrdersAvailable"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_performFinalChecksAndExecuteOrders"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "advancedOrders"
            },
            {
             "type": "Identifier",
             "name": "executions"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_performFinalChecksAndExecuteOrders",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "AdvancedOrder"
          },
          "length": null
         },
         "name": "advancedOrders",
         "identifier": {
          "type": "Identifier",
          "name": "advancedOrders"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "Execution"
          },
          "length": null
         },
         "name": "executions",
         "identifier": {
          "type": "Identifier",
          "name": "executions"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "bool",
           "stateMutability": null
          },
          "length": null
         },
         "name": "availableOrders",
         "identifier": {
          "type": "Identifier",
          "name": "availableOrders"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "Execution"
          },
          "length": null
         },
         "name": "standardExecutions",
         "identifier": {
          "type": "Identifier",
          "name": "standardExecutions"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "BatchExecution"
          },
          "length": null
         },
         "name": "batchExecutions",
         "identifier": {
          "type": "Identifier",
          "name": "batchExecutions"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "totalOrders",
            "identifier": {
             "type": "Identifier",
             "name": "totalOrders"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "advancedOrders"
           },
           "memberName": "length"
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "availableOrders"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "NewExpression",
             "typeName": {
              "type": "ArrayTypeName",
              "baseTypeName": {
               "type": "ElementaryTypeName",
               "name": "bool",
               "stateMutability": null
              },
              "length": null
             }
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "totalOrders"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "UncheckedStatement",
          "block": {
           "type": "Block",
           "statements": [
            {
             "type": "ForStatement",
             "initExpression": {
              "type": "VariableDeclarationStatement",
              "variables": [
               {
                "type": "VariableDeclaration",
                "typeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "name": "i",
                "identifier": {
                 "type": "Identifier",
                 "name": "i"
                },
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false,
                "expression": null
               }
              ],
              "initialValue": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "conditionExpression": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "i"
              },
              "right": {
               "type": "Identifier",
               "name": "totalOrders"
              }
             },
             "loopExpression": {
              "type": "ExpressionStatement",
              "expression": {
               "type": "UnaryOperation",
               "operator": "++",
               "subExpression": {
                "type": "Identifier",
                "name": "i"
               },
               "isPrefix": true
              }
             },
             "body": {
              "type": "Block",
              "statements": [
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "UserDefinedTypeName",
                   "namePath": "AdvancedOrder"
                  },
                  "name": "advancedOrder",
                  "identifier": {
                   "type": "Identifier",
                   "name": "advancedOrder"
                  },
                  "storageLocation": "memory",
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "IndexAccess",
                 "base": {
                  "type": "Identifier",
                  "name": "advancedOrders"
                 },
                 "index": {
                  "type": "Identifier",
                  "name": "i"
                 }
                }
               },
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": "==",
                 "left": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "advancedOrder"
                  },
                  "memberName": "numerator"
                 },
                 "right": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                 }
                },
                "trueBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "ContinueStatement"
                  }
                 ]
                },
                "falseBody": null
               },
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "=",
                 "left": {
                  "type": "IndexAccess",
                  "base": {
                   "type": "Identifier",
                   "name": "availableOrders"
                  },
                  "index": {
                   "type": "Identifier",
                   "name": "i"
                  }
                 },
                 "right": {
                  "type": "BooleanLiteral",
                  "value": true
                 }
                }
               },
               {
                "type": "VariableDeclarationStatement",
                "variables": [
                 {
                  "type": "VariableDeclaration",
                  "typeName": {
                   "type": "ArrayTypeName",
                   "baseTypeName": {
                    "type": "UserDefinedTypeName",
                    "namePath": "ConsiderationItem"
                   },
                   "length": null
                  },
                  "name": "consideration",
                  "identifier": {
                   "type": "Identifier",
                   "name": "consideration"
                  },
                  "storageLocation": "memory",
                  "isStateVar": false,
                  "isIndexed": false,
                  "expression": null
                 }
                ],
                "initialValue": {
                 "type": "TupleExpression",
                 "components": [
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "advancedOrder"
                    },
                    "memberName": "parameters"
                   },
                   "memberName": "consideration"
                  }
                 ],
                 "isArray": false
                }
               },
               {
                "type": "ForStatement",
                "initExpression": {
                 "type": "VariableDeclarationStatement",
                 "variables": [
                  {
                   "type": "VariableDeclaration",
                   "typeName": {
                    "type": "ElementaryTypeName",
                    "name": "uint256",
                    "stateMutability": null
                   },
                   "name": "j",
                   "identifier": {
                    "type": "Identifier",
                    "name": "j"
                   },
                   "storageLocation": null,
                   "isStateVar": false,
                   "isIndexed": false,
                   "expression": null
                  }
                 ],
                 "initialValue": {
                  "type": "NumberLiteral",
                  "number": "0",
                  "subdenomination": null
                 }
                },
                "conditionExpression": {
                 "type": "BinaryOperation",
                 "operator": "<",
                 "left": {
                  "type": "Identifier",
                  "name": "j"
                 },
                 "right": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "consideration"
                  },
                  "memberName": "length"
                 }
                },
                "loopExpression": {
                 "type": "ExpressionStatement",
                 "expression": {
                  "type": "UnaryOperation",
                  "operator": "++",
                  "subExpression": {
                   "type": "Identifier",
                   "name": "j"
                  },
                  "isPrefix": true
                 }
                },
                "body": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "VariableDeclarationStatement",
                   "variables": [
                    {
                     "type": "VariableDeclaration",
                     "typeName": {
                      "type": "ElementaryTypeName",
                      "name": "uint256",
                      "stateMutability": null
                     },
                     "name": "unmetAmount",
                     "identifier": {
                      "type": "Identifier",
                      "name": "unmetAmount"
                     },
                     "storageLocation": null,
                     "isStateVar": false,
                     "isIndexed": false,
                     "expression": null
                    }
                   ],
                   "initialValue": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "IndexAccess",
                     "base": {
                      "type": "Identifier",
                      "name": "consideration"
                     },
                     "index": {
                      "type": "Identifier",
                      "name": "j"
                     }
                    },
                    "memberName": "startAmount"
                   }
                  },
                  {
                   "type": "IfStatement",
                   "condition": {
                    "type": "BinaryOperation",
                    "operator": "!=",
                    "left": {
                     "type": "Identifier",
                     "name": "unmetAmount"
                    },
                    "right": {
                     "type": "NumberLiteral",
                     "number": "0",
                     "subdenomination": null
                    }
                   },
                   "trueBody": {
                    "type": "Block",
                    "statements": [
                     {
                      "type": "RevertStatement",
                      "revertCall": {
                       "type": "FunctionCall",
                       "expression": {
                        "type": "Identifier",
                        "name": "ConsiderationNotMet"
                       },
                       "arguments": [
                        {
                         "type": "Identifier",
                         "name": "i"
                        },
                        {
                         "type": "Identifier",
                         "name": "j"
                        },
                        {
                         "type": "Identifier",
                         "name": "unmetAmount"
                        }
                       ],
                       "names": [],
                       "identifiers": []
                      }
                     }
                    ]
                   },
                   "falseBody": null
                  }
                 ]
                }
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "TupleExpression",
            "components": [
             {
              "type": "Identifier",
              "name": "standardExecutions"
             },
             {
              "type": "Identifier",
              "name": "batchExecutions"
             }
            ],
            "isArray": false
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_compressExecutions"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "executions"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "etherRemaining",
            "identifier": {
             "type": "Identifier",
             "name": "etherRemaining"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "value"
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "standardExecutions"
            },
            "memberName": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": null
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "UserDefinedTypeName",
                "namePath": "Execution"
               },
               "name": "execution",
               "identifier": {
                "type": "Identifier",
                "name": "execution"
               },
               "storageLocation": "memory",
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "IndexAccess",
              "base": {
               "type": "Identifier",
               "name": "standardExecutions"
              },
              "index": {
               "type": "Identifier",
               "name": "i"
              }
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "UserDefinedTypeName",
                "namePath": "ReceivedItem"
               },
               "name": "item",
               "identifier": {
                "type": "Identifier",
                "name": "item"
               },
               "storageLocation": "memory",
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "execution"
              },
              "memberName": "item"
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": "==",
              "left": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "item"
               },
               "memberName": "itemType"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "ItemType"
               },
               "memberName": "NATIVE"
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "IfStatement",
                "condition": {
                 "type": "BinaryOperation",
                 "operator": ">",
                 "left": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "item"
                  },
                  "memberName": "amount"
                 },
                 "right": {
                  "type": "Identifier",
                  "name": "etherRemaining"
                 }
                },
                "trueBody": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "RevertStatement",
                   "revertCall": {
                    "type": "FunctionCall",
                    "expression": {
                     "type": "Identifier",
                     "name": "InsufficientEtherSupplied"
                    },
                    "arguments": [],
                    "names": [],
                    "identifiers": []
                   }
                  }
                 ]
                },
                "falseBody": null
               },
               {
                "type": "UncheckedStatement",
                "block": {
                 "type": "Block",
                 "statements": [
                  {
                   "type": "ExpressionStatement",
                   "expression": {
                    "type": "BinaryOperation",
                    "operator": "-=",
                    "left": {
                     "type": "Identifier",
                     "name": "etherRemaining"
                    },
                    "right": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "item"
                     },
                     "memberName": "amount"
                    }
                   }
                  }
                 ]
                }
               }
              ]
             },
             "falseBody": null
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "_transfer"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "item"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "execution"
                },
                "memberName": "offerer"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "execution"
                },
                "memberName": "conduit"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "UncheckedStatement",
             "block": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "UnaryOperation",
                 "operator": "++",
                 "subExpression": {
                  "type": "Identifier",
                  "name": "i"
                 },
                 "isPrefix": true
                }
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "UncheckedStatement",
          "block": {
           "type": "Block",
           "statements": [
            {
             "type": "ForStatement",
             "initExpression": {
              "type": "VariableDeclarationStatement",
              "variables": [
               {
                "type": "VariableDeclaration",
                "typeName": {
                 "type": "ElementaryTypeName",
                 "name": "uint256",
                 "stateMutability": null
                },
                "name": "i",
                "identifier": {
                 "type": "Identifier",
                 "name": "i"
                },
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false,
                "expression": null
               }
              ],
              "initialValue": {
               "type": "NumberLiteral",
               "number": "0",
               "subdenomination": null
              }
             },
             "conditionExpression": {
              "type": "BinaryOperation",
              "operator": "<",
              "left": {
               "type": "Identifier",
               "name": "i"
              },
              "right": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "batchExecutions"
               },
               "memberName": "length"
              }
             },
             "loopExpression": {
              "type": "ExpressionStatement",
              "expression": {
               "type": "UnaryOperation",
               "operator": "++",
               "subExpression": {
                "type": "Identifier",
                "name": "i"
               },
               "isPrefix": true
              }
             },
             "body": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "_batchTransferERC1155"
                 },
                 "arguments": [
                  {
                   "type": "IndexAccess",
                   "base": {
                    "type": "Identifier",
                    "name": "batchExecutions"
                   },
                   "index": {
                    "type": "Identifier",
                    "name": "i"
                   }
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "Identifier",
            "name": "etherRemaining"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "_transferEth"
              },
              "arguments": [
               {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "payable"
                },
                "arguments": [
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "msg"
                  },
                  "memberName": "sender"
                 }
                ],
                "names": [],
                "identifiers": []
               },
               {
                "type": "Identifier",
                "name": "etherRemaining"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "_reentrancyGuard"
           },
           "right": {
            "type": "Identifier",
            "name": "_NOT_ENTERED"
           }
          }
         },
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "TupleExpression",
           "components": [
            {
             "type": "Identifier",
             "name": "availableOrders"
            },
            {
             "type": "Identifier",
             "name": "standardExecutions"
            },
            {
             "type": "Identifier",
             "name": "batchExecutions"
            }
           ],
           "isArray": false
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_transfer",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "ReceivedItem"
         },
         "name": "item",
         "identifier": {
          "type": "Identifier",
          "name": "item"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "offerer",
         "identifier": {
          "type": "Identifier",
          "name": "offerer"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "conduit",
         "identifier": {
          "type": "Identifier",
          "name": "conduit"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "item"
            },
            "memberName": "itemType"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "ItemType"
            },
            "memberName": "NATIVE"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "_transferEth"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "item"
                },
                "memberName": "recipient"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "item"
                },
                "memberName": "amount"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": {
           "type": "IfStatement",
           "condition": {
            "type": "BinaryOperation",
            "operator": "==",
            "left": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "item"
             },
             "memberName": "itemType"
            },
            "right": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "ItemType"
             },
             "memberName": "ERC20"
            }
           },
           "trueBody": {
            "type": "Block",
            "statements": [
             {
              "type": "ExpressionStatement",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "_transferERC20"
               },
               "arguments": [
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "item"
                 },
                 "memberName": "token"
                },
                {
                 "type": "Identifier",
                 "name": "offerer"
                },
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "item"
                 },
                 "memberName": "recipient"
                },
                {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "item"
                 },
                 "memberName": "amount"
                },
                {
                 "type": "Identifier",
                 "name": "conduit"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            ]
           },
           "falseBody": {
            "type": "IfStatement",
            "condition": {
             "type": "BinaryOperation",
             "operator": "==",
             "left": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "item"
              },
              "memberName": "itemType"
             },
             "right": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "ItemType"
              },
              "memberName": "ERC721"
             }
            },
            "trueBody": {
             "type": "Block",
             "statements": [
              {
               "type": "ExpressionStatement",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "_transferERC721"
                },
                "arguments": [
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "item"
                  },
                  "memberName": "token"
                 },
                 {
                  "type": "Identifier",
                  "name": "offerer"
                 },
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "item"
                  },
                  "memberName": "recipient"
                 },
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "item"
                  },
                  "memberName": "identifier"
                 },
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "item"
                  },
                  "memberName": "amount"
                 },
                 {
                  "type": "Identifier",
                  "name": "conduit"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              }
             ]
            },
            "falseBody": {
             "type": "Block",
             "statements": [
              {
               "type": "ExpressionStatement",
               "expression": {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "_transferERC1155"
                },
                "arguments": [
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "item"
                  },
                  "memberName": "token"
                 },
                 {
                  "type": "Identifier",
                  "name": "offerer"
                 },
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "item"
                  },
                  "memberName": "recipient"
                 },
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "item"
                  },
                  "memberName": "identifier"
                 },
                 {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "item"
                  },
                  "memberName": "amount"
                 },
                 {
                  "type": "Identifier",
                  "name": "conduit"
                 }
                ],
                "names": [],
                "identifiers": []
               }
              }
             ]
            }
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_transferEth",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": "payable"
         },
         "name": "to",
         "identifier": {
          "type": "Identifier",
          "name": "to"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_assertNonZeroAmount"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bool",
             "stateMutability": null
            },
            "name": "success",
            "identifier": {
             "type": "Identifier",
             "name": "success"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "success"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "call",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "gas",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "to",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "amount",
                "arguments": []
               },
               {
                "type": "DecimalNumber",
                "value": "0"
               },
               {
                "type": "DecimalNumber",
                "value": "0"
               },
               {
                "type": "DecimalNumber",
                "value": "0"
               },
               {
                "type": "DecimalNumber",
                "value": "0"
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "UnaryOperation",
           "operator": "!",
           "subExpression": {
            "type": "Identifier",
            "name": "success"
           },
           "isPrefix": true
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "_revertWithReasonIfOneIsReturned"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "EtherTransferGenericFailure"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "to"
               },
               {
                "type": "Identifier",
                "name": "amount"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_transferERC20",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "token",
         "identifier": {
          "type": "Identifier",
          "name": "token"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "from",
         "identifier": {
          "type": "Identifier",
          "name": "from"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "to",
         "identifier": {
          "type": "Identifier",
          "name": "to"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "conduit",
         "identifier": {
          "type": "Identifier",
          "name": "conduit"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_assertNonZeroAmount"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "conduit"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "address"
            },
            "arguments": [
             {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "_performDirectERC20Transfer"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "token"
               },
               {
                "type": "Identifier",
                "name": "from"
               },
               {
                "type": "Identifier",
                "name": "to"
               },
               {
                "type": "Identifier",
                "name": "amount"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": {
           "type": "IfStatement",
           "condition": {
            "type": "BinaryOperation",
            "operator": "==",
            "left": {
             "type": "Identifier",
             "name": "conduit"
            },
            "right": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            }
           },
           "trueBody": {
            "type": "Block",
            "statements": [
             {
              "type": "VariableDeclarationStatement",
              "variables": [
               {
                "type": "VariableDeclaration",
                "typeName": {
                 "type": "ElementaryTypeName",
                 "name": "bool",
                 "stateMutability": null
                },
                "name": "success",
                "identifier": {
                 "type": "Identifier",
                 "name": "success"
                },
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false,
                "expression": null
               }
              ],
              "initialValue": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "_LEGACY_TOKEN_TRANSFER_PROXY"
                },
                "memberName": "transferFrom"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "token"
                },
                {
                 "type": "Identifier",
                 "name": "from"
                },
                {
                 "type": "Identifier",
                 "name": "to"
                },
                {
                 "type": "Identifier",
                 "name": "amount"
                }
               ],
               "names": [],
               "identifiers": []
              }
             },
             {
              "type": "IfStatement",
              "condition": {
               "type": "UnaryOperation",
               "operator": "!",
               "subExpression": {
                "type": "Identifier",
                "name": "success"
               },
               "isPrefix": true
              },
              "trueBody": {
               "type": "Block",
               "statements": [
                {
                 "type": "RevertStatement",
                 "revertCall": {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "Identifier",
                   "name": "BadReturnValueFromERC20OnTransfer"
                  },
                  "arguments": [
                   {
                    "type": "Identifier",
                    "name": "token"
                   },
                   {
                    "type": "Identifier",
                    "name": "from"
                   },
                   {
                    "type": "Identifier",
                    "name": "to"
                   },
                   {
                    "type": "Identifier",
                    "name": "amount"
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                }
               ]
              },
              "falseBody": null
             }
            ]
           },
           "falseBody": {
            "type": "Block",
            "statements": [
             {
              "type": "ExpressionStatement",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "revert"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "Not yet implemented",
                 "parts": [
                  "Not yet implemented"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            ]
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_performDirectERC20Transfer",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "token",
         "identifier": {
          "type": "Identifier",
          "name": "token"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "from",
         "identifier": {
          "type": "Identifier",
          "name": "from"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "to",
         "identifier": {
          "type": "Identifier",
          "name": "to"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "memPointer"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "mload",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "FreeMemoryPointerSlot",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "ERC20_transferFrom_sig_ptr",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "ERC20_transferFrom_signature",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "ERC20_transferFrom_from_ptr",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "from",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "ERC20_transferFrom_to_ptr",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "to",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "ERC20_transferFrom_amount_ptr",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "amount",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "callStatus"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "call",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "gas",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "token",
                "arguments": []
               },
               {
                "type": "DecimalNumber",
                "value": "0"
               },
               {
                "type": "AssemblyCall",
                "functionName": "ERC20_transferFrom_sig_ptr",
                "arguments": []
               },
               {
                "type": "AssemblyCall",
                "functionName": "ERC20_transferFrom_length",
                "arguments": []
               },
               {
                "type": "DecimalNumber",
                "value": "0"
               },
               {
                "type": "HexNumber",
                "value": "0x20"
               }
              ]
             }
            },
            {
             "type": "AssemblyLocalDefinition",
             "names": [
              {
               "type": "Identifier",
               "name": "success"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "and",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "or",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "and",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "eq",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "mload",
                      "arguments": [
                       {
                        "type": "DecimalNumber",
                        "value": "0"
                       }
                      ]
                     },
                     {
                      "type": "DecimalNumber",
                      "value": "1"
                     }
                    ]
                   },
                   {
                    "type": "AssemblyCall",
                    "functionName": "gt",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "returndatasize",
                      "arguments": []
                     },
                     {
                      "type": "DecimalNumber",
                      "value": "31"
                     }
                    ]
                   }
                  ]
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "iszero",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "returndatasize",
                    "arguments": []
                   }
                  ]
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "callStatus",
                "arguments": []
               }
              ]
             }
            },
            {
             "type": "AssemblyIf",
             "condition": {
              "type": "AssemblyCall",
              "functionName": "iszero",
              "arguments": [
               {
                "type": "AssemblyCall",
                "functionName": "and",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "success",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "iszero",
                  "arguments": [
                   {
                    "type": "AssemblyCall",
                    "functionName": "iszero",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "returndatasize",
                      "arguments": []
                     }
                    ]
                   }
                  ]
                 }
                ]
               }
              ]
             },
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyIf",
                "condition": {
                 "type": "AssemblyCall",
                 "functionName": "iszero",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "and",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "iszero",
                     "arguments": [
                      {
                       "type": "AssemblyCall",
                       "functionName": "iszero",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "extcodesize",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "token",
                           "arguments": []
                          }
                         ]
                        }
                       ]
                      }
                     ]
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "success",
                     "arguments": []
                    }
                   ]
                  }
                 ]
                },
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyIf",
                   "condition": {
                    "type": "AssemblyCall",
                    "functionName": "iszero",
                    "arguments": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "success",
                      "arguments": []
                     }
                    ]
                   },
                   "body": {
                    "type": "AssemblyBlock",
                    "operations": [
                     {
                      "type": "AssemblyIf",
                      "condition": {
                       "type": "AssemblyCall",
                       "functionName": "iszero",
                       "arguments": [
                        {
                         "type": "AssemblyCall",
                         "functionName": "callStatus",
                         "arguments": []
                        }
                       ]
                      },
                      "body": {
                       "type": "AssemblyBlock",
                       "operations": [
                        {
                         "type": "AssemblyIf",
                         "condition": {
                          "type": "AssemblyCall",
                          "functionName": "returndatasize",
                          "arguments": []
                         },
                         "body": {
                          "type": "AssemblyBlock",
                          "operations": [
                           {
                            "type": "AssemblyCall",
                            "functionName": "returndatacopy",
                            "arguments": [
                             {
                              "type": "DecimalNumber",
                              "value": "0"
                             },
                             {
                              "type": "DecimalNumber",
                              "value": "0"
                             },
                             {
                              "type": "AssemblyCall",
                              "functionName": "returndatasize",
                              "arguments": []
                             }
                            ]
                           },
                           {
                            "type": "AssemblyCall",
                            "functionName": "revert",
                            "arguments": [
                             {
                              "type": "DecimalNumber",
                              "value": "0"
                             },
                             {
                              "type": "AssemblyCall",
                              "functionName": "returndatasize",
                              "arguments": []
                             }
                            ]
                           }
                          ]
                         }
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "mstore",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "TokenTransferGenericFailure_error_sig_ptr",
                           "arguments": []
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "TokenTransferGenericFailure_error_signature",
                           "arguments": []
                          }
                         ]
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "mstore",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "TokenTransferGenericFailure_error_token_ptr",
                           "arguments": []
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "token",
                           "arguments": []
                          }
                         ]
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "mstore",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "TokenTransferGenericFailure_error_from_ptr",
                           "arguments": []
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "from",
                           "arguments": []
                          }
                         ]
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "mstore",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "TokenTransferGenericFailure_error_to_ptr",
                           "arguments": []
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "to",
                           "arguments": []
                          }
                         ]
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "mstore",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "TokenTransferGenericFailure_error_id_ptr",
                           "arguments": []
                          },
                          {
                           "type": "DecimalNumber",
                           "value": "0"
                          }
                         ]
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "mstore",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "TokenTransferGenericFailure_error_amount_ptr",
                           "arguments": []
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "amount",
                           "arguments": []
                          }
                         ]
                        },
                        {
                         "type": "AssemblyCall",
                         "functionName": "revert",
                         "arguments": [
                          {
                           "type": "AssemblyCall",
                           "functionName": "TokenTransferGenericFailure_error_sig_ptr",
                           "arguments": []
                          },
                          {
                           "type": "AssemblyCall",
                           "functionName": "TokenTransferGenericFailure_error_length",
                           "arguments": []
                          }
                         ]
                        }
                       ]
                      }
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "mstore",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "BadReturnValueFromERC20OnTransfer_error_sig_ptr",
                        "arguments": []
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "BadReturnValueFromERC20OnTransfer_error_signature",
                        "arguments": []
                       }
                      ]
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "mstore",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "BadReturnValueFromERC20OnTransfer_error_token_ptr",
                        "arguments": []
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "token",
                        "arguments": []
                       }
                      ]
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "mstore",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "BadReturnValueFromERC20OnTransfer_error_from_ptr",
                        "arguments": []
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "from",
                        "arguments": []
                       }
                      ]
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "mstore",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "BadReturnValueFromERC20OnTransfer_error_to_ptr",
                        "arguments": []
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "to",
                        "arguments": []
                       }
                      ]
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "mstore",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "BadReturnValueFromERC20OnTransfer_error_amount_ptr",
                        "arguments": []
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "amount",
                        "arguments": []
                       }
                      ]
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "revert",
                      "arguments": [
                       {
                        "type": "AssemblyCall",
                        "functionName": "BadReturnValueFromERC20OnTransfer_error_sig_ptr",
                        "arguments": []
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "TokenTransferGenericFailure_error_length",
                        "arguments": []
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "NoContract_error_sig_ptr",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "NoContract_error_signature",
                     "arguments": []
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "NoContract_error_token_ptr",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "token",
                     "arguments": []
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "revert",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "NoContract_error_sig_ptr",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "NoContract_error_length",
                     "arguments": []
                    }
                   ]
                  }
                 ]
                }
               }
              ]
             }
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "FreeMemoryPointerSlot",
               "arguments": []
              },
              {
               "type": "AssemblyCall",
               "functionName": "memPointer",
               "arguments": []
              }
             ]
            },
            {
             "type": "AssemblyCall",
             "functionName": "mstore",
             "arguments": [
              {
               "type": "AssemblyCall",
               "functionName": "ZeroSlot",
               "arguments": []
              },
              {
               "type": "DecimalNumber",
               "value": "0"
              }
             ]
            }
           ]
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_transferERC721",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "token",
         "identifier": {
          "type": "Identifier",
          "name": "token"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "from",
         "identifier": {
          "type": "Identifier",
          "name": "from"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "to",
         "identifier": {
          "type": "Identifier",
          "name": "to"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "identifier",
         "identifier": {
          "type": "Identifier",
          "name": "identifier"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "conduit",
         "identifier": {
          "type": "Identifier",
          "name": "conduit"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "Identifier",
            "name": "amount"
           },
           "right": {
            "type": "NumberLiteral",
            "number": "1",
            "subdenomination": null
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "InvalidERC721TransferAmount"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "conduit"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "address"
            },
            "arguments": [
             {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "InlineAssemblyStatement",
             "language": null,
             "flags": [],
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyIf",
                "condition": {
                 "type": "AssemblyCall",
                 "functionName": "iszero",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "extcodesize",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "token",
                     "arguments": []
                    }
                   ]
                  }
                 ]
                },
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "NoContract_error_sig_ptr",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "NoContract_error_signature",
                     "arguments": []
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "NoContract_error_token_ptr",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "token",
                     "arguments": []
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "revert",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "NoContract_error_sig_ptr",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "NoContract_error_length",
                     "arguments": []
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "memPointer"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "mload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "FreeMemoryPointerSlot",
                   "arguments": []
                  }
                 ]
                }
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "ERC721_transferFrom_sig_ptr",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "ERC721_transferFrom_signature",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "ERC721_transferFrom_from_ptr",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "from",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "ERC721_transferFrom_to_ptr",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "to",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "ERC721_transferFrom_id_ptr",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "identifier",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "success"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "call",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "gas",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "token",
                   "arguments": []
                  },
                  {
                   "type": "DecimalNumber",
                   "value": "0"
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "ERC721_transferFrom_sig_ptr",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "ERC721_transferFrom_length",
                   "arguments": []
                  },
                  {
                   "type": "DecimalNumber",
                   "value": "0"
                  },
                  {
                   "type": "DecimalNumber",
                   "value": "0"
                  }
                 ]
                }
               },
               {
                "type": "AssemblyIf",
                "condition": {
                 "type": "AssemblyCall",
                 "functionName": "iszero",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "success",
                   "arguments": []
                  }
                 ]
                },
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyIf",
                   "condition": {
                    "type": "AssemblyCall",
                    "functionName": "returndatasize",
                    "arguments": []
                   },
                   "body": {
                    "type": "AssemblyBlock",
                    "operations": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "returndatacopy",
                      "arguments": [
                       {
                        "type": "DecimalNumber",
                        "value": "0"
                       },
                       {
                        "type": "DecimalNumber",
                        "value": "0"
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "returndatasize",
                        "arguments": []
                       }
                      ]
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "revert",
                      "arguments": [
                       {
                        "type": "DecimalNumber",
                        "value": "0"
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "returndatasize",
                        "arguments": []
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "TokenTransferGenericFailure_error_sig_ptr",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "TokenTransferGenericFailure_error_signature",
                     "arguments": []
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "TokenTransferGenericFailure_error_token_ptr",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "token",
                     "arguments": []
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "TokenTransferGenericFailure_error_from_ptr",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "from",
                     "arguments": []
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "TokenTransferGenericFailure_error_to_ptr",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "to",
                     "arguments": []
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "TokenTransferGenericFailure_error_id_ptr",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "identifier",
                     "arguments": []
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "TokenTransferGenericFailure_error_amount_ptr",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "amount",
                     "arguments": []
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "revert",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "TokenTransferGenericFailure_error_sig_ptr",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "TokenTransferGenericFailure_error_length",
                     "arguments": []
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "FreeMemoryPointerSlot",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "memPointer",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "ZeroSlot",
                  "arguments": []
                 },
                 {
                  "type": "DecimalNumber",
                  "value": "0"
                 }
                ]
               }
              ]
             }
            }
           ]
          },
          "falseBody": {
           "type": "IfStatement",
           "condition": {
            "type": "BinaryOperation",
            "operator": "==",
            "left": {
             "type": "Identifier",
             "name": "conduit"
            },
            "right": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            }
           },
           "trueBody": {
            "type": "Block",
            "statements": [
             {
              "type": "VariableDeclarationStatement",
              "variables": [
               {
                "type": "VariableDeclaration",
                "typeName": {
                 "type": "ElementaryTypeName",
                 "name": "bool",
                 "stateMutability": null
                },
                "name": "success",
                "identifier": {
                 "type": "Identifier",
                 "name": "success"
                },
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false,
                "expression": null
               }
              ],
              "initialValue": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "_callProxy"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "from"
                },
                {
                 "type": "Identifier",
                 "name": "token"
                },
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "abi"
                  },
                  "memberName": "encodeCall"
                 },
                 "arguments": [
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "ERC721Interface"
                   },
                   "memberName": "transferFrom"
                  },
                  {
                   "type": "TupleExpression",
                   "components": [
                    {
                     "type": "Identifier",
                     "name": "from"
                    },
                    {
                     "type": "Identifier",
                     "name": "to"
                    },
                    {
                     "type": "Identifier",
                     "name": "identifier"
                    }
                   ],
                   "isArray": false
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               ],
               "names": [],
               "identifiers": []
              }
             },
             {
              "type": "ExpressionStatement",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "_assertValidTokenTransfer"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "success"
                },
                {
                 "type": "Identifier",
                 "name": "token"
                },
                {
                 "type": "Identifier",
                 "name": "from"
                },
                {
                 "type": "Identifier",
                 "name": "to"
                },
                {
                 "type": "Identifier",
                 "name": "identifier"
                },
                {
                 "type": "Identifier",
                 "name": "amount"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            ]
           },
           "falseBody": {
            "type": "Block",
            "statements": [
             {
              "type": "ExpressionStatement",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "revert"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "Not yet implemented",
                 "parts": [
                  "Not yet implemented"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            ]
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_transferERC1155",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "token",
         "identifier": {
          "type": "Identifier",
          "name": "token"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "from",
         "identifier": {
          "type": "Identifier",
          "name": "from"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "to",
         "identifier": {
          "type": "Identifier",
          "name": "to"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "identifier",
         "identifier": {
          "type": "Identifier",
          "name": "identifier"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "conduit",
         "identifier": {
          "type": "Identifier",
          "name": "conduit"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_assertNonZeroAmount"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "conduit"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "address"
            },
            "arguments": [
             {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "InlineAssemblyStatement",
             "language": null,
             "flags": [],
             "body": {
              "type": "AssemblyBlock",
              "operations": [
               {
                "type": "AssemblyIf",
                "condition": {
                 "type": "AssemblyCall",
                 "functionName": "iszero",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "extcodesize",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "token",
                     "arguments": []
                    }
                   ]
                  }
                 ]
                },
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "NoContract_error_sig_ptr",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "NoContract_error_signature",
                     "arguments": []
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "NoContract_error_token_ptr",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "token",
                     "arguments": []
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "revert",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "NoContract_error_sig_ptr",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "NoContract_error_length",
                     "arguments": []
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "memPointer"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "mload",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "FreeMemoryPointerSlot",
                   "arguments": []
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "slot0x80"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "mload",
                 "arguments": [
                  {
                   "type": "HexNumber",
                   "value": "0x80"
                  }
                 ]
                }
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "slot0xA0"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "mload",
                 "arguments": [
                  {
                   "type": "HexNumber",
                   "value": "0xA0"
                  }
                 ]
                }
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "ERC1155_safeTransferFrom_sig_ptr",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "ERC1155_safeTransferFrom_signature",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "ERC1155_safeTransferFrom_from_ptr",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "from",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "ERC1155_safeTransferFrom_to_ptr",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "to",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "ERC1155_safeTransferFrom_id_ptr",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "identifier",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "ERC1155_safeTransferFrom_amount_ptr",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "amount",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "ERC1155_safeTransferFrom_data_offset_ptr",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "ERC1155_safeTransferFrom_data_length_offset",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "ERC1155_safeTransferFrom_data_length_ptr",
                  "arguments": []
                 },
                 {
                  "type": "DecimalNumber",
                  "value": "0"
                 }
                ]
               },
               {
                "type": "AssemblyLocalDefinition",
                "names": [
                 {
                  "type": "Identifier",
                  "name": "success"
                 }
                ],
                "expression": {
                 "type": "AssemblyCall",
                 "functionName": "call",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "gas",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "token",
                   "arguments": []
                  },
                  {
                   "type": "DecimalNumber",
                   "value": "0"
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "ERC1155_safeTransferFrom_sig_ptr",
                   "arguments": []
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "ERC1155_safeTransferFrom_length",
                   "arguments": []
                  },
                  {
                   "type": "DecimalNumber",
                   "value": "0"
                  },
                  {
                   "type": "DecimalNumber",
                   "value": "0"
                  }
                 ]
                }
               },
               {
                "type": "AssemblyIf",
                "condition": {
                 "type": "AssemblyCall",
                 "functionName": "iszero",
                 "arguments": [
                  {
                   "type": "AssemblyCall",
                   "functionName": "success",
                   "arguments": []
                  }
                 ]
                },
                "body": {
                 "type": "AssemblyBlock",
                 "operations": [
                  {
                   "type": "AssemblyIf",
                   "condition": {
                    "type": "AssemblyCall",
                    "functionName": "returndatasize",
                    "arguments": []
                   },
                   "body": {
                    "type": "AssemblyBlock",
                    "operations": [
                     {
                      "type": "AssemblyCall",
                      "functionName": "returndatacopy",
                      "arguments": [
                       {
                        "type": "DecimalNumber",
                        "value": "0"
                       },
                       {
                        "type": "DecimalNumber",
                        "value": "0"
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "returndatasize",
                        "arguments": []
                       }
                      ]
                     },
                     {
                      "type": "AssemblyCall",
                      "functionName": "revert",
                      "arguments": [
                       {
                        "type": "DecimalNumber",
                        "value": "0"
                       },
                       {
                        "type": "AssemblyCall",
                        "functionName": "returndatasize",
                        "arguments": []
                       }
                      ]
                     }
                    ]
                   }
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "TokenTransferGenericFailure_error_sig_ptr",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "TokenTransferGenericFailure_error_signature",
                     "arguments": []
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "TokenTransferGenericFailure_error_token_ptr",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "token",
                     "arguments": []
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "TokenTransferGenericFailure_error_from_ptr",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "from",
                     "arguments": []
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "TokenTransferGenericFailure_error_to_ptr",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "to",
                     "arguments": []
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "TokenTransferGenericFailure_error_id_ptr",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "identifier",
                     "arguments": []
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "mstore",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "TokenTransferGenericFailure_error_amount_ptr",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "amount",
                     "arguments": []
                    }
                   ]
                  },
                  {
                   "type": "AssemblyCall",
                   "functionName": "revert",
                   "arguments": [
                    {
                     "type": "AssemblyCall",
                     "functionName": "TokenTransferGenericFailure_error_sig_ptr",
                     "arguments": []
                    },
                    {
                     "type": "AssemblyCall",
                     "functionName": "TokenTransferGenericFailure_error_length",
                     "arguments": []
                    }
                   ]
                  }
                 ]
                }
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0x80"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "slot0x80",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "HexNumber",
                  "value": "0xA0"
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "slot0xA0",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "FreeMemoryPointerSlot",
                  "arguments": []
                 },
                 {
                  "type": "AssemblyCall",
                  "functionName": "memPointer",
                  "arguments": []
                 }
                ]
               },
               {
                "type": "AssemblyCall",
                "functionName": "mstore",
                "arguments": [
                 {
                  "type": "AssemblyCall",
                  "functionName": "ZeroSlot",
                  "arguments": []
                 },
                 {
                  "type": "DecimalNumber",
                  "value": "0"
                 }
                ]
               }
              ]
             }
            }
           ]
          },
          "falseBody": {
           "type": "IfStatement",
           "condition": {
            "type": "BinaryOperation",
            "operator": "==",
            "left": {
             "type": "Identifier",
             "name": "conduit"
            },
            "right": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            }
           },
           "trueBody": {
            "type": "Block",
            "statements": [
             {
              "type": "VariableDeclarationStatement",
              "variables": [
               {
                "type": "VariableDeclaration",
                "typeName": {
                 "type": "ElementaryTypeName",
                 "name": "bool",
                 "stateMutability": null
                },
                "name": "success",
                "identifier": {
                 "type": "Identifier",
                 "name": "success"
                },
                "storageLocation": null,
                "isStateVar": false,
                "isIndexed": false,
                "expression": null
               }
              ],
              "initialValue": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "_callProxy"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "from"
                },
                {
                 "type": "Identifier",
                 "name": "token"
                },
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "abi"
                  },
                  "memberName": "encodeWithSelector"
                 },
                 "arguments": [
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "ERC1155Interface"
                    },
                    "memberName": "safeTransferFrom"
                   },
                   "memberName": "selector"
                  },
                  {
                   "type": "Identifier",
                   "name": "from"
                  },
                  {
                   "type": "Identifier",
                   "name": "to"
                  },
                  {
                   "type": "Identifier",
                   "name": "identifier"
                  },
                  {
                   "type": "Identifier",
                   "name": "amount"
                  },
                  {
                   "type": "StringLiteral",
                   "value": "",
                   "parts": [
                    ""
                   ],
                   "isUnicode": [
                    false
                   ]
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               ],
               "names": [],
               "identifiers": []
              }
             },
             {
              "type": "ExpressionStatement",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "_assertValidTokenTransfer"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "success"
                },
                {
                 "type": "Identifier",
                 "name": "token"
                },
                {
                 "type": "Identifier",
                 "name": "from"
                },
                {
                 "type": "Identifier",
                 "name": "to"
                },
                {
                 "type": "Identifier",
                 "name": "identifier"
                },
                {
                 "type": "Identifier",
                 "name": "amount"
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            ]
           },
           "falseBody": {
            "type": "Block",
            "statements": [
             {
              "type": "ExpressionStatement",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "revert"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "Not yet implemented",
                 "parts": [
                  "Not yet implemented"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            ]
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_batchTransferERC1155",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "BatchExecution"
         },
         "name": "batchExecution",
         "identifier": {
          "type": "Identifier",
          "name": "batchExecution"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "conduit",
            "identifier": {
             "type": "Identifier",
             "name": "conduit"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "batchExecution"
           },
           "memberName": "conduit"
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "token",
            "identifier": {
             "type": "Identifier",
             "name": "token"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "batchExecution"
           },
           "memberName": "token"
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "from",
            "identifier": {
             "type": "Identifier",
             "name": "from"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "batchExecution"
           },
           "memberName": "from"
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "to",
            "identifier": {
             "type": "Identifier",
             "name": "to"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "batchExecution"
           },
           "memberName": "to"
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "tokenIds",
            "identifier": {
             "type": "Identifier",
             "name": "tokenIds"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "batchExecution"
           },
           "memberName": "tokenIds"
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "length": null
            },
            "name": "amounts",
            "identifier": {
             "type": "Identifier",
             "name": "amounts"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "batchExecution"
           },
           "memberName": "amounts"
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bool",
             "stateMutability": null
            },
            "name": "success",
            "identifier": {
             "type": "Identifier",
             "name": "success"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "==",
           "left": {
            "type": "Identifier",
            "name": "conduit"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "address"
            },
            "arguments": [
             {
              "type": "NumberLiteral",
              "number": "0",
              "subdenomination": null
             }
            ],
            "names": [],
            "identifiers": []
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "BinaryOperation",
              "operator": "=",
              "left": {
               "type": "TupleExpression",
               "components": [
                {
                 "type": "Identifier",
                 "name": "success"
                },
                null
               ],
               "isArray": false
              },
              "right": {
               "type": "FunctionCall",
               "expression": {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "token"
                },
                "memberName": "call"
               },
               "arguments": [
                {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "abi"
                  },
                  "memberName": "encodeWithSelector"
                 },
                 "arguments": [
                  {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "Identifier",
                     "name": "ERC1155Interface"
                    },
                    "memberName": "safeBatchTransferFrom"
                   },
                   "memberName": "selector"
                  },
                  {
                   "type": "Identifier",
                   "name": "from"
                  },
                  {
                   "type": "Identifier",
                   "name": "to"
                  },
                  {
                   "type": "Identifier",
                   "name": "tokenIds"
                  },
                  {
                   "type": "Identifier",
                   "name": "amounts"
                  },
                  {
                   "type": "StringLiteral",
                   "value": "",
                   "parts": [
                    ""
                   ],
                   "isUnicode": [
                    false
                   ]
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            }
           ]
          },
          "falseBody": {
           "type": "IfStatement",
           "condition": {
            "type": "BinaryOperation",
            "operator": "==",
            "left": {
             "type": "Identifier",
             "name": "conduit"
            },
            "right": {
             "type": "FunctionCall",
             "expression": {
              "type": "Identifier",
              "name": "address"
             },
             "arguments": [
              {
               "type": "NumberLiteral",
               "number": "1",
               "subdenomination": null
              }
             ],
             "names": [],
             "identifiers": []
            }
           },
           "trueBody": {
            "type": "Block",
            "statements": [
             {
              "type": "ExpressionStatement",
              "expression": {
               "type": "BinaryOperation",
               "operator": "=",
               "left": {
                "type": "Identifier",
                "name": "success"
               },
               "right": {
                "type": "FunctionCall",
                "expression": {
                 "type": "Identifier",
                 "name": "_callProxy"
                },
                "arguments": [
                 {
                  "type": "Identifier",
                  "name": "from"
                 },
                 {
                  "type": "Identifier",
                  "name": "token"
                 },
                 {
                  "type": "FunctionCall",
                  "expression": {
                   "type": "MemberAccess",
                   "expression": {
                    "type": "Identifier",
                    "name": "abi"
                   },
                   "memberName": "encodeWithSelector"
                  },
                  "arguments": [
                   {
                    "type": "MemberAccess",
                    "expression": {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "ERC1155Interface"
                     },
                     "memberName": "safeBatchTransferFrom"
                    },
                    "memberName": "selector"
                   },
                   {
                    "type": "Identifier",
                    "name": "from"
                   },
                   {
                    "type": "Identifier",
                    "name": "to"
                   },
                   {
                    "type": "Identifier",
                    "name": "tokenIds"
                   },
                   {
                    "type": "Identifier",
                    "name": "amounts"
                   },
                   {
                    "type": "StringLiteral",
                    "value": "",
                    "parts": [
                     ""
                    ],
                    "isUnicode": [
                     false
                    ]
                   }
                  ],
                  "names": [],
                  "identifiers": []
                 }
                ],
                "names": [],
                "identifiers": []
               }
              }
             }
            ]
           },
           "falseBody": {
            "type": "Block",
            "statements": [
             {
              "type": "ExpressionStatement",
              "expression": {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "revert"
               },
               "arguments": [
                {
                 "type": "StringLiteral",
                 "value": "Not yet implemented",
                 "parts": [
                  "Not yet implemented"
                 ],
                 "isUnicode": [
                  false
                 ]
                }
               ],
               "names": [],
               "identifiers": []
              }
             }
            ]
           }
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "UnaryOperation",
           "operator": "!",
           "subExpression": {
            "type": "Identifier",
            "name": "success"
           },
           "isPrefix": true
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "_revertWithReasonIfOneIsReturned"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "ERC1155BatchTransferGenericFailure"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "token"
               },
               {
                "type": "Identifier",
                "name": "from"
               },
               {
                "type": "Identifier",
                "name": "to"
               },
               {
                "type": "Identifier",
                "name": "tokenIds"
               },
               {
                "type": "Identifier",
                "name": "amounts"
               }
              ],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_assertContractIsDeployed"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "token"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_callProxy",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "proxyOwner",
         "identifier": {
          "type": "Identifier",
          "name": "proxyOwner"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "target",
         "identifier": {
          "type": "Identifier",
          "name": "target"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "callData",
         "identifier": {
          "type": "Identifier",
          "name": "callData"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "success",
         "identifier": {
          "type": "Identifier",
          "name": "success"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "proxy",
            "identifier": {
             "type": "Identifier",
             "name": "proxy"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "_LEGACY_PROXY_REGISTRY"
            },
            "memberName": "proxies"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "proxyOwner"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": "!=",
           "left": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "ProxyInterface"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "proxy"
               }
              ],
              "names": [],
              "identifiers": []
             },
             "memberName": "implementation"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           },
           "right": {
            "type": "Identifier",
            "name": "_REQUIRED_PROXY_IMPLEMENTATION"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "InvalidProxyImplementation"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "TupleExpression",
            "components": [
             {
              "type": "Identifier",
              "name": "success"
             },
             null
            ],
            "isArray": false
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "proxy"
             },
             "memberName": "call"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "abi"
               },
               "memberName": "encodeWithSelector"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "ProxyInterface"
                 },
                 "memberName": "proxyAssert"
                },
                "memberName": "selector"
               },
               {
                "type": "Identifier",
                "name": "target"
               },
               {
                "type": "NumberLiteral",
                "number": "0",
                "subdenomination": null
               },
               {
                "type": "Identifier",
                "name": "callData"
               }
              ],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_transferEthAndFinalize",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "BasicOrderParameters"
         },
         "name": "parameters",
         "identifier": {
          "type": "Identifier",
          "name": "parameters"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "uint256",
             "stateMutability": null
            },
            "name": "etherRemaining",
            "identifier": {
             "type": "Identifier",
             "name": "etherRemaining"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "MemberAccess",
           "expression": {
            "type": "Identifier",
            "name": "msg"
           },
           "memberName": "value"
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "parameters"
             },
             "memberName": "additionalRecipients"
            },
            "memberName": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": null
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "UserDefinedTypeName",
                "namePath": "AdditionalRecipient"
               },
               "name": "additionalRecipient",
               "identifier": {
                "type": "Identifier",
                "name": "additionalRecipient"
               },
               "storageLocation": "calldata",
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "TupleExpression",
              "components": [
               {
                "type": "IndexAccess",
                "base": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "parameters"
                 },
                 "memberName": "additionalRecipients"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               }
              ],
              "isArray": false
             }
            },
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "ElementaryTypeName",
                "name": "uint256",
                "stateMutability": null
               },
               "name": "additionalRecipientAmount",
               "identifier": {
                "type": "Identifier",
                "name": "additionalRecipientAmount"
               },
               "storageLocation": null,
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "additionalRecipient"
              },
              "memberName": "amount"
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "BinaryOperation",
              "operator": ">",
              "left": {
               "type": "Identifier",
               "name": "additionalRecipientAmount"
              },
              "right": {
               "type": "Identifier",
               "name": "etherRemaining"
              }
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "RevertStatement",
                "revertCall": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "InsufficientEtherSupplied"
                 },
                 "arguments": [],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             },
             "falseBody": null
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "_transferEth"
              },
              "arguments": [
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "additionalRecipient"
                },
                "memberName": "recipient"
               },
               {
                "type": "Identifier",
                "name": "additionalRecipientAmount"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "UncheckedStatement",
             "block": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "-=",
                 "left": {
                  "type": "Identifier",
                  "name": "etherRemaining"
                 },
                 "right": {
                  "type": "Identifier",
                  "name": "additionalRecipientAmount"
                 }
                }
               }
              ]
             }
            },
            {
             "type": "UncheckedStatement",
             "block": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "UnaryOperation",
                 "operator": "++",
                 "subExpression": {
                  "type": "Identifier",
                  "name": "i"
                 },
                 "isPrefix": true
                }
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "amount"
           },
           "right": {
            "type": "Identifier",
            "name": "etherRemaining"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "RevertStatement",
             "revertCall": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "InsufficientEtherSupplied"
              },
              "arguments": [],
              "names": [],
              "identifiers": []
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_transferEth"
           },
           "arguments": [
            {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "parameters"
             },
             "memberName": "offerer"
            },
            {
             "type": "Identifier",
             "name": "amount"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "IfStatement",
          "condition": {
           "type": "BinaryOperation",
           "operator": ">",
           "left": {
            "type": "Identifier",
            "name": "etherRemaining"
           },
           "right": {
            "type": "Identifier",
            "name": "amount"
           }
          },
          "trueBody": {
           "type": "Block",
           "statements": [
            {
             "type": "UncheckedStatement",
             "block": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "FunctionCall",
                 "expression": {
                  "type": "Identifier",
                  "name": "_transferEth"
                 },
                 "arguments": [
                  {
                   "type": "FunctionCall",
                   "expression": {
                    "type": "Identifier",
                    "name": "payable"
                   },
                   "arguments": [
                    {
                     "type": "MemberAccess",
                     "expression": {
                      "type": "Identifier",
                      "name": "msg"
                     },
                     "memberName": "sender"
                    }
                   ],
                   "names": [],
                   "identifiers": []
                  },
                  {
                   "type": "BinaryOperation",
                   "operator": "-",
                   "left": {
                    "type": "Identifier",
                    "name": "etherRemaining"
                   },
                   "right": {
                    "type": "Identifier",
                    "name": "amount"
                   }
                  }
                 ],
                 "names": [],
                 "identifiers": []
                }
               }
              ]
             }
            }
           ]
          },
          "falseBody": null
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "_reentrancyGuard"
           },
           "right": {
            "type": "Identifier",
            "name": "_NOT_ENTERED"
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_transferERC20AndFinalize",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "from",
         "identifier": {
          "type": "Identifier",
          "name": "from"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "to",
         "identifier": {
          "type": "Identifier",
          "name": "to"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "erc20Token",
         "identifier": {
          "type": "Identifier",
          "name": "erc20Token"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "BasicOrderParameters"
         },
         "name": "parameters",
         "identifier": {
          "type": "Identifier",
          "name": "parameters"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "fromOfferer",
         "identifier": {
          "type": "Identifier",
          "name": "fromOfferer"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "address",
             "stateMutability": null
            },
            "name": "conduit",
            "identifier": {
             "type": "Identifier",
             "name": "conduit"
            },
            "storageLocation": null,
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "Conditional",
           "condition": {
            "type": "Identifier",
            "name": "fromOfferer"
           },
           "trueExpression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "parameters"
            },
            "memberName": "offererConduit"
           },
           "falseExpression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "parameters"
            },
            "memberName": "fulfillerConduit"
           }
          }
         },
         {
          "type": "ForStatement",
          "initExpression": {
           "type": "VariableDeclarationStatement",
           "variables": [
            {
             "type": "VariableDeclaration",
             "typeName": {
              "type": "ElementaryTypeName",
              "name": "uint256",
              "stateMutability": null
             },
             "name": "i",
             "identifier": {
              "type": "Identifier",
              "name": "i"
             },
             "storageLocation": null,
             "isStateVar": false,
             "isIndexed": false,
             "expression": null
            }
           ],
           "initialValue": {
            "type": "NumberLiteral",
            "number": "0",
            "subdenomination": null
           }
          },
          "conditionExpression": {
           "type": "BinaryOperation",
           "operator": "<",
           "left": {
            "type": "Identifier",
            "name": "i"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "MemberAccess",
             "expression": {
              "type": "Identifier",
              "name": "parameters"
             },
             "memberName": "additionalRecipients"
            },
            "memberName": "length"
           }
          },
          "loopExpression": {
           "type": "ExpressionStatement",
           "expression": null
          },
          "body": {
           "type": "Block",
           "statements": [
            {
             "type": "VariableDeclarationStatement",
             "variables": [
              {
               "type": "VariableDeclaration",
               "typeName": {
                "type": "UserDefinedTypeName",
                "namePath": "AdditionalRecipient"
               },
               "name": "additionalRecipient",
               "identifier": {
                "type": "Identifier",
                "name": "additionalRecipient"
               },
               "storageLocation": "calldata",
               "isStateVar": false,
               "isIndexed": false,
               "expression": null
              }
             ],
             "initialValue": {
              "type": "TupleExpression",
              "components": [
               {
                "type": "IndexAccess",
                "base": {
                 "type": "MemberAccess",
                 "expression": {
                  "type": "Identifier",
                  "name": "parameters"
                 },
                 "memberName": "additionalRecipients"
                },
                "index": {
                 "type": "Identifier",
                 "name": "i"
                }
               }
              ],
              "isArray": false
             }
            },
            {
             "type": "IfStatement",
             "condition": {
              "type": "Identifier",
              "name": "fromOfferer"
             },
             "trueBody": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "BinaryOperation",
                 "operator": "-=",
                 "left": {
                  "type": "Identifier",
                  "name": "amount"
                 },
                 "right": {
                  "type": "MemberAccess",
                  "expression": {
                   "type": "Identifier",
                   "name": "additionalRecipient"
                  },
                  "memberName": "amount"
                 }
                }
               }
              ]
             },
             "falseBody": null
            },
            {
             "type": "ExpressionStatement",
             "expression": {
              "type": "FunctionCall",
              "expression": {
               "type": "Identifier",
               "name": "_transferERC20"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "erc20Token"
               },
               {
                "type": "Identifier",
                "name": "from"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "additionalRecipient"
                },
                "memberName": "recipient"
               },
               {
                "type": "MemberAccess",
                "expression": {
                 "type": "Identifier",
                 "name": "additionalRecipient"
                },
                "memberName": "amount"
               },
               {
                "type": "Identifier",
                "name": "conduit"
               }
              ],
              "names": [],
              "identifiers": []
             }
            },
            {
             "type": "UncheckedStatement",
             "block": {
              "type": "Block",
              "statements": [
               {
                "type": "ExpressionStatement",
                "expression": {
                 "type": "UnaryOperation",
                 "operator": "++",
                 "subExpression": {
                  "type": "Identifier",
                  "name": "i"
                 },
                 "isPrefix": true
                }
               }
              ]
             }
            }
           ]
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_transferERC20"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "erc20Token"
            },
            {
             "type": "Identifier",
             "name": "from"
            },
            {
             "type": "Identifier",
             "name": "to"
            },
            {
             "type": "Identifier",
             "name": "amount"
            },
            {
             "type": "Identifier",
             "name": "conduit"
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "_reentrancyGuard"
           },
           "right": {
            "type": "Identifier",
            "name": "_NOT_ENTERED"
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_setReentrancyGuard",
       "parameters": [],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_assertNonReentrant"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "_reentrancyGuard"
           },
           "right": {
            "type": "Identifier",
            "name": "_ENTERED"
           }
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_emitOrderFulfilledEvent",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "orderHash",
         "identifier": {
          "type": "Identifier",
          "name": "orderHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "offerer",
         "identifier": {
          "type": "Identifier",
          "name": "offerer"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "zone",
         "identifier": {
          "type": "Identifier",
          "name": "zone"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "fulfiller",
         "identifier": {
          "type": "Identifier",
          "name": "fulfiller"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "OfferItem"
          },
          "length": null
         },
         "name": "offer",
         "identifier": {
          "type": "Identifier",
          "name": "offer"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "ConsiderationItem"
          },
          "length": null
         },
         "name": "consideration",
         "identifier": {
          "type": "Identifier",
          "name": "consideration"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "SpentItem"
             },
             "length": null
            },
            "name": "spentItems",
            "identifier": {
             "type": "Identifier",
             "name": "spentItems"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "spentItems"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "offer",
              "arguments": []
             }
            }
           ]
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ArrayTypeName",
             "baseTypeName": {
              "type": "UserDefinedTypeName",
              "namePath": "ReceivedItem"
             },
             "length": null
            },
            "name": "receivedItems",
            "identifier": {
             "type": "Identifier",
             "name": "receivedItems"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": null
         },
         {
          "type": "InlineAssemblyStatement",
          "language": null,
          "flags": [],
          "body": {
           "type": "AssemblyBlock",
           "operations": [
            {
             "type": "AssemblyAssignment",
             "names": [
              {
               "type": "Identifier",
               "name": "receivedItems"
              }
             ],
             "expression": {
              "type": "AssemblyCall",
              "functionName": "consideration",
              "arguments": []
             }
            }
           ]
          }
         },
         {
          "type": "EmitStatement",
          "eventCall": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "OrderFulfilled"
           },
           "arguments": [
            {
             "type": "Identifier",
             "name": "orderHash"
            },
            {
             "type": "Identifier",
             "name": "offerer"
            },
            {
             "type": "Identifier",
             "name": "zone"
            },
            {
             "type": "Identifier",
             "name": "fulfiller"
            },
            {
             "type": "Identifier",
             "name": "spentItems"
            },
            {
             "type": "Identifier",
             "name": "receivedItems"
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-SeaportProtocol/seaport-f17082fca3e99b409f53040d8858e84b0246aa22/contracts/lib/ConsiderationEnums.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.13"
    },
    {
     "type": "EnumDefinition",
     "name": "OrderType",
     "members": [
      {
       "type": "EnumValue",
       "name": "FULL_OPEN"
      },
      {
       "type": "EnumValue",
       "name": "PARTIAL_OPEN"
      },
      {
       "type": "EnumValue",
       "name": "FULL_RESTRICTED"
      },
      {
       "type": "EnumValue",
       "name": "PARTIAL_RESTRICTED"
      }
     ]
    },
    {
     "type": "EnumDefinition",
     "name": "BasicOrderType",
     "members": [
      {
       "type": "EnumValue",
       "name": "ETH_TO_ERC721_FULL_OPEN"
      },
      {
       "type": "EnumValue",
       "name": "ETH_TO_ERC721_PARTIAL_OPEN"
      },
      {
       "type": "EnumValue",
       "name": "ETH_TO_ERC721_FULL_RESTRICTED"
      },
      {
       "type": "EnumValue",
       "name": "ETH_TO_ERC721_PARTIAL_RESTRICTED"
      },
      {
       "type": "EnumValue",
       "name": "ETH_TO_ERC1155_FULL_OPEN"
      },
      {
       "type": "EnumValue",
       "name": "ETH_TO_ERC1155_PARTIAL_OPEN"
      },
      {
       "type": "EnumValue",
       "name": "ETH_TO_ERC1155_FULL_RESTRICTED"
      },
      {
       "type": "EnumValue",
       "name": "ETH_TO_ERC1155_PARTIAL_RESTRICTED"
      },
      {
       "type": "EnumValue",
       "name": "ERC20_TO_ERC721_FULL_OPEN"
      },
      {
       "type": "EnumValue",
       "name": "ERC20_TO_ERC721_PARTIAL_OPEN"
      },
      {
       "type": "EnumValue",
       "name": "ERC20_TO_ERC721_FULL_RESTRICTED"
      },
      {
       "type": "EnumValue",
       "name": "ERC20_TO_ERC721_PARTIAL_RESTRICTED"
      },
      {
       "type": "EnumValue",
       "name": "ERC20_TO_ERC1155_FULL_OPEN"
      },
      {
       "type": "EnumValue",
       "name": "ERC20_TO_ERC1155_PARTIAL_OPEN"
      },
      {
       "type": "EnumValue",
       "name": "ERC20_TO_ERC1155_FULL_RESTRICTED"
      },
      {
       "type": "EnumValue",
       "name": "ERC20_TO_ERC1155_PARTIAL_RESTRICTED"
      },
      {
       "type": "EnumValue",
       "name": "ERC721_TO_ERC20_FULL_OPEN"
      },
      {
       "type": "EnumValue",
       "name": "ERC721_TO_ERC20_PARTIAL_OPEN"
      },
      {
       "type": "EnumValue",
       "name": "ERC721_TO_ERC20_FULL_RESTRICTED0"
      },
      {
       "type": "EnumValue",
       "name": "ERC721_TO_ERC20_PARTIAL_RESTRICTED"
      },
      {
       "type": "EnumValue",
       "name": "ERC1155_TO_ERC20_FULL_OPEN"
      },
      {
       "type": "EnumValue",
       "name": "ERC1155_TO_ERC20_PARTIAL_OPEN"
      },
      {
       "type": "EnumValue",
       "name": "ERC1155_TO_ERC20_FULL_RESTRICTED"
      },
      {
       "type": "EnumValue",
       "name": "ERC1155_TO_ERC20_PARTIAL_RESTRICTED"
      }
     ]
    },
    {
     "type": "EnumDefinition",
     "name": "BasicOrderRouteType",
     "members": [
      {
       "type": "EnumValue",
       "name": "ETH_TO_ERC721"
      },
      {
       "type": "EnumValue",
       "name": "ETH_TO_ERC1155"
      },
      {
       "type": "EnumValue",
       "name": "ERC20_TO_ERC721"
      },
      {
       "type": "EnumValue",
       "name": "ERC20_TO_ERC1155"
      },
      {
       "type": "EnumValue",
       "name": "ERC721_TO_ERC20"
      },
      {
       "type": "EnumValue",
       "name": "ERC1155_TO_ERC20"
      }
     ]
    },
    {
     "type": "EnumDefinition",
     "name": "ItemType",
     "members": [
      {
       "type": "EnumValue",
       "name": "NATIVE"
      },
      {
       "type": "EnumValue",
       "name": "ERC20"
      },
      {
       "type": "EnumValue",
       "name": "ERC721"
      },
      {
       "type": "EnumValue",
       "name": "ERC1155"
      },
      {
       "type": "EnumValue",
       "name": "ERC721_WITH_CRITERIA"
      },
      {
       "type": "EnumValue",
       "name": "ERC1155_WITH_CRITERIA"
      }
     ]
    },
    {
     "type": "EnumDefinition",
     "name": "Side",
     "members": [
      {
       "type": "EnumValue",
       "name": "OFFER"
      },
      {
       "type": "EnumValue",
       "name": "CONSIDERATION"
      }
     ]
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-SeaportProtocol/seaport-f17082fca3e99b409f53040d8858e84b0246aa22/contracts/lib/ConsiderationConstants.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.13"
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "Common_token_offset",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x20",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "Common_identifier_offset",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x40",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "Common_amount_offset",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x60",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "ReceivedItem_size",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0xa0",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "ReceivedItem_amount_offset",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x60",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "ReceivedItem_recipient_offset",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x80",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "ConsiderationItem_recipient_offset",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0xa0",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "ConsiderItem_recipient_offset",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0xa0",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "Execution_offerer_offset",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x20",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "Execution_conduit_offset",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x40",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "OrderParameters_offer_head_offset",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x40",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "OrderParameters_consideration_head_offset",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x60",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "OrderParameters_conduit_offset",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x120",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "Fulfillment_itemIndex_offset",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x20",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "AdvancedOrder_numerator_offset",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x20",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "OneWord",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x20",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "TwoWords",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x40",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "ThreeWords",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x60",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "FreeMemoryPointerSlot",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x40",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "ZeroSlot",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x60",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "DefaultFreeMemoryPointer",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x80",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "BasicOrder_endAmount_cdPtr",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x104",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "BasicOrder_considerationHashesArray_ptr",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x160",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "EIP712_Order_size",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x180",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "EIP712_OfferItem_size",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0xc0",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "EIP712_ConsiderationItem_size",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0xe0",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "AdditionalRecipients_size",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x40",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "receivedItemsHash_ptr",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x60",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "OrderFulfilled_baseSize",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x1e0",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "OrderFulfilled_selector",
     "initialValue": {
      "type": "TupleExpression",
      "components": [
       {
        "type": "NumberLiteral",
        "number": "0x9d9af8e38d66c62e2c12f0225249fd9d721c54b83f48d9352c97c6cacdcb6f31",
        "subdenomination": null
       }
      ],
      "isArray": false
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "OrderFulfilled_baseOffset",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x180",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "OrderFulfilled_consideration_length_baseOffset",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x2a0",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "OrderFulfilled_offer_length_baseOffset",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x200",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "OrderFulfilled_fulfiller_offset",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x20",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "OrderFulfilled_offer_head_offset",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x40",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "OrderFulfilled_offer_body_offset",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x80",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "OrderFulfilled_consideration_head_offset",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x60",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "OrderFulfilled_consideration_body_offset",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x120",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "BasicOrder_considerationToken_cdPtr",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x24",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "BasicOrder_considerationAmount_cdPtr",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x64",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "BasicOrder_offerer_cdPtr",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x84",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "BasicOrder_zone_cdPtr",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0xa4",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "BasicOrder_offerToken_cdPtr",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0xc4",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "BasicOrder_offerAmount_cdPtr",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x104",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "BasicOrder_startTime_cdPtr",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x144",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "BasicOrder_totalOriginalAdditionalRecipients_cdPtr",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x204",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "BasicOrder_additionalRecipients_length_cdPtr",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x264",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "BasicOrder_additionalRecipients_data_cdPtr",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x284",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "BasicOrder_considerationItem_typeHash_ptr",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x80",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "BasicOrder_considerationItem_itemType_ptr",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0xa0",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "BasicOrder_considerationItem_token_ptr",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0xc0",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "BasicOrder_considerationItem_identifier_ptr",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0xe0",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "BasicOrder_considerationItem_startAmount_ptr",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x100",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "BasicOrder_considerationItem_endAmount_ptr",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x120",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "BasicOrder_offerItem_typeHash_ptr",
     "initialValue": {
      "type": "Identifier",
      "name": "DefaultFreeMemoryPointer"
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "BasicOrder_offerItem_itemType_ptr",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0xa0",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "BasicOrder_offerItem_token_ptr",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0xc0",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "BasicOrder_offerItem_endAmount_ptr",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x120",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "BasicOrder_order_typeHash_ptr",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x80",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "BasicOrder_order_offerer_ptr",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0xa0",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "BasicOrder_order_offerHashes_ptr",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0xe0",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "BasicOrder_order_considerationHashes_ptr",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x100",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "BasicOrder_order_orderType_ptr",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x120",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "BasicOrder_order_startTime_ptr",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x140",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "BasicOrder_order_nonce_ptr",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x1e0",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "bytes32",
      "stateMutability": null
     },
     "name": "EIP2098_allButHighestBitMask",
     "initialValue": {
      "type": "TupleExpression",
      "components": [
       {
        "type": "NumberLiteral",
        "number": "0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff",
        "subdenomination": null
       }
      ],
      "isArray": false
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "ERC20_transferFrom_signature",
     "initialValue": {
      "type": "TupleExpression",
      "components": [
       {
        "type": "NumberLiteral",
        "number": "0x23b872dd00000000000000000000000000000000000000000000000000000000",
        "subdenomination": null
       }
      ],
      "isArray": false
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "ERC20_transferFrom_sig_ptr",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x0",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "ERC20_transferFrom_from_ptr",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x04",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "ERC20_transferFrom_to_ptr",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x24",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "ERC20_transferFrom_amount_ptr",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x44",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "ERC20_transferFrom_length",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x64",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "ERC1155_safeTransferFrom_signature",
     "initialValue": {
      "type": "TupleExpression",
      "components": [
       {
        "type": "NumberLiteral",
        "number": "0xf242432a00000000000000000000000000000000000000000000000000000000",
        "subdenomination": null
       }
      ],
      "isArray": false
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "ERC1155_safeTransferFrom_sig_ptr",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x0",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "ERC1155_safeTransferFrom_from_ptr",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x04",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "ERC1155_safeTransferFrom_to_ptr",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x24",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "ERC1155_safeTransferFrom_id_ptr",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x44",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "ERC1155_safeTransferFrom_amount_ptr",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x64",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "ERC1155_safeTransferFrom_data_offset_ptr",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x84",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "ERC1155_safeTransferFrom_data_length_ptr",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0xa4",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "ERC1155_safeTransferFrom_length",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0xc4",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "ERC1155_safeTransferFrom_data_length_offset",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0xa0",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "ERC721_transferFrom_signature",
     "initialValue": {
      "type": "Identifier",
      "name": "ERC20_transferFrom_signature"
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "ERC721_transferFrom_sig_ptr",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x0",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "ERC721_transferFrom_from_ptr",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x04",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "ERC721_transferFrom_to_ptr",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x24",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "ERC721_transferFrom_id_ptr",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x44",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "ERC721_transferFrom_length",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x64",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "NoContract_error_signature",
     "initialValue": {
      "type": "TupleExpression",
      "components": [
       {
        "type": "NumberLiteral",
        "number": "0x5f15d67200000000000000000000000000000000000000000000000000000000",
        "subdenomination": null
       }
      ],
      "isArray": false
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "NoContract_error_sig_ptr",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x0",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "NoContract_error_token_ptr",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x4",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "NoContract_error_length",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x24",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "TokenTransferGenericFailure_error_signature",
     "initialValue": {
      "type": "TupleExpression",
      "components": [
       {
        "type": "NumberLiteral",
        "number": "0xf486bc8700000000000000000000000000000000000000000000000000000000",
        "subdenomination": null
       }
      ],
      "isArray": false
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "TokenTransferGenericFailure_error_sig_ptr",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x0",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "TokenTransferGenericFailure_error_token_ptr",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x4",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "TokenTransferGenericFailure_error_from_ptr",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x24",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "TokenTransferGenericFailure_error_to_ptr",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x44",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "TokenTransferGenericFailure_error_id_ptr",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x64",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "TokenTransferGenericFailure_error_amount_ptr",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x84",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "TokenTransferGenericFailure_error_length",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0xa4",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "BadReturnValueFromERC20OnTransfer_error_signature",
     "initialValue": {
      "type": "TupleExpression",
      "components": [
       {
        "type": "NumberLiteral",
        "number": "0x9889192300000000000000000000000000000000000000000000000000000000",
        "subdenomination": null
       }
      ],
      "isArray": false
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "BadReturnValueFromERC20OnTransfer_error_sig_ptr",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x0",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "BadReturnValueFromERC20OnTransfer_error_token_ptr",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x4",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "BadReturnValueFromERC20OnTransfer_error_from_ptr",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x24",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "BadReturnValueFromERC20OnTransfer_error_to_ptr",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x44",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "BadReturnValueFromERC20OnTransfer_error_amount_ptr",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x64",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    },
    {
     "type": "FileLevelConstant",
     "typeName": {
      "type": "ElementaryTypeName",
      "name": "uint256",
      "stateMutability": null
     },
     "name": "BadReturnValueFromERC20OnTransfer_error_length",
     "initialValue": {
      "type": "NumberLiteral",
      "number": "0x84",
      "subdenomination": null
     },
     "isDeclaredConst": true,
     "isImmutable": false
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-SeaportProtocol/seaport-f17082fca3e99b409f53040d8858e84b0246aa22/contracts/lib/ConsiderationBase.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.13"
    },
    {
     "type": "ImportDirective",
     "path": "../interfaces/AbridgedProxyInterfaces.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../interfaces/AbridgedProxyInterfaces.sol",
      "parts": [
       "../interfaces/AbridgedProxyInterfaces.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "ProxyRegistryInterface",
       null
      ],
      [
       "TokenTransferProxyInterface",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "ProxyRegistryInterface"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "TokenTransferProxyInterface"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "../interfaces/ConsiderationEventsAndErrors.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../interfaces/ConsiderationEventsAndErrors.sol",
      "parts": [
       "../interfaces/ConsiderationEventsAndErrors.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "ConsiderationEventsAndErrors",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "ConsiderationEventsAndErrors"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "./ConsiderationStructs.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "./ConsiderationStructs.sol",
      "parts": [
       "./ConsiderationStructs.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "OrderStatus",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "OrderStatus"
       },
       null
      ]
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "ConsiderationBase",
     "baseContracts": [
      {
       "type": "InheritanceSpecifier",
       "baseName": {
        "type": "UserDefinedTypeName",
        "namePath": "ConsiderationEventsAndErrors"
       },
       "arguments": []
      }
     ],
     "subNodes": [
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_NAME",
         "identifier": {
          "type": "Identifier",
          "name": "_NAME"
         },
         "expression": {
          "type": "StringLiteral",
          "value": "Consideration",
          "parts": [
           "Consideration"
          ],
          "isUnicode": [
           false
          ]
         },
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "StringLiteral",
        "value": "Consideration",
        "parts": [
         "Consideration"
        ],
        "isUnicode": [
         false
        ]
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": "_VERSION",
         "identifier": {
          "type": "Identifier",
          "name": "_VERSION"
         },
         "expression": {
          "type": "StringLiteral",
          "value": "rc.1",
          "parts": [
           "rc.1"
          ],
          "isUnicode": [
           false
          ]
         },
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "StringLiteral",
        "value": "rc.1",
        "parts": [
         "rc.1"
        ],
        "isUnicode": [
         false
        ]
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_NOT_ENTERED",
         "identifier": {
          "type": "Identifier",
          "name": "_NOT_ENTERED"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "1",
          "subdenomination": null
         },
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "1",
        "subdenomination": null
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_ENTERED",
         "identifier": {
          "type": "Identifier",
          "name": "_ENTERED"
         },
         "expression": {
          "type": "NumberLiteral",
          "number": "2",
          "subdenomination": null
         },
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": true,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": {
        "type": "NumberLiteral",
        "number": "2",
        "subdenomination": null
       }
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_NAME_HASH",
         "identifier": {
          "type": "Identifier",
          "name": "_NAME_HASH"
         },
         "expression": null,
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": true,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_VERSION_HASH",
         "identifier": {
          "type": "Identifier",
          "name": "_VERSION_HASH"
         },
         "expression": null,
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": true,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_EIP_712_DOMAIN_TYPEHASH",
         "identifier": {
          "type": "Identifier",
          "name": "_EIP_712_DOMAIN_TYPEHASH"
         },
         "expression": null,
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": true,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_OFFER_ITEM_TYPEHASH",
         "identifier": {
          "type": "Identifier",
          "name": "_OFFER_ITEM_TYPEHASH"
         },
         "expression": null,
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": true,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_CONSIDERATION_ITEM_TYPEHASH",
         "identifier": {
          "type": "Identifier",
          "name": "_CONSIDERATION_ITEM_TYPEHASH"
         },
         "expression": null,
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": true,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_ORDER_TYPEHASH",
         "identifier": {
          "type": "Identifier",
          "name": "_ORDER_TYPEHASH"
         },
         "expression": null,
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": true,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_CHAIN_ID",
         "identifier": {
          "type": "Identifier",
          "name": "_CHAIN_ID"
         },
         "expression": null,
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": true,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "_DOMAIN_SEPARATOR",
         "identifier": {
          "type": "Identifier",
          "name": "_DOMAIN_SEPARATOR"
         },
         "expression": null,
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": true,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "ProxyRegistryInterface"
         },
         "name": "_LEGACY_PROXY_REGISTRY",
         "identifier": {
          "type": "Identifier",
          "name": "_LEGACY_PROXY_REGISTRY"
         },
         "expression": null,
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": true,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "TokenTransferProxyInterface"
         },
         "name": "_LEGACY_TOKEN_TRANSFER_PROXY",
         "identifier": {
          "type": "Identifier",
          "name": "_LEGACY_TOKEN_TRANSFER_PROXY"
         },
         "expression": null,
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": true,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "_REQUIRED_PROXY_IMPLEMENTATION",
         "identifier": {
          "type": "Identifier",
          "name": "_REQUIRED_PROXY_IMPLEMENTATION"
         },
         "expression": null,
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": true,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "_reentrancyGuard",
         "identifier": {
          "type": "Identifier",
          "name": "_reentrancyGuard"
         },
         "expression": null,
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "bytes32",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "UserDefinedTypeName",
           "namePath": "OrderStatus"
          },
          "valueName": null
         },
         "name": "_orderStatus",
         "identifier": {
          "type": "Identifier",
          "name": "_orderStatus"
         },
         "expression": null,
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "StateVariableDeclaration",
       "variables": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "Mapping",
          "keyType": {
           "type": "ElementaryTypeName",
           "name": "address",
           "stateMutability": null
          },
          "keyName": null,
          "valueType": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "valueName": null
         },
         "name": "_nonces",
         "identifier": {
          "type": "Identifier",
          "name": "_nonces"
         },
         "expression": null,
         "visibility": "internal",
         "isStateVar": true,
         "isDeclaredConst": false,
         "isIndexed": false,
         "isImmutable": false,
         "override": null,
         "storageLocation": null
        }
       ],
       "initialValue": null
      },
      {
       "type": "FunctionDefinition",
       "name": null,
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "legacyProxyRegistry",
         "identifier": {
          "type": "Identifier",
          "name": "legacyProxyRegistry"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "legacyTokenTransferProxy",
         "identifier": {
          "type": "Identifier",
          "name": "legacyTokenTransferProxy"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "requiredProxyImplementation",
         "identifier": {
          "type": "Identifier",
          "name": "requiredProxyImplementation"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "_NAME_HASH"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "keccak256"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "ElementaryTypeName",
               "name": "bytes",
               "stateMutability": null
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_NAME"
               }
              ],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "_VERSION_HASH"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "keccak256"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "ElementaryTypeName",
               "name": "bytes",
               "stateMutability": null
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "_VERSION"
               }
              ],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes",
             "stateMutability": null
            },
            "name": "offerItemTypeString",
            "identifier": {
             "type": "Identifier",
             "name": "offerItemTypeString"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "abi"
            },
            "memberName": "encodePacked"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "OfferItem(",
             "parts": [
              "OfferItem("
             ],
             "isUnicode": [
              false
             ]
            },
            {
             "type": "StringLiteral",
             "value": "uint8 itemType,",
             "parts": [
              "uint8 itemType,"
             ],
             "isUnicode": [
              false
             ]
            },
            {
             "type": "StringLiteral",
             "value": "address token,",
             "parts": [
              "address token,"
             ],
             "isUnicode": [
              false
             ]
            },
            {
             "type": "StringLiteral",
             "value": "uint256 identifierOrCriteria,",
             "parts": [
              "uint256 identifierOrCriteria,"
             ],
             "isUnicode": [
              false
             ]
            },
            {
             "type": "StringLiteral",
             "value": "uint256 startAmount,",
             "parts": [
              "uint256 startAmount,"
             ],
             "isUnicode": [
              false
             ]
            },
            {
             "type": "StringLiteral",
             "value": "uint256 endAmount",
             "parts": [
              "uint256 endAmount"
             ],
             "isUnicode": [
              false
             ]
            },
            {
             "type": "StringLiteral",
             "value": ")",
             "parts": [
              ")"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes",
             "stateMutability": null
            },
            "name": "considerationItemTypeString",
            "identifier": {
             "type": "Identifier",
             "name": "considerationItemTypeString"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "abi"
            },
            "memberName": "encodePacked"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "ConsiderationItem(",
             "parts": [
              "ConsiderationItem("
             ],
             "isUnicode": [
              false
             ]
            },
            {
             "type": "StringLiteral",
             "value": "uint8 itemType,",
             "parts": [
              "uint8 itemType,"
             ],
             "isUnicode": [
              false
             ]
            },
            {
             "type": "StringLiteral",
             "value": "address token,",
             "parts": [
              "address token,"
             ],
             "isUnicode": [
              false
             ]
            },
            {
             "type": "StringLiteral",
             "value": "uint256 identifierOrCriteria,",
             "parts": [
              "uint256 identifierOrCriteria,"
             ],
             "isUnicode": [
              false
             ]
            },
            {
             "type": "StringLiteral",
             "value": "uint256 startAmount,",
             "parts": [
              "uint256 startAmount,"
             ],
             "isUnicode": [
              false
             ]
            },
            {
             "type": "StringLiteral",
             "value": "uint256 endAmount,",
             "parts": [
              "uint256 endAmount,"
             ],
             "isUnicode": [
              false
             ]
            },
            {
             "type": "StringLiteral",
             "value": "address recipient",
             "parts": [
              "address recipient"
             ],
             "isUnicode": [
              false
             ]
            },
            {
             "type": "StringLiteral",
             "value": ")",
             "parts": [
              ")"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "VariableDeclarationStatement",
          "variables": [
           {
            "type": "VariableDeclaration",
            "typeName": {
             "type": "ElementaryTypeName",
             "name": "bytes",
             "stateMutability": null
            },
            "name": "orderComponentsPartialTypeString",
            "identifier": {
             "type": "Identifier",
             "name": "orderComponentsPartialTypeString"
            },
            "storageLocation": "memory",
            "isStateVar": false,
            "isIndexed": false,
            "expression": null
           }
          ],
          "initialValue": {
           "type": "FunctionCall",
           "expression": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "abi"
            },
            "memberName": "encodePacked"
           },
           "arguments": [
            {
             "type": "StringLiteral",
             "value": "OrderComponents(",
             "parts": [
              "OrderComponents("
             ],
             "isUnicode": [
              false
             ]
            },
            {
             "type": "StringLiteral",
             "value": "address offerer,",
             "parts": [
              "address offerer,"
             ],
             "isUnicode": [
              false
             ]
            },
            {
             "type": "StringLiteral",
             "value": "address zone,",
             "parts": [
              "address zone,"
             ],
             "isUnicode": [
              false
             ]
            },
            {
             "type": "StringLiteral",
             "value": "OfferItem[] offer,",
             "parts": [
              "OfferItem[] offer,"
             ],
             "isUnicode": [
              false
             ]
            },
            {
             "type": "StringLiteral",
             "value": "ConsiderationItem[] consideration,",
             "parts": [
              "ConsiderationItem[] consideration,"
             ],
             "isUnicode": [
              false
             ]
            },
            {
             "type": "StringLiteral",
             "value": "uint8 orderType,",
             "parts": [
              "uint8 orderType,"
             ],
             "isUnicode": [
              false
             ]
            },
            {
             "type": "StringLiteral",
             "value": "uint256 startTime,",
             "parts": [
              "uint256 startTime,"
             ],
             "isUnicode": [
              false
             ]
            },
            {
             "type": "StringLiteral",
             "value": "uint256 endTime,",
             "parts": [
              "uint256 endTime,"
             ],
             "isUnicode": [
              false
             ]
            },
            {
             "type": "StringLiteral",
             "value": "bytes32 zoneHash,",
             "parts": [
              "bytes32 zoneHash,"
             ],
             "isUnicode": [
              false
             ]
            },
            {
             "type": "StringLiteral",
             "value": "uint256 salt,",
             "parts": [
              "uint256 salt,"
             ],
             "isUnicode": [
              false
             ]
            },
            {
             "type": "StringLiteral",
             "value": "address conduit,",
             "parts": [
              "address conduit,"
             ],
             "isUnicode": [
              false
             ]
            },
            {
             "type": "StringLiteral",
             "value": "uint256 nonce",
             "parts": [
              "uint256 nonce"
             ],
             "isUnicode": [
              false
             ]
            },
            {
             "type": "StringLiteral",
             "value": ")",
             "parts": [
              ")"
             ],
             "isUnicode": [
              false
             ]
            }
           ],
           "names": [],
           "identifiers": []
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "_EIP_712_DOMAIN_TYPEHASH"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "keccak256"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "abi"
               },
               "memberName": "encodePacked"
              },
              "arguments": [
               {
                "type": "StringLiteral",
                "value": "EIP712Domain(",
                "parts": [
                 "EIP712Domain("
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "StringLiteral",
                "value": "string name,",
                "parts": [
                 "string name,"
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "StringLiteral",
                "value": "string version,",
                "parts": [
                 "string version,"
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "StringLiteral",
                "value": "uint256 chainId,",
                "parts": [
                 "uint256 chainId,"
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "StringLiteral",
                "value": "address verifyingContract",
                "parts": [
                 "address verifyingContract"
                ],
                "isUnicode": [
                 false
                ]
               },
               {
                "type": "StringLiteral",
                "value": ")",
                "parts": [
                 ")"
                ],
                "isUnicode": [
                 false
                ]
               }
              ],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "_OFFER_ITEM_TYPEHASH"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "keccak256"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "offerItemTypeString"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "_CONSIDERATION_ITEM_TYPEHASH"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "keccak256"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "considerationItemTypeString"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "_ORDER_TYPEHASH"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "keccak256"
            },
            "arguments": [
             {
              "type": "FunctionCall",
              "expression": {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "abi"
               },
               "memberName": "encodePacked"
              },
              "arguments": [
               {
                "type": "Identifier",
                "name": "orderComponentsPartialTypeString"
               },
               {
                "type": "Identifier",
                "name": "considerationItemTypeString"
               },
               {
                "type": "Identifier",
                "name": "offerItemTypeString"
               }
              ],
              "names": [],
              "identifiers": []
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "_CHAIN_ID"
           },
           "right": {
            "type": "MemberAccess",
            "expression": {
             "type": "Identifier",
             "name": "block"
            },
            "memberName": "chainid"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "_DOMAIN_SEPARATOR"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "_deriveInitialDomainSeparator"
            },
            "arguments": [],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "_LEGACY_PROXY_REGISTRY"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "ProxyRegistryInterface"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "legacyProxyRegistry"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "_LEGACY_TOKEN_TRANSFER_PROXY"
           },
           "right": {
            "type": "FunctionCall",
            "expression": {
             "type": "Identifier",
             "name": "TokenTransferProxyInterface"
            },
            "arguments": [
             {
              "type": "Identifier",
              "name": "legacyTokenTransferProxy"
             }
            ],
            "names": [],
            "identifiers": []
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "_REQUIRED_PROXY_IMPLEMENTATION"
           },
           "right": {
            "type": "Identifier",
            "name": "requiredProxyImplementation"
           }
          }
         },
         {
          "type": "ExpressionStatement",
          "expression": {
           "type": "BinaryOperation",
           "operator": "=",
           "left": {
            "type": "Identifier",
            "name": "_reentrancyGuard"
           },
           "right": {
            "type": "Identifier",
            "name": "_NOT_ENTERED"
           }
          }
         }
        ]
       },
       "visibility": "default",
       "modifiers": [],
       "override": null,
       "isConstructor": true,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "_deriveInitialDomainSeparator",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "_deriveDomainSeparator"
           },
           "arguments": [],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "_deriveDomainSeparator",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": {
        "type": "Block",
        "statements": [
         {
          "type": "ReturnStatement",
          "expression": {
           "type": "FunctionCall",
           "expression": {
            "type": "Identifier",
            "name": "keccak256"
           },
           "arguments": [
            {
             "type": "FunctionCall",
             "expression": {
              "type": "MemberAccess",
              "expression": {
               "type": "Identifier",
               "name": "abi"
              },
              "memberName": "encode"
             },
             "arguments": [
              {
               "type": "Identifier",
               "name": "_EIP_712_DOMAIN_TYPEHASH"
              },
              {
               "type": "Identifier",
               "name": "_NAME_HASH"
              },
              {
               "type": "Identifier",
               "name": "_VERSION_HASH"
              },
              {
               "type": "MemberAccess",
               "expression": {
                "type": "Identifier",
                "name": "block"
               },
               "memberName": "chainid"
              },
              {
               "type": "FunctionCall",
               "expression": {
                "type": "Identifier",
                "name": "address"
               },
               "arguments": [
                {
                 "type": "Identifier",
                 "name": "this"
                }
               ],
               "names": [],
               "identifiers": []
              }
             ],
             "names": [],
             "identifiers": []
            }
           ],
           "names": [],
           "identifiers": []
          }
         }
        ]
       },
       "visibility": "internal",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": true,
       "stateMutability": "view"
      }
     ],
     "kind": "contract"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-SeaportProtocol/seaport-f17082fca3e99b409f53040d8858e84b0246aa22/contracts/interfaces/ZoneInterface.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.13"
    },
    {
     "type": "ImportDirective",
     "path": "../lib/ConsiderationStructs.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../lib/ConsiderationStructs.sol",
      "parts": [
       "../lib/ConsiderationStructs.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "AdvancedOrder",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "AdvancedOrder"
       },
       null
      ]
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "ZoneInterface",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "isValidOrder",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "orderHash",
         "identifier": {
          "type": "Identifier",
          "name": "orderHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "caller",
         "identifier": {
          "type": "Identifier",
          "name": "caller"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "offerer",
         "identifier": {
          "type": "Identifier",
          "name": "offerer"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "zoneHash",
         "identifier": {
          "type": "Identifier",
          "name": "zoneHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes4",
          "stateMutability": null
         },
         "name": "validOrderMagicValue",
         "identifier": {
          "type": "Identifier",
          "name": "validOrderMagicValue"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "isValidOrderIncludingExtraData",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "orderHash",
         "identifier": {
          "type": "Identifier",
          "name": "orderHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "caller",
         "identifier": {
          "type": "Identifier",
          "name": "caller"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "AdvancedOrder"
         },
         "name": "order",
         "identifier": {
          "type": "Identifier",
          "name": "order"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "bytes32",
           "stateMutability": null
          },
          "length": null
         },
         "name": "priorOrderHashes",
         "identifier": {
          "type": "Identifier",
          "name": "priorOrderHashes"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes4",
          "stateMutability": null
         },
         "name": "validOrderMagicValue",
         "identifier": {
          "type": "Identifier",
          "name": "validOrderMagicValue"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-SeaportProtocol/seaport-f17082fca3e99b409f53040d8858e84b0246aa22/contracts/interfaces/EIP1271Interface.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.13"
    },
    {
     "type": "ContractDefinition",
     "name": "EIP1271Interface",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "isValidSignature",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "digest",
         "identifier": {
          "type": "Identifier",
          "name": "digest"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "signature",
         "identifier": {
          "type": "Identifier",
          "name": "signature"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes4",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-SeaportProtocol/seaport-f17082fca3e99b409f53040d8858e84b0246aa22/contracts/interfaces/ConsiderationInterface.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.13"
    },
    {
     "type": "ImportDirective",
     "path": "../lib/ConsiderationStructs.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../lib/ConsiderationStructs.sol",
      "parts": [
       "../lib/ConsiderationStructs.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "BasicOrderParameters",
       null
      ],
      [
       "OrderComponents",
       null
      ],
      [
       "Fulfillment",
       null
      ],
      [
       "FulfillmentComponent",
       null
      ],
      [
       "Execution",
       null
      ],
      [
       "BatchExecution",
       null
      ],
      [
       "Order",
       null
      ],
      [
       "AdvancedOrder",
       null
      ],
      [
       "OrderStatus",
       null
      ],
      [
       "CriteriaResolver",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "BasicOrderParameters"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "OrderComponents"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "Fulfillment"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "FulfillmentComponent"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "Execution"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "BatchExecution"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "Order"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "AdvancedOrder"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "OrderStatus"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "CriteriaResolver"
       },
       null
      ]
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "ConsiderationInterface",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "fulfillBasicOrder",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "BasicOrderParameters"
         },
         "name": "parameters",
         "identifier": {
          "type": "Identifier",
          "name": "parameters"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "fulfillOrder",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Order"
         },
         "name": "order",
         "identifier": {
          "type": "Identifier",
          "name": "order"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "fulfillerConduit",
         "identifier": {
          "type": "Identifier",
          "name": "fulfillerConduit"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "fulfillAdvancedOrder",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "AdvancedOrder"
         },
         "name": "advancedOrder",
         "identifier": {
          "type": "Identifier",
          "name": "advancedOrder"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "CriteriaResolver"
          },
          "length": null
         },
         "name": "criteriaResolvers",
         "identifier": {
          "type": "Identifier",
          "name": "criteriaResolvers"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "fulfillerConduit",
         "identifier": {
          "type": "Identifier",
          "name": "fulfillerConduit"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "fulfillAvailableAdvancedOrders",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "AdvancedOrder"
          },
          "length": null
         },
         "name": "advancedOrders",
         "identifier": {
          "type": "Identifier",
          "name": "advancedOrders"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "CriteriaResolver"
          },
          "length": null
         },
         "name": "criteriaResolvers",
         "identifier": {
          "type": "Identifier",
          "name": "criteriaResolvers"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ArrayTypeName",
           "baseTypeName": {
            "type": "UserDefinedTypeName",
            "namePath": "FulfillmentComponent"
           },
           "length": null
          },
          "length": null
         },
         "name": "offerFulfillments",
         "identifier": {
          "type": "Identifier",
          "name": "offerFulfillments"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ArrayTypeName",
           "baseTypeName": {
            "type": "UserDefinedTypeName",
            "namePath": "FulfillmentComponent"
           },
           "length": null
          },
          "length": null
         },
         "name": "considerationFulfillments",
         "identifier": {
          "type": "Identifier",
          "name": "considerationFulfillments"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "fulfillerConduit",
         "identifier": {
          "type": "Identifier",
          "name": "fulfillerConduit"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "bool",
           "stateMutability": null
          },
          "length": null
         },
         "name": "availableOrders",
         "identifier": {
          "type": "Identifier",
          "name": "availableOrders"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "Execution"
          },
          "length": null
         },
         "name": "standardExecutions",
         "identifier": {
          "type": "Identifier",
          "name": "standardExecutions"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "BatchExecution"
          },
          "length": null
         },
         "name": "batchExecutions",
         "identifier": {
          "type": "Identifier",
          "name": "batchExecutions"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "matchOrders",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "Order"
          },
          "length": null
         },
         "name": "orders",
         "identifier": {
          "type": "Identifier",
          "name": "orders"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "Fulfillment"
          },
          "length": null
         },
         "name": "fulfillments",
         "identifier": {
          "type": "Identifier",
          "name": "fulfillments"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "Execution"
          },
          "length": null
         },
         "name": "standardExecutions",
         "identifier": {
          "type": "Identifier",
          "name": "standardExecutions"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "BatchExecution"
          },
          "length": null
         },
         "name": "batchExecutions",
         "identifier": {
          "type": "Identifier",
          "name": "batchExecutions"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "matchAdvancedOrders",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "AdvancedOrder"
          },
          "length": null
         },
         "name": "orders",
         "identifier": {
          "type": "Identifier",
          "name": "orders"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "CriteriaResolver"
          },
          "length": null
         },
         "name": "criteriaResolvers",
         "identifier": {
          "type": "Identifier",
          "name": "criteriaResolvers"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "Fulfillment"
          },
          "length": null
         },
         "name": "fulfillments",
         "identifier": {
          "type": "Identifier",
          "name": "fulfillments"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "Execution"
          },
          "length": null
         },
         "name": "standardExecutions",
         "identifier": {
          "type": "Identifier",
          "name": "standardExecutions"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "BatchExecution"
          },
          "length": null
         },
         "name": "batchExecutions",
         "identifier": {
          "type": "Identifier",
          "name": "batchExecutions"
         },
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "payable"
      },
      {
       "type": "FunctionDefinition",
       "name": "cancel",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "OrderComponents"
          },
          "length": null
         },
         "name": "orders",
         "identifier": {
          "type": "Identifier",
          "name": "orders"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "validate",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "Order"
          },
          "length": null
         },
         "name": "orders",
         "identifier": {
          "type": "Identifier",
          "name": "orders"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "incrementNonce",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "newNonce",
         "identifier": {
          "type": "Identifier",
          "name": "newNonce"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "getOrderHash",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "OrderComponents"
         },
         "name": "order",
         "identifier": {
          "type": "Identifier",
          "name": "order"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getOrderStatus",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "orderHash",
         "identifier": {
          "type": "Identifier",
          "name": "orderHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "isValidated",
         "identifier": {
          "type": "Identifier",
          "name": "isValidated"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": "isCancelled",
         "identifier": {
          "type": "Identifier",
          "name": "isCancelled"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "totalFilled",
         "identifier": {
          "type": "Identifier",
          "name": "totalFilled"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "totalSize",
         "identifier": {
          "type": "Identifier",
          "name": "totalSize"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "getNonce",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "offerer",
         "identifier": {
          "type": "Identifier",
          "name": "offerer"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "name",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "version",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "string",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": "memory",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      },
      {
       "type": "FunctionDefinition",
       "name": "DOMAIN_SEPARATOR",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-SeaportProtocol/seaport-f17082fca3e99b409f53040d8858e84b0246aa22/contracts/interfaces/ConsiderationEventsAndErrors.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.13"
    },
    {
     "type": "ImportDirective",
     "path": "../lib/ConsiderationEnums.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../lib/ConsiderationEnums.sol",
      "parts": [
       "../lib/ConsiderationEnums.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "Side",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "Side"
       },
       null
      ]
     ]
    },
    {
     "type": "ImportDirective",
     "path": "../lib/ConsiderationStructs.sol",
     "pathLiteral": {
      "type": "StringLiteral",
      "value": "../lib/ConsiderationStructs.sol",
      "parts": [
       "../lib/ConsiderationStructs.sol"
      ],
      "isUnicode": [
       false
      ]
     },
     "unitAlias": null,
     "unitAliasIdentifier": null,
     "symbolAliases": [
      [
       "SpentItem",
       null
      ],
      [
       "ReceivedItem",
       null
      ]
     ],
     "symbolAliasesIdentifiers": [
      [
       {
        "type": "Identifier",
        "name": "SpentItem"
       },
       null
      ],
      [
       {
        "type": "Identifier",
        "name": "ReceivedItem"
       },
       null
      ]
     ]
    },
    {
     "type": "ContractDefinition",
     "name": "ConsiderationEventsAndErrors",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "EventDefinition",
       "name": "OrderFulfilled",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "orderHash",
         "identifier": {
          "type": "Identifier",
          "name": "orderHash"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "offerer",
         "identifier": {
          "type": "Identifier",
          "name": "offerer"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "zone",
         "identifier": {
          "type": "Identifier",
          "name": "zone"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "fulfiller",
         "identifier": {
          "type": "Identifier",
          "name": "fulfiller"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "SpentItem"
          },
          "length": null
         },
         "name": "offer",
         "identifier": {
          "type": "Identifier",
          "name": "offer"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "UserDefinedTypeName",
           "namePath": "ReceivedItem"
          },
          "length": null
         },
         "name": "consideration",
         "identifier": {
          "type": "Identifier",
          "name": "consideration"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "OrderCancelled",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "orderHash",
         "identifier": {
          "type": "Identifier",
          "name": "orderHash"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "offerer",
         "identifier": {
          "type": "Identifier",
          "name": "offerer"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "zone",
         "identifier": {
          "type": "Identifier",
          "name": "zone"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "OrderValidated",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "orderHash",
         "identifier": {
          "type": "Identifier",
          "name": "orderHash"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "offerer",
         "identifier": {
          "type": "Identifier",
          "name": "offerer"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "zone",
         "identifier": {
          "type": "Identifier",
          "name": "zone"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "EventDefinition",
       "name": "NonceIncremented",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "newNonce",
         "identifier": {
          "type": "Identifier",
          "name": "newNonce"
         },
         "isStateVar": false,
         "isIndexed": false,
         "storageLocation": null,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "offerer",
         "identifier": {
          "type": "Identifier",
          "name": "offerer"
         },
         "isStateVar": false,
         "isIndexed": true,
         "storageLocation": null,
         "expression": null
        }
       ],
       "isAnonymous": false
      },
      {
       "type": "CustomErrorDefinition",
       "name": "OrderAlreadyFilled",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "orderHash",
         "identifier": {
          "type": "Identifier",
          "name": "orderHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "InvalidTime",
       "parameters": []
      },
      {
       "type": "CustomErrorDefinition",
       "name": "InvalidRestrictedOrder",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "orderHash",
         "identifier": {
          "type": "Identifier",
          "name": "orderHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "MissingOriginalConsiderationItems",
       "parameters": []
      },
      {
       "type": "CustomErrorDefinition",
       "name": "MissingFulfillmentComponentOnAggregation",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "UserDefinedTypeName",
          "namePath": "Side"
         },
         "name": "side",
         "identifier": {
          "type": "Identifier",
          "name": "side"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "OfferAndConsiderationRequiredOnFulfillment",
       "parameters": []
      },
      {
       "type": "CustomErrorDefinition",
       "name": "FulfilledOrderIndexOutOfRange",
       "parameters": []
      },
      {
       "type": "CustomErrorDefinition",
       "name": "BadSignatureV",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "v",
         "identifier": {
          "type": "Identifier",
          "name": "v"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "InvalidSigner",
       "parameters": []
      },
      {
       "type": "CustomErrorDefinition",
       "name": "InvalidSignature",
       "parameters": []
      },
      {
       "type": "CustomErrorDefinition",
       "name": "BadContractSignature",
       "parameters": []
      },
      {
       "type": "CustomErrorDefinition",
       "name": "MismatchedFulfillmentOfferAndConsiderationComponents",
       "parameters": []
      },
      {
       "type": "CustomErrorDefinition",
       "name": "InvalidFulfillmentComponentData",
       "parameters": []
      },
      {
       "type": "CustomErrorDefinition",
       "name": "ConsiderationNotMet",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "orderIndex",
         "identifier": {
          "type": "Identifier",
          "name": "orderIndex"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "considerationIndex",
         "identifier": {
          "type": "Identifier",
          "name": "considerationIndex"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "shortfallAmount",
         "identifier": {
          "type": "Identifier",
          "name": "shortfallAmount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "InsufficientEtherSupplied",
       "parameters": []
      },
      {
       "type": "CustomErrorDefinition",
       "name": "EtherTransferGenericFailure",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "account",
         "identifier": {
          "type": "Identifier",
          "name": "account"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "InvalidERC721TransferAmount",
       "parameters": []
      },
      {
       "type": "CustomErrorDefinition",
       "name": "TokenTransferGenericFailure",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "token",
         "identifier": {
          "type": "Identifier",
          "name": "token"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "from",
         "identifier": {
          "type": "Identifier",
          "name": "from"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "to",
         "identifier": {
          "type": "Identifier",
          "name": "to"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "identifier",
         "identifier": {
          "type": "Identifier",
          "name": "identifier"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "ERC1155BatchTransferGenericFailure",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "token",
         "identifier": {
          "type": "Identifier",
          "name": "token"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "from",
         "identifier": {
          "type": "Identifier",
          "name": "from"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "to",
         "identifier": {
          "type": "Identifier",
          "name": "to"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "identifiers",
         "identifier": {
          "type": "Identifier",
          "name": "identifiers"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "amounts",
         "identifier": {
          "type": "Identifier",
          "name": "amounts"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "BadReturnValueFromERC20OnTransfer",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "token",
         "identifier": {
          "type": "Identifier",
          "name": "token"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "from",
         "identifier": {
          "type": "Identifier",
          "name": "from"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "to",
         "identifier": {
          "type": "Identifier",
          "name": "to"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "NoContract",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "account",
         "identifier": {
          "type": "Identifier",
          "name": "account"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "PartialFillsNotEnabledForOrder",
       "parameters": []
      },
      {
       "type": "CustomErrorDefinition",
       "name": "OrderIsCancelled",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "orderHash",
         "identifier": {
          "type": "Identifier",
          "name": "orderHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "OrderPartiallyFilled",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes32",
          "stateMutability": null
         },
         "name": "orderHash",
         "identifier": {
          "type": "Identifier",
          "name": "orderHash"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "OrderCriteriaResolverOutOfRange",
       "parameters": []
      },
      {
       "type": "CustomErrorDefinition",
       "name": "UnresolvedOfferCriteria",
       "parameters": []
      },
      {
       "type": "CustomErrorDefinition",
       "name": "UnresolvedConsiderationCriteria",
       "parameters": []
      },
      {
       "type": "CustomErrorDefinition",
       "name": "OfferCriteriaResolverOutOfRange",
       "parameters": []
      },
      {
       "type": "CustomErrorDefinition",
       "name": "ConsiderationCriteriaResolverOutOfRange",
       "parameters": []
      },
      {
       "type": "CustomErrorDefinition",
       "name": "CriteriaNotEnabledForItem",
       "parameters": []
      },
      {
       "type": "CustomErrorDefinition",
       "name": "InvalidProof",
       "parameters": []
      },
      {
       "type": "CustomErrorDefinition",
       "name": "InvalidCanceller",
       "parameters": []
      },
      {
       "type": "CustomErrorDefinition",
       "name": "BadFraction",
       "parameters": []
      },
      {
       "type": "CustomErrorDefinition",
       "name": "InexactFraction",
       "parameters": []
      },
      {
       "type": "CustomErrorDefinition",
       "name": "NoReentrantCalls",
       "parameters": []
      },
      {
       "type": "CustomErrorDefinition",
       "name": "InvalidMsgValue",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "value",
         "identifier": {
          "type": "Identifier",
          "name": "value"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ]
      },
      {
       "type": "CustomErrorDefinition",
       "name": "InvalidProxyImplementation",
       "parameters": []
      },
      {
       "type": "CustomErrorDefinition",
       "name": "InvalidBasicOrderParameterEncoding",
       "parameters": []
      },
      {
       "type": "CustomErrorDefinition",
       "name": "NoSpecifiedOrdersAvailable",
       "parameters": []
      },
      {
       "type": "CustomErrorDefinition",
       "name": "MissingItemAmount",
       "parameters": []
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-SeaportProtocol/seaport-f17082fca3e99b409f53040d8858e84b0246aa22/contracts/interfaces/AbridgedTokenInterfaces.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.13"
    },
    {
     "type": "ContractDefinition",
     "name": "ERC20Interface",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "transferFrom",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "interface"
    },
    {
     "type": "ContractDefinition",
     "name": "ERC721Interface",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "transferFrom",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "interface"
    },
    {
     "type": "ContractDefinition",
     "name": "ERC1155Interface",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "safeTransferFrom",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "from",
         "identifier": {
          "type": "Identifier",
          "name": "from"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "to",
         "identifier": {
          "type": "Identifier",
          "name": "to"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "id",
         "identifier": {
          "type": "Identifier",
          "name": "id"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "safeBatchTransferFrom",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "from",
         "identifier": {
          "type": "Identifier",
          "name": "from"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "to",
         "identifier": {
          "type": "Identifier",
          "name": "to"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "ids",
         "identifier": {
          "type": "Identifier",
          "name": "ids"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ArrayTypeName",
          "baseTypeName": {
           "type": "ElementaryTypeName",
           "name": "uint256",
           "stateMutability": null
          },
          "length": null
         },
         "name": "amounts",
         "identifier": {
          "type": "Identifier",
          "name": "amounts"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "data",
         "identifier": {
          "type": "Identifier",
          "name": "data"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "interface"
    }
   ]
  }
 },
 {
  "path": "/home/jameschong/Projects/audits-kd/workspace/datasets/DAppSCAN/DAppSCAN-source/contracts/Trail_of_Bits-SeaportProtocol/seaport-f17082fca3e99b409f53040d8858e84b0246aa22/contracts/interfaces/AbridgedProxyInterfaces.sol",
  "ast": {
   "type": "SourceUnit",
   "children": [
    {
     "type": "PragmaDirective",
     "name": "solidity",
     "value": "0.8.13"
    },
    {
     "type": "ContractDefinition",
     "name": "ProxyRegistryInterface",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "proxies",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "user",
         "identifier": {
          "type": "Identifier",
          "name": "user"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "proxy",
         "identifier": {
          "type": "Identifier",
          "name": "proxy"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "interface"
    },
    {
     "type": "ContractDefinition",
     "name": "ProxyInterface",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "proxyAssert",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "dest",
         "identifier": {
          "type": "Identifier",
          "name": "dest"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint8",
          "stateMutability": null
         },
         "name": "howToCall",
         "identifier": {
          "type": "Identifier",
          "name": "howToCall"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bytes",
          "stateMutability": null
         },
         "name": "callData",
         "identifier": {
          "type": "Identifier",
          "name": "callData"
         },
         "storageLocation": "calldata",
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": null,
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      },
      {
       "type": "FunctionDefinition",
       "name": "implementation",
       "parameters": [],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": "view"
      }
     ],
     "kind": "interface"
    },
    {
     "type": "ContractDefinition",
     "name": "TokenTransferProxyInterface",
     "baseContracts": [],
     "subNodes": [
      {
       "type": "FunctionDefinition",
       "name": "transferFrom",
       "parameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "token",
         "identifier": {
          "type": "Identifier",
          "name": "token"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "from",
         "identifier": {
          "type": "Identifier",
          "name": "from"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "address",
          "stateMutability": null
         },
         "name": "to",
         "identifier": {
          "type": "Identifier",
          "name": "to"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        },
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "uint256",
          "stateMutability": null
         },
         "name": "amount",
         "identifier": {
          "type": "Identifier",
          "name": "amount"
         },
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "returnParameters": [
        {
         "type": "VariableDeclaration",
         "typeName": {
          "type": "ElementaryTypeName",
          "name": "bool",
          "stateMutability": null
         },
         "name": null,
         "identifier": null,
         "storageLocation": null,
         "isStateVar": false,
         "isIndexed": false,
         "expression": null
        }
       ],
       "body": null,
       "visibility": "external",
       "modifiers": [],
       "override": null,
       "isConstructor": false,
       "isReceiveEther": false,
       "isFallback": false,
       "isVirtual": false,
       "stateMutability": null
      }
     ],
     "kind": "interface"
    }
   ]
  }
 }
]